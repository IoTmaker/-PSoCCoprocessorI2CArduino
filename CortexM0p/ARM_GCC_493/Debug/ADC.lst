ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_IsChannelSigned,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	ADC_IsChannelSigned, %function
  22              	ADC_IsChannelSigned:
  23              	.LFB12:
  24              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/ADC.c **** * \file     ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * \version  1.20
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * \brief
   6:Generated_Source\PSoC4/ADC.c **** * Provides the source code to the API for the ADC Component.
   7:Generated_Source\PSoC4/ADC.c **** *
   8:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
   9:Generated_Source\PSoC4/ADC.c **** * \copyright
  10:Generated_Source\PSoC4/ADC.c **** * (c) 2015-2016, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC4/ADC.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC4/ADC.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC4/ADC.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC4/ADC.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC4/ADC.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC4/ADC.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC4/ADC.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC4/ADC.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC4/ADC.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC4/ADC.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC4/ADC.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC4/ADC.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC4/ADC.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC4/ADC.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC4/ADC.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC4/ADC.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC4/ADC.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC4/ADC.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC4/ADC.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC4/ADC.c **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC4/ADC.c **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC4/ADC.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC4/ADC.c **** * failure of the Cypress product may reasonably be expected to result in
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 2


  34:Generated_Source\PSoC4/ADC.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC4/ADC.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC4/ADC.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC4/ADC.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  40:Generated_Source\PSoC4/ADC.c **** 
  41:Generated_Source\PSoC4/ADC.c **** #include <stdlib.h>
  42:Generated_Source\PSoC4/ADC.c **** 
  43:Generated_Source\PSoC4/ADC.c **** static int32 ADC_IsChannelSigned(uint32 chan);
  44:Generated_Source\PSoC4/ADC.c **** #if(ADC_ANY_CONFIG_USES_FILTER	!= 0u)
  45:Generated_Source\PSoC4/ADC.c **** static void ADC_SetupComparatorTrim(void);
  46:Generated_Source\PSoC4/ADC.c **** static void ADC_UndoComparatorTrimSetup(void);
  47:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_RaiseOpampTrimToCrossing(uint32 startTrim);
  48:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_LowerOpampTrimToCrossing(uint32 startTrim);
  49:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_RaiseAgndTrimToCrossing(uint32 startTrim);
  50:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_LowerAgndTrimToCrossing(uint32 startTrim);
  51:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_SetOpampAndAgndTrim(uint32 opampTrim, uint32 agndTrim);
  52:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_SetOpampTrim(uint32 opampTrim);
  53:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_SetAgndTrim(uint32 agndTrim);
  54:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_IncOpampTrim(uint32 trim);
  55:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_DecOpampTrim(uint32 trim);
  56:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_IncAgndTrim(uint32 trim);
  57:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_DecAgndTrim(uint32 trim);
  58:Generated_Source\PSoC4/ADC.c **** #define OFFSET_SAMPLES (30)
  59:Generated_Source\PSoC4/ADC.c **** #endif
  60:Generated_Source\PSoC4/ADC.c **** 
  61:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u; 
  62:Generated_Source\PSoC4/ADC.c **** 
  63:Generated_Source\PSoC4/ADC.c **** uint8 ADC_selected = 0u; /* 0 if no configuration selected. 1 otherwise. */
  64:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM]; 
  65:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM]; 
  66:Generated_Source\PSoC4/ADC.c **** 
  67:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_currentConfig = 0u; /* Currently active configuration */
  68:Generated_Source\PSoC4/ADC.c **** 
  69:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  70:Generated_Source\PSoC4/ADC.c **** * Local data allocation
  71:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  72:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  73:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000100UL,  };
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /* Filter init */
  76:Generated_Source\PSoC4/ADC.c **** #if(ADC_ANY_CONFIG_USES_FILTER	!= 0u)
  77:Generated_Source\PSoC4/ADC.c ****     #if (0u != ADC_CFG0_FILTER_PRESENT)
  78:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG0_UABH_A_FILTER_INITPAIRSSIZE ((ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLO
  79:Generated_Source\PSoC4/ADC.c ****                                                              ? 18u \
  80:Generated_Source\PSoC4/ADC.c ****                                                              : 18u)
  81:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG0_UABH_A_FILTER_initPairs[ADC_CFG0_UABH_A_FILTER_INITPAIRSSIZE
  82:Generated_Source\PSoC4/ADC.c ****         {
  83:Generated_Source\PSoC4/ADC.c ****         	/*OA_CTRL default always first element in initPairs*/
  84:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
  85:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_UABH_A_DEFAULT_OA_CTRL)}
  86:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_UABH_A_DEFAULT_SW_STATIC)}
  87:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_MODBIT_SRC_PTR      , ((uint32)ADC_UABH_A_INVAR_SW_MODBIT_SRC)}
  88:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_A_INVAR_SRAM_CTRL)} 
  89:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG0_UABH_A_STARTUP_DELAY)}
  90:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 3


  91:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_OTHER_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_OTHER)}
  92:Generated_Source\PSoC4/ADC.c ****             
  93:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
  94:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
  95:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_IN0)}
  96:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_TOP)}
  97:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN0)}
  98:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN1)}
  99:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CF_BOT)}
 100:Generated_Source\PSoC4/ADC.c **** 
 101:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 102:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG0_UABH_A_LOWQDYN_CAP_CTRL)}
 103:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_CFG0_UABH_A_LOWQDYN_SW_CB_IN0)}
 104:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_CFG0_UABH_A_LOWQDYN_SW_CB_IN1)}
 105:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG0_UABH_A_LOWQDYN_SW_CB_TOP)}
 106:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_CFG0_UABH_A_LOWQDYN_SW_CC_TOP)}
 107:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG0_UABH_A_LOWQDYN_CAP_ABCF_VAL)}
 108:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 109:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
 110:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 111:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 112:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 113:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 114:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 115:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 116:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 117:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 118:Generated_Source\PSoC4/ADC.c **** 
 119:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 120:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG0_UABH_A_HIGHQDYN_CAP_CTRL)}
 121:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG0_UABH_A_HIGHQDYN_SW_CB_TOP)}
 122:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG0_UABH_A_HIGHQDYN_CAP_ABCF_VAL)}
 123:Generated_Source\PSoC4/ADC.c ****             #endif /* (ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 124:Generated_Source\PSoC4/ADC.c ****         };
 125:Generated_Source\PSoC4/ADC.c **** 
 126:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG0_UABH_B_FILTER_INITPAIRSSIZE ((ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLO
 127:Generated_Source\PSoC4/ADC.c ****                                                              ? 19u \
 128:Generated_Source\PSoC4/ADC.c ****                                                              : 19u)
 129:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG0_UABH_B_FILTER_initPairs[ADC_CFG0_UABH_B_FILTER_INITPAIRSSIZE
 130:Generated_Source\PSoC4/ADC.c ****         {
 131:Generated_Source\PSoC4/ADC.c ****             /*OA_CTRL default always first element in initPairs*/
 132:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
 133:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_UABH_B_DEFAULT_OA_CTRL)}
 134:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_UABH_B_DEFAULT_SW_STATIC)}
 135:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_UABH_B_INVAR_SW_MODBIT_SRC)}
 136:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_B_INVAR_SRAM_CTRL)} 
 137:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG0_UABH_B_STARTUP_DELAY)}
 138:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 139:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_OTHER)}
 140:Generated_Source\PSoC4/ADC.c ****             
 141:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
 142:Generated_Source\PSoC4/ADC.c ****                     	/* Filter-invariant registers */
 143:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN0)}
 144:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN1)}
 145:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_TOP)}
 146:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN0)}
 147:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN1)}
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 4


 148:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_TOP)}
 149:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN0)}
 150:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN1)}
 151:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CF_BOT)}
 152:Generated_Source\PSoC4/ADC.c ****                 
 153:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 154:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG0_UABH_B_LOWQDYN_CAP_CTRL)}
 155:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG0_UABH_B_LOWQDYN_SW_CC_TOP)}
 156:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG0_UABH_B_LOWQDYN_CAP_ABCF_VAL)}
 157:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 158:Generated_Source\PSoC4/ADC.c ****             	/* Filter-invariant registers */
 159:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 160:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 161:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 162:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 163:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 164:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 165:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 166:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 167:Generated_Source\PSoC4/ADC.c ****                 
 168:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 169:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG0_UABH_B_HIGHQDYN_CAP_CTRL)}
 170:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_CFG0_UABH_B_HIGHQDYN_SW_CB_TOP)}
 171:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG0_UABH_B_HIGHQDYN_SW_CC_TOP)}
 172:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG0_UABH_B_HIGHQDYN_CAP_ABCF_VAL)}
 173:Generated_Source\PSoC4/ADC.c ****             #endif /* #if (ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 174:Generated_Source\PSoC4/ADC.c ****         };
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG0_UABH_A_FILTER_config = {
 177:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_waveConfig,
 178:Generated_Source\PSoC4/ADC.c ****             ADC_CFG0_UABH_A_FILTER_initPairs,
 179:Generated_Source\PSoC4/ADC.c ****             CyUAB_SHARED_SW_CFG(ADC_UABH_A_PARAM_REF_TIED,ADC_UABH_A_PARAM_AGND_TIED,
 180:Generated_Source\PSoC4/ADC.c ****                 ADC_UABH_A_PARAM_SW_CC,ADC_UABH_A_PARAM_SW_BB,ADC_UABH_A_PARAM_SW_AA),
 181:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_NUM_STEPS,
 182:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_UABH_A_ELEMENT_COUNT(ADC_CFG0_UABH_A_FILTER_initPairs))
 183:Generated_Source\PSoC4/ADC.c ****         };
 184:Generated_Source\PSoC4/ADC.c **** 
 185:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG0_UABH_B_FILTER_config = {
 186:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_waveConfig,
 187:Generated_Source\PSoC4/ADC.c ****         ADC_CFG0_UABH_B_FILTER_initPairs,
 188:Generated_Source\PSoC4/ADC.c ****         CyUAB_SHARED_SW_CFG(ADC_UABH_B_PARAM_REF_TIED,ADC_UABH_B_PARAM_AGND_TIED,
 189:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_PARAM_SW_CC,ADC_UABH_B_PARAM_SW_BB,ADC_UABH_B_PARAM_SW_AA),
 190:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_NUM_STEPS,
 191:Generated_Source\PSoC4/ADC.c ****         (uint8)(ADC_UABH_B_ELEMENT_COUNT(ADC_CFG0_UABH_B_FILTER_initPairs))
 192:Generated_Source\PSoC4/ADC.c ****     };
 193:Generated_Source\PSoC4/ADC.c ****     #endif /* (0u != ADC_CFG0_FILTER_PRESENT) */
 194:Generated_Source\PSoC4/ADC.c ****     #if (0u != ADC_CFG1_FILTER_PRESENT)
 195:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG1_UABH_A_FILTER_INITPAIRSSIZE ((ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLO
 196:Generated_Source\PSoC4/ADC.c ****                                                              ? 18u \
 197:Generated_Source\PSoC4/ADC.c ****                                                              : 18u)
 198:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG1_UABH_A_FILTER_initPairs[ADC_CFG1_UABH_A_FILTER_INITPAIRSSIZE
 199:Generated_Source\PSoC4/ADC.c ****         {
 200:Generated_Source\PSoC4/ADC.c ****         	/*OA_CTRL default always first element in initPairs*/
 201:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
 202:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_UABH_A_DEFAULT_OA_CTRL)}
 203:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_UABH_A_DEFAULT_SW_STATIC)}
 204:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_MODBIT_SRC_PTR      , ((uint32)ADC_UABH_A_INVAR_SW_MODBIT_SRC)}
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 5


 205:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_A_INVAR_SRAM_CTRL)} 
 206:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG1_UABH_A_STARTUP_DELAY)}
 207:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_BOOST_CTRL)}
 208:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_OTHER_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_OTHER)}
 209:Generated_Source\PSoC4/ADC.c ****             
 210:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
 211:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
 212:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_IN0)}
 213:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_TOP)}
 214:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN0)}
 215:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN1)}
 216:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CF_BOT)}
 217:Generated_Source\PSoC4/ADC.c **** 
 218:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 219:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG1_UABH_A_LOWQDYN_CAP_CTRL)}
 220:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_CFG1_UABH_A_LOWQDYN_SW_CB_IN0)}
 221:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_CFG1_UABH_A_LOWQDYN_SW_CB_IN1)}
 222:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG1_UABH_A_LOWQDYN_SW_CB_TOP)}
 223:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_CFG1_UABH_A_LOWQDYN_SW_CC_TOP)}
 224:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG1_UABH_A_LOWQDYN_CAP_ABCF_VAL)}
 225:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 226:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
 227:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 228:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 229:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 230:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 231:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 232:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 233:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 234:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 235:Generated_Source\PSoC4/ADC.c **** 
 236:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 237:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG1_UABH_A_HIGHQDYN_CAP_CTRL)}
 238:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG1_UABH_A_HIGHQDYN_SW_CB_TOP)}
 239:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG1_UABH_A_HIGHQDYN_CAP_ABCF_VAL)}
 240:Generated_Source\PSoC4/ADC.c ****             #endif /* (ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 241:Generated_Source\PSoC4/ADC.c ****         };
 242:Generated_Source\PSoC4/ADC.c **** 
 243:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG1_UABH_B_FILTER_INITPAIRSSIZE ((ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLO
 244:Generated_Source\PSoC4/ADC.c ****                                                              ? 19u \
 245:Generated_Source\PSoC4/ADC.c ****                                                              : 19u)
 246:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG1_UABH_B_FILTER_initPairs[ADC_CFG1_UABH_B_FILTER_INITPAIRSSIZE
 247:Generated_Source\PSoC4/ADC.c ****         {
 248:Generated_Source\PSoC4/ADC.c ****             /*OA_CTRL default always first element in initPairs*/
 249:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
 250:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_UABH_B_DEFAULT_OA_CTRL)}
 251:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_UABH_B_DEFAULT_SW_STATIC)}
 252:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_UABH_B_INVAR_SW_MODBIT_SRC)}
 253:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_B_INVAR_SRAM_CTRL)} 
 254:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG1_UABH_B_STARTUP_DELAY)}
 255:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 256:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_OTHER)}
 257:Generated_Source\PSoC4/ADC.c ****             
 258:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
 259:Generated_Source\PSoC4/ADC.c ****                     	/* Filter-invariant registers */
 260:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN0)}
 261:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN1)}
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 6


 262:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_TOP)}
 263:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN0)}
 264:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN1)}
 265:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_TOP)}
 266:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN0)}
 267:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN1)}
 268:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CF_BOT)}
 269:Generated_Source\PSoC4/ADC.c ****                 
 270:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 271:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG1_UABH_B_LOWQDYN_CAP_CTRL)}
 272:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG1_UABH_B_LOWQDYN_SW_CC_TOP)}
 273:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG1_UABH_B_LOWQDYN_CAP_ABCF_VAL)}
 274:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 275:Generated_Source\PSoC4/ADC.c ****             	/* Filter-invariant registers */
 276:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 277:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 278:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 279:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 280:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 281:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 282:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 283:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 284:Generated_Source\PSoC4/ADC.c ****                 
 285:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 286:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG1_UABH_B_HIGHQDYN_CAP_CTRL)}
 287:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_CFG1_UABH_B_HIGHQDYN_SW_CB_TOP)}
 288:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG1_UABH_B_HIGHQDYN_SW_CC_TOP)}
 289:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG1_UABH_B_HIGHQDYN_CAP_ABCF_VAL)}
 290:Generated_Source\PSoC4/ADC.c ****             #endif /* #if (ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 291:Generated_Source\PSoC4/ADC.c ****         };
 292:Generated_Source\PSoC4/ADC.c **** 
 293:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG1_UABH_A_FILTER_config = {
 294:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_waveConfig,
 295:Generated_Source\PSoC4/ADC.c ****             ADC_CFG1_UABH_A_FILTER_initPairs,
 296:Generated_Source\PSoC4/ADC.c ****             CyUAB_SHARED_SW_CFG(ADC_UABH_A_PARAM_REF_TIED,ADC_UABH_A_PARAM_AGND_TIED,
 297:Generated_Source\PSoC4/ADC.c ****                 ADC_UABH_A_PARAM_SW_CC,ADC_UABH_A_PARAM_SW_BB,ADC_UABH_A_PARAM_SW_AA),
 298:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_NUM_STEPS,
 299:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_UABH_A_ELEMENT_COUNT(ADC_CFG1_UABH_A_FILTER_initPairs))
 300:Generated_Source\PSoC4/ADC.c ****         };
 301:Generated_Source\PSoC4/ADC.c **** 
 302:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG1_UABH_B_FILTER_config = {
 303:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_waveConfig,
 304:Generated_Source\PSoC4/ADC.c ****         ADC_CFG1_UABH_B_FILTER_initPairs,
 305:Generated_Source\PSoC4/ADC.c ****         CyUAB_SHARED_SW_CFG(ADC_UABH_B_PARAM_REF_TIED,ADC_UABH_B_PARAM_AGND_TIED,
 306:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_PARAM_SW_CC,ADC_UABH_B_PARAM_SW_BB,ADC_UABH_B_PARAM_SW_AA),
 307:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_NUM_STEPS,
 308:Generated_Source\PSoC4/ADC.c ****         (uint8)(ADC_UABH_B_ELEMENT_COUNT(ADC_CFG1_UABH_B_FILTER_initPairs))
 309:Generated_Source\PSoC4/ADC.c ****     };
 310:Generated_Source\PSoC4/ADC.c ****     #endif /* (0u != ADC_CFG1_FILTER_PRESENT) */
 311:Generated_Source\PSoC4/ADC.c ****     #if (0u != ADC_CFG2_FILTER_PRESENT)
 312:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG2_UABH_A_FILTER_INITPAIRSSIZE ((ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLO
 313:Generated_Source\PSoC4/ADC.c ****                                                              ? 18u \
 314:Generated_Source\PSoC4/ADC.c ****                                                              : 18u)
 315:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG2_UABH_A_FILTER_initPairs[ADC_CFG2_UABH_A_FILTER_INITPAIRSSIZE
 316:Generated_Source\PSoC4/ADC.c ****         {
 317:Generated_Source\PSoC4/ADC.c ****         	/*OA_CTRL default always first element in initPairs*/
 318:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 7


 319:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_UABH_A_DEFAULT_OA_CTRL)}
 320:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_UABH_A_DEFAULT_SW_STATIC)}
 321:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_MODBIT_SRC_PTR      , ((uint32)ADC_UABH_A_INVAR_SW_MODBIT_SRC)}
 322:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_A_INVAR_SRAM_CTRL)} 
 323:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG2_UABH_A_STARTUP_DELAY)}
 324:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_BOOST_CTRL)}
 325:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_OTHER_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_OTHER)}
 326:Generated_Source\PSoC4/ADC.c ****             
 327:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
 328:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
 329:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_IN0)}
 330:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_TOP)}
 331:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN0)}
 332:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN1)}
 333:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CF_BOT)}
 334:Generated_Source\PSoC4/ADC.c **** 
 335:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 336:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG2_UABH_A_LOWQDYN_CAP_CTRL)}
 337:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_CFG2_UABH_A_LOWQDYN_SW_CB_IN0)}
 338:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_CFG2_UABH_A_LOWQDYN_SW_CB_IN1)}
 339:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG2_UABH_A_LOWQDYN_SW_CB_TOP)}
 340:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_CFG2_UABH_A_LOWQDYN_SW_CC_TOP)}
 341:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG2_UABH_A_LOWQDYN_CAP_ABCF_VAL)}
 342:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 343:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
 344:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 345:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 346:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 347:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 348:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 349:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 350:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 351:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 352:Generated_Source\PSoC4/ADC.c **** 
 353:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 354:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG2_UABH_A_HIGHQDYN_CAP_CTRL)}
 355:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG2_UABH_A_HIGHQDYN_SW_CB_TOP)}
 356:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG2_UABH_A_HIGHQDYN_CAP_ABCF_VAL)}
 357:Generated_Source\PSoC4/ADC.c ****             #endif /* (ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 358:Generated_Source\PSoC4/ADC.c ****         };
 359:Generated_Source\PSoC4/ADC.c **** 
 360:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG2_UABH_B_FILTER_INITPAIRSSIZE ((ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLO
 361:Generated_Source\PSoC4/ADC.c ****                                                              ? 19u \
 362:Generated_Source\PSoC4/ADC.c ****                                                              : 19u)
 363:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG2_UABH_B_FILTER_initPairs[ADC_CFG2_UABH_B_FILTER_INITPAIRSSIZE
 364:Generated_Source\PSoC4/ADC.c ****         {
 365:Generated_Source\PSoC4/ADC.c ****             /*OA_CTRL default always first element in initPairs*/
 366:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
 367:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_UABH_B_DEFAULT_OA_CTRL)}
 368:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_UABH_B_DEFAULT_SW_STATIC)}
 369:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_UABH_B_INVAR_SW_MODBIT_SRC)}
 370:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_B_INVAR_SRAM_CTRL)} 
 371:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG2_UABH_B_STARTUP_DELAY)}
 372:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 373:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_OTHER)}
 374:Generated_Source\PSoC4/ADC.c ****             
 375:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 8


 376:Generated_Source\PSoC4/ADC.c ****                     	/* Filter-invariant registers */
 377:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN0)}
 378:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN1)}
 379:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_TOP)}
 380:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN0)}
 381:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN1)}
 382:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_TOP)}
 383:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN0)}
 384:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN1)}
 385:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CF_BOT)}
 386:Generated_Source\PSoC4/ADC.c ****                 
 387:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 388:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG2_UABH_B_LOWQDYN_CAP_CTRL)}
 389:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG2_UABH_B_LOWQDYN_SW_CC_TOP)}
 390:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG2_UABH_B_LOWQDYN_CAP_ABCF_VAL)}
 391:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 392:Generated_Source\PSoC4/ADC.c ****             	/* Filter-invariant registers */
 393:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 394:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 395:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 396:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 397:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 398:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 399:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 400:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 401:Generated_Source\PSoC4/ADC.c ****                 
 402:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 403:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG2_UABH_B_HIGHQDYN_CAP_CTRL)}
 404:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_CFG2_UABH_B_HIGHQDYN_SW_CB_TOP)}
 405:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG2_UABH_B_HIGHQDYN_SW_CC_TOP)}
 406:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG2_UABH_B_HIGHQDYN_CAP_ABCF_VAL)}
 407:Generated_Source\PSoC4/ADC.c ****             #endif /* #if (ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 408:Generated_Source\PSoC4/ADC.c ****         };
 409:Generated_Source\PSoC4/ADC.c **** 
 410:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG2_UABH_A_FILTER_config = {
 411:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_waveConfig,
 412:Generated_Source\PSoC4/ADC.c ****             ADC_CFG2_UABH_A_FILTER_initPairs,
 413:Generated_Source\PSoC4/ADC.c ****             CyUAB_SHARED_SW_CFG(ADC_UABH_A_PARAM_REF_TIED,ADC_UABH_A_PARAM_AGND_TIED,
 414:Generated_Source\PSoC4/ADC.c ****                 ADC_UABH_A_PARAM_SW_CC,ADC_UABH_A_PARAM_SW_BB,ADC_UABH_A_PARAM_SW_AA),
 415:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_NUM_STEPS,
 416:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_UABH_A_ELEMENT_COUNT(ADC_CFG2_UABH_A_FILTER_initPairs))
 417:Generated_Source\PSoC4/ADC.c ****         };
 418:Generated_Source\PSoC4/ADC.c **** 
 419:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG2_UABH_B_FILTER_config = {
 420:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_waveConfig,
 421:Generated_Source\PSoC4/ADC.c ****         ADC_CFG2_UABH_B_FILTER_initPairs,
 422:Generated_Source\PSoC4/ADC.c ****         CyUAB_SHARED_SW_CFG(ADC_UABH_B_PARAM_REF_TIED,ADC_UABH_B_PARAM_AGND_TIED,
 423:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_PARAM_SW_CC,ADC_UABH_B_PARAM_SW_BB,ADC_UABH_B_PARAM_SW_AA),
 424:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_NUM_STEPS,
 425:Generated_Source\PSoC4/ADC.c ****         (uint8)(ADC_UABH_B_ELEMENT_COUNT(ADC_CFG2_UABH_B_FILTER_initPairs))
 426:Generated_Source\PSoC4/ADC.c ****     };
 427:Generated_Source\PSoC4/ADC.c ****     #endif /* (0u != ADC_CFG2_FILTER_PRESENT) */
 428:Generated_Source\PSoC4/ADC.c ****     #if (0u != ADC_CFG3_FILTER_PRESENT)
 429:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG3_UABH_A_FILTER_INITPAIRSSIZE ((ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLO
 430:Generated_Source\PSoC4/ADC.c ****                                                              ? 18u \
 431:Generated_Source\PSoC4/ADC.c ****                                                              : 18u)
 432:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG3_UABH_A_FILTER_initPairs[ADC_CFG3_UABH_A_FILTER_INITPAIRSSIZE
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 9


 433:Generated_Source\PSoC4/ADC.c ****         {
 434:Generated_Source\PSoC4/ADC.c ****         	/*OA_CTRL default always first element in initPairs*/
 435:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
 436:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_UABH_A_DEFAULT_OA_CTRL)}
 437:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_UABH_A_DEFAULT_SW_STATIC)}
 438:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_MODBIT_SRC_PTR      , ((uint32)ADC_UABH_A_INVAR_SW_MODBIT_SRC)}
 439:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_A_INVAR_SRAM_CTRL)} 
 440:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG3_UABH_A_STARTUP_DELAY)}
 441:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_BOOST_CTRL)}
 442:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_OTHER_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_OTHER)}
 443:Generated_Source\PSoC4/ADC.c ****             
 444:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
 445:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
 446:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_IN0)}
 447:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_TOP)}
 448:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN0)}
 449:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN1)}
 450:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CF_BOT)}
 451:Generated_Source\PSoC4/ADC.c **** 
 452:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 453:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG3_UABH_A_LOWQDYN_CAP_CTRL)}
 454:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_CFG3_UABH_A_LOWQDYN_SW_CB_IN0)}
 455:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_CFG3_UABH_A_LOWQDYN_SW_CB_IN1)}
 456:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG3_UABH_A_LOWQDYN_SW_CB_TOP)}
 457:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_CFG3_UABH_A_LOWQDYN_SW_CC_TOP)}
 458:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG3_UABH_A_LOWQDYN_CAP_ABCF_VAL)}
 459:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 460:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
 461:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 462:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 463:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 464:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 465:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 466:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 467:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 468:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 469:Generated_Source\PSoC4/ADC.c **** 
 470:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 471:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG3_UABH_A_HIGHQDYN_CAP_CTRL)}
 472:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG3_UABH_A_HIGHQDYN_SW_CB_TOP)}
 473:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG3_UABH_A_HIGHQDYN_CAP_ABCF_VAL)}
 474:Generated_Source\PSoC4/ADC.c ****             #endif /* (ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 475:Generated_Source\PSoC4/ADC.c ****         };
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG3_UABH_B_FILTER_INITPAIRSSIZE ((ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLO
 478:Generated_Source\PSoC4/ADC.c ****                                                              ? 19u \
 479:Generated_Source\PSoC4/ADC.c ****                                                              : 19u)
 480:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG3_UABH_B_FILTER_initPairs[ADC_CFG3_UABH_B_FILTER_INITPAIRSSIZE
 481:Generated_Source\PSoC4/ADC.c ****         {
 482:Generated_Source\PSoC4/ADC.c ****             /*OA_CTRL default always first element in initPairs*/
 483:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
 484:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_UABH_B_DEFAULT_OA_CTRL)}
 485:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_UABH_B_DEFAULT_SW_STATIC)}
 486:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_UABH_B_INVAR_SW_MODBIT_SRC)}
 487:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_B_INVAR_SRAM_CTRL)} 
 488:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG3_UABH_B_STARTUP_DELAY)}
 489:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 10


 490:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_OTHER)}
 491:Generated_Source\PSoC4/ADC.c ****             
 492:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
 493:Generated_Source\PSoC4/ADC.c ****                     	/* Filter-invariant registers */
 494:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN0)}
 495:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN1)}
 496:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_TOP)}
 497:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN0)}
 498:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN1)}
 499:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_TOP)}
 500:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN0)}
 501:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN1)}
 502:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CF_BOT)}
 503:Generated_Source\PSoC4/ADC.c ****                 
 504:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 505:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG3_UABH_B_LOWQDYN_CAP_CTRL)}
 506:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG3_UABH_B_LOWQDYN_SW_CC_TOP)}
 507:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG3_UABH_B_LOWQDYN_CAP_ABCF_VAL)}
 508:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 509:Generated_Source\PSoC4/ADC.c ****             	/* Filter-invariant registers */
 510:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 511:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 512:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 513:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 514:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 515:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 516:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 517:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 518:Generated_Source\PSoC4/ADC.c ****                 
 519:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 520:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG3_UABH_B_HIGHQDYN_CAP_CTRL)}
 521:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_CFG3_UABH_B_HIGHQDYN_SW_CB_TOP)}
 522:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG3_UABH_B_HIGHQDYN_SW_CC_TOP)}
 523:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG3_UABH_B_HIGHQDYN_CAP_ABCF_VAL)}
 524:Generated_Source\PSoC4/ADC.c ****             #endif /* #if (ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 525:Generated_Source\PSoC4/ADC.c ****         };
 526:Generated_Source\PSoC4/ADC.c **** 
 527:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG3_UABH_A_FILTER_config = {
 528:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_waveConfig,
 529:Generated_Source\PSoC4/ADC.c ****             ADC_CFG3_UABH_A_FILTER_initPairs,
 530:Generated_Source\PSoC4/ADC.c ****             CyUAB_SHARED_SW_CFG(ADC_UABH_A_PARAM_REF_TIED,ADC_UABH_A_PARAM_AGND_TIED,
 531:Generated_Source\PSoC4/ADC.c ****                 ADC_UABH_A_PARAM_SW_CC,ADC_UABH_A_PARAM_SW_BB,ADC_UABH_A_PARAM_SW_AA),
 532:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_NUM_STEPS,
 533:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_UABH_A_ELEMENT_COUNT(ADC_CFG3_UABH_A_FILTER_initPairs))
 534:Generated_Source\PSoC4/ADC.c ****         };
 535:Generated_Source\PSoC4/ADC.c **** 
 536:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG3_UABH_B_FILTER_config = {
 537:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_waveConfig,
 538:Generated_Source\PSoC4/ADC.c ****         ADC_CFG3_UABH_B_FILTER_initPairs,
 539:Generated_Source\PSoC4/ADC.c ****         CyUAB_SHARED_SW_CFG(ADC_UABH_B_PARAM_REF_TIED,ADC_UABH_B_PARAM_AGND_TIED,
 540:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_PARAM_SW_CC,ADC_UABH_B_PARAM_SW_BB,ADC_UABH_B_PARAM_SW_AA),
 541:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_NUM_STEPS,
 542:Generated_Source\PSoC4/ADC.c ****         (uint8)(ADC_UABH_B_ELEMENT_COUNT(ADC_CFG3_UABH_B_FILTER_initPairs))
 543:Generated_Source\PSoC4/ADC.c ****     };
 544:Generated_Source\PSoC4/ADC.c ****     #endif /* (0u != ADC_CFG3_FILTER_PRESENT) */
 545:Generated_Source\PSoC4/ADC.c ****     
 546:Generated_Source\PSoC4/ADC.c ****     
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 11


 547:Generated_Source\PSoC4/ADC.c **** #endif /* (ADC_ANY_CONFIG_USES_FILTER	!= 0u)	*/
 548:Generated_Source\PSoC4/ADC.c **** 
 549:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 550:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
 551:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 552:Generated_Source\PSoC4/ADC.c **** *
 553:Generated_Source\PSoC4/ADC.c **** * \brief Performs all required initialization for this component and enables the 
 554:Generated_Source\PSoC4/ADC.c **** *  power. The power will be set to the appropriate power based on the clock 
 555:Generated_Source\PSoC4/ADC.c **** *  frequency.
 556:Generated_Source\PSoC4/ADC.c **** * 
 557:Generated_Source\PSoC4/ADC.c **** * \param None
 558:Generated_Source\PSoC4/ADC.c **** * 
 559:Generated_Source\PSoC4/ADC.c **** * \return None
 560:Generated_Source\PSoC4/ADC.c **** * 
 561:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 562:Generated_Source\PSoC4/ADC.c **** *
 563:Generated_Source\PSoC4/ADC.c **** * \globalvars
 564:Generated_Source\PSoC4/ADC.c **** *  \ref ADC_initVar (RW)
 565:Generated_Source\PSoC4/ADC.c **** *
 566:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 567:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_Start
 568:Generated_Source\PSoC4/ADC.c **** *
 569:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 570:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
 571:Generated_Source\PSoC4/ADC.c **** {
 572:Generated_Source\PSoC4/ADC.c ****     if (ADC_INIT_VAR_INIT_FLAG != (ADC_INIT_VAR_INIT_FLAG & ADC_initVar))
 573:Generated_Source\PSoC4/ADC.c ****     {
 574:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
 575:Generated_Source\PSoC4/ADC.c ****         ADC_initVar |= ADC_INIT_VAR_INIT_FLAG;
 576:Generated_Source\PSoC4/ADC.c ****     }
 577:Generated_Source\PSoC4/ADC.c ****     
 578:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
 579:Generated_Source\PSoC4/ADC.c ****     
 580:Generated_Source\PSoC4/ADC.c ****     return;
 581:Generated_Source\PSoC4/ADC.c **** }
 582:Generated_Source\PSoC4/ADC.c **** 
 583:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 584:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartEx
 585:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 586:Generated_Source\PSoC4/ADC.c **** *
 587:Generated_Source\PSoC4/ADC.c **** * \brief This function starts the ADC and sets the Interrupt 
 588:Generated_Source\PSoC4/ADC.c **** * Service Routine to the provided address using the 
 589:Generated_Source\PSoC4/ADC.c **** * ADC_IRQ_StartEx() function. Refer to the Interrupt component 
 590:Generated_Source\PSoC4/ADC.c **** * datasheet for more information on the ADC_IRQ_StartEx() function.
 591:Generated_Source\PSoC4/ADC.c **** * 
 592:Generated_Source\PSoC4/ADC.c **** * \param address This is the address of a user defined function for the ISR.
 593:Generated_Source\PSoC4/ADC.c **** * 
 594:Generated_Source\PSoC4/ADC.c **** * \return None
 595:Generated_Source\PSoC4/ADC.c **** * 
 596:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 597:Generated_Source\PSoC4/ADC.c **** *
 598:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 599:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_StartEx
 600:Generated_Source\PSoC4/ADC.c **** *
 601:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 602:Generated_Source\PSoC4/ADC.c **** void ADC_StartEx(cyisraddress address)
 603:Generated_Source\PSoC4/ADC.c **** {
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 12


 604:Generated_Source\PSoC4/ADC.c ****     ADC_Start();
 605:Generated_Source\PSoC4/ADC.c ****     ADC_IRQ_StartEx(address);
 606:Generated_Source\PSoC4/ADC.c ****     return;
 607:Generated_Source\PSoC4/ADC.c **** }
 608:Generated_Source\PSoC4/ADC.c **** 
 609:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 610:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 611:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** * \brief This function stops ADC conversions and puts the ADC into its lowest 
 614:Generated_Source\PSoC4/ADC.c **** * power mode.
 615:Generated_Source\PSoC4/ADC.c **** * 
 616:Generated_Source\PSoC4/ADC.c **** * \param None
 617:Generated_Source\PSoC4/ADC.c **** * 
 618:Generated_Source\PSoC4/ADC.c **** * \return None
 619:Generated_Source\PSoC4/ADC.c **** * 
 620:Generated_Source\PSoC4/ADC.c **** * \sideeffect
 621:Generated_Source\PSoC4/ADC.c **** * Do not use the ADC_Stop() API to halt conversions. Instead use the 
 622:Generated_Source\PSoC4/ADC.c **** * ADC_StopConvert() API. If you use the ADC_Stop() API 
 623:Generated_Source\PSoC4/ADC.c **** * to halt conversions then later use the ADC_Start() and 
 624:Generated_Source\PSoC4/ADC.c **** * ADC_StartConvert() APIs to resume conversions, the first channel 
 625:Generated_Source\PSoC4/ADC.c **** * of the scan may be corrupt. The ADC_StopConvert() API will enable 
 626:Generated_Source\PSoC4/ADC.c **** * the ADC to complete the current scan of channels. After the 
 627:Generated_Source\PSoC4/ADC.c **** * channel scan is complete, the ADC will stop all conversions, which 
 628:Generated_Source\PSoC4/ADC.c **** * can be detected by the use of an ISR or the ADC_IsEndConversion() 
 629:Generated_Source\PSoC4/ADC.c **** * flag.
 630:Generated_Source\PSoC4/ADC.c **** *
 631:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 632:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_Stop
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 636:Generated_Source\PSoC4/ADC.c **** {	
 637:Generated_Source\PSoC4/ADC.c ****     #if(0u != ADC_ANY_CONFIG_USES_FILTER)	
 638:Generated_Source\PSoC4/ADC.c ****     	if((ADC_allConfigs[ADC_currentConfig].miscConfig 
 639:Generated_Source\PSoC4/ADC.c ****     	   & ADC_MISC_CONFIG_FILTER_PRESENT_MSK) 
 640:Generated_Source\PSoC4/ADC.c ****     	   == ADC_MISC_CONFIG_FILTER_PRESENT_MSK)
 641:Generated_Source\PSoC4/ADC.c ****     	{
 642:Generated_Source\PSoC4/ADC.c ****     		ADC_UABH_A_Stop();
 643:Generated_Source\PSoC4/ADC.c ****     		ADC_UABH_B_Stop();
 644:Generated_Source\PSoC4/ADC.c ****             ADC_FILTERAGND2SAR_BUFFER_Stop();
 645:Generated_Source\PSoC4/ADC.c ****     	}
 646:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_ANY_CONFIG_USES_FILTER != 0u */
 647:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_SAR_CTRL_ENABLED_MSK;
 648:Generated_Source\PSoC4/ADC.c ****     return;
 649:Generated_Source\PSoC4/ADC.c **** }
 650:Generated_Source\PSoC4/ADC.c **** 
 651:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 652:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_InitConfig
 653:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
 654:Generated_Source\PSoC4/ADC.c **** *
 655:Generated_Source\PSoC4/ADC.c **** * \brief Configures all of the registers for a given configuration for scanning.
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * \param scan Number of scan defined in the ADC.
 658:Generated_Source\PSoC4/ADC.c **** *
 659:Generated_Source\PSoC4/ADC.c **** * \return None
 660:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 13


 661:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 662:Generated_Source\PSoC4/ADC.c **** *
 663:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 664:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_InitConfig
 665:Generated_Source\PSoC4/ADC.c **** *
 666:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 667:Generated_Source\PSoC4/ADC.c **** void ADC_InitConfig(const ADC_CONFIG_STRUCT *config)
 668:Generated_Source\PSoC4/ADC.c **** {
 669:Generated_Source\PSoC4/ADC.c **** 	uint32 chNum;
 670:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
 671:Generated_Source\PSoC4/ADC.c **** 	
 672:Generated_Source\PSoC4/ADC.c ****     #if(0u != ADC_ANY_CONFIG_USES_FILTER)	        
 673:Generated_Source\PSoC4/ADC.c ****     	if((config->miscConfig & ADC_MISC_CONFIG_FILTER_PRESENT_MSK) 
 674:Generated_Source\PSoC4/ADC.c ****     	    == ADC_MISC_CONFIG_FILTER_PRESENT_MSK)
 675:Generated_Source\PSoC4/ADC.c ****     	{
 676:Generated_Source\PSoC4/ADC.c ****             ADC_intUabClock_SetFractionalDividerRegister(config->filterClkDivider, 0u);
 677:Generated_Source\PSoC4/ADC.c ****             
 678:Generated_Source\PSoC4/ADC.c ****     	}
 679:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_ANY_CONFIG_USES_FILTER != 0u */
 680:Generated_Source\PSoC4/ADC.c ****     #if (ADC_CLOCK_INTERNAL)
 681:Generated_Source\PSoC4/ADC.c ****         ADC_intSarClock_SetFractionalDividerRegister(config->clkDivider, 0u);
 682:Generated_Source\PSoC4/ADC.c ****         
 683:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_CLOCK_INTERNAL */
 684:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 685:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_CTRL_REG = config->ctrl
 686:Generated_Source\PSoC4/ADC.c ****    
 687:Generated_Source\PSoC4/ADC.c **** 	/* Enable the SAR internal pump when global pump is enabled */
 688:Generated_Source\PSoC4/ADC.c ****     | (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) 
 689:Generated_Source\PSoC4/ADC.c ****     ? ADC_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 690:Generated_Source\PSoC4/ADC.c **** 	
 691:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SAMPLE_CTRL_REG = config->sampleCtrl;
 692:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_THRES_REG = config->rangeThres;	
 693:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_COND_REG = config->rangeCond;
 694:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 695:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 696:Generated_Source\PSoC4/ADC.c ****     
 697:Generated_Source\PSoC4/ADC.c **** 	/* Connect Vminus to VSSA when even one channel is single-ended or multiple channels configured */
 698:Generated_Source\PSoC4/ADC.c **** 	if(1u == ADC_MUX_SWITCH0_INIT)
 699:Generated_Source\PSoC4/ADC.c **** 	{
 700:Generated_Source\PSoC4/ADC.c **** 		ADC_MUX_SWITCH0_REG |= ADC_MUX_FW_VSSA_VMINUS;
 701:Generated_Source\PSoC4/ADC.c **** 		/* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 702:Generated_Source\PSoC4/ADC.c **** 		if(1ul < config->numChannels)
 703:Generated_Source\PSoC4/ADC.c **** 		{
 704:Generated_Source\PSoC4/ADC.c **** 			ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_MUX_FW_VSSA_VMINUS;
 705:Generated_Source\PSoC4/ADC.c **** 		}
 706:Generated_Source\PSoC4/ADC.c **** 	}
 707:Generated_Source\PSoC4/ADC.c ****     
 708:Generated_Source\PSoC4/ADC.c **** 	/* Clear and set interrupt masks */
 709:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 710:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;	
 711:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 712:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 713:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_INTR_MASK_REG = ADC_EOS_MASK;
 714:Generated_Source\PSoC4/ADC.c ****     
 715:Generated_Source\PSoC4/ADC.c **** 	/* Double the non-overlap delay and latch enable time when using */
 716:Generated_Source\PSoC4/ADC.c ****     /* internal reference without bypass cap */
 717:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 14


 718:Generated_Source\PSoC4/ADC.c **** 	if(((config->ctrl & ADC__SAR_CTRL_VREF_BYP_AND_SEL_MSK) 
 719:Generated_Source\PSoC4/ADC.c **** 	    == ADC__INTERNAL1024) 
 720:Generated_Source\PSoC4/ADC.c **** 	    || ((config->ctrl & ADC__SAR_CTRL_VREF_BYP_AND_SEL_MSK) 
 721:Generated_Source\PSoC4/ADC.c **** 	    == ADC__INTERNALVREF))
 722:Generated_Source\PSoC4/ADC.c **** 	{
 723:Generated_Source\PSoC4/ADC.c ****         tmpRegVal &= ~ADC_SAR_DFT_CTRL_DCEN_MSK;
 724:Generated_Source\PSoC4/ADC.c **** 		tmpRegVal |= ADC_SAR_DFT_CTRL_DLY_INC_MSK;
 725:Generated_Source\PSoC4/ADC.c **** 	}
 726:Generated_Source\PSoC4/ADC.c **** 	else
 727:Generated_Source\PSoC4/ADC.c **** 	{
 728:Generated_Source\PSoC4/ADC.c **** 		tmpRegVal |= ADC_SAR_DFT_CTRL_DCEN_MSK;
 729:Generated_Source\PSoC4/ADC.c ****         tmpRegVal &= (uint32)~ADC_SAR_DFT_CTRL_DLY_INC_MSK;
 730:Generated_Source\PSoC4/ADC.c **** 	}	
 731:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 732:Generated_Source\PSoC4/ADC.c **** 	
 733:Generated_Source\PSoC4/ADC.c **** 	for(chNum = 0u; chNum < config->numChannels; chNum++)
 734:Generated_Source\PSoC4/ADC.c ****     {
 735:Generated_Source\PSoC4/ADC.c **** 		tmpRegVal = (ADC_channelsConfig[config->channelBase + chNum] 
 736:Generated_Source\PSoC4/ADC.c **** 		& ADC_CHANNEL_CONFIG_MASK);
 737:Generated_Source\PSoC4/ADC.c ****         
 738:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1)
 739:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[config->channelBase + chNum];
 740:Generated_Source\PSoC4/ADC.c ****             /*Non-paired differential channels set NEG_ADDR_EN and clear DIFFERENTIAL_EN */
 741:Generated_Source\PSoC4/ADC.c ****             if(0u != (ADC_InputsPlacement[config->channelBase + chNum] & ADC_CHANNEL_CONFIG_NEG_ADD
 742:Generated_Source\PSoC4/ADC.c ****             {
 743:Generated_Source\PSoC4/ADC.c ****                 tmpRegVal &= ~ADC_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK;
 744:Generated_Source\PSoC4/ADC.c ****             }
 745:Generated_Source\PSoC4/ADC.c ****         #endif
 746:Generated_Source\PSoC4/ADC.c ****         
 747:Generated_Source\PSoC4/ADC.c **** 		CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 748:Generated_Source\PSoC4/ADC.c **** 	}
 749:Generated_Source\PSoC4/ADC.c **** 	
 750:Generated_Source\PSoC4/ADC.c ****     return;
 751:Generated_Source\PSoC4/ADC.c **** }
 752:Generated_Source\PSoC4/ADC.c **** 
 753:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 754:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SelectConfig
 755:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//* 
 756:Generated_Source\PSoC4/ADC.c **** *
 757:Generated_Source\PSoC4/ADC.c **** * \brief Selects the predefined configuration for scanning. Disables
 758:Generated_Source\PSoC4/ADC.c **** * and re-enables the SAR and filter (if filter used).
 759:Generated_Source\PSoC4/ADC.c **** * 
 760:Generated_Source\PSoC4/ADC.c **** * \param config Number of configuration  in the ADC.
 761:Generated_Source\PSoC4/ADC.c **** * 
 762:Generated_Source\PSoC4/ADC.c **** * \param restart Determines if the ADC should be  restarted after 
 763:Generated_Source\PSoC4/ADC.c **** * selecting the configuration.
 764:Generated_Source\PSoC4/ADC.c **** **
 765:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 766:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SelectConfig
 767:Generated_Source\PSoC4/ADC.c **** *
 768:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 769:Generated_Source\PSoC4/ADC.c **** void ADC_SelectConfig(uint32 config, uint32 restart)
 770:Generated_Source\PSoC4/ADC.c **** {
 771:Generated_Source\PSoC4/ADC.c ****     /* Check whether the configuration number is valid or not */
 772:Generated_Source\PSoC4/ADC.c ****     if(ADC_TOTAL_CONFIGS > config)
 773:Generated_Source\PSoC4/ADC.c ****     {        
 774:Generated_Source\PSoC4/ADC.c ****         /* Stop the ADC before changing configurations */
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 15


 775:Generated_Source\PSoC4/ADC.c **** 	    ADC_Stop();
 776:Generated_Source\PSoC4/ADC.c ****         ADC_selected = 1u;
 777:Generated_Source\PSoC4/ADC.c ****         
 778:Generated_Source\PSoC4/ADC.c ****     	if(0u == ADC_initVar)
 779:Generated_Source\PSoC4/ADC.c ****     	{
 780:Generated_Source\PSoC4/ADC.c ****             ADC_Init();
 781:Generated_Source\PSoC4/ADC.c ****             ADC_initVar |= ADC_INIT_VAR_INIT_FLAG;
 782:Generated_Source\PSoC4/ADC.c ****     	}
 783:Generated_Source\PSoC4/ADC.c ****         #if (ADC_VREF_ROUTED)
 784:Generated_Source\PSoC4/ADC.c ****             ADC_vrefAMux_DisconnectAll();
 785:Generated_Source\PSoC4/ADC.c ****         #endif
 786:Generated_Source\PSoC4/ADC.c ****     	ADC_InitConfig(&ADC_allConfigs[config]);
 787:Generated_Source\PSoC4/ADC.c ****         #if (ADC_VREF_ROUTED)
 788:Generated_Source\PSoC4/ADC.c ****             ADC_vrefAMux_Select((uint8)config);
 789:Generated_Source\PSoC4/ADC.c ****         #endif
 790:Generated_Source\PSoC4/ADC.c ****         #if(0u != ADC_ANY_CONFIG_USES_FILTER)
 791:Generated_Source\PSoC4/ADC.c ****             ADC_filterVinMux_Select((uint8)config);
 792:Generated_Source\PSoC4/ADC.c ****             ADC_filterInit(config);
 793:Generated_Source\PSoC4/ADC.c ****         #endif
 794:Generated_Source\PSoC4/ADC.c ****     	ADC_SAR_CHAN_EN_REG = ADC_allConfigs[config].chanEn;
 795:Generated_Source\PSoC4/ADC.c ****     	ADC_SAR_RANGE_INTR_MASK_REG = ADC_allConfigs[config].rangeIntMask;
 796:Generated_Source\PSoC4/ADC.c ****     	ADC_SAR_SATURATE_INTR_MASK_REG = ADC_allConfigs[config].satIntMask;
 797:Generated_Source\PSoC4/ADC.c ****     	ADC_currentConfig = config;
 798:Generated_Source\PSoC4/ADC.c ****         
 799:Generated_Source\PSoC4/ADC.c ****         if(1u == restart)
 800:Generated_Source\PSoC4/ADC.c ****         {
 801:Generated_Source\PSoC4/ADC.c ****             /* Restart the ADC */    
 802:Generated_Source\PSoC4/ADC.c ****             ADC_Start();
 803:Generated_Source\PSoC4/ADC.c ****             
 804:Generated_Source\PSoC4/ADC.c ****             /* Restart the scan */
 805:Generated_Source\PSoC4/ADC.c ****             ADC_StartConvert();
 806:Generated_Source\PSoC4/ADC.c ****         }
 807:Generated_Source\PSoC4/ADC.c ****     }
 808:Generated_Source\PSoC4/ADC.c ****     return;
 809:Generated_Source\PSoC4/ADC.c **** }
 810:Generated_Source\PSoC4/ADC.c **** 
 811:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 812:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 813:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 814:Generated_Source\PSoC4/ADC.c **** *
 815:Generated_Source\PSoC4/ADC.c **** * \brief In continuous mode, this API starts the conversion process and it runs 
 816:Generated_Source\PSoC4/ADC.c **** * continuously. 
 817:Generated_Source\PSoC4/ADC.c **** 
 818:Generated_Source\PSoC4/ADC.c **** * In Single Shot mode, the function triggers a single scan and 
 819:Generated_Source\PSoC4/ADC.c **** * every scan requires a call of this function. The mode is set with the 
 820:Generated_Source\PSoC4/ADC.c **** * Sample Mode parameter in the customizer. The customizer setting can be 
 821:Generated_Source\PSoC4/ADC.c **** * overridden at run time with the ADC_SetConvertMode() function.
 822:Generated_Source\PSoC4/ADC.c **** * 
 823:Generated_Source\PSoC4/ADC.c **** * \param None
 824:Generated_Source\PSoC4/ADC.c **** * 
 825:Generated_Source\PSoC4/ADC.c **** * \return None
 826:Generated_Source\PSoC4/ADC.c **** * 
 827:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 828:Generated_Source\PSoC4/ADC.c **** *
 829:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 830:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_StartConvert
 831:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 16


 832:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 833:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 834:Generated_Source\PSoC4/ADC.c **** {
 835:Generated_Source\PSoC4/ADC.c ****     /* CDT 243358 */
 836:Generated_Source\PSoC4/ADC.c ****     #if(0u != ADC_ANY_CONFIG_USES_FILTER)
 837:Generated_Source\PSoC4/ADC.c ****         ADC_Stop();
 838:Generated_Source\PSoC4/ADC.c ****         ADC_Start();
 839:Generated_Source\PSoC4/ADC.c ****     #endif
 840:Generated_Source\PSoC4/ADC.c ****     
 841:Generated_Source\PSoC4/ADC.c **** 	/* Freerunning mode */
 842:Generated_Source\PSoC4/ADC.c **** 	if((ADC_SAR_SAMPLE_CTRL_REG 
 843:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK) 
 844:Generated_Source\PSoC4/ADC.c **** 		== ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 845:Generated_Source\PSoC4/ADC.c ****     {
 846:Generated_Source\PSoC4/ADC.c **** 		ADC_SAR_SAMPLE_CTRL_REG |= ADC_SAR_SAMPLE_CTRL_CONTINUOUS_MSK ;
 847:Generated_Source\PSoC4/ADC.c **** 	}
 848:Generated_Source\PSoC4/ADC.c **** 	else /* Firmware trigger */
 849:Generated_Source\PSoC4/ADC.c **** 	{
 850:Generated_Source\PSoC4/ADC.c **** 		ADC_SAR_START_CTRL_REG = ADC_SAR_START_CTRL_FW_TRIGGER_MSK;
 851:Generated_Source\PSoC4/ADC.c **** 	}
 852:Generated_Source\PSoC4/ADC.c ****     
 853:Generated_Source\PSoC4/ADC.c ****     return;
 854:Generated_Source\PSoC4/ADC.c **** }
 855:Generated_Source\PSoC4/ADC.c **** 
 856:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 857:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 858:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 859:Generated_Source\PSoC4/ADC.c **** *
 860:Generated_Source\PSoC4/ADC.c **** * \brief Forces the ADC to stop conversions. If a conversion is 
 861:Generated_Source\PSoC4/ADC.c **** * currently executing, that conversion will complete, but no further conversions 
 862:Generated_Source\PSoC4/ADC.c **** * will occur.
 863:Generated_Source\PSoC4/ADC.c **** * 
 864:Generated_Source\PSoC4/ADC.c **** * \param None
 865:Generated_Source\PSoC4/ADC.c **** *
 866:Generated_Source\PSoC4/ADC.c **** * \return None
 867:Generated_Source\PSoC4/ADC.c **** *
 868:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 869:Generated_Source\PSoC4/ADC.c **** *
 870:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 871:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_StopConvert
 872:Generated_Source\PSoC4/ADC.c **** *
 873:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 874:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 875:Generated_Source\PSoC4/ADC.c **** {
 876:Generated_Source\PSoC4/ADC.c ****     if((ADC_SAR_SAMPLE_CTRL_REG  
 877:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK) 
 878:Generated_Source\PSoC4/ADC.c **** 		== ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 879:Generated_Source\PSoC4/ADC.c **** 	{
 880:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= ~ADC_SAR_SAMPLE_CTRL_CONTINUOUS_MSK;
 881:Generated_Source\PSoC4/ADC.c ****         
 882:Generated_Source\PSoC4/ADC.c ****         if((ADC_allConfigs[ADC_currentConfig].miscConfig 
 883:Generated_Source\PSoC4/ADC.c ****             & ADC_MISC_CONFIG_FILTER_PRESENT_MSK) 
 884:Generated_Source\PSoC4/ADC.c ****     	    == ADC_MISC_CONFIG_FILTER_PRESENT_MSK)
 885:Generated_Source\PSoC4/ADC.c ****         {
 886:Generated_Source\PSoC4/ADC.c ****             /* Re-synchronize the Filter if a filter is present */
 887:Generated_Source\PSoC4/ADC.c ****             ADC_Stop();
 888:Generated_Source\PSoC4/ADC.c ****             ADC_Start();
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 17


 889:Generated_Source\PSoC4/ADC.c ****         }
 890:Generated_Source\PSoC4/ADC.c **** 	}
 891:Generated_Source\PSoC4/ADC.c ****     
 892:Generated_Source\PSoC4/ADC.c ****     return;
 893:Generated_Source\PSoC4/ADC.c **** }
 894:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 895:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetConvertMode
 896:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 897:Generated_Source\PSoC4/ADC.c **** *
 898:Generated_Source\PSoC4/ADC.c **** * \brief Sets the conversion mode to either Single-Shot or continuous. This 
 899:Generated_Source\PSoC4/ADC.c **** * function overrides the settings applied in the customizer. Changing 
 900:Generated_Source\PSoC4/ADC.c **** * configurations will restore the values set in the customizer.
 901:Generated_Source\PSoC4/ADC.c **** *
 902:Generated_Source\PSoC4/ADC.c **** * \param mode Sets the conversion mode. See table below for details.
 903:Generated_Source\PSoC4/ADC.c **** * | Options                          | Description                             |
 904:Generated_Source\PSoC4/ADC.c **** * | :------------------------------- | :-------------------------------------- |
 905:Generated_Source\PSoC4/ADC.c **** * | ADC_SINGLE_SHOT     | Calling the ADC_StartConvert() function after setting mode this will trig
 906:Generated_Source\PSoC4/ADC.c **** * | ADC_CONTINUOUS      | Calling the ADC_StartConvert() function after setting this mode trigger c
 907:Generated_Source\PSoC4/ADC.c **** *
 908:Generated_Source\PSoC4/ADC.c **** * \return None
 909:Generated_Source\PSoC4/ADC.c **** * 
 910:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 911:Generated_Source\PSoC4/ADC.c **** *
 912:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 913:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetConvertMode
 914:Generated_Source\PSoC4/ADC.c **** *
 915:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 916:Generated_Source\PSoC4/ADC.c **** void ADC_SetConvertMode(uint32 mode)
 917:Generated_Source\PSoC4/ADC.c **** {
 918:Generated_Source\PSoC4/ADC.c ****     if(ADC_CONTINUOUS == mode)
 919:Generated_Source\PSoC4/ADC.c ****     {
 920:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;       
 921:Generated_Source\PSoC4/ADC.c ****     }
 922:Generated_Source\PSoC4/ADC.c ****     else
 923:Generated_Source\PSoC4/ADC.c ****     {
 924:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= ~ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;       
 925:Generated_Source\PSoC4/ADC.c ****     }
 926:Generated_Source\PSoC4/ADC.c **** }
 927:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 928:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IRQ_Enable
 929:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
 930:Generated_Source\PSoC4/ADC.c **** *
 931:Generated_Source\PSoC4/ADC.c **** * \brief Enables interrupts to occur at the end of a conversion. Global 
 932:Generated_Source\PSoC4/ADC.c **** * interrupts must also be enabled for the ADC interrupts to occur.
 933:Generated_Source\PSoC4/ADC.c **** *
 934:Generated_Source\PSoC4/ADC.c **** * \param None
 935:Generated_Source\PSoC4/ADC.c **** *
 936:Generated_Source\PSoC4/ADC.c **** * \return None
 937:Generated_Source\PSoC4/ADC.c **** *
 938:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 939:Generated_Source\PSoC4/ADC.c **** *
 940:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 941:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_IRQ_Enable
 942:Generated_Source\PSoC4/ADC.c **** *
 943:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 944:Generated_Source\PSoC4/ADC.c **** 
 945:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 18


 946:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 947:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IRQ_Disable
 948:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//* 
 949:Generated_Source\PSoC4/ADC.c **** *
 950:Generated_Source\PSoC4/ADC.c **** * \brief Disables end of conversion interrupts. 
 951:Generated_Source\PSoC4/ADC.c **** *
 952:Generated_Source\PSoC4/ADC.c **** * \param None
 953:Generated_Source\PSoC4/ADC.c **** * 
 954:Generated_Source\PSoC4/ADC.c **** * \return None
 955:Generated_Source\PSoC4/ADC.c **** * 
 956:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 957:Generated_Source\PSoC4/ADC.c **** *
 958:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 959:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_IRQ_Disable
 960:Generated_Source\PSoC4/ADC.c **** *
 961:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 962:Generated_Source\PSoC4/ADC.c **** 
 963:Generated_Source\PSoC4/ADC.c **** 
 964:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 965:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetEosMask
 966:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 967:Generated_Source\PSoC4/ADC.c **** *
 968:Generated_Source\PSoC4/ADC.c **** * \brief Sets of clears the End of Scan (EOS) interrupt mask. 
 969:Generated_Source\PSoC4/ADC.c **** *
 970:Generated_Source\PSoC4/ADC.c **** * \param mask 1 to set the mask, 0 to clear the mask.
 971:Generated_Source\PSoC4/ADC.c **** *
 972:Generated_Source\PSoC4/ADC.c **** * \return None
 973:Generated_Source\PSoC4/ADC.c **** * 
 974:Generated_Source\PSoC4/ADC.c **** * \sideeffect All other bits in the INTR register are cleared by this function.
 975:Generated_Source\PSoC4/ADC.c **** *
 976:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 977:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetEosMask
 978:Generated_Source\PSoC4/ADC.c **** *
 979:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 980:Generated_Source\PSoC4/ADC.c **** void ADC_SetEosMask(uint32 mask)
 981:Generated_Source\PSoC4/ADC.c **** {
 982:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = mask & ADC_EOS_MASK;
 983:Generated_Source\PSoC4/ADC.c ****     
 984:Generated_Source\PSoC4/ADC.c ****     return;
 985:Generated_Source\PSoC4/ADC.c **** }
 986:Generated_Source\PSoC4/ADC.c **** 
 987:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 988:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 989:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
 990:Generated_Source\PSoC4/ADC.c **** *
 991:Generated_Source\PSoC4/ADC.c **** * \brief Sets enable/disable mask for all channels in current configuration.
 992:Generated_Source\PSoC4/ADC.c **** *
 993:Generated_Source\PSoC4/ADC.c **** *
 994:Generated_Source\PSoC4/ADC.c **** * \param enableMask
 995:Generated_Source\PSoC4/ADC.c **** *  Channel enable/disable mask.
 996:Generated_Source\PSoC4/ADC.c **** *
 997:Generated_Source\PSoC4/ADC.c **** * \sideeffect
 998:Generated_Source\PSoC4/ADC.c **** *  None.
 999:Generated_Source\PSoC4/ADC.c **** *
1000:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1001:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetChanMask
1002:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 19


1003:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1004:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 enableMask)
1005:Generated_Source\PSoC4/ADC.c **** {
1006:Generated_Source\PSoC4/ADC.c ****     uint32 chanCount = ADC_allConfigs[ADC_currentConfig].numChannels;
1007:Generated_Source\PSoC4/ADC.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
1008:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = enableMask;
1009:Generated_Source\PSoC4/ADC.c ****     return;
1010:Generated_Source\PSoC4/ADC.c **** }
1011:Generated_Source\PSoC4/ADC.c **** 
1012:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1013:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
1014:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1015:Generated_Source\PSoC4/ADC.c **** *
1016:Generated_Source\PSoC4/ADC.c **** * \brief Immediately returns the status of the conversion or does not return 
1017:Generated_Source\PSoC4/ADC.c **** * (blocking) until the conversion completes, depending on the retMode parameter.
1018:Generated_Source\PSoC4/ADC.c **** *
1019:Generated_Source\PSoC4/ADC.c **** * \param retMode Check conversion return mode. See the following table for 
1020:Generated_Source\PSoC4/ADC.c **** * options.
1021:Generated_Source\PSoC4/ADC.c **** * | Options                              | Description                             |
1022:Generated_Source\PSoC4/ADC.c **** * | :-------------------------------     | :-------------------------------------- |
1023:Generated_Source\PSoC4/ADC.c **** * | ADC_RETURN_STATUS       | Immediately returns the conversion status for sequential channels. If
1024:Generated_Source\PSoC4/ADC.c **** * | ADC_WAIT_FOR_RESULT     | Does not return a result until the ADC conversion of all sequential c
1025:Generated_Source\PSoC4/ADC.c **** * | ADC_RETURN_STATUS_INJ   | Immediately returns the conversion status for the injection channel. 
1026:Generated_Source\PSoC4/ADC.c **** * | ADC_WAIT_FOR_RESULT_INJ | Does not return a result until the ADC completes injection channel co
1027:Generated_Source\PSoC4/ADC.c **** * 
1028:Generated_Source\PSoC4/ADC.c **** * \return uint8: If a nonzero value is returned, the last conversion is complete. 
1029:Generated_Source\PSoC4/ADC.c **** * If the returned value is zero, the ADC is still calculating the last result.
1030:Generated_Source\PSoC4/ADC.c **** *
1031:Generated_Source\PSoC4/ADC.c **** * \sideeffect This function reads the end of conversion status, and clears it afterward.
1032:Generated_Source\PSoC4/ADC.c **** * 
1033:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1034:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_IsEndConversion
1035:Generated_Source\PSoC4/ADC.c **** *
1036:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1037:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
1038:Generated_Source\PSoC4/ADC.c **** {
1039:Generated_Source\PSoC4/ADC.c ****     uint32 endOfConversion = 0u;
1040:Generated_Source\PSoC4/ADC.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
1041:Generated_Source\PSoC4/ADC.c ****     if((ADC_RETURN_STATUS == retMode) || (ADC_WAIT_FOR_RESULT == retMode))
1042:Generated_Source\PSoC4/ADC.c ****     {
1043:Generated_Source\PSoC4/ADC.c ****         do
1044:Generated_Source\PSoC4/ADC.c ****         {
1045:Generated_Source\PSoC4/ADC.c ****             endOfConversion = ADC_SAR_INTR_REG & ADC_EOS_MASK;
1046:Generated_Source\PSoC4/ADC.c ****             wdt--;
1047:Generated_Source\PSoC4/ADC.c ****         }while(((0u == endOfConversion) 
1048:Generated_Source\PSoC4/ADC.c ****             && (((uint32) retMode & ADC_WAIT_FOR_RESULT) != 0u))
1049:Generated_Source\PSoC4/ADC.c ****             && (0uL != wdt));
1050:Generated_Source\PSoC4/ADC.c **** 
1051:Generated_Source\PSoC4/ADC.c ****         if(0u != endOfConversion)
1052:Generated_Source\PSoC4/ADC.c ****         {
1053:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
1054:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
1055:Generated_Source\PSoC4/ADC.c ****         }
1056:Generated_Source\PSoC4/ADC.c ****     }
1057:Generated_Source\PSoC4/ADC.c ****     
1058:Generated_Source\PSoC4/ADC.c ****     return endOfConversion;
1059:Generated_Source\PSoC4/ADC.c **** }
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 20


1060:Generated_Source\PSoC4/ADC.c ****  
1061:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
1062:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsChannelSigned(uint32 chan)
1063:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
1064:Generated_Source\PSoC4/ADC.c **** *
1065:Generated_Source\PSoC4/ADC.c **** * Determines if the provided channel is in signed format. 
1066:Generated_Source\PSoC4/ADC.c **** *
1067:Generated_Source\PSoC4/ADC.c **** * \param chan The ADC channel to check. 
1068:Generated_Source\PSoC4/ADC.c **** *
1069:Generated_Source\PSoC4/ADC.c **** * \return None
1070:Generated_Source\PSoC4/ADC.c **** * 
1071:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1072:Generated_Source\PSoC4/ADC.c **** *
1073:Generated_Source\PSoC4/ADC.c **** *
1074:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1075:Generated_Source\PSoC4/ADC.c **** static int32 ADC_IsChannelSigned(uint32 chan)
1076:Generated_Source\PSoC4/ADC.c **** {
  25              		.loc 1 1076 0
  26              		.cfi_startproc
  27              	.LVL0:
1077:Generated_Source\PSoC4/ADC.c ****     int32 isSigned = 0;
1078:Generated_Source\PSoC4/ADC.c ****     uint32 chanConfig;
1079:Generated_Source\PSoC4/ADC.c ****     
1080:Generated_Source\PSoC4/ADC.c ****     chanConfig = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chan << 2u)));
  28              		.loc 1 1080 0
  29 0000 8000     		lsl	r0, r0, #2
  30              	.LVL1:
  31 0002 114B     		ldr	r3, .L6
  32 0004 9C46     		mov	ip, r3
  33 0006 6044     		add	r0, r0, ip
  34 0008 0268     		ldr	r2, [r0]
  35              	.LVL2:
1081:Generated_Source\PSoC4/ADC.c ****     /* If differential mode */
1082:Generated_Source\PSoC4/ADC.c ****     if(0u != (chanConfig & ADC_CHANNEL_CONFIG_DIFF_ALL_MSK))
  36              		.loc 1 1082 0
  37 000a 104B     		ldr	r3, .L6+4
  38 000c 1A42     		tst	r2, r3
  39 000e 0BD0     		beq	.L2
1083:Generated_Source\PSoC4/ADC.c ****     {
1084:Generated_Source\PSoC4/ADC.c ****         /*If signed differential */
1085:Generated_Source\PSoC4/ADC.c ****         if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
  40              		.loc 1 1085 0
  41 0010 0F4B     		ldr	r3, .L6+8
  42 0012 1A68     		ldr	r2, [r3]
  43              	.LVL3:
  44 0014 D300     		lsl	r3, r2, #3
  45 0016 9B1A     		sub	r3, r3, r2
  46 0018 DB00     		lsl	r3, r3, #3
  47 001a 0E4A     		ldr	r2, .L6+12
  48 001c D318     		add	r3, r2, r3
  49 001e DB68     		ldr	r3, [r3, #12]
  50 0020 1B07     		lsl	r3, r3, #28
  51 0022 0DD4     		bmi	.L4
1077:Generated_Source\PSoC4/ADC.c ****     uint32 chanConfig;
  52              		.loc 1 1077 0
  53 0024 0020     		mov	r0, #0
  54 0026 0EE0     		b	.L3
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 21


  55              	.LVL4:
  56              	.L2:
1086:Generated_Source\PSoC4/ADC.c ****             & ADC_SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_MSK) != 0u)
1087:Generated_Source\PSoC4/ADC.c ****         {
1088:Generated_Source\PSoC4/ADC.c ****             isSigned = 1;
1089:Generated_Source\PSoC4/ADC.c ****         }
1090:Generated_Source\PSoC4/ADC.c ****     }
1091:Generated_Source\PSoC4/ADC.c ****     else
1092:Generated_Source\PSoC4/ADC.c ****     {
1093:Generated_Source\PSoC4/ADC.c ****         if((ADC_allConfigs[ADC_currentConfig].sampleCtrl
  57              		.loc 1 1093 0
  58 0028 094B     		ldr	r3, .L6+8
  59 002a 1A68     		ldr	r2, [r3]
  60              	.LVL5:
  61 002c D300     		lsl	r3, r2, #3
  62 002e 9B1A     		sub	r3, r3, r2
  63 0030 DB00     		lsl	r3, r3, #3
  64 0032 084A     		ldr	r2, .L6+12
  65 0034 D318     		add	r3, r2, r3
  66 0036 DB68     		ldr	r3, [r3, #12]
  67 0038 5B07     		lsl	r3, r3, #29
  68 003a 03D4     		bmi	.L5
1077:Generated_Source\PSoC4/ADC.c ****     uint32 chanConfig;
  69              		.loc 1 1077 0
  70 003c 0020     		mov	r0, #0
  71 003e 02E0     		b	.L3
  72              	.L4:
1088:Generated_Source\PSoC4/ADC.c ****         }
  73              		.loc 1 1088 0
  74 0040 0120     		mov	r0, #1
  75 0042 00E0     		b	.L3
  76              	.L5:
1094:Generated_Source\PSoC4/ADC.c ****             & ADC_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) != 0u)
1095:Generated_Source\PSoC4/ADC.c ****         {
1096:Generated_Source\PSoC4/ADC.c ****             isSigned = 1;
  77              		.loc 1 1096 0
  78 0044 0120     		mov	r0, #1
  79              	.L3:
  80              	.LVL6:
1097:Generated_Source\PSoC4/ADC.c ****         }
1098:Generated_Source\PSoC4/ADC.c ****     }
1099:Generated_Source\PSoC4/ADC.c ****     return isSigned;
1100:Generated_Source\PSoC4/ADC.c **** }
  81              		.loc 1 1100 0
  82              		@ sp needed
  83 0046 7047     		bx	lr
  84              	.L7:
  85              		.align	2
  86              	.L6:
  87 0048 80003A40 		.word	1077543040
  88 004c 00010001 		.word	16777472
  89 0050 00000000 		.word	.LANCHOR0
  90 0054 00000000 		.word	ADC_allConfigs
  91              		.cfi_endproc
  92              	.LFE12:
  93              		.size	ADC_IsChannelSigned, .-ADC_IsChannelSigned
  94              		.section	.text.ADC_Stop,"ax",%progbits
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 22


  95              		.align	2
  96              		.global	ADC_Stop
  97              		.code	16
  98              		.thumb_func
  99              		.type	ADC_Stop, %function
 100              	ADC_Stop:
 101              	.LFB3:
 636:Generated_Source\PSoC4/ADC.c ****     #if(0u != ADC_ANY_CONFIG_USES_FILTER)	
 102              		.loc 1 636 0
 103              		.cfi_startproc
 647:Generated_Source\PSoC4/ADC.c ****     return;
 104              		.loc 1 647 0
 105 0000 024A     		ldr	r2, .L9
 106 0002 1368     		ldr	r3, [r2]
 107 0004 5B00     		lsl	r3, r3, #1
 108 0006 5B08     		lsr	r3, r3, #1
 109 0008 1360     		str	r3, [r2]
 649:Generated_Source\PSoC4/ADC.c **** 
 110              		.loc 1 649 0
 111              		@ sp needed
 112 000a 7047     		bx	lr
 113              	.L10:
 114              		.align	2
 115              	.L9:
 116 000c 00003A40 		.word	1077542912
 117              		.cfi_endproc
 118              	.LFE3:
 119              		.size	ADC_Stop, .-ADC_Stop
 120              		.section	.text.ADC_InitConfig,"ax",%progbits
 121              		.align	2
 122              		.global	ADC_InitConfig
 123              		.code	16
 124              		.thumb_func
 125              		.type	ADC_InitConfig, %function
 126              	ADC_InitConfig:
 127              	.LFB4:
 668:Generated_Source\PSoC4/ADC.c **** 	uint32 chNum;
 128              		.loc 1 668 0
 129              		.cfi_startproc
 130              	.LVL7:
 131 0000 10B5     		push	{r4, lr}
 132              		.cfi_def_cfa_offset 8
 133              		.cfi_offset 4, -8
 134              		.cfi_offset 14, -4
 135 0002 041C     		mov	r4, r0
 681:Generated_Source\PSoC4/ADC.c ****         
 136              		.loc 1 681 0
 137 0004 808E     		ldrh	r0, [r0, #52]
 138              	.LVL8:
 139 0006 0021     		mov	r1, #0
 140 0008 FFF7FEFF 		bl	ADC_intSarClock_SetFractionalDividerRegister
 141              	.LVL9:
 685:Generated_Source\PSoC4/ADC.c ****    
 142              		.loc 1 685 0
 143 000c A268     		ldr	r2, [r4, #8]
 688:Generated_Source\PSoC4/ADC.c ****     ? ADC_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 144              		.loc 1 688 0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 23


 145 000e 244B     		ldr	r3, .L19
 146 0010 1B68     		ldr	r3, [r3]
 147 0012 002B     		cmp	r3, #0
 148 0014 02DA     		bge	.L18
 149 0016 8023     		mov	r3, #128
 150 0018 5B03     		lsl	r3, r3, #13
 151 001a 00E0     		b	.L12
 152              	.L18:
 153 001c 0023     		mov	r3, #0
 154              	.L12:
 688:Generated_Source\PSoC4/ADC.c ****     ? ADC_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 155              		.loc 1 688 0 is_stmt 0 discriminator 4
 156 001e 1343     		orr	r3, r2
 685:Generated_Source\PSoC4/ADC.c ****    
 157              		.loc 1 685 0 is_stmt 1 discriminator 4
 158 0020 204A     		ldr	r2, .L19+4
 159 0022 1360     		str	r3, [r2]
 691:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_THRES_REG = config->rangeThres;	
 160              		.loc 1 691 0 discriminator 4
 161 0024 204B     		ldr	r3, .L19+8
 162 0026 E268     		ldr	r2, [r4, #12]
 163 0028 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_COND_REG = config->rangeCond;
 164              		.loc 1 692 0 discriminator 4
 165 002a 204B     		ldr	r3, .L19+12
 166 002c A269     		ldr	r2, [r4, #24]
 167 002e 1A60     		str	r2, [r3]
 693:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 168              		.loc 1 693 0 discriminator 4
 169 0030 1F4B     		ldr	r3, .L19+16
 170 0032 E269     		ldr	r2, [r4, #28]
 171 0034 1A60     		str	r2, [r3]
 694:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 172              		.loc 1 694 0 discriminator 4
 173 0036 1F4B     		ldr	r3, .L19+20
 174 0038 2269     		ldr	r2, [r4, #16]
 175 003a 1A60     		str	r2, [r3]
 695:Generated_Source\PSoC4/ADC.c ****     
 176              		.loc 1 695 0 discriminator 4
 177 003c 1E4B     		ldr	r3, .L19+24
 178 003e 6269     		ldr	r2, [r4, #20]
 179 0040 1A60     		str	r2, [r3]
 709:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;	
 180              		.loc 1 709 0 discriminator 4
 181 0042 1E4A     		ldr	r2, .L19+28
 182 0044 0021     		mov	r1, #0
 183 0046 1160     		str	r1, [r2]
 710:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 184              		.loc 1 710 0 discriminator 4
 185 0048 1D4B     		ldr	r3, .L19+32
 186 004a 1960     		str	r1, [r3]
 711:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 187              		.loc 1 711 0 discriminator 4
 188 004c A16A     		ldr	r1, [r4, #40]
 189 004e 1160     		str	r1, [r2]
 712:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_INTR_MASK_REG = ADC_EOS_MASK;
 190              		.loc 1 712 0 discriminator 4
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 24


 191 0050 626A     		ldr	r2, [r4, #36]
 192 0052 1A60     		str	r2, [r3]
 713:Generated_Source\PSoC4/ADC.c ****     
 193              		.loc 1 713 0 discriminator 4
 194 0054 0122     		mov	r2, #1
 195 0056 1B4B     		ldr	r3, .L19+36
 196 0058 1A60     		str	r2, [r3]
 717:Generated_Source\PSoC4/ADC.c **** 	if(((config->ctrl & ADC__SAR_CTRL_VREF_BYP_AND_SEL_MSK) 
 197              		.loc 1 717 0 discriminator 4
 198 005a 1B4B     		ldr	r3, .L19+40
 199 005c 1B68     		ldr	r3, [r3]
 200              	.LVL10:
 718:Generated_Source\PSoC4/ADC.c **** 	    == ADC__INTERNAL1024) 
 201              		.loc 1 718 0 discriminator 4
 202 005e EF32     		add	r2, r2, #239
 203 0060 A168     		ldr	r1, [r4, #8]
 204 0062 0A40     		and	r2, r1
 205 0064 402A     		cmp	r2, #64
 206 0066 01D0     		beq	.L13
 720:Generated_Source\PSoC4/ADC.c **** 	    == ADC__INTERNALVREF))
 207              		.loc 1 720 0
 208 0068 002A     		cmp	r2, #0
 209 006a 04D1     		bne	.L14
 210              	.L13:
 723:Generated_Source\PSoC4/ADC.c **** 		tmpRegVal |= ADC_SAR_DFT_CTRL_DLY_INC_MSK;
 211              		.loc 1 723 0
 212 006c 174A     		ldr	r2, .L19+44
 213 006e 1340     		and	r3, r2
 214              	.LVL11:
 724:Generated_Source\PSoC4/ADC.c **** 	}
 215              		.loc 1 724 0
 216 0070 0122     		mov	r2, #1
 217 0072 1343     		orr	r3, r2
 218              	.LVL12:
 219 0074 04E0     		b	.L15
 220              	.L14:
 221              	.LVL13:
 729:Generated_Source\PSoC4/ADC.c **** 	}	
 222              		.loc 1 729 0
 223 0076 0122     		mov	r2, #1
 224 0078 9343     		bic	r3, r2
 225              	.LVL14:
 226 007a 8022     		mov	r2, #128
 227 007c 9205     		lsl	r2, r2, #22
 228 007e 1343     		orr	r3, r2
 229              	.LVL15:
 230              	.L15:
 731:Generated_Source\PSoC4/ADC.c **** 	
 231              		.loc 1 731 0
 232 0080 114A     		ldr	r2, .L19+40
 233 0082 1360     		str	r3, [r2]
 234              	.LVL16:
 733:Generated_Source\PSoC4/ADC.c ****     {
 235              		.loc 1 733 0
 236 0084 0023     		mov	r3, #0
 237              	.LVL17:
 238 0086 07E0     		b	.L16
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 25


 239              	.LVL18:
 240              	.L17:
 747:Generated_Source\PSoC4/ADC.c **** 	}
 241              		.loc 1 747 0 discriminator 3
 242 0088 9A00     		lsl	r2, r3, #2
 243 008a 1149     		ldr	r1, .L19+48
 244 008c 8C46     		mov	ip, r1
 245 008e 6244     		add	r2, r2, ip
 246 0090 8021     		mov	r1, #128
 247 0092 4900     		lsl	r1, r1, #1
 248 0094 1160     		str	r1, [r2]
 733:Generated_Source\PSoC4/ADC.c ****     {
 249              		.loc 1 733 0 discriminator 3
 250 0096 0133     		add	r3, r3, #1
 251              	.LVL19:
 252              	.L16:
 733:Generated_Source\PSoC4/ADC.c ****     {
 253              		.loc 1 733 0 is_stmt 0 discriminator 1
 254 0098 6268     		ldr	r2, [r4, #4]
 255 009a 9A42     		cmp	r2, r3
 256 009c F4D8     		bhi	.L17
 751:Generated_Source\PSoC4/ADC.c **** 
 257              		.loc 1 751 0 is_stmt 1
 258              		@ sp needed
 259              	.LVL20:
 260 009e 10BD     		pop	{r4, pc}
 261              	.L20:
 262              		.align	2
 263              	.L19:
 264 00a0 80033A40 		.word	1077543808
 265 00a4 00003A40 		.word	1077542912
 266 00a8 04003A40 		.word	1077542916
 267 00ac 18003A40 		.word	1077542936
 268 00b0 1C003A40 		.word	1077542940
 269 00b4 10003A40 		.word	1077542928
 270 00b8 14003A40 		.word	1077542932
 271 00bc 28023A40 		.word	1077543464
 272 00c0 38023A40 		.word	1077543480
 273 00c4 18023A40 		.word	1077543448
 274 00c8 30003A40 		.word	1077542960
 275 00cc FFFFFFDF 		.word	-536870913
 276 00d0 80003A40 		.word	1077543040
 277              		.cfi_endproc
 278              	.LFE4:
 279              		.size	ADC_InitConfig, .-ADC_InitConfig
 280              		.section	.text.ADC_StartConvert,"ax",%progbits
 281              		.align	2
 282              		.global	ADC_StartConvert
 283              		.code	16
 284              		.thumb_func
 285              		.type	ADC_StartConvert, %function
 286              	ADC_StartConvert:
 287              	.LFB6:
 834:Generated_Source\PSoC4/ADC.c ****     /* CDT 243358 */
 288              		.loc 1 834 0
 289              		.cfi_startproc
 842:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK) 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 26


 290              		.loc 1 842 0
 291 0000 074B     		ldr	r3, .L24
 292 0002 1B68     		ldr	r3, [r3]
 293 0004 5B03     		lsl	r3, r3, #13
 294 0006 06D5     		bpl	.L22
 846:Generated_Source\PSoC4/ADC.c **** 	}
 295              		.loc 1 846 0
 296 0008 054A     		ldr	r2, .L24
 297 000a 1368     		ldr	r3, [r2]
 298 000c 8021     		mov	r1, #128
 299 000e 4902     		lsl	r1, r1, #9
 300 0010 0B43     		orr	r3, r1
 301 0012 1360     		str	r3, [r2]
 302 0014 02E0     		b	.L21
 303              	.L22:
 850:Generated_Source\PSoC4/ADC.c **** 	}
 304              		.loc 1 850 0
 305 0016 0122     		mov	r2, #1
 306 0018 024B     		ldr	r3, .L24+4
 307 001a 1A60     		str	r2, [r3]
 308              	.L21:
 854:Generated_Source\PSoC4/ADC.c **** 
 309              		.loc 1 854 0
 310              		@ sp needed
 311 001c 7047     		bx	lr
 312              	.L25:
 313 001e C046     		.align	2
 314              	.L24:
 315 0020 04003A40 		.word	1077542916
 316 0024 24003A40 		.word	1077542948
 317              		.cfi_endproc
 318              	.LFE6:
 319              		.size	ADC_StartConvert, .-ADC_StartConvert
 320              		.section	.text.ADC_SetConvertMode,"ax",%progbits
 321              		.align	2
 322              		.global	ADC_SetConvertMode
 323              		.code	16
 324              		.thumb_func
 325              		.type	ADC_SetConvertMode, %function
 326              	ADC_SetConvertMode:
 327              	.LFB8:
 917:Generated_Source\PSoC4/ADC.c ****     if(ADC_CONTINUOUS == mode)
 328              		.loc 1 917 0
 329              		.cfi_startproc
 330              	.LVL21:
 918:Generated_Source\PSoC4/ADC.c ****     {
 331              		.loc 1 918 0
 332 0000 0128     		cmp	r0, #1
 333 0002 06D1     		bne	.L27
 920:Generated_Source\PSoC4/ADC.c ****     }
 334              		.loc 1 920 0
 335 0004 064A     		ldr	r2, .L29
 336 0006 1368     		ldr	r3, [r2]
 337 0008 8021     		mov	r1, #128
 338 000a C902     		lsl	r1, r1, #11
 339 000c 0B43     		orr	r3, r1
 340 000e 1360     		str	r3, [r2]
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 27


 341 0010 04E0     		b	.L26
 342              	.L27:
 924:Generated_Source\PSoC4/ADC.c ****     }
 343              		.loc 1 924 0
 344 0012 034A     		ldr	r2, .L29
 345 0014 1168     		ldr	r1, [r2]
 346 0016 034B     		ldr	r3, .L29+4
 347 0018 0B40     		and	r3, r1
 348 001a 1360     		str	r3, [r2]
 349              	.L26:
 926:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 350              		.loc 1 926 0
 351              		@ sp needed
 352 001c 7047     		bx	lr
 353              	.L30:
 354 001e C046     		.align	2
 355              	.L29:
 356 0020 04003A40 		.word	1077542916
 357 0024 FFFFFBFF 		.word	-262145
 358              		.cfi_endproc
 359              	.LFE8:
 360              		.size	ADC_SetConvertMode, .-ADC_SetConvertMode
 361              		.section	.text.ADC_SetEosMask,"ax",%progbits
 362              		.align	2
 363              		.global	ADC_SetEosMask
 364              		.code	16
 365              		.thumb_func
 366              		.type	ADC_SetEosMask, %function
 367              	ADC_SetEosMask:
 368              	.LFB9:
 981:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = mask & ADC_EOS_MASK;
 369              		.loc 1 981 0
 370              		.cfi_startproc
 371              	.LVL22:
 982:Generated_Source\PSoC4/ADC.c ****     
 372              		.loc 1 982 0
 373 0000 0123     		mov	r3, #1
 374 0002 1840     		and	r0, r3
 375              	.LVL23:
 376 0004 014B     		ldr	r3, .L32
 377 0006 1860     		str	r0, [r3]
 985:Generated_Source\PSoC4/ADC.c **** 
 378              		.loc 1 985 0
 379              		@ sp needed
 380 0008 7047     		bx	lr
 381              	.L33:
 382 000a C046     		.align	2
 383              	.L32:
 384 000c 18023A40 		.word	1077543448
 385              		.cfi_endproc
 386              	.LFE9:
 387              		.size	ADC_SetEosMask, .-ADC_SetEosMask
 388              		.section	.text.ADC_SetChanMask,"ax",%progbits
 389              		.align	2
 390              		.global	ADC_SetChanMask
 391              		.code	16
 392              		.thumb_func
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 28


 393              		.type	ADC_SetChanMask, %function
 394              	ADC_SetChanMask:
 395              	.LFB10:
1005:Generated_Source\PSoC4/ADC.c ****     uint32 chanCount = ADC_allConfigs[ADC_currentConfig].numChannels;
 396              		.loc 1 1005 0
 397              		.cfi_startproc
 398              	.LVL24:
1006:Generated_Source\PSoC4/ADC.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 399              		.loc 1 1006 0
 400 0000 074B     		ldr	r3, .L35
 401 0002 1A68     		ldr	r2, [r3]
 402 0004 D300     		lsl	r3, r2, #3
 403 0006 9B1A     		sub	r3, r3, r2
 404 0008 DB00     		lsl	r3, r3, #3
 405 000a 064A     		ldr	r2, .L35+4
 406 000c D318     		add	r3, r2, r3
 407 000e 5A68     		ldr	r2, [r3, #4]
 408              	.LVL25:
1007:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = enableMask;
 409              		.loc 1 1007 0
 410 0010 0123     		mov	r3, #1
 411 0012 9340     		lsl	r3, r3, r2
 412 0014 013B     		sub	r3, r3, #1
 413 0016 1840     		and	r0, r3
 414              	.LVL26:
1008:Generated_Source\PSoC4/ADC.c ****     return;
 415              		.loc 1 1008 0
 416 0018 034B     		ldr	r3, .L35+8
 417 001a 1860     		str	r0, [r3]
1010:Generated_Source\PSoC4/ADC.c **** 
 418              		.loc 1 1010 0
 419              		@ sp needed
 420 001c 7047     		bx	lr
 421              	.L36:
 422 001e C046     		.align	2
 423              	.L35:
 424 0020 00000000 		.word	.LANCHOR0
 425 0024 00000000 		.word	ADC_allConfigs
 426 0028 20003A40 		.word	1077542944
 427              		.cfi_endproc
 428              	.LFE10:
 429              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 430              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 431              		.align	2
 432              		.global	ADC_IsEndConversion
 433              		.code	16
 434              		.thumb_func
 435              		.type	ADC_IsEndConversion, %function
 436              	ADC_IsEndConversion:
 437              	.LFB11:
1038:Generated_Source\PSoC4/ADC.c ****     uint32 endOfConversion = 0u;
 438              		.loc 1 1038 0
 439              		.cfi_startproc
 440              	.LVL27:
 441 0000 011C     		mov	r1, r0
 442              	.LVL28:
1041:Generated_Source\PSoC4/ADC.c ****     {
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 29


 443              		.loc 1 1041 0
 444 0002 431E     		sub	r3, r0, #1
 445 0004 012B     		cmp	r3, #1
 446 0006 11D8     		bhi	.L41
 447 0008 094A     		ldr	r2, .L42
 448              	.LVL29:
 449              	.L40:
1045:Generated_Source\PSoC4/ADC.c ****             wdt--;
 450              		.loc 1 1045 0 discriminator 1
 451 000a 0A4B     		ldr	r3, .L42+4
 452 000c 1B68     		ldr	r3, [r3]
 453 000e 0120     		mov	r0, #1
 454 0010 1840     		and	r0, r3
 455              	.LVL30:
1046:Generated_Source\PSoC4/ADC.c ****         }while(((0u == endOfConversion) 
 456              		.loc 1 1046 0 discriminator 1
 457 0012 013A     		sub	r2, r2, #1
 458              	.LVL31:
1049:Generated_Source\PSoC4/ADC.c **** 
 459              		.loc 1 1049 0 discriminator 1
 460 0014 0028     		cmp	r0, #0
 461 0016 03D1     		bne	.L39
1048:Generated_Source\PSoC4/ADC.c ****             && (0uL != wdt));
 462              		.loc 1 1048 0
 463 0018 8B07     		lsl	r3, r1, #30
 464 001a 01D5     		bpl	.L39
1049:Generated_Source\PSoC4/ADC.c **** 
 465              		.loc 1 1049 0
 466 001c 002A     		cmp	r2, #0
 467 001e F4D1     		bne	.L40
 468              	.L39:
1051:Generated_Source\PSoC4/ADC.c ****         {
 469              		.loc 1 1051 0
 470 0020 0028     		cmp	r0, #0
 471 0022 04D0     		beq	.L38
1054:Generated_Source\PSoC4/ADC.c ****         }
 472              		.loc 1 1054 0
 473 0024 0122     		mov	r2, #1
 474              	.LVL32:
 475 0026 034B     		ldr	r3, .L42+4
 476 0028 1A60     		str	r2, [r3]
 477 002a 00E0     		b	.L38
 478              	.LVL33:
 479              	.L41:
1039:Generated_Source\PSoC4/ADC.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
 480              		.loc 1 1039 0
 481 002c 0020     		mov	r0, #0
 482              	.LVL34:
 483              	.L38:
1059:Generated_Source\PSoC4/ADC.c ****  
 484              		.loc 1 1059 0
 485              		@ sp needed
 486 002e 7047     		bx	lr
 487              	.L43:
 488              		.align	2
 489              	.L42:
 490 0030 FFFFFF03 		.word	67108863
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 30


 491 0034 10023A40 		.word	1077543440
 492              		.cfi_endproc
 493              	.LFE11:
 494              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 495              		.section	.text.ADC_GetResult16,"ax",%progbits
 496              		.align	2
 497              		.global	ADC_GetResult16
 498              		.code	16
 499              		.thumb_func
 500              		.type	ADC_GetResult16, %function
 501              	ADC_GetResult16:
 502              	.LFB13:
1101:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1102:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
1103:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1104:Generated_Source\PSoC4/ADC.c **** *
1105:Generated_Source\PSoC4/ADC.c **** * \brief Gets the data available in the channel result data register
1106:Generated_Source\PSoC4/ADC.c **** *
1107:Generated_Source\PSoC4/ADC.c **** * \param chan The ADC channel to read the result from. The first 
1108:Generated_Source\PSoC4/ADC.c **** * channel is 0 and the injection channel if enabled is the number of valid 
1109:Generated_Source\PSoC4/ADC.c **** * channels.
1110:Generated_Source\PSoC4/ADC.c **** *
1111:Generated_Source\PSoC4/ADC.c **** * \return Returns converted data as a signed 16-bit integer.
1112:Generated_Source\PSoC4/ADC.c **** * 
1113:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1114:Generated_Source\PSoC4/ADC.c **** * 
1115:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1116:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_GetResult16
1117:Generated_Source\PSoC4/ADC.c **** *
1118:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1119:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
1120:Generated_Source\PSoC4/ADC.c **** {
 503              		.loc 1 1120 0
 504              		.cfi_startproc
 505              	.LVL35:
 506 0000 10B5     		push	{r4, lr}
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 4, -8
 509              		.cfi_offset 14, -4
 510 0002 041C     		mov	r4, r0
1121:Generated_Source\PSoC4/ADC.c ****     uint32 adcResult;
1122:Generated_Source\PSoC4/ADC.c ****     
1123:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1124:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
 511              		.loc 1 1124 0
 512 0004 104B     		ldr	r3, .L48
 513 0006 1A68     		ldr	r2, [r3]
 514 0008 D300     		lsl	r3, r2, #3
 515 000a 9B1A     		sub	r3, r3, r2
 516 000c DB00     		lsl	r3, r3, #3
 517 000e 0F4A     		ldr	r2, .L48+4
 518 0010 D318     		add	r3, r2, r3
 519 0012 5B68     		ldr	r3, [r3, #4]
 520 0014 8342     		cmp	r3, r0
 521 0016 02D8     		bhi	.L45
 522              		.loc 1 1124 0 is_stmt 0 discriminator 1
 523 0018 0020     		mov	r0, #0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 31


 524              	.LVL36:
 525 001a FFF7FEFF 		bl	CyHalt
 526              	.LVL37:
 527              	.L45:
1125:Generated_Source\PSoC4/ADC.c **** 
1126:Generated_Source\PSoC4/ADC.c ****     if(ADC_allConfigs[ADC_currentConfig].numChannels > chan)
 528              		.loc 1 1126 0 is_stmt 1
 529 001e 0A4B     		ldr	r3, .L48
 530 0020 1A68     		ldr	r2, [r3]
 531 0022 D300     		lsl	r3, r2, #3
 532 0024 9B1A     		sub	r3, r3, r2
 533 0026 DB00     		lsl	r3, r3, #3
 534 0028 084A     		ldr	r2, .L48+4
 535 002a D318     		add	r3, r2, r3
 536 002c 5B68     		ldr	r3, [r3, #4]
 537 002e A342     		cmp	r3, r4
 538 0030 07D9     		bls	.L47
1127:Generated_Source\PSoC4/ADC.c ****     {   
1128:Generated_Source\PSoC4/ADC.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 539              		.loc 1 1128 0
 540 0032 A400     		lsl	r4, r4, #2
 541              	.LVL38:
 542 0034 064B     		ldr	r3, .L48+8
 543 0036 9C46     		mov	ip, r3
 544 0038 6444     		add	r4, r4, ip
 545 003a 2068     		ldr	r0, [r4]
 546 003c 0004     		lsl	r0, r0, #16
 547 003e 000C     		lsr	r0, r0, #16
 548              	.LVL39:
 549 0040 00E0     		b	.L46
 550              	.LVL40:
 551              	.L47:
1129:Generated_Source\PSoC4/ADC.c ****             ADC_RESULT_MASK; 
1130:Generated_Source\PSoC4/ADC.c ****     }
1131:Generated_Source\PSoC4/ADC.c ****     else
1132:Generated_Source\PSoC4/ADC.c ****     {
1133:Generated_Source\PSoC4/ADC.c **** 		adcResult = 0u;
 552              		.loc 1 1133 0
 553 0042 0020     		mov	r0, #0
 554              	.LVL41:
 555              	.L46:
1134:Generated_Source\PSoC4/ADC.c ****     }
1135:Generated_Source\PSoC4/ADC.c ****     
1136:Generated_Source\PSoC4/ADC.c ****     return (int16) adcResult;
 556              		.loc 1 1136 0
 557 0044 00B2     		sxth	r0, r0
 558              	.LVL42:
1137:Generated_Source\PSoC4/ADC.c **** }
 559              		.loc 1 1137 0
 560              		@ sp needed
 561 0046 10BD     		pop	{r4, pc}
 562              	.L49:
 563              		.align	2
 564              	.L48:
 565 0048 00000000 		.word	.LANCHOR0
 566 004c 00000000 		.word	ADC_allConfigs
 567 0050 80013A40 		.word	1077543296
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 32


 568              		.cfi_endproc
 569              	.LFE13:
 570              		.size	ADC_GetResult16, .-ADC_GetResult16
 571              		.section	.text.ADC_GetResult32,"ax",%progbits
 572              		.align	2
 573              		.global	ADC_GetResult32
 574              		.code	16
 575              		.thumb_func
 576              		.type	ADC_GetResult32, %function
 577              	ADC_GetResult32:
 578              	.LFB14:
1138:Generated_Source\PSoC4/ADC.c **** 
1139:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1140:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult32
1141:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1142:Generated_Source\PSoC4/ADC.c **** *
1143:Generated_Source\PSoC4/ADC.c **** * \brief Gets the data available in the channel result data register. 
1144:Generated_Source\PSoC4/ADC.c **** *
1145:Generated_Source\PSoC4/ADC.c **** * \param chan The ADC channel to read the result from. The first 
1146:Generated_Source\PSoC4/ADC.c **** * channel is 0 and the injection channel if enabled is the number of valid 
1147:Generated_Source\PSoC4/ADC.c **** * channels.
1148:Generated_Source\PSoC4/ADC.c **** *
1149:Generated_Source\PSoC4/ADC.c **** * \return Returns converted data as a signed 32-bit integer.
1150:Generated_Source\PSoC4/ADC.c **** * 
1151:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1152:Generated_Source\PSoC4/ADC.c **** *
1153:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1154:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_GetResult32
1155:Generated_Source\PSoC4/ADC.c **** *
1156:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1157:Generated_Source\PSoC4/ADC.c **** int32 ADC_GetResult32(uint32 chan)
1158:Generated_Source\PSoC4/ADC.c **** {
 579              		.loc 1 1158 0
 580              		.cfi_startproc
 581              	.LVL43:
 582 0000 38B5     		push	{r3, r4, r5, lr}
 583              		.cfi_def_cfa_offset 16
 584              		.cfi_offset 3, -16
 585              		.cfi_offset 4, -12
 586              		.cfi_offset 5, -8
 587              		.cfi_offset 14, -4
 588 0002 051C     		mov	r5, r0
1159:Generated_Source\PSoC4/ADC.c ****     uint32 adcResult;
1160:Generated_Source\PSoC4/ADC.c ****     int16 adcResult16;
1161:Generated_Source\PSoC4/ADC.c ****     int32 finalResult;
1162:Generated_Source\PSoC4/ADC.c ****     
1163:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1164:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
 589              		.loc 1 1164 0
 590 0004 144B     		ldr	r3, .L56
 591 0006 1A68     		ldr	r2, [r3]
 592 0008 D300     		lsl	r3, r2, #3
 593 000a 9B1A     		sub	r3, r3, r2
 594 000c DB00     		lsl	r3, r3, #3
 595 000e 134A     		ldr	r2, .L56+4
 596 0010 D318     		add	r3, r2, r3
 597 0012 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 33


 598 0014 8342     		cmp	r3, r0
 599 0016 02D8     		bhi	.L51
 600              		.loc 1 1164 0 is_stmt 0 discriminator 1
 601 0018 0020     		mov	r0, #0
 602              	.LVL44:
 603 001a FFF7FEFF 		bl	CyHalt
 604              	.LVL45:
 605              	.L51:
1165:Generated_Source\PSoC4/ADC.c **** 
1166:Generated_Source\PSoC4/ADC.c ****     if(ADC_allConfigs[ADC_currentConfig].numChannels > chan)
 606              		.loc 1 1166 0 is_stmt 1
 607 001e 0E4B     		ldr	r3, .L56
 608 0020 1A68     		ldr	r2, [r3]
 609 0022 D300     		lsl	r3, r2, #3
 610 0024 9B1A     		sub	r3, r3, r2
 611 0026 DB00     		lsl	r3, r3, #3
 612 0028 0C4A     		ldr	r2, .L56+4
 613 002a D318     		add	r3, r2, r3
 614 002c 5B68     		ldr	r3, [r3, #4]
 615 002e AB42     		cmp	r3, r5
 616 0030 07D9     		bls	.L55
1167:Generated_Source\PSoC4/ADC.c ****     {
1168:Generated_Source\PSoC4/ADC.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 617              		.loc 1 1168 0
 618 0032 AB00     		lsl	r3, r5, #2
 619 0034 0A4A     		ldr	r2, .L56+8
 620 0036 9446     		mov	ip, r2
 621 0038 6344     		add	r3, r3, ip
 622 003a 1C68     		ldr	r4, [r3]
 623 003c 2404     		lsl	r4, r4, #16
 624 003e 240C     		lsr	r4, r4, #16
 625              	.LVL46:
 626 0040 00E0     		b	.L52
 627              	.LVL47:
 628              	.L55:
1169:Generated_Source\PSoC4/ADC.c ****             ADC_RESULT_MASK;
1170:Generated_Source\PSoC4/ADC.c ****     }
1171:Generated_Source\PSoC4/ADC.c ****     else
1172:Generated_Source\PSoC4/ADC.c ****     {
1173:Generated_Source\PSoC4/ADC.c ****         adcResult = 0u;
 629              		.loc 1 1173 0
 630 0042 0024     		mov	r4, #0
 631              	.L52:
 632              	.LVL48:
1174:Generated_Source\PSoC4/ADC.c ****     }
1175:Generated_Source\PSoC4/ADC.c ****     /* Sign extend if channel is signed format */
1176:Generated_Source\PSoC4/ADC.c ****     if(ADC_IsChannelSigned(chan) == 1)
 633              		.loc 1 1176 0
 634 0044 281C     		mov	r0, r5
 635 0046 FFF7FEFF 		bl	ADC_IsChannelSigned
 636              	.LVL49:
 637 004a 0128     		cmp	r0, #1
 638 004c 01D1     		bne	.L53
 639              	.LVL50:
1177:Generated_Source\PSoC4/ADC.c ****     {
1178:Generated_Source\PSoC4/ADC.c ****         adcResult16 = (int16) adcResult;
1179:Generated_Source\PSoC4/ADC.c ****         finalResult = (int32) adcResult16;
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 34


 640              		.loc 1 1179 0
 641 004e 20B2     		sxth	r0, r4
 642              	.LVL51:
 643 0050 00E0     		b	.L54
 644              	.LVL52:
 645              	.L53:
1180:Generated_Source\PSoC4/ADC.c ****     }
1181:Generated_Source\PSoC4/ADC.c ****     else
1182:Generated_Source\PSoC4/ADC.c ****     {
1183:Generated_Source\PSoC4/ADC.c ****         finalResult = (int32) adcResult;
 646              		.loc 1 1183 0
 647 0052 201C     		mov	r0, r4
 648              	.LVL53:
 649              	.L54:
1184:Generated_Source\PSoC4/ADC.c ****     }
1185:Generated_Source\PSoC4/ADC.c ****     return finalResult;
1186:Generated_Source\PSoC4/ADC.c **** }
 650              		.loc 1 1186 0
 651              		@ sp needed
 652              	.LVL54:
 653              	.LVL55:
 654 0054 38BD     		pop	{r3, r4, r5, pc}
 655              	.L57:
 656 0056 C046     		.align	2
 657              	.L56:
 658 0058 00000000 		.word	.LANCHOR0
 659 005c 00000000 		.word	ADC_allConfigs
 660 0060 80013A40 		.word	1077543296
 661              		.cfi_endproc
 662              	.LFE14:
 663              		.size	ADC_GetResult32, .-ADC_GetResult32
 664              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 665              		.align	2
 666              		.global	ADC_SetLowLimit
 667              		.code	16
 668              		.thumb_func
 669              		.type	ADC_SetLowLimit, %function
 670              	ADC_SetLowLimit:
 671              	.LFB15:
1187:Generated_Source\PSoC4/ADC.c **** 
1188:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1189:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
1190:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1191:Generated_Source\PSoC4/ADC.c **** *
1192:Generated_Source\PSoC4/ADC.c **** * \brief Sets the low limit parameter for a limit condition.
1193:Generated_Source\PSoC4/ADC.c **** *
1194:Generated_Source\PSoC4/ADC.c **** * \param lowLimit The low limit for a limit condition.
1195:Generated_Source\PSoC4/ADC.c **** *
1196:Generated_Source\PSoC4/ADC.c **** * \return None
1197:Generated_Source\PSoC4/ADC.c **** * 
1198:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1199:Generated_Source\PSoC4/ADC.c **** *
1200:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1201:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetLowLimit
1202:Generated_Source\PSoC4/ADC.c **** *
1203:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1204:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 35


1205:Generated_Source\PSoC4/ADC.c **** {   
 672              		.loc 1 1205 0
 673              		.cfi_startproc
 674              	.LVL56:
1206:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_SAR_RANGE_THRES_RANGE_LOW_MSK);
 675              		.loc 1 1206 0
 676 0000 054A     		ldr	r2, .L59
 677 0002 1368     		ldr	r3, [r2]
 678 0004 1B0C     		lsr	r3, r3, #16
 679 0006 1B04     		lsl	r3, r3, #16
 680 0008 1360     		str	r3, [r2]
1207:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_RANGE_THRES_RANGE_LOW_MSK;
 681              		.loc 1 1207 0
 682 000a 1368     		ldr	r3, [r2]
 683 000c 0004     		lsl	r0, r0, #16
 684              	.LVL57:
 685 000e 000C     		lsr	r0, r0, #16
 686 0010 1843     		orr	r0, r3
 687 0012 1060     		str	r0, [r2]
1208:Generated_Source\PSoC4/ADC.c ****     return;
1209:Generated_Source\PSoC4/ADC.c **** }
 688              		.loc 1 1209 0
 689              		@ sp needed
 690 0014 7047     		bx	lr
 691              	.L60:
 692 0016 C046     		.align	2
 693              	.L59:
 694 0018 18003A40 		.word	1077542936
 695              		.cfi_endproc
 696              	.LFE15:
 697              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 698              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 699              		.align	2
 700              		.global	ADC_SetHighLimit
 701              		.code	16
 702              		.thumb_func
 703              		.type	ADC_SetHighLimit, %function
 704              	ADC_SetHighLimit:
 705              	.LFB16:
1210:Generated_Source\PSoC4/ADC.c **** 
1211:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1212:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
1213:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1214:Generated_Source\PSoC4/ADC.c **** *
1215:Generated_Source\PSoC4/ADC.c **** * \brief Sets the high limit parameter for a limit condition.
1216:Generated_Source\PSoC4/ADC.c **** *
1217:Generated_Source\PSoC4/ADC.c **** * \param highLimit The high limit for a limit condition.
1218:Generated_Source\PSoC4/ADC.c **** *
1219:Generated_Source\PSoC4/ADC.c **** * \return None
1220:Generated_Source\PSoC4/ADC.c **** * 
1221:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1222:Generated_Source\PSoC4/ADC.c **** * 
1223:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1224:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetHighLimit
1225:Generated_Source\PSoC4/ADC.c **** *
1226:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1227:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 36


1228:Generated_Source\PSoC4/ADC.c **** {   
 706              		.loc 1 1228 0
 707              		.cfi_startproc
 708              	.LVL58:
1229:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_SAR_RANGE_THRES_RANGE_HIGH_MSK);
 709              		.loc 1 1229 0
 710 0000 044A     		ldr	r2, .L62
 711 0002 1368     		ldr	r3, [r2]
 712 0004 1B04     		lsl	r3, r3, #16
 713 0006 1B0C     		lsr	r3, r3, #16
 714 0008 1360     		str	r3, [r2]
1230:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_RANGE_THRES_RANGE_HIGH_SHFT);
 715              		.loc 1 1230 0
 716 000a 1368     		ldr	r3, [r2]
 717 000c 0004     		lsl	r0, r0, #16
 718              	.LVL59:
 719 000e 1843     		orr	r0, r3
 720 0010 1060     		str	r0, [r2]
1231:Generated_Source\PSoC4/ADC.c ****     return;
1232:Generated_Source\PSoC4/ADC.c **** }
 721              		.loc 1 1232 0
 722              		@ sp needed
 723 0012 7047     		bx	lr
 724              	.L63:
 725              		.align	2
 726              	.L62:
 727 0014 18003A40 		.word	1077542936
 728              		.cfi_endproc
 729              	.LFE16:
 730              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 731              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 732              		.align	2
 733              		.global	ADC_SetLimitMask
 734              		.code	16
 735              		.thumb_func
 736              		.type	ADC_SetLimitMask, %function
 737              	ADC_SetLimitMask:
 738              	.LFB17:
1233:Generated_Source\PSoC4/ADC.c **** 
1234:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1235:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
1236:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1237:Generated_Source\PSoC4/ADC.c **** *
1238:Generated_Source\PSoC4/ADC.c **** * \brief Sets the channel limit condition mask.
1239:Generated_Source\PSoC4/ADC.c **** *
1240:Generated_Source\PSoC4/ADC.c **** *
1241:Generated_Source\PSoC4/ADC.c **** * \param limitMask Sets which channels that may cause a limit condition interrupt. 
1242:Generated_Source\PSoC4/ADC.c **** * Setting bits for channels that do not exist will have no effect. For example, 
1243:Generated_Source\PSoC4/ADC.c **** * if only 6  channels were enabled, setting a mask of 0x0103 would only enable 
1244:Generated_Source\PSoC4/ADC.c **** * the last two channels (0 and 1).
1245:Generated_Source\PSoC4/ADC.c **** *
1246:Generated_Source\PSoC4/ADC.c **** * \return None
1247:Generated_Source\PSoC4/ADC.c **** * 
1248:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1249:Generated_Source\PSoC4/ADC.c **** *
1250:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1251:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetLimitMask
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 37


1252:Generated_Source\PSoC4/ADC.c **** *
1253:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1254:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 limitMask)
1255:Generated_Source\PSoC4/ADC.c **** {   
 739              		.loc 1 1255 0
 740              		.cfi_startproc
 741              	.LVL60:
1256:Generated_Source\PSoC4/ADC.c ****     uint32 chanCount = ADC_allConfigs[ADC_currentConfig].numChannels;
 742              		.loc 1 1256 0
 743 0000 074B     		ldr	r3, .L65
 744 0002 1A68     		ldr	r2, [r3]
 745 0004 D300     		lsl	r3, r2, #3
 746 0006 9B1A     		sub	r3, r3, r2
 747 0008 DB00     		lsl	r3, r3, #3
 748 000a 064A     		ldr	r2, .L65+4
 749 000c D318     		add	r3, r2, r3
 750 000e 5A68     		ldr	r2, [r3, #4]
 751              	.LVL61:
1257:Generated_Source\PSoC4/ADC.c ****     limitMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 752              		.loc 1 1257 0
 753 0010 0123     		mov	r3, #1
 754 0012 9340     		lsl	r3, r3, r2
 755 0014 013B     		sub	r3, r3, #1
 756 0016 1840     		and	r0, r3
 757              	.LVL62:
1258:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = limitMask;
 758              		.loc 1 1258 0
 759 0018 034B     		ldr	r3, .L65+8
 760 001a 1860     		str	r0, [r3]
1259:Generated_Source\PSoC4/ADC.c ****     return;
1260:Generated_Source\PSoC4/ADC.c **** }
 761              		.loc 1 1260 0
 762              		@ sp needed
 763 001c 7047     		bx	lr
 764              	.L66:
 765 001e C046     		.align	2
 766              	.L65:
 767 0020 00000000 		.word	.LANCHOR0
 768 0024 00000000 		.word	ADC_allConfigs
 769 0028 38023A40 		.word	1077543480
 770              		.cfi_endproc
 771              	.LFE17:
 772              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 773              		.section	.text.ADC_SetSatMask,"ax",%progbits
 774              		.align	2
 775              		.global	ADC_SetSatMask
 776              		.code	16
 777              		.thumb_func
 778              		.type	ADC_SetSatMask, %function
 779              	ADC_SetSatMask:
 780              	.LFB18:
1261:Generated_Source\PSoC4/ADC.c **** 
1262:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1263:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
1264:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1265:Generated_Source\PSoC4/ADC.c **** *
1266:Generated_Source\PSoC4/ADC.c **** * \brief Sets the channel saturation event mask.
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 38


1267:Generated_Source\PSoC4/ADC.c **** *
1268:Generated_Source\PSoC4/ADC.c **** * \param satMask Sets which channels that may cause a saturation event interrupt. 
1269:Generated_Source\PSoC4/ADC.c **** * Setting bits for channels that do not exist will have no effect. For example, 
1270:Generated_Source\PSoC4/ADC.c **** * if only 8 channels were enabled, setting a mask of 0x01C0 would only enable two 
1271:Generated_Source\PSoC4/ADC.c **** * channels (6 and 7).
1272:Generated_Source\PSoC4/ADC.c **** *
1273:Generated_Source\PSoC4/ADC.c **** * \return None
1274:Generated_Source\PSoC4/ADC.c **** * 
1275:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1276:Generated_Source\PSoC4/ADC.c **** *
1277:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1278:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetSatMask
1279:Generated_Source\PSoC4/ADC.c **** *
1280:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1281:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 satMask)
1282:Generated_Source\PSoC4/ADC.c **** {   
 781              		.loc 1 1282 0
 782              		.cfi_startproc
 783              	.LVL63:
1283:Generated_Source\PSoC4/ADC.c ****     uint32 chanCount = ADC_allConfigs[ADC_currentConfig].numChannels;
 784              		.loc 1 1283 0
 785 0000 074B     		ldr	r3, .L68
 786 0002 1A68     		ldr	r2, [r3]
 787 0004 D300     		lsl	r3, r2, #3
 788 0006 9B1A     		sub	r3, r3, r2
 789 0008 DB00     		lsl	r3, r3, #3
 790 000a 064A     		ldr	r2, .L68+4
 791 000c D318     		add	r3, r2, r3
 792 000e 5A68     		ldr	r2, [r3, #4]
 793              	.LVL64:
1284:Generated_Source\PSoC4/ADC.c ****     satMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 794              		.loc 1 1284 0
 795 0010 0123     		mov	r3, #1
 796 0012 9340     		lsl	r3, r3, r2
 797 0014 013B     		sub	r3, r3, #1
 798 0016 1840     		and	r0, r3
 799              	.LVL65:
1285:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = satMask;    
 800              		.loc 1 1285 0
 801 0018 034B     		ldr	r3, .L68+8
 802 001a 1860     		str	r0, [r3]
1286:Generated_Source\PSoC4/ADC.c ****     return;
1287:Generated_Source\PSoC4/ADC.c **** }
 803              		.loc 1 1287 0
 804              		@ sp needed
 805 001c 7047     		bx	lr
 806              	.L69:
 807 001e C046     		.align	2
 808              	.L68:
 809 0020 00000000 		.word	.LANCHOR0
 810 0024 00000000 		.word	ADC_allConfigs
 811 0028 28023A40 		.word	1077543464
 812              		.cfi_endproc
 813              	.LFE18:
 814              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 815              		.section	.text.ADC_SetOffset,"ax",%progbits
 816              		.align	2
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 39


 817              		.global	ADC_SetOffset
 818              		.code	16
 819              		.thumb_func
 820              		.type	ADC_SetOffset, %function
 821              	ADC_SetOffset:
 822              	.LFB19:
1288:Generated_Source\PSoC4/ADC.c **** 
1289:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1290:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
1291:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1292:Generated_Source\PSoC4/ADC.c **** *
1293:Generated_Source\PSoC4/ADC.c **** * \brief Sets the ADC offset that is used by the functions ADC_CountsTo_uVolts, 
1294:Generated_Source\PSoC4/ADC.c **** * ADC_CountsTo_mVolts, and ADC_CountsTo_Volts.
1295:Generated_Source\PSoC4/ADC.c **** * 
1296:Generated_Source\PSoC4/ADC.c **** * Offset is applied to counts before unit scaling and gain.  All CountsTo_[mV, uV, V]olts()
1297:Generated_Source\PSoC4/ADC.c **** * functions use the following equation:
1298:Generated_Source\PSoC4/ADC.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1299:Generated_Source\PSoC4/ADC.c **** * See CountsTo_Volts() for more about this formula.
1300:Generated_Source\PSoC4/ADC.c **** * 
1301:Generated_Source\PSoC4/ADC.c **** * To set channel 0's offset based on known V_offset_mV, use:
1302:Generated_Source\PSoC4/ADC.c **** *     ADC_SetOffset(0uL, -1 * V_offset_mV * (1uL << (Resolution - 1)) / V_ref_mV);
1303:Generated_Source\PSoC4/ADC.c **** *
1304:Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number. 
1305:Generated_Source\PSoC4/ADC.c **** * 
1306:Generated_Source\PSoC4/ADC.c **** * \param offset This value is a measured value when the inputs are shorted or 
1307:Generated_Source\PSoC4/ADC.c **** * connected to the same input voltage.
1308:Generated_Source\PSoC4/ADC.c **** *
1309:Generated_Source\PSoC4/ADC.c **** * \return None
1310:Generated_Source\PSoC4/ADC.c **** * 
1311:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1312:Generated_Source\PSoC4/ADC.c **** *
1313:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1314:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetOffset
1315:Generated_Source\PSoC4/ADC.c **** *
1316:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1317:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
1318:Generated_Source\PSoC4/ADC.c **** {   
 823              		.loc 1 1318 0
 824              		.cfi_startproc
 825              	.LVL66:
 826 0000 38B5     		push	{r3, r4, r5, lr}
 827              		.cfi_def_cfa_offset 16
 828              		.cfi_offset 3, -16
 829              		.cfi_offset 4, -12
 830              		.cfi_offset 5, -8
 831              		.cfi_offset 14, -4
 832 0002 041C     		mov	r4, r0
 833 0004 0D1C     		mov	r5, r1
1319:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1320:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
 834              		.loc 1 1320 0
 835 0006 0C4B     		ldr	r3, .L72
 836 0008 1A68     		ldr	r2, [r3]
 837 000a D300     		lsl	r3, r2, #3
 838 000c 9B1A     		sub	r3, r3, r2
 839 000e DB00     		lsl	r3, r3, #3
 840 0010 0A4A     		ldr	r2, .L72+4
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 40


 841 0012 D318     		add	r3, r2, r3
 842 0014 5B68     		ldr	r3, [r3, #4]
 843 0016 8342     		cmp	r3, r0
 844 0018 02D8     		bhi	.L71
 845              		.loc 1 1320 0 is_stmt 0 discriminator 1
 846 001a 0020     		mov	r0, #0
 847              	.LVL67:
 848 001c FFF7FEFF 		bl	CyHalt
 849              	.LVL68:
 850              	.L71:
1321:Generated_Source\PSoC4/ADC.c **** 
1322:Generated_Source\PSoC4/ADC.c ****     ADC_offset[ADC_allConfigs[ADC_currentConfig].channelBase + chan] = offset;
 851              		.loc 1 1322 0 is_stmt 1
 852 0020 054B     		ldr	r3, .L72
 853 0022 1A68     		ldr	r2, [r3]
 854 0024 D300     		lsl	r3, r2, #3
 855 0026 9B1A     		sub	r3, r3, r2
 856 0028 DB00     		lsl	r3, r3, #3
 857 002a 044A     		ldr	r2, .L72+4
 858 002c 9B58     		ldr	r3, [r3, r2]
 859 002e 1C19     		add	r4, r3, r4
 860              	.LVL69:
 861 0030 6400     		lsl	r4, r4, #1
 862 0032 034B     		ldr	r3, .L72+8
 863 0034 E552     		strh	r5, [r4, r3]
1323:Generated_Source\PSoC4/ADC.c ****     return;
1324:Generated_Source\PSoC4/ADC.c **** }
 864              		.loc 1 1324 0
 865              		@ sp needed
 866 0036 38BD     		pop	{r3, r4, r5, pc}
 867              	.L73:
 868              		.align	2
 869              	.L72:
 870 0038 00000000 		.word	.LANCHOR0
 871 003c 00000000 		.word	ADC_allConfigs
 872 0040 00000000 		.word	ADC_offset
 873              		.cfi_endproc
 874              	.LFE19:
 875              		.size	ADC_SetOffset, .-ADC_SetOffset
 876              		.section	.text.ADC_SetGain,"ax",%progbits
 877              		.align	2
 878              		.global	ADC_SetGain
 879              		.code	16
 880              		.thumb_func
 881              		.type	ADC_SetGain, %function
 882              	ADC_SetGain:
 883              	.LFB20:
1325:Generated_Source\PSoC4/ADC.c **** 
1326:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1327:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
1328:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1329:Generated_Source\PSoC4/ADC.c **** *
1330:Generated_Source\PSoC4/ADC.c **** * \brief Sets the ADC gain in counts per 10 volt for the voltage 
1331:Generated_Source\PSoC4/ADC.c **** * conversion functions. This value is set by default by the reference and 
1332:Generated_Source\PSoC4/ADC.c **** * input range settings. Gain is applied after offset and unit scaling.  All 
1333:Generated_Source\PSoC4/ADC.c **** * CountsTo_[mV, uV, V]olts() functions use the following equation:
1334:Generated_Source\PSoC4/ADC.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 41


1335:Generated_Source\PSoC4/ADC.c **** * See CountsTo_Volts() for more about this formula.
1336:Generated_Source\PSoC4/ADC.c **** * 
1337:Generated_Source\PSoC4/ADC.c **** * To set channel 0's gain based on known V_ref_mV, use:
1338:Generated_Source\PSoC4/ADC.c **** *     ADC_SetGain(0uL, 10000 * (1uL << (Resolution - 1)) / V_ref_mV);
1339:Generated_Source\PSoC4/ADC.c **** *  
1340:Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number.
1341:Generated_Source\PSoC4/ADC.c **** * 
1342:Generated_Source\PSoC4/ADC.c **** * \param adcGain ADC gain in counts per 10 volt.
1343:Generated_Source\PSoC4/ADC.c **** *
1344:Generated_Source\PSoC4/ADC.c **** * \return None
1345:Generated_Source\PSoC4/ADC.c **** * 
1346:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1347:Generated_Source\PSoC4/ADC.c **** *
1348:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1349:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetGain
1350:Generated_Source\PSoC4/ADC.c **** *
1351:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1352:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
1353:Generated_Source\PSoC4/ADC.c **** {   
 884              		.loc 1 1353 0
 885              		.cfi_startproc
 886              	.LVL70:
 887 0000 38B5     		push	{r3, r4, r5, lr}
 888              		.cfi_def_cfa_offset 16
 889              		.cfi_offset 3, -16
 890              		.cfi_offset 4, -12
 891              		.cfi_offset 5, -8
 892              		.cfi_offset 14, -4
 893 0002 041C     		mov	r4, r0
 894 0004 0D1C     		mov	r5, r1
1354:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1355:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
 895              		.loc 1 1355 0
 896 0006 0C4B     		ldr	r3, .L76
 897 0008 1A68     		ldr	r2, [r3]
 898 000a D300     		lsl	r3, r2, #3
 899 000c 9B1A     		sub	r3, r3, r2
 900 000e DB00     		lsl	r3, r3, #3
 901 0010 0A4A     		ldr	r2, .L76+4
 902 0012 D318     		add	r3, r2, r3
 903 0014 5B68     		ldr	r3, [r3, #4]
 904 0016 8342     		cmp	r3, r0
 905 0018 02D8     		bhi	.L75
 906              		.loc 1 1355 0 is_stmt 0 discriminator 1
 907 001a 0020     		mov	r0, #0
 908              	.LVL71:
 909 001c FFF7FEFF 		bl	CyHalt
 910              	.LVL72:
 911              	.L75:
1356:Generated_Source\PSoC4/ADC.c **** 
1357:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[ADC_allConfigs[ADC_currentConfig].channelBase + chan]
 912              		.loc 1 1357 0 is_stmt 1
 913 0020 054B     		ldr	r3, .L76
 914 0022 1A68     		ldr	r2, [r3]
 915 0024 D300     		lsl	r3, r2, #3
 916 0026 9B1A     		sub	r3, r3, r2
 917 0028 DB00     		lsl	r3, r3, #3
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 42


 918 002a 044A     		ldr	r2, .L76+4
 919 002c 9B58     		ldr	r3, [r3, r2]
 920 002e 1C19     		add	r4, r3, r4
 921              	.LVL73:
1358:Generated_Source\PSoC4/ADC.c **** 	= adcGain;
 922              		.loc 1 1358 0
 923 0030 A400     		lsl	r4, r4, #2
 924 0032 034B     		ldr	r3, .L76+8
 925 0034 E550     		str	r5, [r4, r3]
1359:Generated_Source\PSoC4/ADC.c ****     return;
1360:Generated_Source\PSoC4/ADC.c **** }
 926              		.loc 1 1360 0
 927              		@ sp needed
 928              	.LVL74:
 929 0036 38BD     		pop	{r3, r4, r5, pc}
 930              	.L77:
 931              		.align	2
 932              	.L76:
 933 0038 00000000 		.word	.LANCHOR0
 934 003c 00000000 		.word	ADC_allConfigs
 935 0040 00000000 		.word	ADC_countsPer10Volt
 936              		.cfi_endproc
 937              	.LFE20:
 938              		.size	ADC_SetGain, .-ADC_SetGain
 939              		.section	.text.ADC_RawCounts2Counts,"ax",%progbits
 940              		.align	2
 941              		.global	ADC_RawCounts2Counts
 942              		.code	16
 943              		.thumb_func
 944              		.type	ADC_RawCounts2Counts, %function
 945              	ADC_RawCounts2Counts:
 946              	.LFB21:
1361:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1362:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_RawCounts2Counts
1363:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1364:Generated_Source\PSoC4/ADC.c **** *
1365:Generated_Source\PSoC4/ADC.c **** * \brief Converts the output of the SAR to an idealized count value.
1366:Generated_Source\PSoC4/ADC.c **** *
1367:Generated_Source\PSoC4/ADC.c **** * Divides by averaging amount, if needed, and subtracts offset.
1368:Generated_Source\PSoC4/ADC.c **** *
1369:Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number.   
1370:Generated_Source\PSoC4/ADC.c **** *
1371:Generated_Source\PSoC4/ADC.c **** * \param adcCounts Result from the ADC conversion.
1372:Generated_Source\PSoC4/ADC.c **** *
1373:Generated_Source\PSoC4/ADC.c **** * \return Averaged and offset counts.
1374:Generated_Source\PSoC4/ADC.c **** * 
1375:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1376:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1377:Generated_Source\PSoC4/ADC.c **** int16 ADC_RawCounts2Counts(uint32 chan, int16 adcCounts)
1378:Generated_Source\PSoC4/ADC.c **** {
 947              		.loc 1 1378 0
 948              		.cfi_startproc
 949              	.LVL75:
 950 0000 70B5     		push	{r4, r5, r6, lr}
 951              		.cfi_def_cfa_offset 16
 952              		.cfi_offset 4, -16
 953              		.cfi_offset 5, -12
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 43


 954              		.cfi_offset 6, -8
 955              		.cfi_offset 14, -4
 956 0002 0C1C     		mov	r4, r1
1379:Generated_Source\PSoC4/ADC.c ****     uint32 temp;
1380:Generated_Source\PSoC4/ADC.c **** 	uint32 averageAdcSamplesDiv;
1381:Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
1382:Generated_Source\PSoC4/ADC.c **** 	rawChannel = ADC_allConfigs[ADC_currentConfig].channelBase + chan;
 957              		.loc 1 1382 0
 958 0004 0B4B     		ldr	r3, .L80
 959 0006 1968     		ldr	r1, [r3]
 960              	.LVL76:
 961 0008 0B4E     		ldr	r6, .L80+4
 962 000a CA00     		lsl	r2, r1, #3
 963 000c 551A     		sub	r5, r2, r1
 964 000e ED00     		lsl	r5, r5, #3
 965 0010 AD59     		ldr	r5, [r5, r6]
 966 0012 2D18     		add	r5, r5, r0
 967              	.LVL77:
1383:Generated_Source\PSoC4/ADC.c **** 	
1384:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1385:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
 968              		.loc 1 1385 0
 969 0014 531A     		sub	r3, r2, r1
 970 0016 DB00     		lsl	r3, r3, #3
 971 0018 F318     		add	r3, r6, r3
 972 001a 5B68     		ldr	r3, [r3, #4]
 973 001c 8342     		cmp	r3, r0
 974 001e 02D8     		bhi	.L79
 975              		.loc 1 1385 0 is_stmt 0 discriminator 1
 976 0020 0020     		mov	r0, #0
 977              	.LVL78:
 978 0022 FFF7FEFF 		bl	CyHalt
 979              	.LVL79:
 980              	.L79:
1386:Generated_Source\PSoC4/ADC.c **** 
1387:Generated_Source\PSoC4/ADC.c ****     /* Divide the adcCount when accumulate averaging mode selected */
1388:Generated_Source\PSoC4/ADC.c ****     /* If Average mode != fixed */
1389:Generated_Source\PSoC4/ADC.c **** 	if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
1390:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK) 
1391:Generated_Source\PSoC4/ADC.c **** 		!= ADC_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK)
1392:Generated_Source\PSoC4/ADC.c **** 	{
1393:Generated_Source\PSoC4/ADC.c ****         /* If Channel uses averaging */
1394:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[rawChannel] & ADC_SAR_CHAN_CONFIG_AVG_EN_MSK) != 0u)
1395:Generated_Source\PSoC4/ADC.c ****         {
1396:Generated_Source\PSoC4/ADC.c ****             /* Divide by 2^(AVG_CNT + 1) */
1397:Generated_Source\PSoC4/ADC.c **** 			averageAdcSamplesDiv = ((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
1398:Generated_Source\PSoC4/ADC.c **** 				& ADC_SAR_SAMPLE_CTRL_AVG_CNT_MSK) 
1399:Generated_Source\PSoC4/ADC.c **** 				>> ADC_SAR_SAMPLE_CTRL_AVG_CNT_SHFT);
1400:Generated_Source\PSoC4/ADC.c ****             averageAdcSamplesDiv = (1uL << (averageAdcSamplesDiv + 1uL));
1401:Generated_Source\PSoC4/ADC.c ****                         /* When it's "Sequential, Sum", divider limit is 16 */
1402:Generated_Source\PSoC4/ADC.c ****             /* If Mode is ACCUNDUMP */
1403:Generated_Source\PSoC4/ADC.c ****             if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
1404:Generated_Source\PSoC4/ADC.c ****     			& ADC_SAR_SAMPLE_CTRL_AVG_MODE_MSK) 
1405:Generated_Source\PSoC4/ADC.c ****     			!= ADC_SAR_SAMPLE_CTRL_AVG_MODE_MSK)
1406:Generated_Source\PSoC4/ADC.c ****     		{
1407:Generated_Source\PSoC4/ADC.c ****                 if (averageAdcSamplesDiv > 16uL)
1408:Generated_Source\PSoC4/ADC.c ****                 {
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 44


1409:Generated_Source\PSoC4/ADC.c ****                     averageAdcSamplesDiv = 16uL;
1410:Generated_Source\PSoC4/ADC.c ****                 }
1411:Generated_Source\PSoC4/ADC.c ****             }
1412:Generated_Source\PSoC4/ADC.c ****             /* If unsigned format, prevent sign extension */
1413:Generated_Source\PSoC4/ADC.c ****             if(0 == ADC_IsChannelSigned(chan))
1414:Generated_Source\PSoC4/ADC.c ****             {
1415:Generated_Source\PSoC4/ADC.c **** 				temp = ((uint16) adcCounts / averageAdcSamplesDiv);
1416:Generated_Source\PSoC4/ADC.c ****                 adcCounts = (int16) temp;
1417:Generated_Source\PSoC4/ADC.c ****             }
1418:Generated_Source\PSoC4/ADC.c ****             else
1419:Generated_Source\PSoC4/ADC.c ****             {
1420:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= (int16) averageAdcSamplesDiv;
1421:Generated_Source\PSoC4/ADC.c ****             }
1422:Generated_Source\PSoC4/ADC.c ****         }
1423:Generated_Source\PSoC4/ADC.c ****     }
1424:Generated_Source\PSoC4/ADC.c ****     /* Subtract ADC offset */
1425:Generated_Source\PSoC4/ADC.c ****     adcCounts -= ADC_offset[rawChannel];
 981              		.loc 1 1425 0 is_stmt 1
 982 0026 6D00     		lsl	r5, r5, #1
 983              	.LVL80:
 984 0028 044B     		ldr	r3, .L80+8
 985 002a E85A     		ldrh	r0, [r5, r3]
 986 002c 201A     		sub	r0, r4, r0
 987 002e 00B2     		sxth	r0, r0
 988              	.LVL81:
1426:Generated_Source\PSoC4/ADC.c ****     return adcCounts;
1427:Generated_Source\PSoC4/ADC.c **** }
 989              		.loc 1 1427 0
 990              		@ sp needed
 991 0030 70BD     		pop	{r4, r5, r6, pc}
 992              	.L81:
 993 0032 C046     		.align	2
 994              	.L80:
 995 0034 00000000 		.word	.LANCHOR0
 996 0038 00000000 		.word	ADC_allConfigs
 997 003c 00000000 		.word	ADC_offset
 998              		.cfi_endproc
 999              	.LFE21:
 1000              		.size	ADC_RawCounts2Counts, .-ADC_RawCounts2Counts
 1001              		.global	__aeabi_i2f
 1002              		.global	__aeabi_fmul
 1003              		.global	__aeabi_fdiv
 1004              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1005              		.align	2
 1006              		.global	ADC_CountsTo_Volts
 1007              		.code	16
 1008              		.thumb_func
 1009              		.type	ADC_CountsTo_Volts, %function
 1010              	ADC_CountsTo_Volts:
 1011              	.LFB22:
1428:Generated_Source\PSoC4/ADC.c **** 
1429:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1430:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_CountsTo_Volts
1431:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1432:Generated_Source\PSoC4/ADC.c **** *
1433:Generated_Source\PSoC4/ADC.c **** * \brief Converts the ADC output to Volts as a float32. For example, if the ADC 
1434:Generated_Source\PSoC4/ADC.c **** * measured 0.534 volts, the return value would be 0.534.
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 45


1435:Generated_Source\PSoC4/ADC.c **** * The calculation of voltage depends on the contents of ADC_offset[],
1436:Generated_Source\PSoC4/ADC.c **** * ADC_countsPer10Volt[], and other parameters.  The equation used is:
1437:Generated_Source\PSoC4/ADC.c **** * 
1438:Generated_Source\PSoC4/ADC.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1439:Generated_Source\PSoC4/ADC.c **** * -Counts = Raw Counts from SAR register
1440:Generated_Source\PSoC4/ADC.c **** * -AvgDivider = divider based on averaging mode
1441:Generated_Source\PSoC4/ADC.c **** *     -Sequential, Sum: AvgDivider = number averaged
1442:Generated_Source\PSoC4/ADC.c **** *         Note: The divider should be a maximum of 16. If using more averages, 
1443:Generated_Source\PSoC4/ADC.c **** *         pre-scale Counts by (number averaged / 16)
1444:Generated_Source\PSoC4/ADC.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1445:Generated_Source\PSoC4/ADC.c **** *     -Sequential, Fixed: AvgDivider = 1
1446:Generated_Source\PSoC4/ADC.c **** * -Offset = ADC_offset[]
1447:Generated_Source\PSoC4/ADC.c **** * -TEN_VOLT = 10V constant and unit scalar.
1448:Generated_Source\PSoC4/ADC.c **** * -Gain = ADC_countsPer10Volt[]
1449:Generated_Source\PSoC4/ADC.c **** * 
1450:Generated_Source\PSoC4/ADC.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1451:Generated_Source\PSoC4/ADC.c **** * in the System tab of the DWR.
1452:Generated_Source\PSoC4/ADC.c **** *
1453:Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number.   
1454:Generated_Source\PSoC4/ADC.c **** *
1455:Generated_Source\PSoC4/ADC.c **** * \param adcCounts Result from the ADC conversion.
1456:Generated_Source\PSoC4/ADC.c **** *
1457:Generated_Source\PSoC4/ADC.c **** * \return Result in Volts.
1458:Generated_Source\PSoC4/ADC.c **** * 
1459:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1460:Generated_Source\PSoC4/ADC.c **** *
1461:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1462:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_CountsTo_Volts
1463:Generated_Source\PSoC4/ADC.c **** *
1464:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1465:Generated_Source\PSoC4/ADC.c **** float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
1466:Generated_Source\PSoC4/ADC.c **** {   
 1012              		.loc 1 1466 0
 1013              		.cfi_startproc
 1014              	.LVL82:
 1015 0000 70B5     		push	{r4, r5, r6, lr}
 1016              		.cfi_def_cfa_offset 16
 1017              		.cfi_offset 4, -16
 1018              		.cfi_offset 5, -12
 1019              		.cfi_offset 6, -8
 1020              		.cfi_offset 14, -4
 1021              	.LVL83:
1467:Generated_Source\PSoC4/ADC.c ****     float32 result_Volts = 0.0f;
1468:Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
1469:Generated_Source\PSoC4/ADC.c **** 	rawChannel = ADC_allConfigs[ADC_currentConfig].channelBase + chan;
 1022              		.loc 1 1469 0
 1023 0002 114B     		ldr	r3, .L85
 1024 0004 1D68     		ldr	r5, [r3]
 1025 0006 114E     		ldr	r6, .L85+4
 1026 0008 EA00     		lsl	r2, r5, #3
 1027 000a 541B     		sub	r4, r2, r5
 1028 000c E400     		lsl	r4, r4, #3
 1029 000e A459     		ldr	r4, [r4, r6]
 1030 0010 2418     		add	r4, r4, r0
 1031              	.LVL84:
1470:Generated_Source\PSoC4/ADC.c **** 	
1471:Generated_Source\PSoC4/ADC.c **** 	if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 46


 1032              		.loc 1 1471 0
 1033 0012 531B     		sub	r3, r2, r5
 1034 0014 DB00     		lsl	r3, r3, #3
 1035 0016 F318     		add	r3, r6, r3
 1036 0018 DB68     		ldr	r3, [r3, #12]
 1037 001a 9B07     		lsl	r3, r3, #30
 1038 001c 11D4     		bmi	.L84
1472:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK) 
1473:Generated_Source\PSoC4/ADC.c **** 		!= ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1474:Generated_Source\PSoC4/ADC.c **** 	{
1475:Generated_Source\PSoC4/ADC.c ****         adcCounts = ADC_RawCounts2Counts(chan, adcCounts);
 1039              		.loc 1 1475 0
 1040 001e FFF7FEFF 		bl	ADC_RawCounts2Counts
 1041              	.LVL85:
1476:Generated_Source\PSoC4/ADC.c **** 
1477:Generated_Source\PSoC4/ADC.c ****         result_Volts = ((float32)adcCounts * ADC_10V_COUNTS) 
 1042              		.loc 1 1477 0
 1043 0022 FFF7FEFF 		bl	__aeabi_i2f
 1044              	.LVL86:
 1045 0026 0A49     		ldr	r1, .L85+8
 1046 0028 FFF7FEFF 		bl	__aeabi_fmul
 1047              	.LVL87:
 1048 002c 051C     		add	r5, r0, #0
1478:Generated_Source\PSoC4/ADC.c **** 			/ (float32)ADC_countsPer10Volt[rawChannel];
 1049              		.loc 1 1478 0
 1050 002e A400     		lsl	r4, r4, #2
 1051              	.LVL88:
 1052 0030 084B     		ldr	r3, .L85+12
 1053 0032 E058     		ldr	r0, [r4, r3]
 1054 0034 FFF7FEFF 		bl	__aeabi_i2f
 1055              	.LVL89:
 1056 0038 011C     		add	r1, r0, #0
1477:Generated_Source\PSoC4/ADC.c **** 			/ (float32)ADC_countsPer10Volt[rawChannel];
 1057              		.loc 1 1477 0
 1058 003a 281C     		add	r0, r5, #0
 1059 003c FFF7FEFF 		bl	__aeabi_fdiv
 1060              	.LVL90:
 1061 0040 00E0     		b	.L83
 1062              	.LVL91:
 1063              	.L84:
1467:Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
 1064              		.loc 1 1467 0
 1065 0042 0020     		mov	r0, #0
 1066              	.LVL92:
 1067              	.L83:
1479:Generated_Source\PSoC4/ADC.c **** 	}
1480:Generated_Source\PSoC4/ADC.c **** 	return result_Volts;
1481:Generated_Source\PSoC4/ADC.c **** }
 1068              		.loc 1 1481 0
 1069              		@ sp needed
 1070 0044 70BD     		pop	{r4, r5, r6, pc}
 1071              	.L86:
 1072 0046 C046     		.align	2
 1073              	.L85:
 1074 0048 00000000 		.word	.LANCHOR0
 1075 004c 00000000 		.word	ADC_allConfigs
 1076 0050 00002041 		.word	1092616192
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 47


 1077 0054 00000000 		.word	ADC_countsPer10Volt
 1078              		.cfi_endproc
 1079              	.LFE22:
 1080              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1081              		.global	__aeabi_idiv
 1082              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 1083              		.align	2
 1084              		.global	ADC_CountsTo_mVolts
 1085              		.code	16
 1086              		.thumb_func
 1087              		.type	ADC_CountsTo_mVolts, %function
 1088              	ADC_CountsTo_mVolts:
 1089              	.LFB23:
1482:Generated_Source\PSoC4/ADC.c **** 
1483:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1484:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_CountsTo_mVolts
1485:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1486:Generated_Source\PSoC4/ADC.c **** *
1487:Generated_Source\PSoC4/ADC.c **** * \brief Converts the ADC output to millivolts as an int16. For example, if the ADC 
1488:Generated_Source\PSoC4/ADC.c **** * measured 0.534 volts, the return value would be 534.
1489:Generated_Source\PSoC4/ADC.c **** * The calculation of voltage depends on the contents of ADC_offset[],
1490:Generated_Source\PSoC4/ADC.c **** * ADC_countsPer10Volt[], and other parameters.  The equation used is:
1491:Generated_Source\PSoC4/ADC.c **** * 
1492:Generated_Source\PSoC4/ADC.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1493:Generated_Source\PSoC4/ADC.c **** * -Counts = Raw Counts from SAR register
1494:Generated_Source\PSoC4/ADC.c **** * -AvgDivider = divider based on averaging mode
1495:Generated_Source\PSoC4/ADC.c **** *     -Sequential, Sum: AvgDivider = number averaged
1496:Generated_Source\PSoC4/ADC.c **** *         Note: The divider should be a maximum of 16. If using more averages, 
1497:Generated_Source\PSoC4/ADC.c **** *         pre-scale Counts by (number averaged / 16)
1498:Generated_Source\PSoC4/ADC.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1499:Generated_Source\PSoC4/ADC.c **** *     -Sequential, Fixed: AvgDivider = 1
1500:Generated_Source\PSoC4/ADC.c **** * -Offset = ADC_offset[]
1501:Generated_Source\PSoC4/ADC.c **** * -TEN_VOLT = 10V constant and unit scalar.
1502:Generated_Source\PSoC4/ADC.c **** * -Gain = ADC_countsPer10Volt[]
1503:Generated_Source\PSoC4/ADC.c **** * 
1504:Generated_Source\PSoC4/ADC.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1505:Generated_Source\PSoC4/ADC.c **** * in the System tab of the DWR.
1506:Generated_Source\PSoC4/ADC.c **** *
1507:Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number. 
1508:Generated_Source\PSoC4/ADC.c **** *
1509:Generated_Source\PSoC4/ADC.c **** * \param adcCounts Result from the ADC conversion.
1510:Generated_Source\PSoC4/ADC.c **** * 
1511:Generated_Source\PSoC4/ADC.c **** * \return Result in mV.
1512:Generated_Source\PSoC4/ADC.c **** * 
1513:Generated_Source\PSoC4/ADC.c **** * \sideeffect None.
1514:Generated_Source\PSoC4/ADC.c **** *
1515:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1516:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_CountsTo_mVolts
1517:Generated_Source\PSoC4/ADC.c **** *
1518:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1519:Generated_Source\PSoC4/ADC.c **** int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
1520:Generated_Source\PSoC4/ADC.c **** {   
 1090              		.loc 1 1520 0
 1091              		.cfi_startproc
 1092              	.LVL93:
 1093 0000 70B5     		push	{r4, r5, r6, lr}
 1094              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 48


 1095              		.cfi_offset 4, -16
 1096              		.cfi_offset 5, -12
 1097              		.cfi_offset 6, -8
 1098              		.cfi_offset 14, -4
 1099              	.LVL94:
1521:Generated_Source\PSoC4/ADC.c ****     int16 result_mVolts = 0;
1522:Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
1523:Generated_Source\PSoC4/ADC.c ****     
1524:Generated_Source\PSoC4/ADC.c **** 	rawChannel = ADC_allConfigs[ADC_currentConfig].channelBase + chan;
 1100              		.loc 1 1524 0
 1101 0002 164B     		ldr	r3, .L92
 1102 0004 1D68     		ldr	r5, [r3]
 1103 0006 164E     		ldr	r6, .L92+4
 1104 0008 EA00     		lsl	r2, r5, #3
 1105 000a 541B     		sub	r4, r2, r5
 1106 000c E400     		lsl	r4, r4, #3
 1107 000e A459     		ldr	r4, [r4, r6]
 1108 0010 2418     		add	r4, r4, r0
 1109              	.LVL95:
1525:Generated_Source\PSoC4/ADC.c **** 	
1526:Generated_Source\PSoC4/ADC.c **** 	if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
 1110              		.loc 1 1526 0
 1111 0012 531B     		sub	r3, r2, r5
 1112 0014 DB00     		lsl	r3, r3, #3
 1113 0016 F318     		add	r3, r6, r3
 1114 0018 DB68     		ldr	r3, [r3, #12]
 1115 001a 9B07     		lsl	r3, r3, #30
 1116 001c 1BD4     		bmi	.L91
1527:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK) 
1528:Generated_Source\PSoC4/ADC.c **** 		!= ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1529:Generated_Source\PSoC4/ADC.c **** 	{
1530:Generated_Source\PSoC4/ADC.c ****         adcCounts = ADC_RawCounts2Counts(chan, adcCounts);
 1117              		.loc 1 1530 0
 1118 001e FFF7FEFF 		bl	ADC_RawCounts2Counts
 1119              	.LVL96:
1531:Generated_Source\PSoC4/ADC.c **** 
1532:Generated_Source\PSoC4/ADC.c **** 	    result_mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ? 
 1120              		.loc 1 1532 0
 1121 0022 1049     		ldr	r1, .L92+8
 1122 0024 4143     		mul	r1, r0
1533:Generated_Source\PSoC4/ADC.c **** 	             (ADC_countsPer10Volt[rawChannel] / 2) 
1534:Generated_Source\PSoC4/ADC.c **** 				: (-(ADC_countsPer10Volt[rawChannel] / 2)) )) 
 1123              		.loc 1 1534 0
 1124 0026 0028     		cmp	r0, #0
 1125 0028 06DD     		ble	.L89
1533:Generated_Source\PSoC4/ADC.c **** 	             (ADC_countsPer10Volt[rawChannel] / 2) 
 1126              		.loc 1 1533 0 discriminator 1
 1127 002a A300     		lsl	r3, r4, #2
 1128 002c 0E4A     		ldr	r2, .L92+12
 1129 002e 9B58     		ldr	r3, [r3, r2]
 1130              		.loc 1 1534 0 discriminator 1
 1131 0030 D80F     		lsr	r0, r3, #31
 1132              	.LVL97:
 1133 0032 C318     		add	r3, r0, r3
 1134 0034 5B10     		asr	r3, r3, #1
 1135 0036 06E0     		b	.L90
 1136              	.LVL98:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 49


 1137              	.L89:
 1138              		.loc 1 1534 0 is_stmt 0 discriminator 2
 1139 0038 A300     		lsl	r3, r4, #2
 1140 003a 0B4A     		ldr	r2, .L92+12
 1141 003c 9A58     		ldr	r2, [r3, r2]
 1142 003e D30F     		lsr	r3, r2, #31
 1143 0040 9A18     		add	r2, r3, r2
 1144 0042 5210     		asr	r2, r2, #1
 1145 0044 5342     		neg	r3, r2
 1146              	.LVL99:
 1147              	.L90:
1532:Generated_Source\PSoC4/ADC.c **** 	             (ADC_countsPer10Volt[rawChannel] / 2) 
 1148              		.loc 1 1532 0 is_stmt 1
 1149 0046 C818     		add	r0, r1, r3
1535:Generated_Source\PSoC4/ADC.c **** 	             / ADC_countsPer10Volt[rawChannel]);
 1150              		.loc 1 1535 0
 1151 0048 A400     		lsl	r4, r4, #2
 1152              	.LVL100:
 1153 004a 074B     		ldr	r3, .L92+12
 1154 004c E158     		ldr	r1, [r4, r3]
 1155 004e FFF7FEFF 		bl	__aeabi_idiv
 1156              	.LVL101:
1532:Generated_Source\PSoC4/ADC.c **** 	             (ADC_countsPer10Volt[rawChannel] / 2) 
 1157              		.loc 1 1532 0
 1158 0052 80B2     		uxth	r0, r0
 1159              	.LVL102:
 1160 0054 00E0     		b	.L88
 1161              	.LVL103:
 1162              	.L91:
1521:Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
 1163              		.loc 1 1521 0
 1164 0056 0020     		mov	r0, #0
 1165              	.LVL104:
 1166              	.L88:
1536:Generated_Source\PSoC4/ADC.c **** 	}
1537:Generated_Source\PSoC4/ADC.c ****     return result_mVolts;
 1167              		.loc 1 1537 0
 1168 0058 00B2     		sxth	r0, r0
1538:Generated_Source\PSoC4/ADC.c **** }
 1169              		.loc 1 1538 0
 1170              		@ sp needed
 1171              	.LVL105:
 1172 005a 70BD     		pop	{r4, r5, r6, pc}
 1173              	.L93:
 1174              		.align	2
 1175              	.L92:
 1176 005c 00000000 		.word	.LANCHOR0
 1177 0060 00000000 		.word	ADC_allConfigs
 1178 0064 10270000 		.word	10000
 1179 0068 00000000 		.word	ADC_countsPer10Volt
 1180              		.cfi_endproc
 1181              	.LFE23:
 1182              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1183              		.global	__aeabi_lmul
 1184              		.global	__aeabi_ldivmod
 1185              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1186              		.align	2
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 50


 1187              		.global	ADC_CountsTo_uVolts
 1188              		.code	16
 1189              		.thumb_func
 1190              		.type	ADC_CountsTo_uVolts, %function
 1191              	ADC_CountsTo_uVolts:
 1192              	.LFB24:
1539:Generated_Source\PSoC4/ADC.c **** 
1540:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1541:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_CountsTo_uVolts
1542:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1543:Generated_Source\PSoC4/ADC.c **** *
1544:Generated_Source\PSoC4/ADC.c **** * \brief Converts the ADC output to microvolts as an int32. For example, if the ADC 
1545:Generated_Source\PSoC4/ADC.c **** * measured 0.534 volts, the return value would be 534000.
1546:Generated_Source\PSoC4/ADC.c **** * The calculation of voltage depends on the contents of ADC_offset[],
1547:Generated_Source\PSoC4/ADC.c **** * ADC_countsPer10Volt[], and other parameters.  The equation used is:
1548:Generated_Source\PSoC4/ADC.c **** * 
1549:Generated_Source\PSoC4/ADC.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1550:Generated_Source\PSoC4/ADC.c **** * -Counts = Raw Counts from SAR register
1551:Generated_Source\PSoC4/ADC.c **** * -AvgDivider = divider based on averaging mode
1552:Generated_Source\PSoC4/ADC.c **** *     -Sequential, Sum: AvgDivider = number averaged
1553:Generated_Source\PSoC4/ADC.c **** *         Note: The divider should be a maximum of 16. If using more averages, 
1554:Generated_Source\PSoC4/ADC.c **** *         pre-scale Counts by (number averaged / 16)
1555:Generated_Source\PSoC4/ADC.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1556:Generated_Source\PSoC4/ADC.c **** *     -Sequential, Fixed: AvgDivider = 1
1557:Generated_Source\PSoC4/ADC.c **** * -Offset = ADC_offset[]
1558:Generated_Source\PSoC4/ADC.c **** * -TEN_VOLT = 10V constant and unit scalar.
1559:Generated_Source\PSoC4/ADC.c **** * -Gain = ADC_countsPer10Volt[]
1560:Generated_Source\PSoC4/ADC.c **** * 
1561:Generated_Source\PSoC4/ADC.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1562:Generated_Source\PSoC4/ADC.c **** * in the System tab of the DWR.
1563:Generated_Source\PSoC4/ADC.c **** *
1564:Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number.   
1565:Generated_Source\PSoC4/ADC.c **** *
1566:Generated_Source\PSoC4/ADC.c **** * \param adcCounts Result from the ADC conversion.
1567:Generated_Source\PSoC4/ADC.c **** *
1568:Generated_Source\PSoC4/ADC.c **** * \return Result in microvolts.
1569:Generated_Source\PSoC4/ADC.c **** * 
1570:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1571:Generated_Source\PSoC4/ADC.c **** *
1572:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1573:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_CountsTo_uVolts
1574:Generated_Source\PSoC4/ADC.c **** *
1575:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1576:Generated_Source\PSoC4/ADC.c **** int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
1577:Generated_Source\PSoC4/ADC.c **** {   
 1193              		.loc 1 1577 0
 1194              		.cfi_startproc
 1195              	.LVL106:
 1196 0000 70B5     		push	{r4, r5, r6, lr}
 1197              		.cfi_def_cfa_offset 16
 1198              		.cfi_offset 4, -16
 1199              		.cfi_offset 5, -12
 1200              		.cfi_offset 6, -8
 1201              		.cfi_offset 14, -4
 1202              	.LVL107:
1578:Generated_Source\PSoC4/ADC.c ****     int64 result_uVolts = 0;
1579:Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 51


1580:Generated_Source\PSoC4/ADC.c **** 	rawChannel = ADC_allConfigs[ADC_currentConfig].channelBase + chan;
 1203              		.loc 1 1580 0
 1204 0002 0F4B     		ldr	r3, .L97
 1205 0004 1D68     		ldr	r5, [r3]
 1206 0006 0F4E     		ldr	r6, .L97+4
 1207 0008 EA00     		lsl	r2, r5, #3
 1208 000a 541B     		sub	r4, r2, r5
 1209 000c E400     		lsl	r4, r4, #3
 1210 000e A459     		ldr	r4, [r4, r6]
 1211 0010 2418     		add	r4, r4, r0
 1212              	.LVL108:
1581:Generated_Source\PSoC4/ADC.c **** 
1582:Generated_Source\PSoC4/ADC.c **** 	if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
 1213              		.loc 1 1582 0
 1214 0012 531B     		sub	r3, r2, r5
 1215 0014 DB00     		lsl	r3, r3, #3
 1216 0016 F318     		add	r3, r6, r3
 1217 0018 DB68     		ldr	r3, [r3, #12]
 1218 001a 9B07     		lsl	r3, r3, #30
 1219 001c 0DD4     		bmi	.L96
1583:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK) 
1584:Generated_Source\PSoC4/ADC.c **** 		!= ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1585:Generated_Source\PSoC4/ADC.c **** 	{
1586:Generated_Source\PSoC4/ADC.c ****         adcCounts = ADC_RawCounts2Counts(chan, adcCounts);
 1220              		.loc 1 1586 0
 1221 001e FFF7FEFF 		bl	ADC_RawCounts2Counts
 1222              	.LVL109:
1587:Generated_Source\PSoC4/ADC.c **** 
1588:Generated_Source\PSoC4/ADC.c ****         result_uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) 
 1223              		.loc 1 1588 0
 1224 0022 C117     		asr	r1, r0, #31
 1225 0024 084A     		ldr	r2, .L97+8
 1226 0026 0023     		mov	r3, #0
 1227 0028 FFF7FEFF 		bl	__aeabi_lmul
 1228              	.LVL110:
1589:Generated_Source\PSoC4/ADC.c **** 			/ ADC_countsPer10Volt[rawChannel];
 1229              		.loc 1 1589 0
 1230 002c A400     		lsl	r4, r4, #2
 1231              	.LVL111:
 1232 002e 074B     		ldr	r3, .L97+12
 1233 0030 E258     		ldr	r2, [r4, r3]
 1234 0032 D317     		asr	r3, r2, #31
1588:Generated_Source\PSoC4/ADC.c **** 			/ ADC_countsPer10Volt[rawChannel];
 1235              		.loc 1 1588 0
 1236 0034 FFF7FEFF 		bl	__aeabi_ldivmod
 1237              	.LVL112:
 1238 0038 00E0     		b	.L95
 1239              	.LVL113:
 1240              	.L96:
1578:Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
 1241              		.loc 1 1578 0
 1242 003a 0020     		mov	r0, #0
 1243              	.LVL114:
 1244              	.L95:
1590:Generated_Source\PSoC4/ADC.c **** 	}
1591:Generated_Source\PSoC4/ADC.c **** 	return ( (int32)result_uVolts );
1592:Generated_Source\PSoC4/ADC.c **** }
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 52


 1245              		.loc 1 1592 0
 1246              		@ sp needed
 1247              	.LVL115:
 1248 003c 70BD     		pop	{r4, r5, r6, pc}
 1249              	.L98:
 1250 003e C046     		.align	2
 1251              	.L97:
 1252 0040 00000000 		.word	.LANCHOR0
 1253 0044 00000000 		.word	ADC_allConfigs
 1254 0048 80969800 		.word	10000000
 1255 004c 00000000 		.word	ADC_countsPer10Volt
 1256              		.cfi_endproc
 1257              	.LFE24:
 1258              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1259              		.section	.text.ADC_Init,"ax",%progbits
 1260              		.align	2
 1261              		.global	ADC_Init
 1262              		.code	16
 1263              		.thumb_func
 1264              		.type	ADC_Init, %function
 1265              	ADC_Init:
 1266              	.LFB25:
1593:Generated_Source\PSoC4/ADC.c **** 
1594:Generated_Source\PSoC4/ADC.c **** #if(0u != ADC_ANY_CONFIG_USES_FILTER)
1595:Generated_Source\PSoC4/ADC.c ****     
1596:Generated_Source\PSoC4/ADC.c ****     /* ****************************************************************************
1597:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_TrimFilterVos
1598:Generated_Source\PSoC4/ADC.c ****     ****************************************************************************//*
1599:Generated_Source\PSoC4/ADC.c ****     *
1600:Generated_Source\PSoC4/ADC.c ****     * \brief Runs an algorithm to reduce voltage offset using the UAB's opamp trim.
1601:Generated_Source\PSoC4/ADC.c ****     *
1602:Generated_Source\PSoC4/ADC.c ****     * \param None
1603:Generated_Source\PSoC4/ADC.c ****     * 
1604:Generated_Source\PSoC4/ADC.c ****     * \return None
1605:Generated_Source\PSoC4/ADC.c ****     *
1606:Generated_Source\PSoC4/ADC.c ****     * \sideeffect None
1607:Generated_Source\PSoC4/ADC.c ****     *
1608:Generated_Source\PSoC4/ADC.c ****     * <b>Code Snippet</b>
1609:Generated_Source\PSoC4/ADC.c ****     *  \snippet main.c snippet_ADC_TrimFilterVos
1610:Generated_Source\PSoC4/ADC.c ****     *
1611:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
1612:Generated_Source\PSoC4/ADC.c ****     void ADC_TrimFilterVos(void)
1613:Generated_Source\PSoC4/ADC.c ****     {
1614:Generated_Source\PSoC4/ADC.c ****         uint32 opampTrim = 0uL;
1615:Generated_Source\PSoC4/ADC.c ****         uint32 agndTrim = 0uL;
1616:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus = 0uL;
1617:Generated_Source\PSoC4/ADC.c ****         
1618:Generated_Source\PSoC4/ADC.c ****         ADC_SetupComparatorTrim();
1619:Generated_Source\PSoC4/ADC.c ****         
1620:Generated_Source\PSoC4/ADC.c ****         /* Sweep from center to crossing */
1621:Generated_Source\PSoC4/ADC.c ****         compStatus = ADC_SetOpampAndAgndTrim(ADC_OPAMP_TRIM_POS_BASE, ADC_AGND_TRIM_POS_BASE);
1622:Generated_Source\PSoC4/ADC.c ****         if (0uL == compStatus)
1623:Generated_Source\PSoC4/ADC.c ****         {
1624:Generated_Source\PSoC4/ADC.c ****             opampTrim = ADC_RaiseOpampTrimToCrossing(ADC_OPAMP_TRIM_POS_BASE);
1625:Generated_Source\PSoC4/ADC.c ****             agndTrim = ADC_RaiseAgndTrimToCrossing(ADC_AGND_TRIM_POS_BASE);
1626:Generated_Source\PSoC4/ADC.c ****             if ((agndTrim == (ADC_AGND_TRIM_POS_LIMIT - 1uL))
1627:Generated_Source\PSoC4/ADC.c ****                 && (opampTrim != (ADC_OPAMP_TRIM_POS_LIMIT - 1uL)))
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 53


1628:Generated_Source\PSoC4/ADC.c ****             {
1629:Generated_Source\PSoC4/ADC.c ****                 opampTrim = ADC_IncOpampTrim(opampTrim);
1630:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_SetOpampAndAgndTrim(opampTrim, ADC_AGND_TRIM_POS_BASE);
1631:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_LowerAgndTrimToCrossing(ADC_AGND_TRIM_POS_BASE);
1632:Generated_Source\PSoC4/ADC.c ****             }
1633:Generated_Source\PSoC4/ADC.c ****         }
1634:Generated_Source\PSoC4/ADC.c ****         else
1635:Generated_Source\PSoC4/ADC.c ****         {
1636:Generated_Source\PSoC4/ADC.c ****             opampTrim = ADC_LowerOpampTrimToCrossing(ADC_OPAMP_TRIM_POS_BASE);
1637:Generated_Source\PSoC4/ADC.c ****             agndTrim = ADC_LowerAgndTrimToCrossing(ADC_AGND_TRIM_POS_BASE);
1638:Generated_Source\PSoC4/ADC.c ****             if ((agndTrim == (ADC_AGND_TRIM_NEG_LIMIT - 1uL))
1639:Generated_Source\PSoC4/ADC.c ****                 && (opampTrim != (ADC_OPAMP_TRIM_NEG_LIMIT - 1uL)))
1640:Generated_Source\PSoC4/ADC.c ****             {
1641:Generated_Source\PSoC4/ADC.c ****                 opampTrim = ADC_DecOpampTrim(opampTrim);
1642:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_SetOpampAndAgndTrim(opampTrim, ADC_AGND_TRIM_POS_BASE);
1643:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_RaiseAgndTrimToCrossing(ADC_AGND_TRIM_POS_BASE);
1644:Generated_Source\PSoC4/ADC.c ****             }
1645:Generated_Source\PSoC4/ADC.c ****         }
1646:Generated_Source\PSoC4/ADC.c ****         
1647:Generated_Source\PSoC4/ADC.c ****         ADC_UndoComparatorTrimSetup();
1648:Generated_Source\PSoC4/ADC.c ****     }
1649:Generated_Source\PSoC4/ADC.c ****     
1650:Generated_Source\PSoC4/ADC.c ****     
1651:Generated_Source\PSoC4/ADC.c ****     static void ADC_SetupComparatorTrim(void)
1652:Generated_Source\PSoC4/ADC.c ****     {
1653:Generated_Source\PSoC4/ADC.c ****         /* Set firmware modbit. */
1654:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_A_CAP_ABCF_VAL_REG |= (0x1uL << CyUAB_SIGN_VAL_SHIFT);
1655:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_CAP_ABCF_VAL_REG |= (0x1uL << CyUAB_SIGN_VAL_SHIFT);
1656:Generated_Source\PSoC4/ADC.c ****         
1657:Generated_Source\PSoC4/ADC.c ****         /* Open filter output switch to isolate filter during trim. */
1658:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_CF_BOT_REG &= ~(uint32)(ADC_UABH_B_SW_PO_MASK);
1659:Generated_Source\PSoC4/ADC.c ****         
1660:Generated_Source\PSoC4/ADC.c ****         /* Power on the UAB half B reference buffer. */
1661:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_OA_CTRL_REG |= (uint32)ADC_UABH_B_REF_PWR_MASK;
1662:Generated_Source\PSoC4/ADC.c ****         
1663:Generated_Source\PSoC4/ADC.c ****         /* Connect the UAB half B reference buffer to the comparator. */
1664:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_STATIC_REG |= (uint32)ADC_UABH_B_SW_RT_MASK;
1665:Generated_Source\PSoC4/ADC.c ****                         
1666:Generated_Source\PSoC4/ADC.c ****         /* Clock the UAB half B comparator with phi1. */
1667:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_OTHER_REG &= ~(uint32)ADC_UABH_B_CMP_FF_MASK;
1668:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_OTHER_REG |= (uint32)((uint32)CyUAB_CLK_PHI1 << ADC_UABH_B_CMP_FF_SHIFT);
1669:Generated_Source\PSoC4/ADC.c ****         
1670:Generated_Source\PSoC4/ADC.c ****         /* Power on the UAB half B comparator. */
1671:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_OA_CTRL_REG |= (uint32)ADC_UABH_B_CMP_PWR_MASK;
1672:Generated_Source\PSoC4/ADC.c ****     }
1673:Generated_Source\PSoC4/ADC.c ****     
1674:Generated_Source\PSoC4/ADC.c ****     
1675:Generated_Source\PSoC4/ADC.c ****     static void ADC_UndoComparatorTrimSetup(void)
1676:Generated_Source\PSoC4/ADC.c ****     {
1677:Generated_Source\PSoC4/ADC.c ****         /* Power off the UAB half B comparator. */
1678:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_OA_CTRL_REG &= ~(uint32)ADC_UABH_B_CMP_PWR_MASK;
1679:Generated_Source\PSoC4/ADC.c ****         
1680:Generated_Source\PSoC4/ADC.c ****         /* Remove clock from the UAB half B comparator. */
1681:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_OTHER_REG &= ~(uint32)ADC_UABH_B_CMP_FF_MASK;
1682:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_OTHER_REG |= (uint32)((uint32)CyUAB_SW_OPEN << ADC_UABH_B_CMP_FF_SHIFT);
1683:Generated_Source\PSoC4/ADC.c ****         
1684:Generated_Source\PSoC4/ADC.c ****         /* Disconnect the UAB half B reference buffer from the comparator. */
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 54


1685:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_STATIC_REG &= ~(uint32)ADC_UABH_B_SW_RT_MASK;
1686:Generated_Source\PSoC4/ADC.c ****                         
1687:Generated_Source\PSoC4/ADC.c ****         /* Power off the UAB half B reference buffer. */
1688:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_OA_CTRL_REG &= ~(uint32)ADC_UABH_B_REF_PWR_MASK;
1689:Generated_Source\PSoC4/ADC.c ****         
1690:Generated_Source\PSoC4/ADC.c ****         /* Close filter output switch to connect filter to AROUTE. */
1691:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_CF_BOT_REG &= ~(uint32)(ADC_UABH_B_SW_PO_MASK);
1692:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_CF_BOT_REG |= (uint32)((uint32)CyUAB_CLK_PHI3 << ADC_UABH_B_SW_PO_SHIFT);
1693:Generated_Source\PSoC4/ADC.c ****         
1694:Generated_Source\PSoC4/ADC.c ****         /* Clear the modbit */
1695:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_A_CAP_ABCF_VAL_REG &= ~(0x1uL << CyUAB_SIGN_VAL_SHIFT);
1696:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_CAP_ABCF_VAL_REG &= ~(0x1uL << CyUAB_SIGN_VAL_SHIFT);
1697:Generated_Source\PSoC4/ADC.c ****     }
1698:Generated_Source\PSoC4/ADC.c ****     
1699:Generated_Source\PSoC4/ADC.c ****     
1700:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_RaiseOpampTrimToCrossing(uint32 startTrim)
1701:Generated_Source\PSoC4/ADC.c ****     {
1702:Generated_Source\PSoC4/ADC.c ****         uint32 opampTrim;
1703:Generated_Source\PSoC4/ADC.c ****         uint32 lastOpampTrim;
1704:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus;
1705:Generated_Source\PSoC4/ADC.c **** 
1706:Generated_Source\PSoC4/ADC.c ****         lastOpampTrim = startTrim;
1707:Generated_Source\PSoC4/ADC.c ****         for (opampTrim = startTrim;
1708:Generated_Source\PSoC4/ADC.c ****             opampTrim != ADC_OPAMP_TRIM_NEG_LIMIT;
1709:Generated_Source\PSoC4/ADC.c ****             opampTrim = ADC_IncOpampTrim(opampTrim))
1710:Generated_Source\PSoC4/ADC.c ****         {
1711:Generated_Source\PSoC4/ADC.c ****             compStatus = ADC_SetOpampAndAgndTrim(opampTrim, ADC_AGND_TRIM_POS_BASE);
1712:Generated_Source\PSoC4/ADC.c ****             if (0uL != compStatus)
1713:Generated_Source\PSoC4/ADC.c ****             {
1714:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_SetOpampTrim(lastOpampTrim);
1715:Generated_Source\PSoC4/ADC.c ****                 break;
1716:Generated_Source\PSoC4/ADC.c ****             }
1717:Generated_Source\PSoC4/ADC.c ****             lastOpampTrim = opampTrim;
1718:Generated_Source\PSoC4/ADC.c ****         }
1719:Generated_Source\PSoC4/ADC.c ****         
1720:Generated_Source\PSoC4/ADC.c ****         return lastOpampTrim;
1721:Generated_Source\PSoC4/ADC.c ****     }
1722:Generated_Source\PSoC4/ADC.c **** 
1723:Generated_Source\PSoC4/ADC.c **** 
1724:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_LowerOpampTrimToCrossing(uint32 startTrim)
1725:Generated_Source\PSoC4/ADC.c ****     {
1726:Generated_Source\PSoC4/ADC.c ****         uint32 opampTrim;
1727:Generated_Source\PSoC4/ADC.c ****         uint32 lastOpampTrim;
1728:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus;
1729:Generated_Source\PSoC4/ADC.c **** 
1730:Generated_Source\PSoC4/ADC.c ****         lastOpampTrim = startTrim;
1731:Generated_Source\PSoC4/ADC.c ****         for (opampTrim = startTrim;
1732:Generated_Source\PSoC4/ADC.c ****             opampTrim != ADC_OPAMP_TRIM_NEG_LIMIT;
1733:Generated_Source\PSoC4/ADC.c ****             opampTrim = ADC_DecOpampTrim(opampTrim))
1734:Generated_Source\PSoC4/ADC.c ****         {
1735:Generated_Source\PSoC4/ADC.c ****             compStatus = ADC_SetOpampAndAgndTrim(opampTrim, ADC_AGND_TRIM_POS_BASE);
1736:Generated_Source\PSoC4/ADC.c ****             if (0uL == compStatus)
1737:Generated_Source\PSoC4/ADC.c ****             {
1738:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_SetOpampTrim(lastOpampTrim);
1739:Generated_Source\PSoC4/ADC.c ****                 break;
1740:Generated_Source\PSoC4/ADC.c ****             }
1741:Generated_Source\PSoC4/ADC.c ****             lastOpampTrim = opampTrim;
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 55


1742:Generated_Source\PSoC4/ADC.c ****         }
1743:Generated_Source\PSoC4/ADC.c ****         
1744:Generated_Source\PSoC4/ADC.c ****         return lastOpampTrim;
1745:Generated_Source\PSoC4/ADC.c ****     }
1746:Generated_Source\PSoC4/ADC.c **** 
1747:Generated_Source\PSoC4/ADC.c **** 
1748:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_RaiseAgndTrimToCrossing(uint32 startTrim)
1749:Generated_Source\PSoC4/ADC.c ****     {
1750:Generated_Source\PSoC4/ADC.c ****         uint32 agndTrim;
1751:Generated_Source\PSoC4/ADC.c ****         uint32 lastAgndTrim;
1752:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus;
1753:Generated_Source\PSoC4/ADC.c **** 
1754:Generated_Source\PSoC4/ADC.c ****         lastAgndTrim = startTrim;
1755:Generated_Source\PSoC4/ADC.c ****         for (agndTrim = startTrim;
1756:Generated_Source\PSoC4/ADC.c ****             agndTrim != ADC_AGND_TRIM_NEG_LIMIT;
1757:Generated_Source\PSoC4/ADC.c ****             agndTrim = ADC_IncAgndTrim(agndTrim))
1758:Generated_Source\PSoC4/ADC.c ****         {
1759:Generated_Source\PSoC4/ADC.c ****             compStatus = ADC_SetAgndTrim(agndTrim);
1760:Generated_Source\PSoC4/ADC.c ****             if (0uL != compStatus)
1761:Generated_Source\PSoC4/ADC.c ****             {
1762:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_SetAgndTrim(lastAgndTrim); 
1763:Generated_Source\PSoC4/ADC.c ****                 break;
1764:Generated_Source\PSoC4/ADC.c ****             }
1765:Generated_Source\PSoC4/ADC.c ****             lastAgndTrim = agndTrim;
1766:Generated_Source\PSoC4/ADC.c ****         }
1767:Generated_Source\PSoC4/ADC.c ****         
1768:Generated_Source\PSoC4/ADC.c ****         return lastAgndTrim;
1769:Generated_Source\PSoC4/ADC.c ****     }
1770:Generated_Source\PSoC4/ADC.c ****     
1771:Generated_Source\PSoC4/ADC.c ****     
1772:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_LowerAgndTrimToCrossing(uint32 startTrim)
1773:Generated_Source\PSoC4/ADC.c ****     {
1774:Generated_Source\PSoC4/ADC.c ****         uint32 agndTrim = startTrim;
1775:Generated_Source\PSoC4/ADC.c ****         uint32 lastAgndTrim = agndTrim;
1776:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus = 1uL;
1777:Generated_Source\PSoC4/ADC.c **** 
1778:Generated_Source\PSoC4/ADC.c ****         lastAgndTrim = startTrim;
1779:Generated_Source\PSoC4/ADC.c ****         for (agndTrim = startTrim;
1780:Generated_Source\PSoC4/ADC.c ****             agndTrim != ADC_AGND_TRIM_NEG_LIMIT;
1781:Generated_Source\PSoC4/ADC.c ****             agndTrim = ADC_DecAgndTrim(agndTrim))
1782:Generated_Source\PSoC4/ADC.c ****         {
1783:Generated_Source\PSoC4/ADC.c ****             compStatus = ADC_SetAgndTrim(agndTrim);
1784:Generated_Source\PSoC4/ADC.c ****             if (0uL == compStatus)
1785:Generated_Source\PSoC4/ADC.c ****             {
1786:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_SetAgndTrim(lastAgndTrim); 
1787:Generated_Source\PSoC4/ADC.c ****                 break;
1788:Generated_Source\PSoC4/ADC.c ****             }
1789:Generated_Source\PSoC4/ADC.c ****             lastAgndTrim = agndTrim;
1790:Generated_Source\PSoC4/ADC.c ****         }
1791:Generated_Source\PSoC4/ADC.c ****         
1792:Generated_Source\PSoC4/ADC.c ****         return lastAgndTrim;
1793:Generated_Source\PSoC4/ADC.c ****     }
1794:Generated_Source\PSoC4/ADC.c ****     
1795:Generated_Source\PSoC4/ADC.c ****     
1796:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_SetOpampAndAgndTrim(uint32 opampTrim, uint32 agndTrim)
1797:Generated_Source\PSoC4/ADC.c ****     {
1798:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus = 0uL;
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 56


1799:Generated_Source\PSoC4/ADC.c ****  
1800:Generated_Source\PSoC4/ADC.c ****         uint32 trimRegVal = ADC_UABH_A_OA_TRIM_REG;
1801:Generated_Source\PSoC4/ADC.c ****         trimRegVal &= ~(ADC_OPAMP_TRIM_MASK << CyUAB_OA_OFFSET_SHIFT);
1802:Generated_Source\PSoC4/ADC.c ****         trimRegVal |= (opampTrim << CyUAB_OA_OFFSET_SHIFT);
1803:Generated_Source\PSoC4/ADC.c ****         trimRegVal &= ~(ADC_AGND_TRIM_MASK << CyUAB_AGND_OFFSET_SHIFT);
1804:Generated_Source\PSoC4/ADC.c ****         trimRegVal |= (agndTrim << CyUAB_AGND_OFFSET_SHIFT);
1805:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_A_OA_TRIM_REG = trimRegVal;
1806:Generated_Source\PSoC4/ADC.c ****         
1807:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(100u);
1808:Generated_Source\PSoC4/ADC.c ****         
1809:Generated_Source\PSoC4/ADC.c ****         compStatus = ADC_UABH_B_STAT_REG & ADC_UABH_B_COMP_MASK;
1810:Generated_Source\PSoC4/ADC.c ****         
1811:Generated_Source\PSoC4/ADC.c ****         return compStatus;
1812:Generated_Source\PSoC4/ADC.c ****     }
1813:Generated_Source\PSoC4/ADC.c ****     
1814:Generated_Source\PSoC4/ADC.c ****     
1815:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_SetOpampTrim(uint32 opampTrim)
1816:Generated_Source\PSoC4/ADC.c ****     {
1817:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus = 0uL;
1818:Generated_Source\PSoC4/ADC.c ****  
1819:Generated_Source\PSoC4/ADC.c ****         uint32 trimRegVal = ADC_UABH_A_OA_TRIM_REG;
1820:Generated_Source\PSoC4/ADC.c ****         trimRegVal &= ~(ADC_OPAMP_TRIM_MASK << CyUAB_OA_OFFSET_SHIFT);
1821:Generated_Source\PSoC4/ADC.c ****         trimRegVal |= (opampTrim << CyUAB_OA_OFFSET_SHIFT);
1822:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_A_OA_TRIM_REG = trimRegVal;
1823:Generated_Source\PSoC4/ADC.c ****         
1824:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(100u);
1825:Generated_Source\PSoC4/ADC.c ****         
1826:Generated_Source\PSoC4/ADC.c ****         compStatus = ADC_UABH_B_STAT_REG & ADC_UABH_B_COMP_MASK;
1827:Generated_Source\PSoC4/ADC.c ****         
1828:Generated_Source\PSoC4/ADC.c ****         return compStatus;
1829:Generated_Source\PSoC4/ADC.c ****     }
1830:Generated_Source\PSoC4/ADC.c ****     
1831:Generated_Source\PSoC4/ADC.c ****     
1832:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_SetAgndTrim(uint32 agndTrim)
1833:Generated_Source\PSoC4/ADC.c ****     {
1834:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus = 0uL;
1835:Generated_Source\PSoC4/ADC.c ****  
1836:Generated_Source\PSoC4/ADC.c ****         uint32 trimRegVal = ADC_UABH_A_OA_TRIM_REG;
1837:Generated_Source\PSoC4/ADC.c ****         trimRegVal &= ~(ADC_AGND_TRIM_MASK << CyUAB_AGND_OFFSET_SHIFT);
1838:Generated_Source\PSoC4/ADC.c ****         trimRegVal |= (agndTrim << CyUAB_AGND_OFFSET_SHIFT);
1839:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_A_OA_TRIM_REG = trimRegVal;
1840:Generated_Source\PSoC4/ADC.c ****         
1841:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(100u);
1842:Generated_Source\PSoC4/ADC.c ****         
1843:Generated_Source\PSoC4/ADC.c ****         compStatus = ADC_UABH_B_STAT_REG & ADC_UABH_B_COMP_MASK;
1844:Generated_Source\PSoC4/ADC.c ****         
1845:Generated_Source\PSoC4/ADC.c ****         return compStatus;
1846:Generated_Source\PSoC4/ADC.c ****     }
1847:Generated_Source\PSoC4/ADC.c ****     
1848:Generated_Source\PSoC4/ADC.c ****     /* Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE. */
1849:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_IncOpampTrim(uint32 trim)
1850:Generated_Source\PSoC4/ADC.c ****     {
1851:Generated_Source\PSoC4/ADC.c ****         
1852:Generated_Source\PSoC4/ADC.c ****         if (trim < (ADC_OPAMP_TRIM_POS_LIMIT - 1uL))
1853:Generated_Source\PSoC4/ADC.c ****         {
1854:Generated_Source\PSoC4/ADC.c ****             trim = trim + 1uL;
1855:Generated_Source\PSoC4/ADC.c ****         }
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 57


1856:Generated_Source\PSoC4/ADC.c ****         else if ((ADC_OPAMP_TRIM_POS_LIMIT - 1uL) == trim)
1857:Generated_Source\PSoC4/ADC.c ****         {
1858:Generated_Source\PSoC4/ADC.c ****             trim = ADC_OPAMP_TRIM_NEG_LIMIT;
1859:Generated_Source\PSoC4/ADC.c ****         }
1860:Generated_Source\PSoC4/ADC.c ****         else if (trim <= (ADC_OPAMP_TRIM_NEG_BASE + 1uL))
1861:Generated_Source\PSoC4/ADC.c ****         {
1862:Generated_Source\PSoC4/ADC.c ****             trim = ADC_OPAMP_TRIM_POS_BASE;
1863:Generated_Source\PSoC4/ADC.c ****         }
1864:Generated_Source\PSoC4/ADC.c ****         else
1865:Generated_Source\PSoC4/ADC.c ****         {
1866:Generated_Source\PSoC4/ADC.c ****             trim = trim - 1uL;
1867:Generated_Source\PSoC4/ADC.c ****         }
1868:Generated_Source\PSoC4/ADC.c ****         
1869:Generated_Source\PSoC4/ADC.c ****         return trim;
1870:Generated_Source\PSoC4/ADC.c ****     }
1871:Generated_Source\PSoC4/ADC.c **** 
1872:Generated_Source\PSoC4/ADC.c **** 
1873:Generated_Source\PSoC4/ADC.c ****     /* Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE. */
1874:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_DecOpampTrim(uint32 trim)
1875:Generated_Source\PSoC4/ADC.c ****     {
1876:Generated_Source\PSoC4/ADC.c ****         
1877:Generated_Source\PSoC4/ADC.c ****         if (ADC_OPAMP_TRIM_POS_BASE == trim)
1878:Generated_Source\PSoC4/ADC.c ****         {
1879:Generated_Source\PSoC4/ADC.c ****             trim = ADC_OPAMP_TRIM_NEG_BASE + 1uL;
1880:Generated_Source\PSoC4/ADC.c ****         }
1881:Generated_Source\PSoC4/ADC.c ****         else if (trim < ADC_OPAMP_TRIM_POS_LIMIT)
1882:Generated_Source\PSoC4/ADC.c ****         {
1883:Generated_Source\PSoC4/ADC.c ****             trim = trim - 1uL;
1884:Generated_Source\PSoC4/ADC.c ****         }
1885:Generated_Source\PSoC4/ADC.c ****         else if (trim < ADC_OPAMP_TRIM_NEG_LIMIT)
1886:Generated_Source\PSoC4/ADC.c ****         {
1887:Generated_Source\PSoC4/ADC.c ****             trim = trim + 1uL;
1888:Generated_Source\PSoC4/ADC.c ****         }
1889:Generated_Source\PSoC4/ADC.c ****         else
1890:Generated_Source\PSoC4/ADC.c ****         {
1891:Generated_Source\PSoC4/ADC.c ****             trim = ADC_OPAMP_TRIM_POS_LIMIT - 1uL;
1892:Generated_Source\PSoC4/ADC.c ****         }
1893:Generated_Source\PSoC4/ADC.c ****         
1894:Generated_Source\PSoC4/ADC.c ****         return trim;
1895:Generated_Source\PSoC4/ADC.c ****     }
1896:Generated_Source\PSoC4/ADC.c **** 
1897:Generated_Source\PSoC4/ADC.c **** 
1898:Generated_Source\PSoC4/ADC.c ****     /* Skips AGND_TRIM_NEG_BASE because it is the same as POS_BASE. */
1899:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_IncAgndTrim(uint32 trim)
1900:Generated_Source\PSoC4/ADC.c ****     {
1901:Generated_Source\PSoC4/ADC.c ****         
1902:Generated_Source\PSoC4/ADC.c ****         if (trim < (ADC_AGND_TRIM_POS_LIMIT - 1uL))
1903:Generated_Source\PSoC4/ADC.c ****         {
1904:Generated_Source\PSoC4/ADC.c ****             trim = trim + 1uL;
1905:Generated_Source\PSoC4/ADC.c ****         }
1906:Generated_Source\PSoC4/ADC.c ****         else if ((ADC_AGND_TRIM_POS_LIMIT - 1uL) == trim)
1907:Generated_Source\PSoC4/ADC.c ****         {
1908:Generated_Source\PSoC4/ADC.c ****             trim = ADC_AGND_TRIM_NEG_LIMIT;
1909:Generated_Source\PSoC4/ADC.c ****         }
1910:Generated_Source\PSoC4/ADC.c ****         else if (trim <= (ADC_AGND_TRIM_NEG_BASE + 1uL))
1911:Generated_Source\PSoC4/ADC.c ****         {
1912:Generated_Source\PSoC4/ADC.c ****             trim = ADC_AGND_TRIM_POS_BASE;
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 58


1913:Generated_Source\PSoC4/ADC.c ****         }
1914:Generated_Source\PSoC4/ADC.c ****         else
1915:Generated_Source\PSoC4/ADC.c ****         {
1916:Generated_Source\PSoC4/ADC.c ****             trim = trim - 1uL;
1917:Generated_Source\PSoC4/ADC.c ****         }
1918:Generated_Source\PSoC4/ADC.c ****         
1919:Generated_Source\PSoC4/ADC.c ****         return trim;
1920:Generated_Source\PSoC4/ADC.c ****     }
1921:Generated_Source\PSoC4/ADC.c **** 
1922:Generated_Source\PSoC4/ADC.c **** 
1923:Generated_Source\PSoC4/ADC.c ****     /* Skips ADC_AGND_TRIM_NEG_BASE because it is the same as POS_BASE. */
1924:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_DecAgndTrim(uint32 trim)
1925:Generated_Source\PSoC4/ADC.c ****     {
1926:Generated_Source\PSoC4/ADC.c ****         
1927:Generated_Source\PSoC4/ADC.c ****         if (trim == ADC_AGND_TRIM_POS_BASE)
1928:Generated_Source\PSoC4/ADC.c ****         {
1929:Generated_Source\PSoC4/ADC.c ****             trim = ADC_AGND_TRIM_NEG_BASE + 1uL;
1930:Generated_Source\PSoC4/ADC.c ****         }
1931:Generated_Source\PSoC4/ADC.c ****         else if (trim < ADC_AGND_TRIM_POS_LIMIT)
1932:Generated_Source\PSoC4/ADC.c ****         {
1933:Generated_Source\PSoC4/ADC.c ****             trim = trim - 1uL;
1934:Generated_Source\PSoC4/ADC.c ****         }
1935:Generated_Source\PSoC4/ADC.c ****         else if (trim < ADC_AGND_TRIM_NEG_LIMIT)
1936:Generated_Source\PSoC4/ADC.c ****         {
1937:Generated_Source\PSoC4/ADC.c ****             trim = trim + 1uL;
1938:Generated_Source\PSoC4/ADC.c ****         }
1939:Generated_Source\PSoC4/ADC.c ****         else
1940:Generated_Source\PSoC4/ADC.c ****         {
1941:Generated_Source\PSoC4/ADC.c ****             trim = ADC_AGND_TRIM_POS_LIMIT - 1uL;
1942:Generated_Source\PSoC4/ADC.c ****         }
1943:Generated_Source\PSoC4/ADC.c ****         
1944:Generated_Source\PSoC4/ADC.c ****         return trim;
1945:Generated_Source\PSoC4/ADC.c ****     }
1946:Generated_Source\PSoC4/ADC.c **** 
1947:Generated_Source\PSoC4/ADC.c ****     
1948:Generated_Source\PSoC4/ADC.c ****     void ADC_filterInit(uint32 configNum)
1949:Generated_Source\PSoC4/ADC.c ****     {
1950:Generated_Source\PSoC4/ADC.c ****         /* Configure the common filter settings if any configuration filters */
1951:Generated_Source\PSoC4/ADC.c ****         switch (configNum)
1952:Generated_Source\PSoC4/ADC.c ****         {
1953:Generated_Source\PSoC4/ADC.c ****             #if (0u != ADC_CFG0_FILTER_PRESENT)
1954:Generated_Source\PSoC4/ADC.c ****             case 0u:
1955:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_A_Init(&ADC_CFG0_UABH_A_FILTER_config);
1956:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_B_Init(&ADC_CFG0_UABH_B_FILTER_config);
1957:Generated_Source\PSoC4/ADC.c ****                 
1958:Generated_Source\PSoC4/ADC.c ****             break;
1959:Generated_Source\PSoC4/ADC.c ****             #endif
1960:Generated_Source\PSoC4/ADC.c ****             #if (0u != ADC_CFG1_FILTER_PRESENT)
1961:Generated_Source\PSoC4/ADC.c ****             case 1u:
1962:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_A_Init(&ADC_CFG1_UABH_A_FILTER_config);
1963:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_B_Init(&ADC_CFG1_UABH_B_FILTER_config);
1964:Generated_Source\PSoC4/ADC.c ****                 
1965:Generated_Source\PSoC4/ADC.c ****             break;
1966:Generated_Source\PSoC4/ADC.c ****             #endif
1967:Generated_Source\PSoC4/ADC.c ****             #if (0u != ADC_CFG2_FILTER_PRESENT)
1968:Generated_Source\PSoC4/ADC.c ****             case 2u:
1969:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_A_Init(&ADC_CFG2_UABH_A_FILTER_config);
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 59


1970:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_B_Init(&ADC_CFG2_UABH_B_FILTER_config);
1971:Generated_Source\PSoC4/ADC.c ****                 
1972:Generated_Source\PSoC4/ADC.c ****             break;
1973:Generated_Source\PSoC4/ADC.c ****             #endif
1974:Generated_Source\PSoC4/ADC.c ****             #if (0u != ADC_CFG3_FILTER_PRESENT)
1975:Generated_Source\PSoC4/ADC.c ****             case 3u:
1976:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_A_Init(&ADC_CFG3_UABH_A_FILTER_config);
1977:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_B_Init(&ADC_CFG3_UABH_B_FILTER_config);
1978:Generated_Source\PSoC4/ADC.c ****                 
1979:Generated_Source\PSoC4/ADC.c ****             break;
1980:Generated_Source\PSoC4/ADC.c ****             #endif
1981:Generated_Source\PSoC4/ADC.c ****             default:
1982:Generated_Source\PSoC4/ADC.c ****             break;
1983:Generated_Source\PSoC4/ADC.c ****         }
1984:Generated_Source\PSoC4/ADC.c ****         ADC_FILTERAGND2SAR_BUFFER_Init();
1985:Generated_Source\PSoC4/ADC.c ****     }
1986:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_ANY_CONFIG_USES_FILTER != 0u */
1987:Generated_Source\PSoC4/ADC.c **** 
1988:Generated_Source\PSoC4/ADC.c **** 
1989:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
1990:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
1991:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
1992:Generated_Source\PSoC4/ADC.c **** *
1993:Generated_Source\PSoC4/ADC.c **** * \brief Initialize the component according to parameters defined in the 
1994:Generated_Source\PSoC4/ADC.c **** * customizer.
1995:Generated_Source\PSoC4/ADC.c **** *
1996:Generated_Source\PSoC4/ADC.c **** * \param None
1997:Generated_Source\PSoC4/ADC.c **** * 
1998:Generated_Source\PSoC4/ADC.c **** * \return None
1999:Generated_Source\PSoC4/ADC.c **** *
2000:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
2001:Generated_Source\PSoC4/ADC.c **** *
2002:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
2003:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_Init
2004:Generated_Source\PSoC4/ADC.c **** *
2005:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
2006:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
2007:Generated_Source\PSoC4/ADC.c **** {
 1267              		.loc 1 2007 0
 1268              		.cfi_startproc
 1269 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1270              		.cfi_def_cfa_offset 20
 1271              		.cfi_offset 4, -20
 1272              		.cfi_offset 5, -16
 1273              		.cfi_offset 6, -12
 1274              		.cfi_offset 7, -8
 1275              		.cfi_offset 14, -4
 1276 0002 4746     		mov	r7, r8
 1277 0004 80B4     		push	{r7}
 1278              		.cfi_def_cfa_offset 24
 1279              		.cfi_offset 8, -24
 1280              	.LVL116:
2008:Generated_Source\PSoC4/ADC.c **** 	uint32 chNum = 0ul;
2009:Generated_Source\PSoC4/ADC.c **** 	uint32 configNum = 0u;
2010:Generated_Source\PSoC4/ADC.c **** 	int32 counts;
2011:Generated_Source\PSoC4/ADC.c **** 	
2012:Generated_Source\PSoC4/ADC.c **** 	if(0u == ADC_initVar)
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 60


 1281              		.loc 1 2012 0
 1282 0006 214B     		ldr	r3, .L105
 1283 0008 1B79     		ldrb	r3, [r3, #4]
 1284 000a 002B     		cmp	r3, #0
 1285 000c 20D0     		beq	.L104
 1286 000e 39E0     		b	.L99
 1287              	.LVL117:
 1288              	.L103:
2013:Generated_Source\PSoC4/ADC.c **** 	{
2014:Generated_Source\PSoC4/ADC.c **** 		/* Set offset and countsPer10Volt for all channels */
2015:Generated_Source\PSoC4/ADC.c **** 		for(chNum = 0ul; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
2016:Generated_Source\PSoC4/ADC.c **** 		{      
2017:Generated_Source\PSoC4/ADC.c **** 			if((ADC_channelsConfig[chNum] & ADC_SAR_CHAN_CONFIG_RESOLUTION_MSK) != 0u)
2018:Generated_Source\PSoC4/ADC.c ****         	{
2019:Generated_Source\PSoC4/ADC.c **** 				if((ADC_allConfigs[configNum].sampleCtrl 
2020:Generated_Source\PSoC4/ADC.c **** 					& ADC_SAR_SAMPLE_CTRL_SUB_RESOLUTION_MSK) 
2021:Generated_Source\PSoC4/ADC.c **** 					== ADC_SUB_RESOLUTION_10B)
2022:Generated_Source\PSoC4/ADC.c **** 				{
2023:Generated_Source\PSoC4/ADC.c **** 					counts = (int32) ADC_SAR_WRK_MAX_10BIT;
2024:Generated_Source\PSoC4/ADC.c **** 				}
2025:Generated_Source\PSoC4/ADC.c **** 				else
2026:Generated_Source\PSoC4/ADC.c **** 				{
2027:Generated_Source\PSoC4/ADC.c **** 					counts = (int32) ADC_SAR_WRK_MAX_8BIT;
2028:Generated_Source\PSoC4/ADC.c **** 				}
2029:Generated_Source\PSoC4/ADC.c ****         	}
2030:Generated_Source\PSoC4/ADC.c ****         	else
2031:Generated_Source\PSoC4/ADC.c ****         	{
2032:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
2033:Generated_Source\PSoC4/ADC.c ****         	}
2034:Generated_Source\PSoC4/ADC.c **** 			
2035:Generated_Source\PSoC4/ADC.c **** 			/* Single Ended Channel */
2036:Generated_Source\PSoC4/ADC.c **** 			if((ADC_channelsConfig[chNum] & ADC_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK) == 0u)
2037:Generated_Source\PSoC4/ADC.c ****         	{
2038:Generated_Source\PSoC4/ADC.c **** 				if(((ADC_allConfigs[configNum].sampleCtrl 
2039:Generated_Source\PSoC4/ADC.c **** 					& ADC_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) 
2040:Generated_Source\PSoC4/ADC.c **** 					== ADC_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) && 
2041:Generated_Source\PSoC4/ADC.c **** 					((ADC_allConfigs[configNum].ctrl & ADC_SAR_CTRL_NEG_SEL_MSK) 
2042:Generated_Source\PSoC4/ADC.c **** 					== ADC_NEG_VREF_SHIFTED))
2043:Generated_Source\PSoC4/ADC.c **** 				{
2044:Generated_Source\PSoC4/ADC.c **** 					/* Set offset to the minus half scale to convert results to unsigned format */
2045:Generated_Source\PSoC4/ADC.c ****                 	ADC_offset[chNum] = (int16)(counts / -2);		
2046:Generated_Source\PSoC4/ADC.c ****             	}
2047:Generated_Source\PSoC4/ADC.c **** 				else
2048:Generated_Source\PSoC4/ADC.c **** 				{
2049:Generated_Source\PSoC4/ADC.c ****                 	ADC_offset[chNum] = 0;	
2050:Generated_Source\PSoC4/ADC.c **** 				}
2051:Generated_Source\PSoC4/ADC.c **** 				
2052:Generated_Source\PSoC4/ADC.c **** 			}
2053:Generated_Source\PSoC4/ADC.c **** 			else    /* Differential channel */
2054:Generated_Source\PSoC4/ADC.c ****         	{
2055:Generated_Source\PSoC4/ADC.c ****                	ADC_offset[chNum] = 0; 
 1289              		.loc 1 2055 0
 1290 0010 6300     		lsl	r3, r4, #1
 1291 0012 0021     		mov	r1, #0
 1292 0014 1E4A     		ldr	r2, .L105+4
 1293 0016 9952     		strh	r1, [r3, r2]
2056:Generated_Source\PSoC4/ADC.c **** 			}
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 61


2057:Generated_Source\PSoC4/ADC.c ****             
2058:Generated_Source\PSoC4/ADC.c **** 			/* Calculate gain in counts per 10 volts with rounding */
2059:Generated_Source\PSoC4/ADC.c ****         	ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) \
2060:Generated_Source\PSoC4/ADC.c ****                             + ADC_allConfigs[configNum].vrefMvValue) \
 1294              		.loc 1 2060 0
 1295 0018 1E4B     		ldr	r3, .L105+8
 1296 001a 9846     		mov	r8, r3
 1297 001c FE00     		lsl	r6, r7, #3
 1298 001e F51B     		sub	r5, r6, r7
 1299 0020 ED00     		lsl	r5, r5, #3
 1300 0022 4544     		add	r5, r5, r8
 1301 0024 E96A     		ldr	r1, [r5, #44]
 1302 0026 1C4B     		ldr	r3, .L105+12
 1303 0028 C818     		add	r0, r1, r3
2061:Generated_Source\PSoC4/ADC.c **** 							/ (ADC_allConfigs[configNum].vrefMvValue * 2));
 1304              		.loc 1 2061 0
 1305 002a 4900     		lsl	r1, r1, #1
 1306 002c FFF7FEFF 		bl	__aeabi_idiv
 1307              	.LVL118:
2059:Generated_Source\PSoC4/ADC.c ****                             + ADC_allConfigs[configNum].vrefMvValue) \
 1308              		.loc 1 2059 0
 1309 0030 00B2     		sxth	r0, r0
 1310 0032 A300     		lsl	r3, r4, #2
 1311 0034 194A     		ldr	r2, .L105+16
 1312 0036 9850     		str	r0, [r3, r2]
2062:Generated_Source\PSoC4/ADC.c ****             
2063:Generated_Source\PSoC4/ADC.c ****             /* Increment configuration number after rolling over to the next configuration*/
2064:Generated_Source\PSoC4/ADC.c **** 			if((ADC_allConfigs[configNum].channelBase
 1313              		.loc 1 2064 0
 1314 0038 F31B     		sub	r3, r6, r7
 1315 003a DB00     		lsl	r3, r3, #3
 1316 003c 4246     		mov	r2, r8
 1317 003e 9A58     		ldr	r2, [r3, r2]
2065:Generated_Source\PSoC4/ADC.c **** 				+ (ADC_allConfigs[configNum].numChannels - 1uL)) == chNum)
 1318              		.loc 1 2065 0
 1319 0040 6B68     		ldr	r3, [r5, #4]
 1320 0042 D318     		add	r3, r2, r3
 1321 0044 013B     		sub	r3, r3, #1
2064:Generated_Source\PSoC4/ADC.c **** 				+ (ADC_allConfigs[configNum].numChannels - 1uL)) == chNum)
 1322              		.loc 1 2064 0
 1323 0046 A342     		cmp	r3, r4
 1324 0048 00D1     		bne	.L102
2066:Generated_Source\PSoC4/ADC.c **** 			{
2067:Generated_Source\PSoC4/ADC.c **** 				configNum++;
 1325              		.loc 1 2067 0
 1326 004a 0137     		add	r7, r7, #1
 1327              	.LVL119:
 1328              	.L102:
2015:Generated_Source\PSoC4/ADC.c **** 		{      
 1329              		.loc 1 2015 0 discriminator 2
 1330 004c 0134     		add	r4, r4, #1
 1331              	.LVL120:
 1332 004e 01E0     		b	.L100
 1333              	.LVL121:
 1334              	.L104:
 1335 0050 0027     		mov	r7, #0
 1336 0052 0024     		mov	r4, #0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 62


 1337              	.LVL122:
 1338              	.L100:
2015:Generated_Source\PSoC4/ADC.c **** 		{      
 1339              		.loc 1 2015 0 is_stmt 0 discriminator 1
 1340 0054 002C     		cmp	r4, #0
 1341 0056 DBD0     		beq	.L103
2068:Generated_Source\PSoC4/ADC.c **** 			}
2069:Generated_Source\PSoC4/ADC.c **** 		} /* for(chNum = 0ul; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++) */
2070:Generated_Source\PSoC4/ADC.c ****         
2071:Generated_Source\PSoC4/ADC.c ****         #if(ADC_IRQ_REMOVE == 0u)
2072:Generated_Source\PSoC4/ADC.c ****             /* Start and set interrupt vector */
2073:Generated_Source\PSoC4/ADC.c ****             CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
 1342              		.loc 1 2073 0 is_stmt 1
 1343 0058 0F20     		mov	r0, #15
 1344 005a 0321     		mov	r1, #3
 1345 005c FFF7FEFF 		bl	CyIntSetPriority
 1346              	.LVL123:
2074:Generated_Source\PSoC4/ADC.c ****             (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
 1347              		.loc 1 2074 0
 1348 0060 0F20     		mov	r0, #15
 1349 0062 0F49     		ldr	r1, .L105+20
 1350 0064 FFF7FEFF 		bl	CyIntSetVector
 1351              	.LVL124:
2075:Generated_Source\PSoC4/ADC.c ****         #endif   /* End ADC_IRQ_REMOVE */
2076:Generated_Source\PSoC4/ADC.c ****         
2077:Generated_Source\PSoC4/ADC.c ****         /* Initialize configuration zero if SelectConfig has not been called */
2078:Generated_Source\PSoC4/ADC.c ****         if(0u == ADC_selected)
 1352              		.loc 1 2078 0
 1353 0068 084B     		ldr	r3, .L105
 1354 006a 5B79     		ldrb	r3, [r3, #5]
 1355 006c 002B     		cmp	r3, #0
 1356 006e 09D1     		bne	.L99
2079:Generated_Source\PSoC4/ADC.c **** 	    {
2080:Generated_Source\PSoC4/ADC.c ****             ADC_selected = 1u;
 1357              		.loc 1 2080 0
 1358 0070 0122     		mov	r2, #1
 1359 0072 064B     		ldr	r3, .L105
 1360 0074 5A71     		strb	r2, [r3, #5]
 1361              	.LVL125:
2081:Generated_Source\PSoC4/ADC.c ****             configNum = 0u;
2082:Generated_Source\PSoC4/ADC.c ****             /* Change Vref selection if is was routed by Creator. Break. */
2083:Generated_Source\PSoC4/ADC.c ****             #if (ADC_VREF_ROUTED)
2084:Generated_Source\PSoC4/ADC.c ****                 ADC_vrefAMux_DisconnectAll();
2085:Generated_Source\PSoC4/ADC.c ****             #endif
2086:Generated_Source\PSoC4/ADC.c ****             ADC_InitConfig(&ADC_allConfigs[configNum]);
 1362              		.loc 1 2086 0
 1363 0076 074C     		ldr	r4, .L105+8
 1364              	.LVL126:
 1365 0078 201C     		mov	r0, r4
 1366 007a FFF7FEFF 		bl	ADC_InitConfig
 1367              	.LVL127:
2087:Generated_Source\PSoC4/ADC.c ****             /* Change Vref selection if is was routed by Creator. Make. */
2088:Generated_Source\PSoC4/ADC.c ****             #if (ADC_VREF_ROUTED)
2089:Generated_Source\PSoC4/ADC.c ****                 ADC_vrefAMux_Select((uint8)configNum);
2090:Generated_Source\PSoC4/ADC.c ****             #endif
2091:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_CHAN_EN_REG = ADC_allConfigs[configNum].chanEn;
 1368              		.loc 1 2091 0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 63


 1369 007e 226A     		ldr	r2, [r4, #32]
 1370 0080 084B     		ldr	r3, .L105+24
 1371 0082 1A60     		str	r2, [r3]
 1372              	.LVL128:
 1373              	.L99:
2092:Generated_Source\PSoC4/ADC.c ****             #if(0u != ADC_ANY_CONFIG_USES_FILTER)	
2093:Generated_Source\PSoC4/ADC.c ****                 ADC_filterVinMux_Select((uint8)configNum);
2094:Generated_Source\PSoC4/ADC.c ****                 ADC_filterInit(configNum);
2095:Generated_Source\PSoC4/ADC.c ****             #endif
2096:Generated_Source\PSoC4/ADC.c ****         }           
2097:Generated_Source\PSoC4/ADC.c **** 	}
2098:Generated_Source\PSoC4/ADC.c ****     return;
2099:Generated_Source\PSoC4/ADC.c **** }
 1374              		.loc 1 2099 0
 1375              		@ sp needed
 1376 0084 04BC     		pop	{r2}
 1377 0086 9046     		mov	r8, r2
 1378 0088 F0BD     		pop	{r4, r5, r6, r7, pc}
 1379              	.L106:
 1380 008a C046     		.align	2
 1381              	.L105:
 1382 008c 00000000 		.word	.LANCHOR0
 1383 0090 00000000 		.word	ADC_offset
 1384 0094 00000000 		.word	ADC_allConfigs
 1385 0098 00007102 		.word	40960000
 1386 009c 00000000 		.word	ADC_countsPer10Volt
 1387 00a0 00000000 		.word	ADC_ISR
 1388 00a4 20003A40 		.word	1077542944
 1389              		.cfi_endproc
 1390              	.LFE25:
 1391              		.size	ADC_Init, .-ADC_Init
 1392              		.section	.text.ADC_Enable,"ax",%progbits
 1393              		.align	2
 1394              		.global	ADC_Enable
 1395              		.code	16
 1396              		.thumb_func
 1397              		.type	ADC_Enable, %function
 1398              	ADC_Enable:
 1399              	.LFB26:
2100:Generated_Source\PSoC4/ADC.c **** 
2101:Generated_Source\PSoC4/ADC.c **** 
2102:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
2103:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Enable
2104:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
2105:Generated_Source\PSoC4/ADC.c **** *
2106:Generated_Source\PSoC4/ADC.c **** * \brief Enables the component. 
2107:Generated_Source\PSoC4/ADC.c **** *
2108:Generated_Source\PSoC4/ADC.c **** * \param None
2109:Generated_Source\PSoC4/ADC.c **** * 
2110:Generated_Source\PSoC4/ADC.c **** * \return None
2111:Generated_Source\PSoC4/ADC.c **** * 
2112:Generated_Source\PSoC4/ADC.c **** * \sideeffect
2113:Generated_Source\PSoC4/ADC.c **** *  None
2114:Generated_Source\PSoC4/ADC.c **** *
2115:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
2116:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_Enable
2117:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 64


2118:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
2119:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void) 
2120:Generated_Source\PSoC4/ADC.c **** {
 1400              		.loc 1 2120 0
 1401              		.cfi_startproc
 1402 0000 08B5     		push	{r3, lr}
 1403              		.cfi_def_cfa_offset 8
 1404              		.cfi_offset 3, -8
 1405              		.cfi_offset 14, -4
2121:Generated_Source\PSoC4/ADC.c **** 
2122:Generated_Source\PSoC4/ADC.c ****     #if(0u != ADC_ANY_CONFIG_USES_FILTER)	
2123:Generated_Source\PSoC4/ADC.c ****     	if((ADC_allConfigs[ADC_currentConfig].miscConfig
2124:Generated_Source\PSoC4/ADC.c ****     		& ADC_MISC_CONFIG_FILTER_PRESENT_MSK)
2125:Generated_Source\PSoC4/ADC.c ****     		== ADC_MISC_CONFIG_FILTER_PRESENT_MSK)
2126:Generated_Source\PSoC4/ADC.c ****     	{
2127:Generated_Source\PSoC4/ADC.c ****             ADC_FILTERAGND2SAR_BUFFER_Enable();
2128:Generated_Source\PSoC4/ADC.c ****     		ADC_UABH_A_Enable();
2129:Generated_Source\PSoC4/ADC.c ****     		ADC_UABH_B_Enable();
2130:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_Run(1u);
2131:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_Run(1u);
2132:Generated_Source\PSoC4/ADC.c ****     	}
2133:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_ANY_CONFIG_USES_FILTER != 0u */
2134:Generated_Source\PSoC4/ADC.c ****         
2135:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_SAR_CTRL_ENABLED_MSK))
 1406              		.loc 1 2135 0
 1407 0002 094B     		ldr	r3, .L110
 1408 0004 1B68     		ldr	r3, [r3]
 1409 0006 002B     		cmp	r3, #0
 1410 0008 0CDB     		blt	.L107
 1411              	.L109:
2136:Generated_Source\PSoC4/ADC.c ****     {
2137:Generated_Source\PSoC4/ADC.c ****         while (0u != (ADC_SAR_STATUS_REG & ADC_BUSY_MSK))
 1412              		.loc 1 2137 0 discriminator 1
 1413 000a 084B     		ldr	r3, .L110+4
 1414 000c 1B68     		ldr	r3, [r3]
 1415 000e 002B     		cmp	r3, #0
 1416 0010 FBDB     		blt	.L109
2138:Generated_Source\PSoC4/ADC.c ****         {
2139:Generated_Source\PSoC4/ADC.c ****             /* wait for SAR to go idle to avoid deadlock */
2140:Generated_Source\PSoC4/ADC.c ****         }
2141:Generated_Source\PSoC4/ADC.c ****         
2142:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_SAR_CTRL_ENABLED_MSK;
 1417              		.loc 1 2142 0
 1418 0012 054A     		ldr	r2, .L110
 1419 0014 1368     		ldr	r3, [r2]
 1420 0016 8021     		mov	r1, #128
 1421 0018 0906     		lsl	r1, r1, #24
 1422 001a 0B43     		orr	r3, r1
 1423 001c 1360     		str	r3, [r2]
2143:Generated_Source\PSoC4/ADC.c ****         
2144:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
2145:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);
 1424              		.loc 1 2145 0
 1425 001e 0A20     		mov	r0, #10
 1426 0020 FFF7FEFF 		bl	CyDelayUs
 1427              	.LVL129:
 1428              	.L107:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 65


2146:Generated_Source\PSoC4/ADC.c ****     }
2147:Generated_Source\PSoC4/ADC.c ****     return;
2148:Generated_Source\PSoC4/ADC.c **** }
 1429              		.loc 1 2148 0
 1430              		@ sp needed
 1431 0024 08BD     		pop	{r3, pc}
 1432              	.L111:
 1433 0026 C046     		.align	2
 1434              	.L110:
 1435 0028 00003A40 		.word	1077542912
 1436 002c A0023A40 		.word	1077543584
 1437              		.cfi_endproc
 1438              	.LFE26:
 1439              		.size	ADC_Enable, .-ADC_Enable
 1440              		.section	.text.ADC_Start,"ax",%progbits
 1441              		.align	2
 1442              		.global	ADC_Start
 1443              		.code	16
 1444              		.thumb_func
 1445              		.type	ADC_Start, %function
 1446              	ADC_Start:
 1447              	.LFB1:
 571:Generated_Source\PSoC4/ADC.c ****     if (ADC_INIT_VAR_INIT_FLAG != (ADC_INIT_VAR_INIT_FLAG & ADC_initVar))
 1448              		.loc 1 571 0
 1449              		.cfi_startproc
 1450 0000 08B5     		push	{r3, lr}
 1451              		.cfi_def_cfa_offset 8
 1452              		.cfi_offset 3, -8
 1453              		.cfi_offset 14, -4
 572:Generated_Source\PSoC4/ADC.c ****     {
 1454              		.loc 1 572 0
 1455 0002 074B     		ldr	r3, .L114
 1456 0004 1B79     		ldrb	r3, [r3, #4]
 1457 0006 DB07     		lsl	r3, r3, #31
 1458 0008 06D4     		bmi	.L113
 574:Generated_Source\PSoC4/ADC.c ****         ADC_initVar |= ADC_INIT_VAR_INIT_FLAG;
 1459              		.loc 1 574 0
 1460 000a FFF7FEFF 		bl	ADC_Init
 1461              	.LVL130:
 575:Generated_Source\PSoC4/ADC.c ****     }
 1462              		.loc 1 575 0
 1463 000e 044A     		ldr	r2, .L114
 1464 0010 1179     		ldrb	r1, [r2, #4]
 1465 0012 0123     		mov	r3, #1
 1466 0014 0B43     		orr	r3, r1
 1467 0016 1371     		strb	r3, [r2, #4]
 1468              	.L113:
 578:Generated_Source\PSoC4/ADC.c ****     
 1469              		.loc 1 578 0
 1470 0018 FFF7FEFF 		bl	ADC_Enable
 1471              	.LVL131:
 581:Generated_Source\PSoC4/ADC.c **** 
 1472              		.loc 1 581 0
 1473              		@ sp needed
 1474 001c 08BD     		pop	{r3, pc}
 1475              	.L115:
 1476 001e C046     		.align	2
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 66


 1477              	.L114:
 1478 0020 00000000 		.word	.LANCHOR0
 1479              		.cfi_endproc
 1480              	.LFE1:
 1481              		.size	ADC_Start, .-ADC_Start
 1482              		.section	.text.ADC_StartEx,"ax",%progbits
 1483              		.align	2
 1484              		.global	ADC_StartEx
 1485              		.code	16
 1486              		.thumb_func
 1487              		.type	ADC_StartEx, %function
 1488              	ADC_StartEx:
 1489              	.LFB2:
 603:Generated_Source\PSoC4/ADC.c ****     ADC_Start();
 1490              		.loc 1 603 0
 1491              		.cfi_startproc
 1492              	.LVL132:
 1493 0000 10B5     		push	{r4, lr}
 1494              		.cfi_def_cfa_offset 8
 1495              		.cfi_offset 4, -8
 1496              		.cfi_offset 14, -4
 1497 0002 041C     		mov	r4, r0
 604:Generated_Source\PSoC4/ADC.c ****     ADC_IRQ_StartEx(address);
 1498              		.loc 1 604 0
 1499 0004 FFF7FEFF 		bl	ADC_Start
 1500              	.LVL133:
 605:Generated_Source\PSoC4/ADC.c ****     return;
 1501              		.loc 1 605 0
 1502 0008 201C     		mov	r0, r4
 1503 000a FFF7FEFF 		bl	ADC_IRQ_StartEx
 1504              	.LVL134:
 607:Generated_Source\PSoC4/ADC.c **** 
 1505              		.loc 1 607 0
 1506              		@ sp needed
 1507              	.LVL135:
 1508 000e 10BD     		pop	{r4, pc}
 1509              		.cfi_endproc
 1510              	.LFE2:
 1511              		.size	ADC_StartEx, .-ADC_StartEx
 1512              		.section	.text.ADC_SelectConfig,"ax",%progbits
 1513              		.align	2
 1514              		.global	ADC_SelectConfig
 1515              		.code	16
 1516              		.thumb_func
 1517              		.type	ADC_SelectConfig, %function
 1518              	ADC_SelectConfig:
 1519              	.LFB5:
 770:Generated_Source\PSoC4/ADC.c ****     /* Check whether the configuration number is valid or not */
 1520              		.loc 1 770 0
 1521              		.cfi_startproc
 1522              	.LVL136:
 1523 0000 70B5     		push	{r4, r5, r6, lr}
 1524              		.cfi_def_cfa_offset 16
 1525              		.cfi_offset 4, -16
 1526              		.cfi_offset 5, -12
 1527              		.cfi_offset 6, -8
 1528              		.cfi_offset 14, -4
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 67


 772:Generated_Source\PSoC4/ADC.c ****     {        
 1529              		.loc 1 772 0
 1530 0002 0028     		cmp	r0, #0
 1531 0004 29D1     		bne	.L117
 1532 0006 0E1C     		mov	r6, r1
 1533 0008 051C     		mov	r5, r0
 775:Generated_Source\PSoC4/ADC.c ****         ADC_selected = 1u;
 1534              		.loc 1 775 0
 1535 000a FFF7FEFF 		bl	ADC_Stop
 1536              	.LVL137:
 776:Generated_Source\PSoC4/ADC.c ****         
 1537              		.loc 1 776 0
 1538 000e 134B     		ldr	r3, .L120
 1539 0010 0122     		mov	r2, #1
 1540 0012 5A71     		strb	r2, [r3, #5]
 778:Generated_Source\PSoC4/ADC.c ****     	{
 1541              		.loc 1 778 0
 1542 0014 1B79     		ldrb	r3, [r3, #4]
 1543 0016 002B     		cmp	r3, #0
 1544 0018 06D1     		bne	.L119
 780:Generated_Source\PSoC4/ADC.c ****             ADC_initVar |= ADC_INIT_VAR_INIT_FLAG;
 1545              		.loc 1 780 0
 1546 001a FFF7FEFF 		bl	ADC_Init
 1547              	.LVL138:
 781:Generated_Source\PSoC4/ADC.c ****     	}
 1548              		.loc 1 781 0
 1549 001e 0F4A     		ldr	r2, .L120
 1550 0020 1179     		ldrb	r1, [r2, #4]
 1551 0022 0123     		mov	r3, #1
 1552 0024 0B43     		orr	r3, r1
 1553 0026 1371     		strb	r3, [r2, #4]
 1554              	.L119:
 786:Generated_Source\PSoC4/ADC.c ****         #if (ADC_VREF_ROUTED)
 1555              		.loc 1 786 0
 1556 0028 EC00     		lsl	r4, r5, #3
 1557 002a 641B     		sub	r4, r4, r5
 1558 002c E400     		lsl	r4, r4, #3
 1559 002e 0C4B     		ldr	r3, .L120+4
 1560 0030 E418     		add	r4, r4, r3
 1561 0032 201C     		mov	r0, r4
 1562 0034 FFF7FEFF 		bl	ADC_InitConfig
 1563              	.LVL139:
 794:Generated_Source\PSoC4/ADC.c ****     	ADC_SAR_RANGE_INTR_MASK_REG = ADC_allConfigs[config].rangeIntMask;
 1564              		.loc 1 794 0
 1565 0038 0A4B     		ldr	r3, .L120+8
 1566 003a 226A     		ldr	r2, [r4, #32]
 1567 003c 1A60     		str	r2, [r3]
 795:Generated_Source\PSoC4/ADC.c ****     	ADC_SAR_SATURATE_INTR_MASK_REG = ADC_allConfigs[config].satIntMask;
 1568              		.loc 1 795 0
 1569 003e 0A4B     		ldr	r3, .L120+12
 1570 0040 626A     		ldr	r2, [r4, #36]
 1571 0042 1A60     		str	r2, [r3]
 796:Generated_Source\PSoC4/ADC.c ****     	ADC_currentConfig = config;
 1572              		.loc 1 796 0
 1573 0044 A26A     		ldr	r2, [r4, #40]
 1574 0046 094B     		ldr	r3, .L120+16
 1575 0048 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 68


 797:Generated_Source\PSoC4/ADC.c ****         
 1576              		.loc 1 797 0
 1577 004a 044B     		ldr	r3, .L120
 1578 004c 1D60     		str	r5, [r3]
 799:Generated_Source\PSoC4/ADC.c ****         {
 1579              		.loc 1 799 0
 1580 004e 012E     		cmp	r6, #1
 1581 0050 03D1     		bne	.L117
 802:Generated_Source\PSoC4/ADC.c ****             
 1582              		.loc 1 802 0
 1583 0052 FFF7FEFF 		bl	ADC_Start
 1584              	.LVL140:
 805:Generated_Source\PSoC4/ADC.c ****         }
 1585              		.loc 1 805 0
 1586 0056 FFF7FEFF 		bl	ADC_StartConvert
 1587              	.LVL141:
 1588              	.L117:
 809:Generated_Source\PSoC4/ADC.c **** 
 1589              		.loc 1 809 0
 1590              		@ sp needed
 1591 005a 70BD     		pop	{r4, r5, r6, pc}
 1592              	.L121:
 1593              		.align	2
 1594              	.L120:
 1595 005c 00000000 		.word	.LANCHOR0
 1596 0060 00000000 		.word	ADC_allConfigs
 1597 0064 20003A40 		.word	1077542944
 1598 0068 38023A40 		.word	1077543480
 1599 006c 28023A40 		.word	1077543464
 1600              		.cfi_endproc
 1601              	.LFE5:
 1602              		.size	ADC_SelectConfig, .-ADC_SelectConfig
 1603              		.section	.text.ADC_StopConvert,"ax",%progbits
 1604              		.align	2
 1605              		.global	ADC_StopConvert
 1606              		.code	16
 1607              		.thumb_func
 1608              		.type	ADC_StopConvert, %function
 1609              	ADC_StopConvert:
 1610              	.LFB7:
 875:Generated_Source\PSoC4/ADC.c ****     if((ADC_SAR_SAMPLE_CTRL_REG  
 1611              		.loc 1 875 0
 1612              		.cfi_startproc
 1613 0000 08B5     		push	{r3, lr}
 1614              		.cfi_def_cfa_offset 8
 1615              		.cfi_offset 3, -8
 1616              		.cfi_offset 14, -4
 876:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK) 
 1617              		.loc 1 876 0
 1618 0002 0C4B     		ldr	r3, .L124
 1619 0004 1B68     		ldr	r3, [r3]
 1620 0006 5B03     		lsl	r3, r3, #13
 1621 0008 12D5     		bpl	.L122
 880:Generated_Source\PSoC4/ADC.c ****         
 1622              		.loc 1 880 0
 1623 000a 0A4A     		ldr	r2, .L124
 1624 000c 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 69


 1625 000e 0A4B     		ldr	r3, .L124+4
 1626 0010 0B40     		and	r3, r1
 1627 0012 1360     		str	r3, [r2]
 882:Generated_Source\PSoC4/ADC.c ****             & ADC_MISC_CONFIG_FILTER_PRESENT_MSK) 
 1628              		.loc 1 882 0
 1629 0014 094B     		ldr	r3, .L124+8
 1630 0016 1A68     		ldr	r2, [r3]
 1631 0018 D300     		lsl	r3, r2, #3
 1632 001a 9B1A     		sub	r3, r3, r2
 1633 001c DB00     		lsl	r3, r3, #3
 1634 001e 084A     		ldr	r2, .L124+12
 1635 0020 D318     		add	r3, r2, r3
 1636 0022 1B6B     		ldr	r3, [r3, #48]
 1637 0024 9B07     		lsl	r3, r3, #30
 1638 0026 03D5     		bpl	.L122
 887:Generated_Source\PSoC4/ADC.c ****             ADC_Start();
 1639              		.loc 1 887 0
 1640 0028 FFF7FEFF 		bl	ADC_Stop
 1641              	.LVL142:
 888:Generated_Source\PSoC4/ADC.c ****         }
 1642              		.loc 1 888 0
 1643 002c FFF7FEFF 		bl	ADC_Start
 1644              	.LVL143:
 1645              	.L122:
 893:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 1646              		.loc 1 893 0
 1647              		@ sp needed
 1648 0030 08BD     		pop	{r3, pc}
 1649              	.L125:
 1650 0032 C046     		.align	2
 1651              	.L124:
 1652 0034 04003A40 		.word	1077542916
 1653 0038 FFFFFEFF 		.word	-65537
 1654 003c 00000000 		.word	.LANCHOR0
 1655 0040 00000000 		.word	ADC_allConfigs
 1656              		.cfi_endproc
 1657              	.LFE7:
 1658              		.size	ADC_StopConvert, .-ADC_StopConvert
 1659              		.comm	ADC_countsPer10Volt,4,4
 1660              		.comm	ADC_offset,2,4
 1661              		.global	ADC_selected
 1662              		.global	ADC_initVar
 1663              		.bss
 1664              		.align	2
 1665              		.set	.LANCHOR0,. + 0
 1666              		.type	ADC_currentConfig, %object
 1667              		.size	ADC_currentConfig, 4
 1668              	ADC_currentConfig:
 1669 0000 00000000 		.space	4
 1670              		.type	ADC_initVar, %object
 1671              		.size	ADC_initVar, 1
 1672              	ADC_initVar:
 1673 0004 00       		.space	1
 1674              		.type	ADC_selected, %object
 1675              		.size	ADC_selected, 1
 1676              	ADC_selected:
 1677 0005 00       		.space	1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 70


 1678 0006 0000     		.text
 1679              	.Letext0:
 1680              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1681              		.file 3 "Generated_Source\\PSoC4\\ADC.h"
 1682              		.file 4 "Generated_Source\\PSoC4\\ADC_intSarClock.h"
 1683              		.file 5 "Generated_Source\\PSoC4\\CyLib.h"
 1684              		.file 6 "Generated_Source\\PSoC4\\ADC_IRQ.h"
 1685              		.section	.debug_info,"",%progbits
 1686              	.Ldebug_info0:
 1687 0000 F9090000 		.4byte	0x9f9
 1688 0004 0400     		.2byte	0x4
 1689 0006 00000000 		.4byte	.Ldebug_abbrev0
 1690 000a 04       		.byte	0x4
 1691 000b 01       		.uleb128 0x1
 1692 000c A9050000 		.4byte	.LASF105
 1693 0010 01       		.byte	0x1
 1694 0011 AD030000 		.4byte	.LASF106
 1695 0015 9F000000 		.4byte	.LASF107
 1696 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1697 001d 00000000 		.4byte	0
 1698 0021 00000000 		.4byte	.Ldebug_line0
 1699 0025 02       		.uleb128 0x2
 1700 0026 01       		.byte	0x1
 1701 0027 06       		.byte	0x6
 1702 0028 33000000 		.4byte	.LASF0
 1703 002c 02       		.uleb128 0x2
 1704 002d 01       		.byte	0x1
 1705 002e 08       		.byte	0x8
 1706 002f 18040000 		.4byte	.LASF1
 1707 0033 02       		.uleb128 0x2
 1708 0034 02       		.byte	0x2
 1709 0035 05       		.byte	0x5
 1710 0036 31040000 		.4byte	.LASF2
 1711 003a 02       		.uleb128 0x2
 1712 003b 02       		.byte	0x2
 1713 003c 07       		.byte	0x7
 1714 003d 6A020000 		.4byte	.LASF3
 1715 0041 02       		.uleb128 0x2
 1716 0042 04       		.byte	0x4
 1717 0043 05       		.byte	0x5
 1718 0044 39010000 		.4byte	.LASF4
 1719 0048 02       		.uleb128 0x2
 1720 0049 04       		.byte	0x4
 1721 004a 07       		.byte	0x7
 1722 004b 2E020000 		.4byte	.LASF5
 1723 004f 02       		.uleb128 0x2
 1724 0050 08       		.byte	0x8
 1725 0051 05       		.byte	0x5
 1726 0052 91000000 		.4byte	.LASF6
 1727 0056 02       		.uleb128 0x2
 1728 0057 08       		.byte	0x8
 1729 0058 07       		.byte	0x7
 1730 0059 69000000 		.4byte	.LASF7
 1731 005d 03       		.uleb128 0x3
 1732 005e 04       		.byte	0x4
 1733 005f 05       		.byte	0x5
 1734 0060 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 71


 1735 0064 02       		.uleb128 0x2
 1736 0065 04       		.byte	0x4
 1737 0066 07       		.byte	0x7
 1738 0067 0A020000 		.4byte	.LASF8
 1739 006b 04       		.uleb128 0x4
 1740 006c 7F010000 		.4byte	.LASF9
 1741 0070 02       		.byte	0x2
 1742 0071 B901     		.2byte	0x1b9
 1743 0073 2C000000 		.4byte	0x2c
 1744 0077 04       		.uleb128 0x4
 1745 0078 00000000 		.4byte	.LASF10
 1746 007c 02       		.byte	0x2
 1747 007d BA01     		.2byte	0x1ba
 1748 007f 3A000000 		.4byte	0x3a
 1749 0083 04       		.uleb128 0x4
 1750 0084 C5010000 		.4byte	.LASF11
 1751 0088 02       		.byte	0x2
 1752 0089 BB01     		.2byte	0x1bb
 1753 008b 48000000 		.4byte	0x48
 1754 008f 04       		.uleb128 0x4
 1755 0090 5B050000 		.4byte	.LASF12
 1756 0094 02       		.byte	0x2
 1757 0095 BD01     		.2byte	0x1bd
 1758 0097 33000000 		.4byte	0x33
 1759 009b 04       		.uleb128 0x4
 1760 009c 13010000 		.4byte	.LASF13
 1761 00a0 02       		.byte	0x2
 1762 00a1 BE01     		.2byte	0x1be
 1763 00a3 41000000 		.4byte	0x41
 1764 00a7 04       		.uleb128 0x4
 1765 00a8 FC020000 		.4byte	.LASF14
 1766 00ac 02       		.byte	0x2
 1767 00ad BF01     		.2byte	0x1bf
 1768 00af B3000000 		.4byte	0xb3
 1769 00b3 02       		.uleb128 0x2
 1770 00b4 04       		.byte	0x4
 1771 00b5 04       		.byte	0x4
 1772 00b6 D6030000 		.4byte	.LASF15
 1773 00ba 02       		.uleb128 0x2
 1774 00bb 08       		.byte	0x8
 1775 00bc 04       		.byte	0x4
 1776 00bd 8F010000 		.4byte	.LASF16
 1777 00c1 04       		.uleb128 0x4
 1778 00c2 86030000 		.4byte	.LASF17
 1779 00c6 02       		.byte	0x2
 1780 00c7 C401     		.2byte	0x1c4
 1781 00c9 4F000000 		.4byte	0x4f
 1782 00cd 02       		.uleb128 0x2
 1783 00ce 01       		.byte	0x1
 1784 00cf 08       		.byte	0x8
 1785 00d0 A1040000 		.4byte	.LASF18
 1786 00d4 04       		.uleb128 0x4
 1787 00d5 D0020000 		.4byte	.LASF19
 1788 00d9 02       		.byte	0x2
 1789 00da 6502     		.2byte	0x265
 1790 00dc E0000000 		.4byte	0xe0
 1791 00e0 05       		.uleb128 0x5
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 72


 1792 00e1 83000000 		.4byte	0x83
 1793 00e5 04       		.uleb128 0x4
 1794 00e6 AB040000 		.4byte	.LASF20
 1795 00ea 02       		.byte	0x2
 1796 00eb 7502     		.2byte	0x275
 1797 00ed F1000000 		.4byte	0xf1
 1798 00f1 06       		.uleb128 0x6
 1799 00f2 04       		.byte	0x4
 1800 00f3 F7000000 		.4byte	0xf7
 1801 00f7 07       		.uleb128 0x7
 1802 00f8 02       		.uleb128 0x2
 1803 00f9 04       		.byte	0x4
 1804 00fa 07       		.byte	0x7
 1805 00fb 04030000 		.4byte	.LASF21
 1806 00ff 08       		.uleb128 0x8
 1807 0100 38       		.byte	0x38
 1808 0101 03       		.byte	0x3
 1809 0102 5E       		.byte	0x5e
 1810 0103 B0010000 		.4byte	0x1b0
 1811 0107 09       		.uleb128 0x9
 1812 0108 8D050000 		.4byte	.LASF22
 1813 010c 03       		.byte	0x3
 1814 010d 60       		.byte	0x60
 1815 010e 83000000 		.4byte	0x83
 1816 0112 00       		.byte	0
 1817 0113 09       		.uleb128 0x9
 1818 0114 B9020000 		.4byte	.LASF23
 1819 0118 03       		.byte	0x3
 1820 0119 61       		.byte	0x61
 1821 011a 83000000 		.4byte	0x83
 1822 011e 04       		.byte	0x4
 1823 011f 09       		.uleb128 0x9
 1824 0120 17050000 		.4byte	.LASF24
 1825 0124 03       		.byte	0x3
 1826 0125 62       		.byte	0x62
 1827 0126 83000000 		.4byte	0x83
 1828 012a 08       		.byte	0x8
 1829 012b 09       		.uleb128 0x9
 1830 012c 50050000 		.4byte	.LASF25
 1831 0130 03       		.byte	0x3
 1832 0131 65       		.byte	0x65
 1833 0132 83000000 		.4byte	0x83
 1834 0136 0C       		.byte	0xc
 1835 0137 09       		.uleb128 0x9
 1836 0138 B8010000 		.4byte	.LASF26
 1837 013c 03       		.byte	0x3
 1838 013d 66       		.byte	0x66
 1839 013e 83000000 		.4byte	0x83
 1840 0142 10       		.byte	0x10
 1841 0143 09       		.uleb128 0x9
 1842 0144 43030000 		.4byte	.LASF27
 1843 0148 03       		.byte	0x3
 1844 0149 67       		.byte	0x67
 1845 014a 83000000 		.4byte	0x83
 1846 014e 14       		.byte	0x14
 1847 014f 09       		.uleb128 0x9
 1848 0150 7D020000 		.4byte	.LASF28
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 73


 1849 0154 03       		.byte	0x3
 1850 0155 68       		.byte	0x68
 1851 0156 83000000 		.4byte	0x83
 1852 015a 18       		.byte	0x18
 1853 015b 09       		.uleb128 0x9
 1854 015c 3B050000 		.4byte	.LASF29
 1855 0160 03       		.byte	0x3
 1856 0161 69       		.byte	0x69
 1857 0162 83000000 		.4byte	0x83
 1858 0166 1C       		.byte	0x1c
 1859 0167 09       		.uleb128 0x9
 1860 0168 FA030000 		.4byte	.LASF30
 1861 016c 03       		.byte	0x3
 1862 016d 6A       		.byte	0x6a
 1863 016e 83000000 		.4byte	0x83
 1864 0172 20       		.byte	0x20
 1865 0173 09       		.uleb128 0x9
 1866 0174 17020000 		.4byte	.LASF31
 1867 0178 03       		.byte	0x3
 1868 0179 6B       		.byte	0x6b
 1869 017a 83000000 		.4byte	0x83
 1870 017e 24       		.byte	0x24
 1871 017f 09       		.uleb128 0x9
 1872 0180 50030000 		.4byte	.LASF32
 1873 0184 03       		.byte	0x3
 1874 0185 6C       		.byte	0x6c
 1875 0186 83000000 		.4byte	0x83
 1876 018a 28       		.byte	0x28
 1877 018b 09       		.uleb128 0x9
 1878 018c 90040000 		.4byte	.LASF33
 1879 0190 03       		.byte	0x3
 1880 0191 6D       		.byte	0x6d
 1881 0192 9B000000 		.4byte	0x9b
 1882 0196 2C       		.byte	0x2c
 1883 0197 09       		.uleb128 0x9
 1884 0198 1C050000 		.4byte	.LASF34
 1885 019c 03       		.byte	0x3
 1886 019d 6F       		.byte	0x6f
 1887 019e 83000000 		.4byte	0x83
 1888 01a2 30       		.byte	0x30
 1889 01a3 09       		.uleb128 0x9
 1890 01a4 08010000 		.4byte	.LASF35
 1891 01a8 03       		.byte	0x3
 1892 01a9 76       		.byte	0x76
 1893 01aa 77000000 		.4byte	0x77
 1894 01ae 34       		.byte	0x34
 1895 01af 00       		.byte	0
 1896 01b0 0A       		.uleb128 0xa
 1897 01b1 A6010000 		.4byte	.LASF36
 1898 01b5 03       		.byte	0x3
 1899 01b6 7C       		.byte	0x7c
 1900 01b7 FF000000 		.4byte	0xff
 1901 01bb 0B       		.uleb128 0xb
 1902 01bc 2F030000 		.4byte	.LASF108
 1903 01c0 01       		.byte	0x1
 1904 01c1 3304     		.2byte	0x433
 1905 01c3 9B000000 		.4byte	0x9b
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 74


 1906 01c7 00000000 		.4byte	.LFB12
 1907 01cb 58000000 		.4byte	.LFE12-.LFB12
 1908 01cf 01       		.uleb128 0x1
 1909 01d0 9C       		.byte	0x9c
 1910 01d1 06020000 		.4byte	0x206
 1911 01d5 0C       		.uleb128 0xc
 1912 01d6 9C040000 		.4byte	.LASF39
 1913 01da 01       		.byte	0x1
 1914 01db 3304     		.2byte	0x433
 1915 01dd 83000000 		.4byte	0x83
 1916 01e1 00000000 		.4byte	.LLST0
 1917 01e5 0D       		.uleb128 0xd
 1918 01e6 D6020000 		.4byte	.LASF37
 1919 01ea 01       		.byte	0x1
 1920 01eb 3504     		.2byte	0x435
 1921 01ed 9B000000 		.4byte	0x9b
 1922 01f1 21000000 		.4byte	.LLST1
 1923 01f5 0D       		.uleb128 0xd
 1924 01f6 C5020000 		.4byte	.LASF38
 1925 01fa 01       		.byte	0x1
 1926 01fb 3604     		.2byte	0x436
 1927 01fd 83000000 		.4byte	0x83
 1928 0201 40000000 		.4byte	.LLST2
 1929 0205 00       		.byte	0
 1930 0206 0E       		.uleb128 0xe
 1931 0207 68040000 		.4byte	.LASF43
 1932 020b 01       		.byte	0x1
 1933 020c 7B02     		.2byte	0x27b
 1934 020e 00000000 		.4byte	.LFB3
 1935 0212 10000000 		.4byte	.LFE3-.LFB3
 1936 0216 01       		.uleb128 0x1
 1937 0217 9C       		.byte	0x9c
 1938 0218 0F       		.uleb128 0xf
 1939 0219 6F030000 		.4byte	.LASF45
 1940 021d 01       		.byte	0x1
 1941 021e 9B02     		.2byte	0x29b
 1942 0220 00000000 		.4byte	.LFB4
 1943 0224 D4000000 		.4byte	.LFE4-.LFB4
 1944 0228 01       		.uleb128 0x1
 1945 0229 9C       		.byte	0x9c
 1946 022a 6E020000 		.4byte	0x26e
 1947 022e 0C       		.uleb128 0xc
 1948 022f C7040000 		.4byte	.LASF40
 1949 0233 01       		.byte	0x1
 1950 0234 9B02     		.2byte	0x29b
 1951 0236 6E020000 		.4byte	0x26e
 1952 023a 5E000000 		.4byte	.LLST3
 1953 023e 0D       		.uleb128 0xd
 1954 023f 8A040000 		.4byte	.LASF41
 1955 0243 01       		.byte	0x1
 1956 0244 9D02     		.2byte	0x29d
 1957 0246 83000000 		.4byte	0x83
 1958 024a 8A000000 		.4byte	.LLST4
 1959 024e 0D       		.uleb128 0xd
 1960 024f 40020000 		.4byte	.LASF42
 1961 0253 01       		.byte	0x1
 1962 0254 9E02     		.2byte	0x29e
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 75


 1963 0256 83000000 		.4byte	0x83
 1964 025a A9000000 		.4byte	.LLST5
 1965 025e 10       		.uleb128 0x10
 1966 025f 0C000000 		.4byte	.LVL9
 1967 0263 87090000 		.4byte	0x987
 1968 0267 11       		.uleb128 0x11
 1969 0268 01       		.uleb128 0x1
 1970 0269 51       		.byte	0x51
 1971 026a 01       		.uleb128 0x1
 1972 026b 30       		.byte	0x30
 1973 026c 00       		.byte	0
 1974 026d 00       		.byte	0
 1975 026e 06       		.uleb128 0x6
 1976 026f 04       		.byte	0x4
 1977 0270 74020000 		.4byte	0x274
 1978 0274 12       		.uleb128 0x12
 1979 0275 B0010000 		.4byte	0x1b0
 1980 0279 0E       		.uleb128 0xe
 1981 027a 80000000 		.4byte	.LASF44
 1982 027e 01       		.byte	0x1
 1983 027f 4103     		.2byte	0x341
 1984 0281 00000000 		.4byte	.LFB6
 1985 0285 28000000 		.4byte	.LFE6-.LFB6
 1986 0289 01       		.uleb128 0x1
 1987 028a 9C       		.byte	0x9c
 1988 028b 0F       		.uleb128 0xf
 1989 028c E9020000 		.4byte	.LASF46
 1990 0290 01       		.byte	0x1
 1991 0291 9403     		.2byte	0x394
 1992 0293 00000000 		.4byte	.LFB8
 1993 0297 28000000 		.4byte	.LFE8-.LFB8
 1994 029b 01       		.uleb128 0x1
 1995 029c 9C       		.byte	0x9c
 1996 029d B0020000 		.4byte	0x2b0
 1997 02a1 13       		.uleb128 0x13
 1998 02a2 A6040000 		.4byte	.LASF47
 1999 02a6 01       		.byte	0x1
 2000 02a7 9403     		.2byte	0x394
 2001 02a9 83000000 		.4byte	0x83
 2002 02ad 01       		.uleb128 0x1
 2003 02ae 50       		.byte	0x50
 2004 02af 00       		.byte	0
 2005 02b0 0F       		.uleb128 0xf
 2006 02b1 5A000000 		.4byte	.LASF48
 2007 02b5 01       		.byte	0x1
 2008 02b6 D403     		.2byte	0x3d4
 2009 02b8 00000000 		.4byte	.LFB9
 2010 02bc 10000000 		.4byte	.LFE9-.LFB9
 2011 02c0 01       		.uleb128 0x1
 2012 02c1 9C       		.byte	0x9c
 2013 02c2 D7020000 		.4byte	0x2d7
 2014 02c6 0C       		.uleb128 0xc
 2015 02c7 DB010000 		.4byte	.LASF49
 2016 02cb 01       		.byte	0x1
 2017 02cc D403     		.2byte	0x3d4
 2018 02ce 83000000 		.4byte	0x83
 2019 02d2 F2000000 		.4byte	.LLST6
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 76


 2020 02d6 00       		.byte	0
 2021 02d7 0F       		.uleb128 0xf
 2022 02d8 9D030000 		.4byte	.LASF50
 2023 02dc 01       		.byte	0x1
 2024 02dd EC03     		.2byte	0x3ec
 2025 02df 00000000 		.4byte	.LFB10
 2026 02e3 2C000000 		.4byte	.LFE10-.LFB10
 2027 02e7 01       		.uleb128 0x1
 2028 02e8 9C       		.byte	0x9c
 2029 02e9 0C030000 		.4byte	0x30c
 2030 02ed 0C       		.uleb128 0xc
 2031 02ee 4A020000 		.4byte	.LASF51
 2032 02f2 01       		.byte	0x1
 2033 02f3 EC03     		.2byte	0x3ec
 2034 02f5 83000000 		.4byte	0x83
 2035 02f9 13010000 		.4byte	.LLST7
 2036 02fd 14       		.uleb128 0x14
 2037 02fe 07000000 		.4byte	.LASF52
 2038 0302 01       		.byte	0x1
 2039 0303 EE03     		.2byte	0x3ee
 2040 0305 83000000 		.4byte	0x83
 2041 0309 01       		.uleb128 0x1
 2042 030a 52       		.byte	0x52
 2043 030b 00       		.byte	0
 2044 030c 15       		.uleb128 0x15
 2045 030d 5B030000 		.4byte	.LASF55
 2046 0311 01       		.byte	0x1
 2047 0312 0D04     		.2byte	0x40d
 2048 0314 83000000 		.4byte	0x83
 2049 0318 00000000 		.4byte	.LFB11
 2050 031c 38000000 		.4byte	.LFE11-.LFB11
 2051 0320 01       		.uleb128 0x1
 2052 0321 9C       		.byte	0x9c
 2053 0322 57030000 		.4byte	0x357
 2054 0326 0C       		.uleb128 0xc
 2055 0327 F1010000 		.4byte	.LASF53
 2056 032b 01       		.byte	0x1
 2057 032c 0D04     		.2byte	0x40d
 2058 032e 83000000 		.4byte	0x83
 2059 0332 31010000 		.4byte	.LLST8
 2060 0336 0D       		.uleb128 0xd
 2061 0337 99050000 		.4byte	.LASF54
 2062 033b 01       		.byte	0x1
 2063 033c 0F04     		.2byte	0x40f
 2064 033e 83000000 		.4byte	0x83
 2065 0342 65010000 		.4byte	.LLST9
 2066 0346 16       		.uleb128 0x16
 2067 0347 77647400 		.ascii	"wdt\000"
 2068 034b 01       		.byte	0x1
 2069 034c 1004     		.2byte	0x410
 2070 034e 83000000 		.4byte	0x83
 2071 0352 9B010000 		.4byte	.LLST10
 2072 0356 00       		.byte	0
 2073 0357 15       		.uleb128 0x15
 2074 0358 3B060000 		.4byte	.LASF56
 2075 035c 01       		.byte	0x1
 2076 035d 5F04     		.2byte	0x45f
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 77


 2077 035f 8F000000 		.4byte	0x8f
 2078 0363 00000000 		.4byte	.LFB13
 2079 0367 54000000 		.4byte	.LFE13-.LFB13
 2080 036b 01       		.uleb128 0x1
 2081 036c 9C       		.byte	0x9c
 2082 036d A1030000 		.4byte	0x3a1
 2083 0371 0C       		.uleb128 0xc
 2084 0372 9C040000 		.4byte	.LASF39
 2085 0376 01       		.byte	0x1
 2086 0377 5F04     		.2byte	0x45f
 2087 0379 83000000 		.4byte	0x83
 2088 037d CE010000 		.4byte	.LLST11
 2089 0381 0D       		.uleb128 0xd
 2090 0382 DF020000 		.4byte	.LASF57
 2091 0386 01       		.byte	0x1
 2092 0387 6104     		.2byte	0x461
 2093 0389 83000000 		.4byte	0x83
 2094 038d 13020000 		.4byte	.LLST12
 2095 0391 10       		.uleb128 0x10
 2096 0392 1E000000 		.4byte	.LVL37
 2097 0396 9D090000 		.4byte	0x99d
 2098 039a 11       		.uleb128 0x11
 2099 039b 01       		.uleb128 0x1
 2100 039c 50       		.byte	0x50
 2101 039d 01       		.uleb128 0x1
 2102 039e 30       		.byte	0x30
 2103 039f 00       		.byte	0
 2104 03a0 00       		.byte	0
 2105 03a1 15       		.uleb128 0x15
 2106 03a2 96010000 		.4byte	.LASF58
 2107 03a6 01       		.byte	0x1
 2108 03a7 8504     		.2byte	0x485
 2109 03a9 9B000000 		.4byte	0x9b
 2110 03ad 00000000 		.4byte	.LFB14
 2111 03b1 64000000 		.4byte	.LFE14-.LFB14
 2112 03b5 01       		.uleb128 0x1
 2113 03b6 9C       		.byte	0x9c
 2114 03b7 1F040000 		.4byte	0x41f
 2115 03bb 0C       		.uleb128 0xc
 2116 03bc 9C040000 		.4byte	.LASF39
 2117 03c0 01       		.byte	0x1
 2118 03c1 8504     		.2byte	0x485
 2119 03c3 83000000 		.4byte	0x83
 2120 03c7 31020000 		.4byte	.LLST13
 2121 03cb 0D       		.uleb128 0xd
 2122 03cc DF020000 		.4byte	.LASF57
 2123 03d0 01       		.byte	0x1
 2124 03d1 8704     		.2byte	0x487
 2125 03d3 83000000 		.4byte	0x83
 2126 03d7 5D020000 		.4byte	.LLST14
 2127 03db 0D       		.uleb128 0xd
 2128 03dc 7E040000 		.4byte	.LASF59
 2129 03e0 01       		.byte	0x1
 2130 03e1 8804     		.2byte	0x488
 2131 03e3 8F000000 		.4byte	0x8f
 2132 03e7 7B020000 		.4byte	.LLST15
 2133 03eb 0D       		.uleb128 0xd
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 78


 2134 03ec 98020000 		.4byte	.LASF60
 2135 03f0 01       		.byte	0x1
 2136 03f1 8904     		.2byte	0x489
 2137 03f3 9B000000 		.4byte	0x9b
 2138 03f7 8E020000 		.4byte	.LLST16
 2139 03fb 17       		.uleb128 0x17
 2140 03fc 1E000000 		.4byte	.LVL45
 2141 0400 9D090000 		.4byte	0x99d
 2142 0404 0E040000 		.4byte	0x40e
 2143 0408 11       		.uleb128 0x11
 2144 0409 01       		.uleb128 0x1
 2145 040a 50       		.byte	0x50
 2146 040b 01       		.uleb128 0x1
 2147 040c 30       		.byte	0x30
 2148 040d 00       		.byte	0
 2149 040e 10       		.uleb128 0x10
 2150 040f 4A000000 		.4byte	.LVL49
 2151 0413 BB010000 		.4byte	0x1bb
 2152 0417 11       		.uleb128 0x11
 2153 0418 01       		.uleb128 0x1
 2154 0419 50       		.byte	0x50
 2155 041a 02       		.uleb128 0x2
 2156 041b 75       		.byte	0x75
 2157 041c 00       		.sleb128 0
 2158 041d 00       		.byte	0
 2159 041e 00       		.byte	0
 2160 041f 0F       		.uleb128 0xf
 2161 0420 01040000 		.4byte	.LASF61
 2162 0424 01       		.byte	0x1
 2163 0425 B404     		.2byte	0x4b4
 2164 0427 00000000 		.4byte	.LFB15
 2165 042b 1C000000 		.4byte	.LFE15-.LFB15
 2166 042f 01       		.uleb128 0x1
 2167 0430 9C       		.byte	0x9c
 2168 0431 46040000 		.4byte	0x446
 2169 0435 0C       		.uleb128 0xc
 2170 0436 0D030000 		.4byte	.LASF62
 2171 043a 01       		.byte	0x1
 2172 043b B404     		.2byte	0x4b4
 2173 043d 83000000 		.4byte	0x83
 2174 0441 AC020000 		.4byte	.LLST17
 2175 0445 00       		.byte	0
 2176 0446 0F       		.uleb128 0xf
 2177 0447 16030000 		.4byte	.LASF63
 2178 044b 01       		.byte	0x1
 2179 044c CB04     		.2byte	0x4cb
 2180 044e 00000000 		.4byte	.LFB16
 2181 0452 18000000 		.4byte	.LFE16-.LFB16
 2182 0456 01       		.uleb128 0x1
 2183 0457 9C       		.byte	0x9c
 2184 0458 6D040000 		.4byte	0x46d
 2185 045c 0C       		.uleb128 0xc
 2186 045d DC030000 		.4byte	.LASF64
 2187 0461 01       		.byte	0x1
 2188 0462 CB04     		.2byte	0x4cb
 2189 0464 83000000 		.4byte	0x83
 2190 0468 CD020000 		.4byte	.LLST18
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 79


 2191 046c 00       		.byte	0
 2192 046d 0F       		.uleb128 0xf
 2193 046e F9010000 		.4byte	.LASF65
 2194 0472 01       		.byte	0x1
 2195 0473 E604     		.2byte	0x4e6
 2196 0475 00000000 		.4byte	.LFB17
 2197 0479 2C000000 		.4byte	.LFE17-.LFB17
 2198 047d 01       		.uleb128 0x1
 2199 047e 9C       		.byte	0x9c
 2200 047f A2040000 		.4byte	0x4a2
 2201 0483 0C       		.uleb128 0xc
 2202 0484 A4020000 		.4byte	.LASF66
 2203 0488 01       		.byte	0x1
 2204 0489 E604     		.2byte	0x4e6
 2205 048b 83000000 		.4byte	0x83
 2206 048f EE020000 		.4byte	.LLST19
 2207 0493 14       		.uleb128 0x14
 2208 0494 07000000 		.4byte	.LASF52
 2209 0498 01       		.byte	0x1
 2210 0499 E804     		.2byte	0x4e8
 2211 049b 83000000 		.4byte	0x83
 2212 049f 01       		.uleb128 0x1
 2213 04a0 52       		.byte	0x52
 2214 04a1 00       		.byte	0
 2215 04a2 0F       		.uleb128 0xf
 2216 04a3 2A010000 		.4byte	.LASF67
 2217 04a7 01       		.byte	0x1
 2218 04a8 0105     		.2byte	0x501
 2219 04aa 00000000 		.4byte	.LFB18
 2220 04ae 2C000000 		.4byte	.LFE18-.LFB18
 2221 04b2 01       		.uleb128 0x1
 2222 04b3 9C       		.byte	0x9c
 2223 04b4 D7040000 		.4byte	0x4d7
 2224 04b8 0C       		.uleb128 0xc
 2225 04b9 7E030000 		.4byte	.LASF68
 2226 04bd 01       		.byte	0x1
 2227 04be 0105     		.2byte	0x501
 2228 04c0 83000000 		.4byte	0x83
 2229 04c4 0C030000 		.4byte	.LLST20
 2230 04c8 14       		.uleb128 0x14
 2231 04c9 07000000 		.4byte	.LASF52
 2232 04cd 01       		.byte	0x1
 2233 04ce 0305     		.2byte	0x503
 2234 04d0 83000000 		.4byte	0x83
 2235 04d4 01       		.uleb128 0x1
 2236 04d5 52       		.byte	0x52
 2237 04d6 00       		.byte	0
 2238 04d7 0F       		.uleb128 0xf
 2239 04d8 6F050000 		.4byte	.LASF69
 2240 04dc 01       		.byte	0x1
 2241 04dd 2505     		.2byte	0x525
 2242 04df 00000000 		.4byte	.LFB19
 2243 04e3 44000000 		.4byte	.LFE19-.LFB19
 2244 04e7 01       		.uleb128 0x1
 2245 04e8 9C       		.byte	0x9c
 2246 04e9 1D050000 		.4byte	0x51d
 2247 04ed 0C       		.uleb128 0xc
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 80


 2248 04ee 9C040000 		.4byte	.LASF39
 2249 04f2 01       		.byte	0x1
 2250 04f3 2505     		.2byte	0x525
 2251 04f5 83000000 		.4byte	0x83
 2252 04f9 2A030000 		.4byte	.LLST21
 2253 04fd 0C       		.uleb128 0xc
 2254 04fe 10050000 		.4byte	.LASF70
 2255 0502 01       		.byte	0x1
 2256 0503 2505     		.2byte	0x525
 2257 0505 8F000000 		.4byte	0x8f
 2258 0509 56030000 		.4byte	.LLST22
 2259 050d 10       		.uleb128 0x10
 2260 050e 20000000 		.4byte	.LVL68
 2261 0512 9D090000 		.4byte	0x99d
 2262 0516 11       		.uleb128 0x11
 2263 0517 01       		.uleb128 0x1
 2264 0518 50       		.byte	0x50
 2265 0519 01       		.uleb128 0x1
 2266 051a 30       		.byte	0x30
 2267 051b 00       		.byte	0
 2268 051c 00       		.byte	0
 2269 051d 0F       		.uleb128 0xf
 2270 051e CA030000 		.4byte	.LASF71
 2271 0522 01       		.byte	0x1
 2272 0523 4805     		.2byte	0x548
 2273 0525 00000000 		.4byte	.LFB20
 2274 0529 44000000 		.4byte	.LFE20-.LFB20
 2275 052d 01       		.uleb128 0x1
 2276 052e 9C       		.byte	0x9c
 2277 052f 63050000 		.4byte	0x563
 2278 0533 0C       		.uleb128 0xc
 2279 0534 9C040000 		.4byte	.LASF39
 2280 0538 01       		.byte	0x1
 2281 0539 4805     		.2byte	0x548
 2282 053b 83000000 		.4byte	0x83
 2283 053f 77030000 		.4byte	.LLST23
 2284 0543 0C       		.uleb128 0xc
 2285 0544 11000000 		.4byte	.LASF72
 2286 0548 01       		.byte	0x1
 2287 0549 4805     		.2byte	0x548
 2288 054b 9B000000 		.4byte	0x9b
 2289 054f A3030000 		.4byte	.LLST24
 2290 0553 10       		.uleb128 0x10
 2291 0554 20000000 		.4byte	.LVL72
 2292 0558 9D090000 		.4byte	0x99d
 2293 055c 11       		.uleb128 0x11
 2294 055d 01       		.uleb128 0x1
 2295 055e 50       		.byte	0x50
 2296 055f 01       		.uleb128 0x1
 2297 0560 30       		.byte	0x30
 2298 0561 00       		.byte	0
 2299 0562 00       		.byte	0
 2300 0563 15       		.uleb128 0x15
 2301 0564 6A010000 		.4byte	.LASF73
 2302 0568 01       		.byte	0x1
 2303 0569 6105     		.2byte	0x561
 2304 056b 8F000000 		.4byte	0x8f
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 81


 2305 056f 00000000 		.4byte	.LFB21
 2306 0573 40000000 		.4byte	.LFE21-.LFB21
 2307 0577 01       		.uleb128 0x1
 2308 0578 9C       		.byte	0x9c
 2309 0579 D5050000 		.4byte	0x5d5
 2310 057d 0C       		.uleb128 0xc
 2311 057e 9C040000 		.4byte	.LASF39
 2312 0582 01       		.byte	0x1
 2313 0583 6105     		.2byte	0x561
 2314 0585 83000000 		.4byte	0x83
 2315 0589 E9030000 		.4byte	.LLST25
 2316 058d 0C       		.uleb128 0xc
 2317 058e 27050000 		.4byte	.LASF74
 2318 0592 01       		.byte	0x1
 2319 0593 6105     		.2byte	0x561
 2320 0595 8F000000 		.4byte	0x8f
 2321 0599 0A040000 		.4byte	.LLST26
 2322 059d 18       		.uleb128 0x18
 2323 059e EC010000 		.4byte	.LASF75
 2324 05a2 01       		.byte	0x1
 2325 05a3 6305     		.2byte	0x563
 2326 05a5 83000000 		.4byte	0x83
 2327 05a9 18       		.uleb128 0x18
 2328 05aa 55020000 		.4byte	.LASF76
 2329 05ae 01       		.byte	0x1
 2330 05af 6405     		.2byte	0x564
 2331 05b1 83000000 		.4byte	0x83
 2332 05b5 0D       		.uleb128 0xd
 2333 05b6 AE020000 		.4byte	.LASF77
 2334 05ba 01       		.byte	0x1
 2335 05bb 6505     		.2byte	0x565
 2336 05bd 83000000 		.4byte	0x83
 2337 05c1 41040000 		.4byte	.LLST27
 2338 05c5 10       		.uleb128 0x10
 2339 05c6 26000000 		.4byte	.LVL79
 2340 05ca 9D090000 		.4byte	0x99d
 2341 05ce 11       		.uleb128 0x11
 2342 05cf 01       		.uleb128 0x1
 2343 05d0 50       		.byte	0x50
 2344 05d1 01       		.uleb128 0x1
 2345 05d2 30       		.byte	0x30
 2346 05d3 00       		.byte	0
 2347 05d4 00       		.byte	0
 2348 05d5 19       		.uleb128 0x19
 2349 05d6 20000000 		.4byte	.LASF78
 2350 05da 01       		.byte	0x1
 2351 05db B905     		.2byte	0x5b9
 2352 05dd A7000000 		.4byte	0xa7
 2353 05e1 00000000 		.4byte	.LFB22
 2354 05e5 58000000 		.4byte	.LFE22-.LFB22
 2355 05e9 01       		.uleb128 0x1
 2356 05ea 9C       		.byte	0x9c
 2357 05eb 41060000 		.4byte	0x641
 2358 05ef 0C       		.uleb128 0xc
 2359 05f0 9C040000 		.4byte	.LASF39
 2360 05f4 01       		.byte	0x1
 2361 05f5 B905     		.2byte	0x5b9
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 82


 2362 05f7 83000000 		.4byte	0x83
 2363 05fb 54040000 		.4byte	.LLST28
 2364 05ff 0C       		.uleb128 0xc
 2365 0600 27050000 		.4byte	.LASF74
 2366 0604 01       		.byte	0x1
 2367 0605 B905     		.2byte	0x5b9
 2368 0607 8F000000 		.4byte	0x8f
 2369 060b 8E040000 		.4byte	.LLST29
 2370 060f 0D       		.uleb128 0xd
 2371 0610 71040000 		.4byte	.LASF79
 2372 0614 01       		.byte	0x1
 2373 0615 BB05     		.2byte	0x5bb
 2374 0617 A7000000 		.4byte	0xa7
 2375 061b C5040000 		.4byte	.LLST30
 2376 061f 0D       		.uleb128 0xd
 2377 0620 AE020000 		.4byte	.LASF77
 2378 0624 01       		.byte	0x1
 2379 0625 BC05     		.2byte	0x5bc
 2380 0627 83000000 		.4byte	0x83
 2381 062b 03050000 		.4byte	.LLST31
 2382 062f 10       		.uleb128 0x10
 2383 0630 22000000 		.4byte	.LVL85
 2384 0634 63050000 		.4byte	0x563
 2385 0638 11       		.uleb128 0x11
 2386 0639 01       		.uleb128 0x1
 2387 063a 50       		.byte	0x50
 2388 063b 03       		.uleb128 0x3
 2389 063c F3       		.byte	0xf3
 2390 063d 01       		.uleb128 0x1
 2391 063e 50       		.byte	0x50
 2392 063f 00       		.byte	0
 2393 0640 00       		.byte	0
 2394 0641 19       		.uleb128 0x19
 2395 0642 E6030000 		.4byte	.LASF80
 2396 0646 01       		.byte	0x1
 2397 0647 EF05     		.2byte	0x5ef
 2398 0649 8F000000 		.4byte	0x8f
 2399 064d 00000000 		.4byte	.LFB23
 2400 0651 6C000000 		.4byte	.LFE23-.LFB23
 2401 0655 01       		.uleb128 0x1
 2402 0656 9C       		.byte	0x9c
 2403 0657 AD060000 		.4byte	0x6ad
 2404 065b 0C       		.uleb128 0xc
 2405 065c 9C040000 		.4byte	.LASF39
 2406 0660 01       		.byte	0x1
 2407 0661 EF05     		.2byte	0x5ef
 2408 0663 83000000 		.4byte	0x83
 2409 0667 21050000 		.4byte	.LLST32
 2410 066b 0C       		.uleb128 0xc
 2411 066c 27050000 		.4byte	.LASF74
 2412 0670 01       		.byte	0x1
 2413 0671 EF05     		.2byte	0x5ef
 2414 0673 8F000000 		.4byte	0x8f
 2415 0677 5B050000 		.4byte	.LLST33
 2416 067b 0D       		.uleb128 0xd
 2417 067c 61050000 		.4byte	.LASF81
 2418 0680 01       		.byte	0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 83


 2419 0681 F105     		.2byte	0x5f1
 2420 0683 8F000000 		.4byte	0x8f
 2421 0687 9D050000 		.4byte	.LLST34
 2422 068b 0D       		.uleb128 0xd
 2423 068c AE020000 		.4byte	.LASF77
 2424 0690 01       		.byte	0x1
 2425 0691 F205     		.2byte	0x5f2
 2426 0693 83000000 		.4byte	0x83
 2427 0697 D3050000 		.4byte	.LLST35
 2428 069b 10       		.uleb128 0x10
 2429 069c 22000000 		.4byte	.LVL96
 2430 06a0 63050000 		.4byte	0x563
 2431 06a4 11       		.uleb128 0x11
 2432 06a5 01       		.uleb128 0x1
 2433 06a6 50       		.byte	0x50
 2434 06a7 03       		.uleb128 0x3
 2435 06a8 F3       		.byte	0xf3
 2436 06a9 01       		.uleb128 0x1
 2437 06aa 50       		.byte	0x50
 2438 06ab 00       		.byte	0
 2439 06ac 00       		.byte	0
 2440 06ad 19       		.uleb128 0x19
 2441 06ae 42010000 		.4byte	.LASF82
 2442 06b2 01       		.byte	0x1
 2443 06b3 2806     		.2byte	0x628
 2444 06b5 9B000000 		.4byte	0x9b
 2445 06b9 00000000 		.4byte	.LFB24
 2446 06bd 50000000 		.4byte	.LFE24-.LFB24
 2447 06c1 01       		.uleb128 0x1
 2448 06c2 9C       		.byte	0x9c
 2449 06c3 19070000 		.4byte	0x719
 2450 06c7 0C       		.uleb128 0xc
 2451 06c8 9C040000 		.4byte	.LASF39
 2452 06cc 01       		.byte	0x1
 2453 06cd 2806     		.2byte	0x628
 2454 06cf 83000000 		.4byte	0x83
 2455 06d3 29060000 		.4byte	.LLST36
 2456 06d7 0C       		.uleb128 0xc
 2457 06d8 27050000 		.4byte	.LASF74
 2458 06dc 01       		.byte	0x1
 2459 06dd 2806     		.2byte	0x628
 2460 06df 8F000000 		.4byte	0x8f
 2461 06e3 63060000 		.4byte	.LLST37
 2462 06e7 0D       		.uleb128 0xd
 2463 06e8 FA040000 		.4byte	.LASF83
 2464 06ec 01       		.byte	0x1
 2465 06ed 2A06     		.2byte	0x62a
 2466 06ef C1000000 		.4byte	0xc1
 2467 06f3 9A060000 		.4byte	.LLST38
 2468 06f7 0D       		.uleb128 0xd
 2469 06f8 AE020000 		.4byte	.LASF77
 2470 06fc 01       		.byte	0x1
 2471 06fd 2B06     		.2byte	0x62b
 2472 06ff 83000000 		.4byte	0x83
 2473 0703 CA060000 		.4byte	.LLST39
 2474 0707 10       		.uleb128 0x10
 2475 0708 22000000 		.4byte	.LVL109
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 84


 2476 070c 63050000 		.4byte	0x563
 2477 0710 11       		.uleb128 0x11
 2478 0711 01       		.uleb128 0x1
 2479 0712 50       		.byte	0x50
 2480 0713 03       		.uleb128 0x3
 2481 0714 F3       		.byte	0xf3
 2482 0715 01       		.uleb128 0x1
 2483 0716 50       		.byte	0x50
 2484 0717 00       		.byte	0
 2485 0718 00       		.byte	0
 2486 0719 1A       		.uleb128 0x1a
 2487 071a 3F000000 		.4byte	.LASF84
 2488 071e 01       		.byte	0x1
 2489 071f D607     		.2byte	0x7d6
 2490 0721 00000000 		.4byte	.LFB25
 2491 0725 A8000000 		.4byte	.LFE25-.LFB25
 2492 0729 01       		.uleb128 0x1
 2493 072a 9C       		.byte	0x9c
 2494 072b 9B070000 		.4byte	0x79b
 2495 072f 0D       		.uleb128 0xd
 2496 0730 8A040000 		.4byte	.LASF41
 2497 0734 01       		.byte	0x1
 2498 0735 D807     		.2byte	0x7d8
 2499 0737 83000000 		.4byte	0x83
 2500 073b 20070000 		.4byte	.LLST40
 2501 073f 0D       		.uleb128 0xd
 2502 0740 24020000 		.4byte	.LASF85
 2503 0744 01       		.byte	0x1
 2504 0745 D907     		.2byte	0x7d9
 2505 0747 83000000 		.4byte	0x83
 2506 074b 56070000 		.4byte	.LLST41
 2507 074f 0D       		.uleb128 0xd
 2508 0750 19000000 		.4byte	.LASF86
 2509 0754 01       		.byte	0x1
 2510 0755 DA07     		.2byte	0x7da
 2511 0757 9B000000 		.4byte	0x9b
 2512 075b 98070000 		.4byte	.LLST42
 2513 075f 17       		.uleb128 0x17
 2514 0760 60000000 		.4byte	.LVL123
 2515 0764 AE090000 		.4byte	0x9ae
 2516 0768 77070000 		.4byte	0x777
 2517 076c 11       		.uleb128 0x11
 2518 076d 01       		.uleb128 0x1
 2519 076e 51       		.byte	0x51
 2520 076f 01       		.uleb128 0x1
 2521 0770 33       		.byte	0x33
 2522 0771 11       		.uleb128 0x11
 2523 0772 01       		.uleb128 0x1
 2524 0773 50       		.byte	0x50
 2525 0774 01       		.uleb128 0x1
 2526 0775 3F       		.byte	0x3f
 2527 0776 00       		.byte	0
 2528 0777 17       		.uleb128 0x17
 2529 0778 68000000 		.4byte	.LVL124
 2530 077c C4090000 		.4byte	0x9c4
 2531 0780 8A070000 		.4byte	0x78a
 2532 0784 11       		.uleb128 0x11
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 85


 2533 0785 01       		.uleb128 0x1
 2534 0786 50       		.byte	0x50
 2535 0787 01       		.uleb128 0x1
 2536 0788 3F       		.byte	0x3f
 2537 0789 00       		.byte	0
 2538 078a 10       		.uleb128 0x10
 2539 078b 7E000000 		.4byte	.LVL127
 2540 078f 18020000 		.4byte	0x218
 2541 0793 11       		.uleb128 0x11
 2542 0794 01       		.uleb128 0x1
 2543 0795 50       		.byte	0x50
 2544 0796 02       		.uleb128 0x2
 2545 0797 74       		.byte	0x74
 2546 0798 00       		.sleb128 0
 2547 0799 00       		.byte	0
 2548 079a 00       		.byte	0
 2549 079b 0F       		.uleb128 0xf
 2550 079c 45050000 		.4byte	.LASF87
 2551 07a0 01       		.byte	0x1
 2552 07a1 4708     		.2byte	0x847
 2553 07a3 00000000 		.4byte	.LFB26
 2554 07a7 30000000 		.4byte	.LFE26-.LFB26
 2555 07ab 01       		.uleb128 0x1
 2556 07ac 9C       		.byte	0x9c
 2557 07ad C1070000 		.4byte	0x7c1
 2558 07b1 10       		.uleb128 0x10
 2559 07b2 24000000 		.4byte	.LVL129
 2560 07b6 DE090000 		.4byte	0x9de
 2561 07ba 11       		.uleb128 0x11
 2562 07bb 01       		.uleb128 0x1
 2563 07bc 50       		.byte	0x50
 2564 07bd 01       		.uleb128 0x1
 2565 07be 3A       		.byte	0x3a
 2566 07bf 00       		.byte	0
 2567 07c0 00       		.byte	0
 2568 07c1 0F       		.uleb128 0xf
 2569 07c2 31050000 		.4byte	.LASF88
 2570 07c6 01       		.byte	0x1
 2571 07c7 3A02     		.2byte	0x23a
 2572 07c9 00000000 		.4byte	.LFB1
 2573 07cd 24000000 		.4byte	.LFE1-.LFB1
 2574 07d1 01       		.uleb128 0x1
 2575 07d2 9C       		.byte	0x9c
 2576 07d3 EA070000 		.4byte	0x7ea
 2577 07d7 1B       		.uleb128 0x1b
 2578 07d8 0E000000 		.4byte	.LVL130
 2579 07dc 19070000 		.4byte	0x719
 2580 07e0 1B       		.uleb128 0x1b
 2581 07e1 1C000000 		.4byte	.LVL131
 2582 07e5 9B070000 		.4byte	0x79b
 2583 07e9 00       		.byte	0
 2584 07ea 0F       		.uleb128 0xf
 2585 07eb EE040000 		.4byte	.LASF89
 2586 07ef 01       		.byte	0x1
 2587 07f0 5A02     		.2byte	0x25a
 2588 07f2 00000000 		.4byte	.LFB2
 2589 07f6 10000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 86


 2590 07fa 01       		.uleb128 0x1
 2591 07fb 9C       		.byte	0x9c
 2592 07fc 2A080000 		.4byte	0x82a
 2593 0800 0C       		.uleb128 0xc
 2594 0801 27030000 		.4byte	.LASF90
 2595 0805 01       		.byte	0x1
 2596 0806 5A02     		.2byte	0x25a
 2597 0808 E5000000 		.4byte	0xe5
 2598 080c AE070000 		.4byte	.LLST43
 2599 0810 1B       		.uleb128 0x1b
 2600 0811 08000000 		.4byte	.LVL133
 2601 0815 C1070000 		.4byte	0x7c1
 2602 0819 10       		.uleb128 0x10
 2603 081a 0E000000 		.4byte	.LVL134
 2604 081e EF090000 		.4byte	0x9ef
 2605 0822 11       		.uleb128 0x11
 2606 0823 01       		.uleb128 0x1
 2607 0824 50       		.byte	0x50
 2608 0825 02       		.uleb128 0x2
 2609 0826 74       		.byte	0x74
 2610 0827 00       		.sleb128 0
 2611 0828 00       		.byte	0
 2612 0829 00       		.byte	0
 2613 082a 0F       		.uleb128 0xf
 2614 082b 19010000 		.4byte	.LASF91
 2615 082f 01       		.byte	0x1
 2616 0830 0103     		.2byte	0x301
 2617 0832 00000000 		.4byte	.LFB5
 2618 0836 70000000 		.4byte	.LFE5-.LFB5
 2619 083a 01       		.uleb128 0x1
 2620 083b 9C       		.byte	0x9c
 2621 083c 99080000 		.4byte	0x899
 2622 0840 0C       		.uleb128 0xc
 2623 0841 C7040000 		.4byte	.LASF40
 2624 0845 01       		.byte	0x1
 2625 0846 0103     		.2byte	0x301
 2626 0848 83000000 		.4byte	0x83
 2627 084c DA070000 		.4byte	.LLST44
 2628 0850 0C       		.uleb128 0xc
 2629 0851 08050000 		.4byte	.LASF92
 2630 0855 01       		.byte	0x1
 2631 0856 0103     		.2byte	0x301
 2632 0858 83000000 		.4byte	0x83
 2633 085c 06080000 		.4byte	.LLST45
 2634 0860 1B       		.uleb128 0x1b
 2635 0861 0E000000 		.4byte	.LVL137
 2636 0865 06020000 		.4byte	0x206
 2637 0869 1B       		.uleb128 0x1b
 2638 086a 1E000000 		.4byte	.LVL138
 2639 086e 19070000 		.4byte	0x719
 2640 0872 17       		.uleb128 0x17
 2641 0873 38000000 		.4byte	.LVL139
 2642 0877 18020000 		.4byte	0x218
 2643 087b 86080000 		.4byte	0x886
 2644 087f 11       		.uleb128 0x11
 2645 0880 01       		.uleb128 0x1
 2646 0881 50       		.byte	0x50
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 87


 2647 0882 02       		.uleb128 0x2
 2648 0883 74       		.byte	0x74
 2649 0884 00       		.sleb128 0
 2650 0885 00       		.byte	0
 2651 0886 1B       		.uleb128 0x1b
 2652 0887 56000000 		.4byte	.LVL140
 2653 088b C1070000 		.4byte	0x7c1
 2654 088f 1B       		.uleb128 0x1b
 2655 0890 5A000000 		.4byte	.LVL141
 2656 0894 79020000 		.4byte	0x279
 2657 0898 00       		.byte	0
 2658 0899 0F       		.uleb128 0xf
 2659 089a 88020000 		.4byte	.LASF93
 2660 089e 01       		.byte	0x1
 2661 089f 6A03     		.2byte	0x36a
 2662 08a1 00000000 		.4byte	.LFB7
 2663 08a5 44000000 		.4byte	.LFE7-.LFB7
 2664 08a9 01       		.uleb128 0x1
 2665 08aa 9C       		.byte	0x9c
 2666 08ab C2080000 		.4byte	0x8c2
 2667 08af 1B       		.uleb128 0x1b
 2668 08b0 2C000000 		.4byte	.LVL142
 2669 08b4 06020000 		.4byte	0x206
 2670 08b8 1B       		.uleb128 0x1b
 2671 08b9 30000000 		.4byte	.LVL143
 2672 08bd C1070000 		.4byte	0x7c1
 2673 08c1 00       		.byte	0
 2674 08c2 1C       		.uleb128 0x1c
 2675 08c3 48000000 		.4byte	.LASF94
 2676 08c7 01       		.byte	0x1
 2677 08c8 43       		.byte	0x43
 2678 08c9 83000000 		.4byte	0x83
 2679 08cd 05       		.uleb128 0x5
 2680 08ce 03       		.byte	0x3
 2681 08cf 00000000 		.4byte	ADC_currentConfig
 2682 08d3 1D       		.uleb128 0x1d
 2683 08d4 83000000 		.4byte	0x83
 2684 08d8 E3080000 		.4byte	0x8e3
 2685 08dc 1E       		.uleb128 0x1e
 2686 08dd F8000000 		.4byte	0xf8
 2687 08e1 00       		.byte	0
 2688 08e2 00       		.byte	0
 2689 08e3 1F       		.uleb128 0x1f
 2690 08e4 CE040000 		.4byte	.LASF95
 2691 08e8 01       		.byte	0x1
 2692 08e9 49       		.byte	0x49
 2693 08ea F3080000 		.4byte	0x8f3
 2694 08ee 04       		.byte	0x4
 2695 08ef 00       		.byte	0
 2696 08f0 01       		.byte	0x1
 2697 08f1 00       		.byte	0
 2698 08f2 00       		.byte	0
 2699 08f3 12       		.uleb128 0x12
 2700 08f4 D3080000 		.4byte	0x8d3
 2701 08f8 20       		.uleb128 0x20
 2702 08f9 E0010000 		.4byte	.LASF96
 2703 08fd 01       		.byte	0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 88


 2704 08fe 3D       		.byte	0x3d
 2705 08ff 6B000000 		.4byte	0x6b
 2706 0903 05       		.uleb128 0x5
 2707 0904 03       		.byte	0x3
 2708 0905 00000000 		.4byte	ADC_initVar
 2709 0909 20       		.uleb128 0x20
 2710 090a E1040000 		.4byte	.LASF97
 2711 090e 01       		.byte	0x1
 2712 090f 3F       		.byte	0x3f
 2713 0910 6B000000 		.4byte	0x6b
 2714 0914 05       		.uleb128 0x5
 2715 0915 03       		.byte	0x3
 2716 0916 00000000 		.4byte	ADC_selected
 2717 091a 1D       		.uleb128 0x1d
 2718 091b 8F000000 		.4byte	0x8f
 2719 091f 2A090000 		.4byte	0x92a
 2720 0923 1E       		.uleb128 0x1e
 2721 0924 F8000000 		.4byte	0xf8
 2722 0928 00       		.byte	0
 2723 0929 00       		.byte	0
 2724 092a 20       		.uleb128 0x20
 2725 092b 26040000 		.4byte	.LASF98
 2726 092f 01       		.byte	0x1
 2727 0930 40       		.byte	0x40
 2728 0931 3B090000 		.4byte	0x93b
 2729 0935 05       		.uleb128 0x5
 2730 0936 03       		.byte	0x3
 2731 0937 00000000 		.4byte	ADC_offset
 2732 093b 05       		.uleb128 0x5
 2733 093c 1A090000 		.4byte	0x91a
 2734 0940 1D       		.uleb128 0x1d
 2735 0941 9B000000 		.4byte	0x9b
 2736 0945 50090000 		.4byte	0x950
 2737 0949 1E       		.uleb128 0x1e
 2738 094a F8000000 		.4byte	0xf8
 2739 094e 00       		.byte	0
 2740 094f 00       		.byte	0
 2741 0950 20       		.uleb128 0x20
 2742 0951 56010000 		.4byte	.LASF99
 2743 0955 01       		.byte	0x1
 2744 0956 41       		.byte	0x41
 2745 0957 61090000 		.4byte	0x961
 2746 095b 05       		.uleb128 0x5
 2747 095c 03       		.byte	0x3
 2748 095d 00000000 		.4byte	ADC_countsPer10Volt
 2749 0961 05       		.uleb128 0x5
 2750 0962 40090000 		.4byte	0x940
 2751 0966 1D       		.uleb128 0x1d
 2752 0967 B0010000 		.4byte	0x1b0
 2753 096b 76090000 		.4byte	0x976
 2754 096f 1E       		.uleb128 0x1e
 2755 0970 F8000000 		.4byte	0xf8
 2756 0974 00       		.byte	0
 2757 0975 00       		.byte	0
 2758 0976 21       		.uleb128 0x21
 2759 0977 B8040000 		.4byte	.LASF100
 2760 097b 03       		.byte	0x3
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 89


 2761 097c DF01     		.2byte	0x1df
 2762 097e 82090000 		.4byte	0x982
 2763 0982 12       		.uleb128 0x12
 2764 0983 66090000 		.4byte	0x966
 2765 0987 22       		.uleb128 0x22
 2766 0988 3B040000 		.4byte	.LASF101
 2767 098c 04       		.byte	0x4
 2768 098d 29       		.byte	0x29
 2769 098e 9D090000 		.4byte	0x99d
 2770 0992 23       		.uleb128 0x23
 2771 0993 77000000 		.4byte	0x77
 2772 0997 23       		.uleb128 0x23
 2773 0998 6B000000 		.4byte	0x6b
 2774 099c 00       		.byte	0
 2775 099d 22       		.uleb128 0x22
 2776 099e 11040000 		.4byte	.LASF102
 2777 09a2 05       		.byte	0x5
 2778 09a3 E7       		.byte	0xe7
 2779 09a4 AE090000 		.4byte	0x9ae
 2780 09a8 23       		.uleb128 0x23
 2781 09a9 6B000000 		.4byte	0x6b
 2782 09ad 00       		.byte	0
 2783 09ae 22       		.uleb128 0x22
 2784 09af 8C030000 		.4byte	.LASF103
 2785 09b3 05       		.byte	0x5
 2786 09b4 C0       		.byte	0xc0
 2787 09b5 C4090000 		.4byte	0x9c4
 2788 09b9 23       		.uleb128 0x23
 2789 09ba 6B000000 		.4byte	0x6b
 2790 09be 23       		.uleb128 0x23
 2791 09bf 6B000000 		.4byte	0x6b
 2792 09c3 00       		.byte	0
 2793 09c4 24       		.uleb128 0x24
 2794 09c5 CC010000 		.4byte	.LASF109
 2795 09c9 05       		.byte	0x5
 2796 09ca BD       		.byte	0xbd
 2797 09cb E5000000 		.4byte	0xe5
 2798 09cf DE090000 		.4byte	0x9de
 2799 09d3 23       		.uleb128 0x23
 2800 09d4 6B000000 		.4byte	0x6b
 2801 09d8 23       		.uleb128 0x23
 2802 09d9 E5000000 		.4byte	0xe5
 2803 09dd 00       		.byte	0
 2804 09de 22       		.uleb128 0x22
 2805 09df 85010000 		.4byte	.LASF104
 2806 09e3 05       		.byte	0x5
 2807 09e4 DA       		.byte	0xda
 2808 09e5 EF090000 		.4byte	0x9ef
 2809 09e9 23       		.uleb128 0x23
 2810 09ea 77000000 		.4byte	0x77
 2811 09ee 00       		.byte	0
 2812 09ef 25       		.uleb128 0x25
 2813 09f0 7D050000 		.4byte	.LASF110
 2814 09f4 06       		.byte	0x6
 2815 09f5 18       		.byte	0x18
 2816 09f6 23       		.uleb128 0x23
 2817 09f7 E5000000 		.4byte	0xe5
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 90


 2818 09fb 00       		.byte	0
 2819 09fc 00       		.byte	0
 2820              		.section	.debug_abbrev,"",%progbits
 2821              	.Ldebug_abbrev0:
 2822 0000 01       		.uleb128 0x1
 2823 0001 11       		.uleb128 0x11
 2824 0002 01       		.byte	0x1
 2825 0003 25       		.uleb128 0x25
 2826 0004 0E       		.uleb128 0xe
 2827 0005 13       		.uleb128 0x13
 2828 0006 0B       		.uleb128 0xb
 2829 0007 03       		.uleb128 0x3
 2830 0008 0E       		.uleb128 0xe
 2831 0009 1B       		.uleb128 0x1b
 2832 000a 0E       		.uleb128 0xe
 2833 000b 55       		.uleb128 0x55
 2834 000c 17       		.uleb128 0x17
 2835 000d 11       		.uleb128 0x11
 2836 000e 01       		.uleb128 0x1
 2837 000f 10       		.uleb128 0x10
 2838 0010 17       		.uleb128 0x17
 2839 0011 00       		.byte	0
 2840 0012 00       		.byte	0
 2841 0013 02       		.uleb128 0x2
 2842 0014 24       		.uleb128 0x24
 2843 0015 00       		.byte	0
 2844 0016 0B       		.uleb128 0xb
 2845 0017 0B       		.uleb128 0xb
 2846 0018 3E       		.uleb128 0x3e
 2847 0019 0B       		.uleb128 0xb
 2848 001a 03       		.uleb128 0x3
 2849 001b 0E       		.uleb128 0xe
 2850 001c 00       		.byte	0
 2851 001d 00       		.byte	0
 2852 001e 03       		.uleb128 0x3
 2853 001f 24       		.uleb128 0x24
 2854 0020 00       		.byte	0
 2855 0021 0B       		.uleb128 0xb
 2856 0022 0B       		.uleb128 0xb
 2857 0023 3E       		.uleb128 0x3e
 2858 0024 0B       		.uleb128 0xb
 2859 0025 03       		.uleb128 0x3
 2860 0026 08       		.uleb128 0x8
 2861 0027 00       		.byte	0
 2862 0028 00       		.byte	0
 2863 0029 04       		.uleb128 0x4
 2864 002a 16       		.uleb128 0x16
 2865 002b 00       		.byte	0
 2866 002c 03       		.uleb128 0x3
 2867 002d 0E       		.uleb128 0xe
 2868 002e 3A       		.uleb128 0x3a
 2869 002f 0B       		.uleb128 0xb
 2870 0030 3B       		.uleb128 0x3b
 2871 0031 05       		.uleb128 0x5
 2872 0032 49       		.uleb128 0x49
 2873 0033 13       		.uleb128 0x13
 2874 0034 00       		.byte	0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 91


 2875 0035 00       		.byte	0
 2876 0036 05       		.uleb128 0x5
 2877 0037 35       		.uleb128 0x35
 2878 0038 00       		.byte	0
 2879 0039 49       		.uleb128 0x49
 2880 003a 13       		.uleb128 0x13
 2881 003b 00       		.byte	0
 2882 003c 00       		.byte	0
 2883 003d 06       		.uleb128 0x6
 2884 003e 0F       		.uleb128 0xf
 2885 003f 00       		.byte	0
 2886 0040 0B       		.uleb128 0xb
 2887 0041 0B       		.uleb128 0xb
 2888 0042 49       		.uleb128 0x49
 2889 0043 13       		.uleb128 0x13
 2890 0044 00       		.byte	0
 2891 0045 00       		.byte	0
 2892 0046 07       		.uleb128 0x7
 2893 0047 15       		.uleb128 0x15
 2894 0048 00       		.byte	0
 2895 0049 27       		.uleb128 0x27
 2896 004a 19       		.uleb128 0x19
 2897 004b 00       		.byte	0
 2898 004c 00       		.byte	0
 2899 004d 08       		.uleb128 0x8
 2900 004e 13       		.uleb128 0x13
 2901 004f 01       		.byte	0x1
 2902 0050 0B       		.uleb128 0xb
 2903 0051 0B       		.uleb128 0xb
 2904 0052 3A       		.uleb128 0x3a
 2905 0053 0B       		.uleb128 0xb
 2906 0054 3B       		.uleb128 0x3b
 2907 0055 0B       		.uleb128 0xb
 2908 0056 01       		.uleb128 0x1
 2909 0057 13       		.uleb128 0x13
 2910 0058 00       		.byte	0
 2911 0059 00       		.byte	0
 2912 005a 09       		.uleb128 0x9
 2913 005b 0D       		.uleb128 0xd
 2914 005c 00       		.byte	0
 2915 005d 03       		.uleb128 0x3
 2916 005e 0E       		.uleb128 0xe
 2917 005f 3A       		.uleb128 0x3a
 2918 0060 0B       		.uleb128 0xb
 2919 0061 3B       		.uleb128 0x3b
 2920 0062 0B       		.uleb128 0xb
 2921 0063 49       		.uleb128 0x49
 2922 0064 13       		.uleb128 0x13
 2923 0065 38       		.uleb128 0x38
 2924 0066 0B       		.uleb128 0xb
 2925 0067 00       		.byte	0
 2926 0068 00       		.byte	0
 2927 0069 0A       		.uleb128 0xa
 2928 006a 16       		.uleb128 0x16
 2929 006b 00       		.byte	0
 2930 006c 03       		.uleb128 0x3
 2931 006d 0E       		.uleb128 0xe
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 92


 2932 006e 3A       		.uleb128 0x3a
 2933 006f 0B       		.uleb128 0xb
 2934 0070 3B       		.uleb128 0x3b
 2935 0071 0B       		.uleb128 0xb
 2936 0072 49       		.uleb128 0x49
 2937 0073 13       		.uleb128 0x13
 2938 0074 00       		.byte	0
 2939 0075 00       		.byte	0
 2940 0076 0B       		.uleb128 0xb
 2941 0077 2E       		.uleb128 0x2e
 2942 0078 01       		.byte	0x1
 2943 0079 03       		.uleb128 0x3
 2944 007a 0E       		.uleb128 0xe
 2945 007b 3A       		.uleb128 0x3a
 2946 007c 0B       		.uleb128 0xb
 2947 007d 3B       		.uleb128 0x3b
 2948 007e 05       		.uleb128 0x5
 2949 007f 27       		.uleb128 0x27
 2950 0080 19       		.uleb128 0x19
 2951 0081 49       		.uleb128 0x49
 2952 0082 13       		.uleb128 0x13
 2953 0083 11       		.uleb128 0x11
 2954 0084 01       		.uleb128 0x1
 2955 0085 12       		.uleb128 0x12
 2956 0086 06       		.uleb128 0x6
 2957 0087 40       		.uleb128 0x40
 2958 0088 18       		.uleb128 0x18
 2959 0089 9742     		.uleb128 0x2117
 2960 008b 19       		.uleb128 0x19
 2961 008c 01       		.uleb128 0x1
 2962 008d 13       		.uleb128 0x13
 2963 008e 00       		.byte	0
 2964 008f 00       		.byte	0
 2965 0090 0C       		.uleb128 0xc
 2966 0091 05       		.uleb128 0x5
 2967 0092 00       		.byte	0
 2968 0093 03       		.uleb128 0x3
 2969 0094 0E       		.uleb128 0xe
 2970 0095 3A       		.uleb128 0x3a
 2971 0096 0B       		.uleb128 0xb
 2972 0097 3B       		.uleb128 0x3b
 2973 0098 05       		.uleb128 0x5
 2974 0099 49       		.uleb128 0x49
 2975 009a 13       		.uleb128 0x13
 2976 009b 02       		.uleb128 0x2
 2977 009c 17       		.uleb128 0x17
 2978 009d 00       		.byte	0
 2979 009e 00       		.byte	0
 2980 009f 0D       		.uleb128 0xd
 2981 00a0 34       		.uleb128 0x34
 2982 00a1 00       		.byte	0
 2983 00a2 03       		.uleb128 0x3
 2984 00a3 0E       		.uleb128 0xe
 2985 00a4 3A       		.uleb128 0x3a
 2986 00a5 0B       		.uleb128 0xb
 2987 00a6 3B       		.uleb128 0x3b
 2988 00a7 05       		.uleb128 0x5
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 93


 2989 00a8 49       		.uleb128 0x49
 2990 00a9 13       		.uleb128 0x13
 2991 00aa 02       		.uleb128 0x2
 2992 00ab 17       		.uleb128 0x17
 2993 00ac 00       		.byte	0
 2994 00ad 00       		.byte	0
 2995 00ae 0E       		.uleb128 0xe
 2996 00af 2E       		.uleb128 0x2e
 2997 00b0 00       		.byte	0
 2998 00b1 3F       		.uleb128 0x3f
 2999 00b2 19       		.uleb128 0x19
 3000 00b3 03       		.uleb128 0x3
 3001 00b4 0E       		.uleb128 0xe
 3002 00b5 3A       		.uleb128 0x3a
 3003 00b6 0B       		.uleb128 0xb
 3004 00b7 3B       		.uleb128 0x3b
 3005 00b8 05       		.uleb128 0x5
 3006 00b9 27       		.uleb128 0x27
 3007 00ba 19       		.uleb128 0x19
 3008 00bb 11       		.uleb128 0x11
 3009 00bc 01       		.uleb128 0x1
 3010 00bd 12       		.uleb128 0x12
 3011 00be 06       		.uleb128 0x6
 3012 00bf 40       		.uleb128 0x40
 3013 00c0 18       		.uleb128 0x18
 3014 00c1 9742     		.uleb128 0x2117
 3015 00c3 19       		.uleb128 0x19
 3016 00c4 00       		.byte	0
 3017 00c5 00       		.byte	0
 3018 00c6 0F       		.uleb128 0xf
 3019 00c7 2E       		.uleb128 0x2e
 3020 00c8 01       		.byte	0x1
 3021 00c9 3F       		.uleb128 0x3f
 3022 00ca 19       		.uleb128 0x19
 3023 00cb 03       		.uleb128 0x3
 3024 00cc 0E       		.uleb128 0xe
 3025 00cd 3A       		.uleb128 0x3a
 3026 00ce 0B       		.uleb128 0xb
 3027 00cf 3B       		.uleb128 0x3b
 3028 00d0 05       		.uleb128 0x5
 3029 00d1 27       		.uleb128 0x27
 3030 00d2 19       		.uleb128 0x19
 3031 00d3 11       		.uleb128 0x11
 3032 00d4 01       		.uleb128 0x1
 3033 00d5 12       		.uleb128 0x12
 3034 00d6 06       		.uleb128 0x6
 3035 00d7 40       		.uleb128 0x40
 3036 00d8 18       		.uleb128 0x18
 3037 00d9 9742     		.uleb128 0x2117
 3038 00db 19       		.uleb128 0x19
 3039 00dc 01       		.uleb128 0x1
 3040 00dd 13       		.uleb128 0x13
 3041 00de 00       		.byte	0
 3042 00df 00       		.byte	0
 3043 00e0 10       		.uleb128 0x10
 3044 00e1 898201   		.uleb128 0x4109
 3045 00e4 01       		.byte	0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 94


 3046 00e5 11       		.uleb128 0x11
 3047 00e6 01       		.uleb128 0x1
 3048 00e7 31       		.uleb128 0x31
 3049 00e8 13       		.uleb128 0x13
 3050 00e9 00       		.byte	0
 3051 00ea 00       		.byte	0
 3052 00eb 11       		.uleb128 0x11
 3053 00ec 8A8201   		.uleb128 0x410a
 3054 00ef 00       		.byte	0
 3055 00f0 02       		.uleb128 0x2
 3056 00f1 18       		.uleb128 0x18
 3057 00f2 9142     		.uleb128 0x2111
 3058 00f4 18       		.uleb128 0x18
 3059 00f5 00       		.byte	0
 3060 00f6 00       		.byte	0
 3061 00f7 12       		.uleb128 0x12
 3062 00f8 26       		.uleb128 0x26
 3063 00f9 00       		.byte	0
 3064 00fa 49       		.uleb128 0x49
 3065 00fb 13       		.uleb128 0x13
 3066 00fc 00       		.byte	0
 3067 00fd 00       		.byte	0
 3068 00fe 13       		.uleb128 0x13
 3069 00ff 05       		.uleb128 0x5
 3070 0100 00       		.byte	0
 3071 0101 03       		.uleb128 0x3
 3072 0102 0E       		.uleb128 0xe
 3073 0103 3A       		.uleb128 0x3a
 3074 0104 0B       		.uleb128 0xb
 3075 0105 3B       		.uleb128 0x3b
 3076 0106 05       		.uleb128 0x5
 3077 0107 49       		.uleb128 0x49
 3078 0108 13       		.uleb128 0x13
 3079 0109 02       		.uleb128 0x2
 3080 010a 18       		.uleb128 0x18
 3081 010b 00       		.byte	0
 3082 010c 00       		.byte	0
 3083 010d 14       		.uleb128 0x14
 3084 010e 34       		.uleb128 0x34
 3085 010f 00       		.byte	0
 3086 0110 03       		.uleb128 0x3
 3087 0111 0E       		.uleb128 0xe
 3088 0112 3A       		.uleb128 0x3a
 3089 0113 0B       		.uleb128 0xb
 3090 0114 3B       		.uleb128 0x3b
 3091 0115 05       		.uleb128 0x5
 3092 0116 49       		.uleb128 0x49
 3093 0117 13       		.uleb128 0x13
 3094 0118 02       		.uleb128 0x2
 3095 0119 18       		.uleb128 0x18
 3096 011a 00       		.byte	0
 3097 011b 00       		.byte	0
 3098 011c 15       		.uleb128 0x15
 3099 011d 2E       		.uleb128 0x2e
 3100 011e 01       		.byte	0x1
 3101 011f 3F       		.uleb128 0x3f
 3102 0120 19       		.uleb128 0x19
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 95


 3103 0121 03       		.uleb128 0x3
 3104 0122 0E       		.uleb128 0xe
 3105 0123 3A       		.uleb128 0x3a
 3106 0124 0B       		.uleb128 0xb
 3107 0125 3B       		.uleb128 0x3b
 3108 0126 05       		.uleb128 0x5
 3109 0127 27       		.uleb128 0x27
 3110 0128 19       		.uleb128 0x19
 3111 0129 49       		.uleb128 0x49
 3112 012a 13       		.uleb128 0x13
 3113 012b 11       		.uleb128 0x11
 3114 012c 01       		.uleb128 0x1
 3115 012d 12       		.uleb128 0x12
 3116 012e 06       		.uleb128 0x6
 3117 012f 40       		.uleb128 0x40
 3118 0130 18       		.uleb128 0x18
 3119 0131 9742     		.uleb128 0x2117
 3120 0133 19       		.uleb128 0x19
 3121 0134 01       		.uleb128 0x1
 3122 0135 13       		.uleb128 0x13
 3123 0136 00       		.byte	0
 3124 0137 00       		.byte	0
 3125 0138 16       		.uleb128 0x16
 3126 0139 34       		.uleb128 0x34
 3127 013a 00       		.byte	0
 3128 013b 03       		.uleb128 0x3
 3129 013c 08       		.uleb128 0x8
 3130 013d 3A       		.uleb128 0x3a
 3131 013e 0B       		.uleb128 0xb
 3132 013f 3B       		.uleb128 0x3b
 3133 0140 05       		.uleb128 0x5
 3134 0141 49       		.uleb128 0x49
 3135 0142 13       		.uleb128 0x13
 3136 0143 02       		.uleb128 0x2
 3137 0144 17       		.uleb128 0x17
 3138 0145 00       		.byte	0
 3139 0146 00       		.byte	0
 3140 0147 17       		.uleb128 0x17
 3141 0148 898201   		.uleb128 0x4109
 3142 014b 01       		.byte	0x1
 3143 014c 11       		.uleb128 0x11
 3144 014d 01       		.uleb128 0x1
 3145 014e 31       		.uleb128 0x31
 3146 014f 13       		.uleb128 0x13
 3147 0150 01       		.uleb128 0x1
 3148 0151 13       		.uleb128 0x13
 3149 0152 00       		.byte	0
 3150 0153 00       		.byte	0
 3151 0154 18       		.uleb128 0x18
 3152 0155 34       		.uleb128 0x34
 3153 0156 00       		.byte	0
 3154 0157 03       		.uleb128 0x3
 3155 0158 0E       		.uleb128 0xe
 3156 0159 3A       		.uleb128 0x3a
 3157 015a 0B       		.uleb128 0xb
 3158 015b 3B       		.uleb128 0x3b
 3159 015c 05       		.uleb128 0x5
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 96


 3160 015d 49       		.uleb128 0x49
 3161 015e 13       		.uleb128 0x13
 3162 015f 00       		.byte	0
 3163 0160 00       		.byte	0
 3164 0161 19       		.uleb128 0x19
 3165 0162 2E       		.uleb128 0x2e
 3166 0163 01       		.byte	0x1
 3167 0164 3F       		.uleb128 0x3f
 3168 0165 19       		.uleb128 0x19
 3169 0166 03       		.uleb128 0x3
 3170 0167 0E       		.uleb128 0xe
 3171 0168 3A       		.uleb128 0x3a
 3172 0169 0B       		.uleb128 0xb
 3173 016a 3B       		.uleb128 0x3b
 3174 016b 05       		.uleb128 0x5
 3175 016c 27       		.uleb128 0x27
 3176 016d 19       		.uleb128 0x19
 3177 016e 49       		.uleb128 0x49
 3178 016f 13       		.uleb128 0x13
 3179 0170 11       		.uleb128 0x11
 3180 0171 01       		.uleb128 0x1
 3181 0172 12       		.uleb128 0x12
 3182 0173 06       		.uleb128 0x6
 3183 0174 40       		.uleb128 0x40
 3184 0175 18       		.uleb128 0x18
 3185 0176 9642     		.uleb128 0x2116
 3186 0178 19       		.uleb128 0x19
 3187 0179 01       		.uleb128 0x1
 3188 017a 13       		.uleb128 0x13
 3189 017b 00       		.byte	0
 3190 017c 00       		.byte	0
 3191 017d 1A       		.uleb128 0x1a
 3192 017e 2E       		.uleb128 0x2e
 3193 017f 01       		.byte	0x1
 3194 0180 3F       		.uleb128 0x3f
 3195 0181 19       		.uleb128 0x19
 3196 0182 03       		.uleb128 0x3
 3197 0183 0E       		.uleb128 0xe
 3198 0184 3A       		.uleb128 0x3a
 3199 0185 0B       		.uleb128 0xb
 3200 0186 3B       		.uleb128 0x3b
 3201 0187 05       		.uleb128 0x5
 3202 0188 27       		.uleb128 0x27
 3203 0189 19       		.uleb128 0x19
 3204 018a 11       		.uleb128 0x11
 3205 018b 01       		.uleb128 0x1
 3206 018c 12       		.uleb128 0x12
 3207 018d 06       		.uleb128 0x6
 3208 018e 40       		.uleb128 0x40
 3209 018f 18       		.uleb128 0x18
 3210 0190 9642     		.uleb128 0x2116
 3211 0192 19       		.uleb128 0x19
 3212 0193 01       		.uleb128 0x1
 3213 0194 13       		.uleb128 0x13
 3214 0195 00       		.byte	0
 3215 0196 00       		.byte	0
 3216 0197 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 97


 3217 0198 898201   		.uleb128 0x4109
 3218 019b 00       		.byte	0
 3219 019c 11       		.uleb128 0x11
 3220 019d 01       		.uleb128 0x1
 3221 019e 31       		.uleb128 0x31
 3222 019f 13       		.uleb128 0x13
 3223 01a0 00       		.byte	0
 3224 01a1 00       		.byte	0
 3225 01a2 1C       		.uleb128 0x1c
 3226 01a3 34       		.uleb128 0x34
 3227 01a4 00       		.byte	0
 3228 01a5 03       		.uleb128 0x3
 3229 01a6 0E       		.uleb128 0xe
 3230 01a7 3A       		.uleb128 0x3a
 3231 01a8 0B       		.uleb128 0xb
 3232 01a9 3B       		.uleb128 0x3b
 3233 01aa 0B       		.uleb128 0xb
 3234 01ab 49       		.uleb128 0x49
 3235 01ac 13       		.uleb128 0x13
 3236 01ad 02       		.uleb128 0x2
 3237 01ae 18       		.uleb128 0x18
 3238 01af 00       		.byte	0
 3239 01b0 00       		.byte	0
 3240 01b1 1D       		.uleb128 0x1d
 3241 01b2 01       		.uleb128 0x1
 3242 01b3 01       		.byte	0x1
 3243 01b4 49       		.uleb128 0x49
 3244 01b5 13       		.uleb128 0x13
 3245 01b6 01       		.uleb128 0x1
 3246 01b7 13       		.uleb128 0x13
 3247 01b8 00       		.byte	0
 3248 01b9 00       		.byte	0
 3249 01ba 1E       		.uleb128 0x1e
 3250 01bb 21       		.uleb128 0x21
 3251 01bc 00       		.byte	0
 3252 01bd 49       		.uleb128 0x49
 3253 01be 13       		.uleb128 0x13
 3254 01bf 2F       		.uleb128 0x2f
 3255 01c0 0B       		.uleb128 0xb
 3256 01c1 00       		.byte	0
 3257 01c2 00       		.byte	0
 3258 01c3 1F       		.uleb128 0x1f
 3259 01c4 34       		.uleb128 0x34
 3260 01c5 00       		.byte	0
 3261 01c6 03       		.uleb128 0x3
 3262 01c7 0E       		.uleb128 0xe
 3263 01c8 3A       		.uleb128 0x3a
 3264 01c9 0B       		.uleb128 0xb
 3265 01ca 3B       		.uleb128 0x3b
 3266 01cb 0B       		.uleb128 0xb
 3267 01cc 49       		.uleb128 0x49
 3268 01cd 13       		.uleb128 0x13
 3269 01ce 1C       		.uleb128 0x1c
 3270 01cf 0A       		.uleb128 0xa
 3271 01d0 00       		.byte	0
 3272 01d1 00       		.byte	0
 3273 01d2 20       		.uleb128 0x20
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 98


 3274 01d3 34       		.uleb128 0x34
 3275 01d4 00       		.byte	0
 3276 01d5 03       		.uleb128 0x3
 3277 01d6 0E       		.uleb128 0xe
 3278 01d7 3A       		.uleb128 0x3a
 3279 01d8 0B       		.uleb128 0xb
 3280 01d9 3B       		.uleb128 0x3b
 3281 01da 0B       		.uleb128 0xb
 3282 01db 49       		.uleb128 0x49
 3283 01dc 13       		.uleb128 0x13
 3284 01dd 3F       		.uleb128 0x3f
 3285 01de 19       		.uleb128 0x19
 3286 01df 02       		.uleb128 0x2
 3287 01e0 18       		.uleb128 0x18
 3288 01e1 00       		.byte	0
 3289 01e2 00       		.byte	0
 3290 01e3 21       		.uleb128 0x21
 3291 01e4 34       		.uleb128 0x34
 3292 01e5 00       		.byte	0
 3293 01e6 03       		.uleb128 0x3
 3294 01e7 0E       		.uleb128 0xe
 3295 01e8 3A       		.uleb128 0x3a
 3296 01e9 0B       		.uleb128 0xb
 3297 01ea 3B       		.uleb128 0x3b
 3298 01eb 05       		.uleb128 0x5
 3299 01ec 49       		.uleb128 0x49
 3300 01ed 13       		.uleb128 0x13
 3301 01ee 3F       		.uleb128 0x3f
 3302 01ef 19       		.uleb128 0x19
 3303 01f0 3C       		.uleb128 0x3c
 3304 01f1 19       		.uleb128 0x19
 3305 01f2 00       		.byte	0
 3306 01f3 00       		.byte	0
 3307 01f4 22       		.uleb128 0x22
 3308 01f5 2E       		.uleb128 0x2e
 3309 01f6 01       		.byte	0x1
 3310 01f7 3F       		.uleb128 0x3f
 3311 01f8 19       		.uleb128 0x19
 3312 01f9 03       		.uleb128 0x3
 3313 01fa 0E       		.uleb128 0xe
 3314 01fb 3A       		.uleb128 0x3a
 3315 01fc 0B       		.uleb128 0xb
 3316 01fd 3B       		.uleb128 0x3b
 3317 01fe 0B       		.uleb128 0xb
 3318 01ff 27       		.uleb128 0x27
 3319 0200 19       		.uleb128 0x19
 3320 0201 3C       		.uleb128 0x3c
 3321 0202 19       		.uleb128 0x19
 3322 0203 01       		.uleb128 0x1
 3323 0204 13       		.uleb128 0x13
 3324 0205 00       		.byte	0
 3325 0206 00       		.byte	0
 3326 0207 23       		.uleb128 0x23
 3327 0208 05       		.uleb128 0x5
 3328 0209 00       		.byte	0
 3329 020a 49       		.uleb128 0x49
 3330 020b 13       		.uleb128 0x13
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 99


 3331 020c 00       		.byte	0
 3332 020d 00       		.byte	0
 3333 020e 24       		.uleb128 0x24
 3334 020f 2E       		.uleb128 0x2e
 3335 0210 01       		.byte	0x1
 3336 0211 3F       		.uleb128 0x3f
 3337 0212 19       		.uleb128 0x19
 3338 0213 03       		.uleb128 0x3
 3339 0214 0E       		.uleb128 0xe
 3340 0215 3A       		.uleb128 0x3a
 3341 0216 0B       		.uleb128 0xb
 3342 0217 3B       		.uleb128 0x3b
 3343 0218 0B       		.uleb128 0xb
 3344 0219 27       		.uleb128 0x27
 3345 021a 19       		.uleb128 0x19
 3346 021b 49       		.uleb128 0x49
 3347 021c 13       		.uleb128 0x13
 3348 021d 3C       		.uleb128 0x3c
 3349 021e 19       		.uleb128 0x19
 3350 021f 01       		.uleb128 0x1
 3351 0220 13       		.uleb128 0x13
 3352 0221 00       		.byte	0
 3353 0222 00       		.byte	0
 3354 0223 25       		.uleb128 0x25
 3355 0224 2E       		.uleb128 0x2e
 3356 0225 01       		.byte	0x1
 3357 0226 3F       		.uleb128 0x3f
 3358 0227 19       		.uleb128 0x19
 3359 0228 03       		.uleb128 0x3
 3360 0229 0E       		.uleb128 0xe
 3361 022a 3A       		.uleb128 0x3a
 3362 022b 0B       		.uleb128 0xb
 3363 022c 3B       		.uleb128 0x3b
 3364 022d 0B       		.uleb128 0xb
 3365 022e 27       		.uleb128 0x27
 3366 022f 19       		.uleb128 0x19
 3367 0230 3C       		.uleb128 0x3c
 3368 0231 19       		.uleb128 0x19
 3369 0232 00       		.byte	0
 3370 0233 00       		.byte	0
 3371 0234 00       		.byte	0
 3372              		.section	.debug_loc,"",%progbits
 3373              	.Ldebug_loc0:
 3374              	.LLST0:
 3375 0000 00000000 		.4byte	.LVL0
 3376 0004 02000000 		.4byte	.LVL1
 3377 0008 0100     		.2byte	0x1
 3378 000a 50       		.byte	0x50
 3379 000b 02000000 		.4byte	.LVL1
 3380 000f 58000000 		.4byte	.LFE12
 3381 0013 0400     		.2byte	0x4
 3382 0015 F3       		.byte	0xf3
 3383 0016 01       		.uleb128 0x1
 3384 0017 50       		.byte	0x50
 3385 0018 9F       		.byte	0x9f
 3386 0019 00000000 		.4byte	0
 3387 001d 00000000 		.4byte	0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 100


 3388              	.LLST1:
 3389 0021 00000000 		.4byte	.LVL0
 3390 0025 46000000 		.4byte	.LVL6
 3391 0029 0200     		.2byte	0x2
 3392 002b 30       		.byte	0x30
 3393 002c 9F       		.byte	0x9f
 3394 002d 46000000 		.4byte	.LVL6
 3395 0031 58000000 		.4byte	.LFE12
 3396 0035 0100     		.2byte	0x1
 3397 0037 50       		.byte	0x50
 3398 0038 00000000 		.4byte	0
 3399 003c 00000000 		.4byte	0
 3400              	.LLST2:
 3401 0040 0A000000 		.4byte	.LVL2
 3402 0044 14000000 		.4byte	.LVL3
 3403 0048 0100     		.2byte	0x1
 3404 004a 52       		.byte	0x52
 3405 004b 28000000 		.4byte	.LVL4
 3406 004f 2C000000 		.4byte	.LVL5
 3407 0053 0100     		.2byte	0x1
 3408 0055 52       		.byte	0x52
 3409 0056 00000000 		.4byte	0
 3410 005a 00000000 		.4byte	0
 3411              	.LLST3:
 3412 005e 00000000 		.4byte	.LVL7
 3413 0062 06000000 		.4byte	.LVL8
 3414 0066 0100     		.2byte	0x1
 3415 0068 50       		.byte	0x50
 3416 0069 06000000 		.4byte	.LVL8
 3417 006d 9E000000 		.4byte	.LVL20
 3418 0071 0100     		.2byte	0x1
 3419 0073 54       		.byte	0x54
 3420 0074 9E000000 		.4byte	.LVL20
 3421 0078 D4000000 		.4byte	.LFE4
 3422 007c 0400     		.2byte	0x4
 3423 007e F3       		.byte	0xf3
 3424 007f 01       		.uleb128 0x1
 3425 0080 50       		.byte	0x50
 3426 0081 9F       		.byte	0x9f
 3427 0082 00000000 		.4byte	0
 3428 0086 00000000 		.4byte	0
 3429              	.LLST4:
 3430 008a 84000000 		.4byte	.LVL16
 3431 008e 88000000 		.4byte	.LVL18
 3432 0092 0200     		.2byte	0x2
 3433 0094 30       		.byte	0x30
 3434 0095 9F       		.byte	0x9f
 3435 0096 88000000 		.4byte	.LVL18
 3436 009a D4000000 		.4byte	.LFE4
 3437 009e 0100     		.2byte	0x1
 3438 00a0 53       		.byte	0x53
 3439 00a1 00000000 		.4byte	0
 3440 00a5 00000000 		.4byte	0
 3441              	.LLST5:
 3442 00a9 5E000000 		.4byte	.LVL10
 3443 00ad 76000000 		.4byte	.LVL13
 3444 00b1 0100     		.2byte	0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 101


 3445 00b3 53       		.byte	0x53
 3446 00b4 76000000 		.4byte	.LVL13
 3447 00b8 7A000000 		.4byte	.LVL14
 3448 00bc 0700     		.2byte	0x7
 3449 00be 73       		.byte	0x73
 3450 00bf 00       		.sleb128 0
 3451 00c0 40       		.byte	0x40
 3452 00c1 49       		.byte	0x49
 3453 00c2 24       		.byte	0x24
 3454 00c3 21       		.byte	0x21
 3455 00c4 9F       		.byte	0x9f
 3456 00c5 80000000 		.4byte	.LVL15
 3457 00c9 86000000 		.4byte	.LVL17
 3458 00cd 0100     		.2byte	0x1
 3459 00cf 53       		.byte	0x53
 3460 00d0 86000000 		.4byte	.LVL17
 3461 00d4 88000000 		.4byte	.LVL18
 3462 00d8 0200     		.2byte	0x2
 3463 00da 72       		.byte	0x72
 3464 00db 00       		.sleb128 0
 3465 00dc 88000000 		.4byte	.LVL18
 3466 00e0 98000000 		.4byte	.LVL19
 3467 00e4 0400     		.2byte	0x4
 3468 00e6 0A       		.byte	0xa
 3469 00e7 0001     		.2byte	0x100
 3470 00e9 9F       		.byte	0x9f
 3471 00ea 00000000 		.4byte	0
 3472 00ee 00000000 		.4byte	0
 3473              	.LLST6:
 3474 00f2 00000000 		.4byte	.LVL22
 3475 00f6 04000000 		.4byte	.LVL23
 3476 00fa 0100     		.2byte	0x1
 3477 00fc 50       		.byte	0x50
 3478 00fd 04000000 		.4byte	.LVL23
 3479 0101 10000000 		.4byte	.LFE9
 3480 0105 0400     		.2byte	0x4
 3481 0107 F3       		.byte	0xf3
 3482 0108 01       		.uleb128 0x1
 3483 0109 50       		.byte	0x50
 3484 010a 9F       		.byte	0x9f
 3485 010b 00000000 		.4byte	0
 3486 010f 00000000 		.4byte	0
 3487              	.LLST7:
 3488 0113 00000000 		.4byte	.LVL24
 3489 0117 18000000 		.4byte	.LVL26
 3490 011b 0100     		.2byte	0x1
 3491 011d 50       		.byte	0x50
 3492 011e 18000000 		.4byte	.LVL26
 3493 0122 2C000000 		.4byte	.LFE10
 3494 0126 0100     		.2byte	0x1
 3495 0128 50       		.byte	0x50
 3496 0129 00000000 		.4byte	0
 3497 012d 00000000 		.4byte	0
 3498              	.LLST8:
 3499 0131 00000000 		.4byte	.LVL27
 3500 0135 0A000000 		.4byte	.LVL29
 3501 0139 0100     		.2byte	0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 102


 3502 013b 50       		.byte	0x50
 3503 013c 0A000000 		.4byte	.LVL29
 3504 0140 2C000000 		.4byte	.LVL33
 3505 0144 0100     		.2byte	0x1
 3506 0146 51       		.byte	0x51
 3507 0147 2C000000 		.4byte	.LVL33
 3508 014b 2E000000 		.4byte	.LVL34
 3509 014f 0100     		.2byte	0x1
 3510 0151 50       		.byte	0x50
 3511 0152 2E000000 		.4byte	.LVL34
 3512 0156 38000000 		.4byte	.LFE11
 3513 015a 0100     		.2byte	0x1
 3514 015c 51       		.byte	0x51
 3515 015d 00000000 		.4byte	0
 3516 0161 00000000 		.4byte	0
 3517              	.LLST9:
 3518 0165 02000000 		.4byte	.LVL28
 3519 0169 0A000000 		.4byte	.LVL29
 3520 016d 0200     		.2byte	0x2
 3521 016f 30       		.byte	0x30
 3522 0170 9F       		.byte	0x9f
 3523 0171 12000000 		.4byte	.LVL30
 3524 0175 2C000000 		.4byte	.LVL33
 3525 0179 0100     		.2byte	0x1
 3526 017b 50       		.byte	0x50
 3527 017c 2C000000 		.4byte	.LVL33
 3528 0180 2E000000 		.4byte	.LVL34
 3529 0184 0200     		.2byte	0x2
 3530 0186 30       		.byte	0x30
 3531 0187 9F       		.byte	0x9f
 3532 0188 2E000000 		.4byte	.LVL34
 3533 018c 38000000 		.4byte	.LFE11
 3534 0190 0100     		.2byte	0x1
 3535 0192 50       		.byte	0x50
 3536 0193 00000000 		.4byte	0
 3537 0197 00000000 		.4byte	0
 3538              	.LLST10:
 3539 019b 02000000 		.4byte	.LVL28
 3540 019f 0A000000 		.4byte	.LVL29
 3541 01a3 0600     		.2byte	0x6
 3542 01a5 0C       		.byte	0xc
 3543 01a6 FFFFFF03 		.4byte	0x3ffffff
 3544 01aa 9F       		.byte	0x9f
 3545 01ab 0A000000 		.4byte	.LVL29
 3546 01af 26000000 		.4byte	.LVL32
 3547 01b3 0100     		.2byte	0x1
 3548 01b5 52       		.byte	0x52
 3549 01b6 2C000000 		.4byte	.LVL33
 3550 01ba 2E000000 		.4byte	.LVL34
 3551 01be 0600     		.2byte	0x6
 3552 01c0 0C       		.byte	0xc
 3553 01c1 FFFFFF03 		.4byte	0x3ffffff
 3554 01c5 9F       		.byte	0x9f
 3555 01c6 00000000 		.4byte	0
 3556 01ca 00000000 		.4byte	0
 3557              	.LLST11:
 3558 01ce 00000000 		.4byte	.LVL35
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 103


 3559 01d2 1A000000 		.4byte	.LVL36
 3560 01d6 0100     		.2byte	0x1
 3561 01d8 50       		.byte	0x50
 3562 01d9 1A000000 		.4byte	.LVL36
 3563 01dd 34000000 		.4byte	.LVL38
 3564 01e1 0100     		.2byte	0x1
 3565 01e3 54       		.byte	0x54
 3566 01e4 34000000 		.4byte	.LVL38
 3567 01e8 42000000 		.4byte	.LVL40
 3568 01ec 0400     		.2byte	0x4
 3569 01ee F3       		.byte	0xf3
 3570 01ef 01       		.uleb128 0x1
 3571 01f0 50       		.byte	0x50
 3572 01f1 9F       		.byte	0x9f
 3573 01f2 42000000 		.4byte	.LVL40
 3574 01f6 44000000 		.4byte	.LVL41
 3575 01fa 0100     		.2byte	0x1
 3576 01fc 54       		.byte	0x54
 3577 01fd 44000000 		.4byte	.LVL41
 3578 0201 54000000 		.4byte	.LFE13
 3579 0205 0400     		.2byte	0x4
 3580 0207 F3       		.byte	0xf3
 3581 0208 01       		.uleb128 0x1
 3582 0209 50       		.byte	0x50
 3583 020a 9F       		.byte	0x9f
 3584 020b 00000000 		.4byte	0
 3585 020f 00000000 		.4byte	0
 3586              	.LLST12:
 3587 0213 40000000 		.4byte	.LVL39
 3588 0217 42000000 		.4byte	.LVL40
 3589 021b 0100     		.2byte	0x1
 3590 021d 50       		.byte	0x50
 3591 021e 44000000 		.4byte	.LVL41
 3592 0222 46000000 		.4byte	.LVL42
 3593 0226 0100     		.2byte	0x1
 3594 0228 50       		.byte	0x50
 3595 0229 00000000 		.4byte	0
 3596 022d 00000000 		.4byte	0
 3597              	.LLST13:
 3598 0231 00000000 		.4byte	.LVL43
 3599 0235 1A000000 		.4byte	.LVL44
 3600 0239 0100     		.2byte	0x1
 3601 023b 50       		.byte	0x50
 3602 023c 1A000000 		.4byte	.LVL44
 3603 0240 54000000 		.4byte	.LVL55
 3604 0244 0100     		.2byte	0x1
 3605 0246 55       		.byte	0x55
 3606 0247 54000000 		.4byte	.LVL55
 3607 024b 64000000 		.4byte	.LFE14
 3608 024f 0400     		.2byte	0x4
 3609 0251 F3       		.byte	0xf3
 3610 0252 01       		.uleb128 0x1
 3611 0253 50       		.byte	0x50
 3612 0254 9F       		.byte	0x9f
 3613 0255 00000000 		.4byte	0
 3614 0259 00000000 		.4byte	0
 3615              	.LLST14:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 104


 3616 025d 40000000 		.4byte	.LVL46
 3617 0261 42000000 		.4byte	.LVL47
 3618 0265 0100     		.2byte	0x1
 3619 0267 54       		.byte	0x54
 3620 0268 44000000 		.4byte	.LVL48
 3621 026c 54000000 		.4byte	.LVL54
 3622 0270 0100     		.2byte	0x1
 3623 0272 54       		.byte	0x54
 3624 0273 00000000 		.4byte	0
 3625 0277 00000000 		.4byte	0
 3626              	.LLST15:
 3627 027b 4E000000 		.4byte	.LVL50
 3628 027f 52000000 		.4byte	.LVL52
 3629 0283 0100     		.2byte	0x1
 3630 0285 54       		.byte	0x54
 3631 0286 00000000 		.4byte	0
 3632 028a 00000000 		.4byte	0
 3633              	.LLST16:
 3634 028e 50000000 		.4byte	.LVL51
 3635 0292 52000000 		.4byte	.LVL52
 3636 0296 0100     		.2byte	0x1
 3637 0298 50       		.byte	0x50
 3638 0299 54000000 		.4byte	.LVL53
 3639 029d 64000000 		.4byte	.LFE14
 3640 02a1 0100     		.2byte	0x1
 3641 02a3 50       		.byte	0x50
 3642 02a4 00000000 		.4byte	0
 3643 02a8 00000000 		.4byte	0
 3644              	.LLST17:
 3645 02ac 00000000 		.4byte	.LVL56
 3646 02b0 0E000000 		.4byte	.LVL57
 3647 02b4 0100     		.2byte	0x1
 3648 02b6 50       		.byte	0x50
 3649 02b7 0E000000 		.4byte	.LVL57
 3650 02bb 1C000000 		.4byte	.LFE15
 3651 02bf 0400     		.2byte	0x4
 3652 02c1 F3       		.byte	0xf3
 3653 02c2 01       		.uleb128 0x1
 3654 02c3 50       		.byte	0x50
 3655 02c4 9F       		.byte	0x9f
 3656 02c5 00000000 		.4byte	0
 3657 02c9 00000000 		.4byte	0
 3658              	.LLST18:
 3659 02cd 00000000 		.4byte	.LVL58
 3660 02d1 0E000000 		.4byte	.LVL59
 3661 02d5 0100     		.2byte	0x1
 3662 02d7 50       		.byte	0x50
 3663 02d8 0E000000 		.4byte	.LVL59
 3664 02dc 18000000 		.4byte	.LFE16
 3665 02e0 0400     		.2byte	0x4
 3666 02e2 F3       		.byte	0xf3
 3667 02e3 01       		.uleb128 0x1
 3668 02e4 50       		.byte	0x50
 3669 02e5 9F       		.byte	0x9f
 3670 02e6 00000000 		.4byte	0
 3671 02ea 00000000 		.4byte	0
 3672              	.LLST19:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 105


 3673 02ee 00000000 		.4byte	.LVL60
 3674 02f2 18000000 		.4byte	.LVL62
 3675 02f6 0100     		.2byte	0x1
 3676 02f8 50       		.byte	0x50
 3677 02f9 18000000 		.4byte	.LVL62
 3678 02fd 2C000000 		.4byte	.LFE17
 3679 0301 0100     		.2byte	0x1
 3680 0303 50       		.byte	0x50
 3681 0304 00000000 		.4byte	0
 3682 0308 00000000 		.4byte	0
 3683              	.LLST20:
 3684 030c 00000000 		.4byte	.LVL63
 3685 0310 18000000 		.4byte	.LVL65
 3686 0314 0100     		.2byte	0x1
 3687 0316 50       		.byte	0x50
 3688 0317 18000000 		.4byte	.LVL65
 3689 031b 2C000000 		.4byte	.LFE18
 3690 031f 0100     		.2byte	0x1
 3691 0321 50       		.byte	0x50
 3692 0322 00000000 		.4byte	0
 3693 0326 00000000 		.4byte	0
 3694              	.LLST21:
 3695 032a 00000000 		.4byte	.LVL66
 3696 032e 1C000000 		.4byte	.LVL67
 3697 0332 0100     		.2byte	0x1
 3698 0334 50       		.byte	0x50
 3699 0335 1C000000 		.4byte	.LVL67
 3700 0339 30000000 		.4byte	.LVL69
 3701 033d 0100     		.2byte	0x1
 3702 033f 54       		.byte	0x54
 3703 0340 30000000 		.4byte	.LVL69
 3704 0344 44000000 		.4byte	.LFE19
 3705 0348 0400     		.2byte	0x4
 3706 034a F3       		.byte	0xf3
 3707 034b 01       		.uleb128 0x1
 3708 034c 50       		.byte	0x50
 3709 034d 9F       		.byte	0x9f
 3710 034e 00000000 		.4byte	0
 3711 0352 00000000 		.4byte	0
 3712              	.LLST22:
 3713 0356 00000000 		.4byte	.LVL66
 3714 035a 1F000000 		.4byte	.LVL68-1
 3715 035e 0100     		.2byte	0x1
 3716 0360 51       		.byte	0x51
 3717 0361 1F000000 		.4byte	.LVL68-1
 3718 0365 44000000 		.4byte	.LFE19
 3719 0369 0400     		.2byte	0x4
 3720 036b F3       		.byte	0xf3
 3721 036c 01       		.uleb128 0x1
 3722 036d 51       		.byte	0x51
 3723 036e 9F       		.byte	0x9f
 3724 036f 00000000 		.4byte	0
 3725 0373 00000000 		.4byte	0
 3726              	.LLST23:
 3727 0377 00000000 		.4byte	.LVL70
 3728 037b 1C000000 		.4byte	.LVL71
 3729 037f 0100     		.2byte	0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 106


 3730 0381 50       		.byte	0x50
 3731 0382 1C000000 		.4byte	.LVL71
 3732 0386 30000000 		.4byte	.LVL73
 3733 038a 0100     		.2byte	0x1
 3734 038c 54       		.byte	0x54
 3735 038d 30000000 		.4byte	.LVL73
 3736 0391 44000000 		.4byte	.LFE20
 3737 0395 0400     		.2byte	0x4
 3738 0397 F3       		.byte	0xf3
 3739 0398 01       		.uleb128 0x1
 3740 0399 50       		.byte	0x50
 3741 039a 9F       		.byte	0x9f
 3742 039b 00000000 		.4byte	0
 3743 039f 00000000 		.4byte	0
 3744              	.LLST24:
 3745 03a3 00000000 		.4byte	.LVL70
 3746 03a7 1F000000 		.4byte	.LVL72-1
 3747 03ab 0100     		.2byte	0x1
 3748 03ad 51       		.byte	0x51
 3749 03ae 1F000000 		.4byte	.LVL72-1
 3750 03b2 36000000 		.4byte	.LVL74
 3751 03b6 0100     		.2byte	0x1
 3752 03b8 55       		.byte	0x55
 3753 03b9 36000000 		.4byte	.LVL74
 3754 03bd 44000000 		.4byte	.LFE20
 3755 03c1 1E00     		.2byte	0x1e
 3756 03c3 03       		.byte	0x3
 3757 03c4 00000000 		.4byte	ADC_currentConfig
 3758 03c8 06       		.byte	0x6
 3759 03c9 33       		.byte	0x33
 3760 03ca 24       		.byte	0x24
 3761 03cb 03       		.byte	0x3
 3762 03cc 00000000 		.4byte	ADC_currentConfig
 3763 03d0 06       		.byte	0x6
 3764 03d1 1C       		.byte	0x1c
 3765 03d2 33       		.byte	0x33
 3766 03d3 24       		.byte	0x24
 3767 03d4 72       		.byte	0x72
 3768 03d5 00       		.sleb128 0
 3769 03d6 22       		.byte	0x22
 3770 03d7 06       		.byte	0x6
 3771 03d8 F3       		.byte	0xf3
 3772 03d9 01       		.uleb128 0x1
 3773 03da 50       		.byte	0x50
 3774 03db 22       		.byte	0x22
 3775 03dc 32       		.byte	0x32
 3776 03dd 24       		.byte	0x24
 3777 03de 73       		.byte	0x73
 3778 03df 00       		.sleb128 0
 3779 03e0 22       		.byte	0x22
 3780 03e1 00000000 		.4byte	0
 3781 03e5 00000000 		.4byte	0
 3782              	.LLST25:
 3783 03e9 00000000 		.4byte	.LVL75
 3784 03ed 22000000 		.4byte	.LVL78
 3785 03f1 0100     		.2byte	0x1
 3786 03f3 50       		.byte	0x50
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 107


 3787 03f4 22000000 		.4byte	.LVL78
 3788 03f8 40000000 		.4byte	.LFE21
 3789 03fc 0400     		.2byte	0x4
 3790 03fe F3       		.byte	0xf3
 3791 03ff 01       		.uleb128 0x1
 3792 0400 50       		.byte	0x50
 3793 0401 9F       		.byte	0x9f
 3794 0402 00000000 		.4byte	0
 3795 0406 00000000 		.4byte	0
 3796              	.LLST26:
 3797 040a 00000000 		.4byte	.LVL75
 3798 040e 08000000 		.4byte	.LVL76
 3799 0412 0100     		.2byte	0x1
 3800 0414 51       		.byte	0x51
 3801 0415 08000000 		.4byte	.LVL76
 3802 0419 26000000 		.4byte	.LVL79
 3803 041d 0400     		.2byte	0x4
 3804 041f F3       		.byte	0xf3
 3805 0420 01       		.uleb128 0x1
 3806 0421 51       		.byte	0x51
 3807 0422 9F       		.byte	0x9f
 3808 0423 26000000 		.4byte	.LVL79
 3809 0427 30000000 		.4byte	.LVL81
 3810 042b 0100     		.2byte	0x1
 3811 042d 54       		.byte	0x54
 3812 042e 30000000 		.4byte	.LVL81
 3813 0432 40000000 		.4byte	.LFE21
 3814 0436 0100     		.2byte	0x1
 3815 0438 50       		.byte	0x50
 3816 0439 00000000 		.4byte	0
 3817 043d 00000000 		.4byte	0
 3818              	.LLST27:
 3819 0441 14000000 		.4byte	.LVL77
 3820 0445 28000000 		.4byte	.LVL80
 3821 0449 0100     		.2byte	0x1
 3822 044b 55       		.byte	0x55
 3823 044c 00000000 		.4byte	0
 3824 0450 00000000 		.4byte	0
 3825              	.LLST28:
 3826 0454 00000000 		.4byte	.LVL82
 3827 0458 21000000 		.4byte	.LVL85-1
 3828 045c 0100     		.2byte	0x1
 3829 045e 50       		.byte	0x50
 3830 045f 21000000 		.4byte	.LVL85-1
 3831 0463 42000000 		.4byte	.LVL91
 3832 0467 0400     		.2byte	0x4
 3833 0469 F3       		.byte	0xf3
 3834 046a 01       		.uleb128 0x1
 3835 046b 50       		.byte	0x50
 3836 046c 9F       		.byte	0x9f
 3837 046d 42000000 		.4byte	.LVL91
 3838 0471 44000000 		.4byte	.LVL92
 3839 0475 0100     		.2byte	0x1
 3840 0477 50       		.byte	0x50
 3841 0478 44000000 		.4byte	.LVL92
 3842 047c 58000000 		.4byte	.LFE22
 3843 0480 0400     		.2byte	0x4
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 108


 3844 0482 F3       		.byte	0xf3
 3845 0483 01       		.uleb128 0x1
 3846 0484 50       		.byte	0x50
 3847 0485 9F       		.byte	0x9f
 3848 0486 00000000 		.4byte	0
 3849 048a 00000000 		.4byte	0
 3850              	.LLST29:
 3851 048e 00000000 		.4byte	.LVL82
 3852 0492 21000000 		.4byte	.LVL85-1
 3853 0496 0100     		.2byte	0x1
 3854 0498 51       		.byte	0x51
 3855 0499 21000000 		.4byte	.LVL85-1
 3856 049d 22000000 		.4byte	.LVL85
 3857 04a1 0400     		.2byte	0x4
 3858 04a3 F3       		.byte	0xf3
 3859 04a4 01       		.uleb128 0x1
 3860 04a5 51       		.byte	0x51
 3861 04a6 9F       		.byte	0x9f
 3862 04a7 22000000 		.4byte	.LVL85
 3863 04ab 25000000 		.4byte	.LVL86-1
 3864 04af 0100     		.2byte	0x1
 3865 04b1 50       		.byte	0x50
 3866 04b2 42000000 		.4byte	.LVL91
 3867 04b6 44000000 		.4byte	.LVL92
 3868 04ba 0100     		.2byte	0x1
 3869 04bc 51       		.byte	0x51
 3870 04bd 00000000 		.4byte	0
 3871 04c1 00000000 		.4byte	0
 3872              	.LLST30:
 3873 04c5 02000000 		.4byte	.LVL83
 3874 04c9 40000000 		.4byte	.LVL90
 3875 04cd 0600     		.2byte	0x6
 3876 04cf 9E       		.byte	0x9e
 3877 04d0 04       		.uleb128 0x4
 3878 04d1 00000000 		.4byte	0
 3879 04d5 40000000 		.4byte	.LVL90
 3880 04d9 42000000 		.4byte	.LVL91
 3881 04dd 0100     		.2byte	0x1
 3882 04df 50       		.byte	0x50
 3883 04e0 42000000 		.4byte	.LVL91
 3884 04e4 44000000 		.4byte	.LVL92
 3885 04e8 0600     		.2byte	0x6
 3886 04ea 9E       		.byte	0x9e
 3887 04eb 04       		.uleb128 0x4
 3888 04ec 00000000 		.4byte	0
 3889 04f0 44000000 		.4byte	.LVL92
 3890 04f4 58000000 		.4byte	.LFE22
 3891 04f8 0100     		.2byte	0x1
 3892 04fa 50       		.byte	0x50
 3893 04fb 00000000 		.4byte	0
 3894 04ff 00000000 		.4byte	0
 3895              	.LLST31:
 3896 0503 12000000 		.4byte	.LVL84
 3897 0507 30000000 		.4byte	.LVL88
 3898 050b 0100     		.2byte	0x1
 3899 050d 54       		.byte	0x54
 3900 050e 42000000 		.4byte	.LVL91
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 109


 3901 0512 44000000 		.4byte	.LVL92
 3902 0516 0100     		.2byte	0x1
 3903 0518 54       		.byte	0x54
 3904 0519 00000000 		.4byte	0
 3905 051d 00000000 		.4byte	0
 3906              	.LLST32:
 3907 0521 00000000 		.4byte	.LVL93
 3908 0525 21000000 		.4byte	.LVL96-1
 3909 0529 0100     		.2byte	0x1
 3910 052b 50       		.byte	0x50
 3911 052c 21000000 		.4byte	.LVL96-1
 3912 0530 56000000 		.4byte	.LVL103
 3913 0534 0400     		.2byte	0x4
 3914 0536 F3       		.byte	0xf3
 3915 0537 01       		.uleb128 0x1
 3916 0538 50       		.byte	0x50
 3917 0539 9F       		.byte	0x9f
 3918 053a 56000000 		.4byte	.LVL103
 3919 053e 58000000 		.4byte	.LVL104
 3920 0542 0100     		.2byte	0x1
 3921 0544 50       		.byte	0x50
 3922 0545 58000000 		.4byte	.LVL104
 3923 0549 6C000000 		.4byte	.LFE23
 3924 054d 0400     		.2byte	0x4
 3925 054f F3       		.byte	0xf3
 3926 0550 01       		.uleb128 0x1
 3927 0551 50       		.byte	0x50
 3928 0552 9F       		.byte	0x9f
 3929 0553 00000000 		.4byte	0
 3930 0557 00000000 		.4byte	0
 3931              	.LLST33:
 3932 055b 00000000 		.4byte	.LVL93
 3933 055f 21000000 		.4byte	.LVL96-1
 3934 0563 0100     		.2byte	0x1
 3935 0565 51       		.byte	0x51
 3936 0566 21000000 		.4byte	.LVL96-1
 3937 056a 22000000 		.4byte	.LVL96
 3938 056e 0400     		.2byte	0x4
 3939 0570 F3       		.byte	0xf3
 3940 0571 01       		.uleb128 0x1
 3941 0572 51       		.byte	0x51
 3942 0573 9F       		.byte	0x9f
 3943 0574 22000000 		.4byte	.LVL96
 3944 0578 32000000 		.4byte	.LVL97
 3945 057c 0100     		.2byte	0x1
 3946 057e 50       		.byte	0x50
 3947 057f 38000000 		.4byte	.LVL98
 3948 0583 46000000 		.4byte	.LVL99
 3949 0587 0100     		.2byte	0x1
 3950 0589 50       		.byte	0x50
 3951 058a 56000000 		.4byte	.LVL103
 3952 058e 58000000 		.4byte	.LVL104
 3953 0592 0100     		.2byte	0x1
 3954 0594 51       		.byte	0x51
 3955 0595 00000000 		.4byte	0
 3956 0599 00000000 		.4byte	0
 3957              	.LLST34:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 110


 3958 059d 02000000 		.4byte	.LVL94
 3959 05a1 54000000 		.4byte	.LVL102
 3960 05a5 0200     		.2byte	0x2
 3961 05a7 30       		.byte	0x30
 3962 05a8 9F       		.byte	0x9f
 3963 05a9 54000000 		.4byte	.LVL102
 3964 05ad 56000000 		.4byte	.LVL103
 3965 05b1 0100     		.2byte	0x1
 3966 05b3 50       		.byte	0x50
 3967 05b4 56000000 		.4byte	.LVL103
 3968 05b8 58000000 		.4byte	.LVL104
 3969 05bc 0200     		.2byte	0x2
 3970 05be 30       		.byte	0x30
 3971 05bf 9F       		.byte	0x9f
 3972 05c0 58000000 		.4byte	.LVL104
 3973 05c4 6C000000 		.4byte	.LFE23
 3974 05c8 0100     		.2byte	0x1
 3975 05ca 50       		.byte	0x50
 3976 05cb 00000000 		.4byte	0
 3977 05cf 00000000 		.4byte	0
 3978              	.LLST35:
 3979 05d3 12000000 		.4byte	.LVL95
 3980 05d7 4A000000 		.4byte	.LVL100
 3981 05db 0100     		.2byte	0x1
 3982 05dd 54       		.byte	0x54
 3983 05de 4A000000 		.4byte	.LVL100
 3984 05e2 56000000 		.4byte	.LVL103
 3985 05e6 1200     		.2byte	0x12
 3986 05e8 75       		.byte	0x75
 3987 05e9 00       		.sleb128 0
 3988 05ea 33       		.byte	0x33
 3989 05eb 24       		.byte	0x24
 3990 05ec 75       		.byte	0x75
 3991 05ed 00       		.sleb128 0
 3992 05ee 1C       		.byte	0x1c
 3993 05ef 33       		.byte	0x33
 3994 05f0 24       		.byte	0x24
 3995 05f1 76       		.byte	0x76
 3996 05f2 00       		.sleb128 0
 3997 05f3 22       		.byte	0x22
 3998 05f4 06       		.byte	0x6
 3999 05f5 F3       		.byte	0xf3
 4000 05f6 01       		.uleb128 0x1
 4001 05f7 50       		.byte	0x50
 4002 05f8 22       		.byte	0x22
 4003 05f9 9F       		.byte	0x9f
 4004 05fa 56000000 		.4byte	.LVL103
 4005 05fe 58000000 		.4byte	.LVL104
 4006 0602 0100     		.2byte	0x1
 4007 0604 54       		.byte	0x54
 4008 0605 58000000 		.4byte	.LVL104
 4009 0609 5A000000 		.4byte	.LVL105
 4010 060d 1200     		.2byte	0x12
 4011 060f 75       		.byte	0x75
 4012 0610 00       		.sleb128 0
 4013 0611 33       		.byte	0x33
 4014 0612 24       		.byte	0x24
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 111


 4015 0613 75       		.byte	0x75
 4016 0614 00       		.sleb128 0
 4017 0615 1C       		.byte	0x1c
 4018 0616 33       		.byte	0x33
 4019 0617 24       		.byte	0x24
 4020 0618 76       		.byte	0x76
 4021 0619 00       		.sleb128 0
 4022 061a 22       		.byte	0x22
 4023 061b 06       		.byte	0x6
 4024 061c F3       		.byte	0xf3
 4025 061d 01       		.uleb128 0x1
 4026 061e 50       		.byte	0x50
 4027 061f 22       		.byte	0x22
 4028 0620 9F       		.byte	0x9f
 4029 0621 00000000 		.4byte	0
 4030 0625 00000000 		.4byte	0
 4031              	.LLST36:
 4032 0629 00000000 		.4byte	.LVL106
 4033 062d 21000000 		.4byte	.LVL109-1
 4034 0631 0100     		.2byte	0x1
 4035 0633 50       		.byte	0x50
 4036 0634 21000000 		.4byte	.LVL109-1
 4037 0638 3A000000 		.4byte	.LVL113
 4038 063c 0400     		.2byte	0x4
 4039 063e F3       		.byte	0xf3
 4040 063f 01       		.uleb128 0x1
 4041 0640 50       		.byte	0x50
 4042 0641 9F       		.byte	0x9f
 4043 0642 3A000000 		.4byte	.LVL113
 4044 0646 3C000000 		.4byte	.LVL114
 4045 064a 0100     		.2byte	0x1
 4046 064c 50       		.byte	0x50
 4047 064d 3C000000 		.4byte	.LVL114
 4048 0651 50000000 		.4byte	.LFE24
 4049 0655 0400     		.2byte	0x4
 4050 0657 F3       		.byte	0xf3
 4051 0658 01       		.uleb128 0x1
 4052 0659 50       		.byte	0x50
 4053 065a 9F       		.byte	0x9f
 4054 065b 00000000 		.4byte	0
 4055 065f 00000000 		.4byte	0
 4056              	.LLST37:
 4057 0663 00000000 		.4byte	.LVL106
 4058 0667 21000000 		.4byte	.LVL109-1
 4059 066b 0100     		.2byte	0x1
 4060 066d 51       		.byte	0x51
 4061 066e 21000000 		.4byte	.LVL109-1
 4062 0672 22000000 		.4byte	.LVL109
 4063 0676 0400     		.2byte	0x4
 4064 0678 F3       		.byte	0xf3
 4065 0679 01       		.uleb128 0x1
 4066 067a 51       		.byte	0x51
 4067 067b 9F       		.byte	0x9f
 4068 067c 22000000 		.4byte	.LVL109
 4069 0680 2B000000 		.4byte	.LVL110-1
 4070 0684 0100     		.2byte	0x1
 4071 0686 50       		.byte	0x50
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 112


 4072 0687 3A000000 		.4byte	.LVL113
 4073 068b 3C000000 		.4byte	.LVL114
 4074 068f 0100     		.2byte	0x1
 4075 0691 51       		.byte	0x51
 4076 0692 00000000 		.4byte	0
 4077 0696 00000000 		.4byte	0
 4078              	.LLST38:
 4079 069a 02000000 		.4byte	.LVL107
 4080 069e 38000000 		.4byte	.LVL112
 4081 06a2 0A00     		.2byte	0xa
 4082 06a4 9E       		.byte	0x9e
 4083 06a5 08       		.uleb128 0x8
 4084 06a6 00000000 		.8byte	0
 4084      00000000 
 4085 06ae 3A000000 		.4byte	.LVL113
 4086 06b2 3C000000 		.4byte	.LVL114
 4087 06b6 0A00     		.2byte	0xa
 4088 06b8 9E       		.byte	0x9e
 4089 06b9 08       		.uleb128 0x8
 4090 06ba 00000000 		.8byte	0
 4090      00000000 
 4091 06c2 00000000 		.4byte	0
 4092 06c6 00000000 		.4byte	0
 4093              	.LLST39:
 4094 06ca 12000000 		.4byte	.LVL108
 4095 06ce 2E000000 		.4byte	.LVL111
 4096 06d2 0100     		.2byte	0x1
 4097 06d4 54       		.byte	0x54
 4098 06d5 2E000000 		.4byte	.LVL111
 4099 06d9 3A000000 		.4byte	.LVL113
 4100 06dd 1200     		.2byte	0x12
 4101 06df 75       		.byte	0x75
 4102 06e0 00       		.sleb128 0
 4103 06e1 33       		.byte	0x33
 4104 06e2 24       		.byte	0x24
 4105 06e3 75       		.byte	0x75
 4106 06e4 00       		.sleb128 0
 4107 06e5 1C       		.byte	0x1c
 4108 06e6 33       		.byte	0x33
 4109 06e7 24       		.byte	0x24
 4110 06e8 76       		.byte	0x76
 4111 06e9 00       		.sleb128 0
 4112 06ea 22       		.byte	0x22
 4113 06eb 06       		.byte	0x6
 4114 06ec F3       		.byte	0xf3
 4115 06ed 01       		.uleb128 0x1
 4116 06ee 50       		.byte	0x50
 4117 06ef 22       		.byte	0x22
 4118 06f0 9F       		.byte	0x9f
 4119 06f1 3A000000 		.4byte	.LVL113
 4120 06f5 3C000000 		.4byte	.LVL114
 4121 06f9 0100     		.2byte	0x1
 4122 06fb 54       		.byte	0x54
 4123 06fc 3C000000 		.4byte	.LVL114
 4124 0700 3C000000 		.4byte	.LVL115
 4125 0704 1200     		.2byte	0x12
 4126 0706 75       		.byte	0x75
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 113


 4127 0707 00       		.sleb128 0
 4128 0708 33       		.byte	0x33
 4129 0709 24       		.byte	0x24
 4130 070a 75       		.byte	0x75
 4131 070b 00       		.sleb128 0
 4132 070c 1C       		.byte	0x1c
 4133 070d 33       		.byte	0x33
 4134 070e 24       		.byte	0x24
 4135 070f 76       		.byte	0x76
 4136 0710 00       		.sleb128 0
 4137 0711 22       		.byte	0x22
 4138 0712 06       		.byte	0x6
 4139 0713 F3       		.byte	0xf3
 4140 0714 01       		.uleb128 0x1
 4141 0715 50       		.byte	0x50
 4142 0716 22       		.byte	0x22
 4143 0717 9F       		.byte	0x9f
 4144 0718 00000000 		.4byte	0
 4145 071c 00000000 		.4byte	0
 4146              	.LLST40:
 4147 0720 06000000 		.4byte	.LVL116
 4148 0724 10000000 		.4byte	.LVL117
 4149 0728 0200     		.2byte	0x2
 4150 072a 30       		.byte	0x30
 4151 072b 9F       		.byte	0x9f
 4152 072c 10000000 		.4byte	.LVL117
 4153 0730 50000000 		.4byte	.LVL121
 4154 0734 0100     		.2byte	0x1
 4155 0736 54       		.byte	0x54
 4156 0737 50000000 		.4byte	.LVL121
 4157 073b 54000000 		.4byte	.LVL122
 4158 073f 0200     		.2byte	0x2
 4159 0741 30       		.byte	0x30
 4160 0742 9F       		.byte	0x9f
 4161 0743 54000000 		.4byte	.LVL122
 4162 0747 78000000 		.4byte	.LVL126
 4163 074b 0100     		.2byte	0x1
 4164 074d 54       		.byte	0x54
 4165 074e 00000000 		.4byte	0
 4166 0752 00000000 		.4byte	0
 4167              	.LLST41:
 4168 0756 06000000 		.4byte	.LVL116
 4169 075a 10000000 		.4byte	.LVL117
 4170 075e 0200     		.2byte	0x2
 4171 0760 30       		.byte	0x30
 4172 0761 9F       		.byte	0x9f
 4173 0762 10000000 		.4byte	.LVL117
 4174 0766 50000000 		.4byte	.LVL121
 4175 076a 0100     		.2byte	0x1
 4176 076c 57       		.byte	0x57
 4177 076d 50000000 		.4byte	.LVL121
 4178 0771 54000000 		.4byte	.LVL122
 4179 0775 0200     		.2byte	0x2
 4180 0777 30       		.byte	0x30
 4181 0778 9F       		.byte	0x9f
 4182 0779 54000000 		.4byte	.LVL122
 4183 077d 76000000 		.4byte	.LVL125
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 114


 4184 0781 0100     		.2byte	0x1
 4185 0783 57       		.byte	0x57
 4186 0784 76000000 		.4byte	.LVL125
 4187 0788 84000000 		.4byte	.LVL128
 4188 078c 0200     		.2byte	0x2
 4189 078e 30       		.byte	0x30
 4190 078f 9F       		.byte	0x9f
 4191 0790 00000000 		.4byte	0
 4192 0794 00000000 		.4byte	0
 4193              	.LLST42:
 4194 0798 10000000 		.4byte	.LVL117
 4195 079c 50000000 		.4byte	.LVL121
 4196 07a0 0400     		.2byte	0x4
 4197 07a2 0A       		.byte	0xa
 4198 07a3 0010     		.2byte	0x1000
 4199 07a5 9F       		.byte	0x9f
 4200 07a6 00000000 		.4byte	0
 4201 07aa 00000000 		.4byte	0
 4202              	.LLST43:
 4203 07ae 00000000 		.4byte	.LVL132
 4204 07b2 07000000 		.4byte	.LVL133-1
 4205 07b6 0100     		.2byte	0x1
 4206 07b8 50       		.byte	0x50
 4207 07b9 07000000 		.4byte	.LVL133-1
 4208 07bd 0E000000 		.4byte	.LVL135
 4209 07c1 0100     		.2byte	0x1
 4210 07c3 54       		.byte	0x54
 4211 07c4 0E000000 		.4byte	.LVL135
 4212 07c8 10000000 		.4byte	.LFE2
 4213 07cc 0400     		.2byte	0x4
 4214 07ce F3       		.byte	0xf3
 4215 07cf 01       		.uleb128 0x1
 4216 07d0 50       		.byte	0x50
 4217 07d1 9F       		.byte	0x9f
 4218 07d2 00000000 		.4byte	0
 4219 07d6 00000000 		.4byte	0
 4220              	.LLST44:
 4221 07da 00000000 		.4byte	.LVL136
 4222 07de 0D000000 		.4byte	.LVL137-1
 4223 07e2 0100     		.2byte	0x1
 4224 07e4 50       		.byte	0x50
 4225 07e5 0D000000 		.4byte	.LVL137-1
 4226 07e9 5A000000 		.4byte	.LVL141
 4227 07ed 0100     		.2byte	0x1
 4228 07ef 55       		.byte	0x55
 4229 07f0 5A000000 		.4byte	.LVL141
 4230 07f4 70000000 		.4byte	.LFE5
 4231 07f8 0400     		.2byte	0x4
 4232 07fa F3       		.byte	0xf3
 4233 07fb 01       		.uleb128 0x1
 4234 07fc 50       		.byte	0x50
 4235 07fd 9F       		.byte	0x9f
 4236 07fe 00000000 		.4byte	0
 4237 0802 00000000 		.4byte	0
 4238              	.LLST45:
 4239 0806 00000000 		.4byte	.LVL136
 4240 080a 0D000000 		.4byte	.LVL137-1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 115


 4241 080e 0100     		.2byte	0x1
 4242 0810 51       		.byte	0x51
 4243 0811 0D000000 		.4byte	.LVL137-1
 4244 0815 5A000000 		.4byte	.LVL141
 4245 0819 0100     		.2byte	0x1
 4246 081b 56       		.byte	0x56
 4247 081c 5A000000 		.4byte	.LVL141
 4248 0820 70000000 		.4byte	.LFE5
 4249 0824 0400     		.2byte	0x4
 4250 0826 F3       		.byte	0xf3
 4251 0827 01       		.uleb128 0x1
 4252 0828 51       		.byte	0x51
 4253 0829 9F       		.byte	0x9f
 4254 082a 00000000 		.4byte	0
 4255 082e 00000000 		.4byte	0
 4256              		.section	.debug_aranges,"",%progbits
 4257 0000 E4000000 		.4byte	0xe4
 4258 0004 0200     		.2byte	0x2
 4259 0006 00000000 		.4byte	.Ldebug_info0
 4260 000a 04       		.byte	0x4
 4261 000b 00       		.byte	0
 4262 000c 0000     		.2byte	0
 4263 000e 0000     		.2byte	0
 4264 0010 00000000 		.4byte	.LFB12
 4265 0014 58000000 		.4byte	.LFE12-.LFB12
 4266 0018 00000000 		.4byte	.LFB3
 4267 001c 10000000 		.4byte	.LFE3-.LFB3
 4268 0020 00000000 		.4byte	.LFB4
 4269 0024 D4000000 		.4byte	.LFE4-.LFB4
 4270 0028 00000000 		.4byte	.LFB6
 4271 002c 28000000 		.4byte	.LFE6-.LFB6
 4272 0030 00000000 		.4byte	.LFB8
 4273 0034 28000000 		.4byte	.LFE8-.LFB8
 4274 0038 00000000 		.4byte	.LFB9
 4275 003c 10000000 		.4byte	.LFE9-.LFB9
 4276 0040 00000000 		.4byte	.LFB10
 4277 0044 2C000000 		.4byte	.LFE10-.LFB10
 4278 0048 00000000 		.4byte	.LFB11
 4279 004c 38000000 		.4byte	.LFE11-.LFB11
 4280 0050 00000000 		.4byte	.LFB13
 4281 0054 54000000 		.4byte	.LFE13-.LFB13
 4282 0058 00000000 		.4byte	.LFB14
 4283 005c 64000000 		.4byte	.LFE14-.LFB14
 4284 0060 00000000 		.4byte	.LFB15
 4285 0064 1C000000 		.4byte	.LFE15-.LFB15
 4286 0068 00000000 		.4byte	.LFB16
 4287 006c 18000000 		.4byte	.LFE16-.LFB16
 4288 0070 00000000 		.4byte	.LFB17
 4289 0074 2C000000 		.4byte	.LFE17-.LFB17
 4290 0078 00000000 		.4byte	.LFB18
 4291 007c 2C000000 		.4byte	.LFE18-.LFB18
 4292 0080 00000000 		.4byte	.LFB19
 4293 0084 44000000 		.4byte	.LFE19-.LFB19
 4294 0088 00000000 		.4byte	.LFB20
 4295 008c 44000000 		.4byte	.LFE20-.LFB20
 4296 0090 00000000 		.4byte	.LFB21
 4297 0094 40000000 		.4byte	.LFE21-.LFB21
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 116


 4298 0098 00000000 		.4byte	.LFB22
 4299 009c 58000000 		.4byte	.LFE22-.LFB22
 4300 00a0 00000000 		.4byte	.LFB23
 4301 00a4 6C000000 		.4byte	.LFE23-.LFB23
 4302 00a8 00000000 		.4byte	.LFB24
 4303 00ac 50000000 		.4byte	.LFE24-.LFB24
 4304 00b0 00000000 		.4byte	.LFB25
 4305 00b4 A8000000 		.4byte	.LFE25-.LFB25
 4306 00b8 00000000 		.4byte	.LFB26
 4307 00bc 30000000 		.4byte	.LFE26-.LFB26
 4308 00c0 00000000 		.4byte	.LFB1
 4309 00c4 24000000 		.4byte	.LFE1-.LFB1
 4310 00c8 00000000 		.4byte	.LFB2
 4311 00cc 10000000 		.4byte	.LFE2-.LFB2
 4312 00d0 00000000 		.4byte	.LFB5
 4313 00d4 70000000 		.4byte	.LFE5-.LFB5
 4314 00d8 00000000 		.4byte	.LFB7
 4315 00dc 44000000 		.4byte	.LFE7-.LFB7
 4316 00e0 00000000 		.4byte	0
 4317 00e4 00000000 		.4byte	0
 4318              		.section	.debug_ranges,"",%progbits
 4319              	.Ldebug_ranges0:
 4320 0000 00000000 		.4byte	.LFB12
 4321 0004 58000000 		.4byte	.LFE12
 4322 0008 00000000 		.4byte	.LFB3
 4323 000c 10000000 		.4byte	.LFE3
 4324 0010 00000000 		.4byte	.LFB4
 4325 0014 D4000000 		.4byte	.LFE4
 4326 0018 00000000 		.4byte	.LFB6
 4327 001c 28000000 		.4byte	.LFE6
 4328 0020 00000000 		.4byte	.LFB8
 4329 0024 28000000 		.4byte	.LFE8
 4330 0028 00000000 		.4byte	.LFB9
 4331 002c 10000000 		.4byte	.LFE9
 4332 0030 00000000 		.4byte	.LFB10
 4333 0034 2C000000 		.4byte	.LFE10
 4334 0038 00000000 		.4byte	.LFB11
 4335 003c 38000000 		.4byte	.LFE11
 4336 0040 00000000 		.4byte	.LFB13
 4337 0044 54000000 		.4byte	.LFE13
 4338 0048 00000000 		.4byte	.LFB14
 4339 004c 64000000 		.4byte	.LFE14
 4340 0050 00000000 		.4byte	.LFB15
 4341 0054 1C000000 		.4byte	.LFE15
 4342 0058 00000000 		.4byte	.LFB16
 4343 005c 18000000 		.4byte	.LFE16
 4344 0060 00000000 		.4byte	.LFB17
 4345 0064 2C000000 		.4byte	.LFE17
 4346 0068 00000000 		.4byte	.LFB18
 4347 006c 2C000000 		.4byte	.LFE18
 4348 0070 00000000 		.4byte	.LFB19
 4349 0074 44000000 		.4byte	.LFE19
 4350 0078 00000000 		.4byte	.LFB20
 4351 007c 44000000 		.4byte	.LFE20
 4352 0080 00000000 		.4byte	.LFB21
 4353 0084 40000000 		.4byte	.LFE21
 4354 0088 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 117


 4355 008c 58000000 		.4byte	.LFE22
 4356 0090 00000000 		.4byte	.LFB23
 4357 0094 6C000000 		.4byte	.LFE23
 4358 0098 00000000 		.4byte	.LFB24
 4359 009c 50000000 		.4byte	.LFE24
 4360 00a0 00000000 		.4byte	.LFB25
 4361 00a4 A8000000 		.4byte	.LFE25
 4362 00a8 00000000 		.4byte	.LFB26
 4363 00ac 30000000 		.4byte	.LFE26
 4364 00b0 00000000 		.4byte	.LFB1
 4365 00b4 24000000 		.4byte	.LFE1
 4366 00b8 00000000 		.4byte	.LFB2
 4367 00bc 10000000 		.4byte	.LFE2
 4368 00c0 00000000 		.4byte	.LFB5
 4369 00c4 70000000 		.4byte	.LFE5
 4370 00c8 00000000 		.4byte	.LFB7
 4371 00cc 44000000 		.4byte	.LFE7
 4372 00d0 00000000 		.4byte	0
 4373 00d4 00000000 		.4byte	0
 4374              		.section	.debug_line,"",%progbits
 4375              	.Ldebug_line0:
 4376 0000 94030000 		.section	.debug_str,"MS",%progbits,1
 4376      02007600 
 4376      00000201 
 4376      FB0E0D00 
 4376      01010101 
 4377              	.LASF10:
 4378 0000 75696E74 		.ascii	"uint16\000"
 4378      313600
 4379              	.LASF52:
 4380 0007 6368616E 		.ascii	"chanCount\000"
 4380      436F756E 
 4380      7400
 4381              	.LASF72:
 4382 0011 61646347 		.ascii	"adcGain\000"
 4382      61696E00 
 4383              	.LASF86:
 4384 0019 636F756E 		.ascii	"counts\000"
 4384      747300
 4385              	.LASF78:
 4386 0020 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 4386      436F756E 
 4386      7473546F 
 4386      5F566F6C 
 4386      747300
 4387              	.LASF0:
 4388 0033 7369676E 		.ascii	"signed char\000"
 4388      65642063 
 4388      68617200 
 4389              	.LASF84:
 4390 003f 4144435F 		.ascii	"ADC_Init\000"
 4390      496E6974 
 4390      00
 4391              	.LASF94:
 4392 0048 4144435F 		.ascii	"ADC_currentConfig\000"
 4392      63757272 
 4392      656E7443 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 118


 4392      6F6E6669 
 4392      6700
 4393              	.LASF48:
 4394 005a 4144435F 		.ascii	"ADC_SetEosMask\000"
 4394      53657445 
 4394      6F734D61 
 4394      736B00
 4395              	.LASF7:
 4396 0069 6C6F6E67 		.ascii	"long long unsigned int\000"
 4396      206C6F6E 
 4396      6720756E 
 4396      7369676E 
 4396      65642069 
 4397              	.LASF44:
 4398 0080 4144435F 		.ascii	"ADC_StartConvert\000"
 4398      53746172 
 4398      74436F6E 
 4398      76657274 
 4398      00
 4399              	.LASF6:
 4400 0091 6C6F6E67 		.ascii	"long long int\000"
 4400      206C6F6E 
 4400      6720696E 
 4400      7400
 4401              	.LASF107:
 4402 009f 433A5C55 		.ascii	"C:\\Users\\Zeus\\Documents\\PSoC Creator\\CE211252_"
 4402      73657273 
 4402      5C5A6575 
 4402      735C446F 
 4402      63756D65 
 4403 00cd 416D6269 		.ascii	"Ambient_Light_Sensing\\CE211252_Ambient_Light_Sensi"
 4403      656E745F 
 4403      4C696768 
 4403      745F5365 
 4403      6E73696E 
 4404 00ff 6E672E63 		.ascii	"ng.cydsn\000"
 4404      7964736E 
 4404      00
 4405              	.LASF35:
 4406 0108 636C6B44 		.ascii	"clkDivider\000"
 4406      69766964 
 4406      657200
 4407              	.LASF13:
 4408 0113 696E7433 		.ascii	"int32\000"
 4408      3200
 4409              	.LASF91:
 4410 0119 4144435F 		.ascii	"ADC_SelectConfig\000"
 4410      53656C65 
 4410      6374436F 
 4410      6E666967 
 4410      00
 4411              	.LASF67:
 4412 012a 4144435F 		.ascii	"ADC_SetSatMask\000"
 4412      53657453 
 4412      61744D61 
 4412      736B00
 4413              	.LASF4:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 119


 4414 0139 6C6F6E67 		.ascii	"long int\000"
 4414      20696E74 
 4414      00
 4415              	.LASF82:
 4416 0142 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 4416      436F756E 
 4416      7473546F 
 4416      5F75566F 
 4416      6C747300 
 4417              	.LASF99:
 4418 0156 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 4418      636F756E 
 4418      74735065 
 4418      72313056 
 4418      6F6C7400 
 4419              	.LASF73:
 4420 016a 4144435F 		.ascii	"ADC_RawCounts2Counts\000"
 4420      52617743 
 4420      6F756E74 
 4420      7332436F 
 4420      756E7473 
 4421              	.LASF9:
 4422 017f 75696E74 		.ascii	"uint8\000"
 4422      3800
 4423              	.LASF104:
 4424 0185 43794465 		.ascii	"CyDelayUs\000"
 4424      6C617955 
 4424      7300
 4425              	.LASF16:
 4426 018f 646F7562 		.ascii	"double\000"
 4426      6C6500
 4427              	.LASF58:
 4428 0196 4144435F 		.ascii	"ADC_GetResult32\000"
 4428      47657452 
 4428      6573756C 
 4428      74333200 
 4429              	.LASF36:
 4430 01a6 4144435F 		.ascii	"ADC_CONFIG_STRUCT\000"
 4430      434F4E46 
 4430      49475F53 
 4430      54525543 
 4430      5400
 4431              	.LASF26:
 4432 01b8 73616D70 		.ascii	"sampleTime01\000"
 4432      6C655469 
 4432      6D653031 
 4432      00
 4433              	.LASF11:
 4434 01c5 75696E74 		.ascii	"uint32\000"
 4434      333200
 4435              	.LASF109:
 4436 01cc 4379496E 		.ascii	"CyIntSetVector\000"
 4436      74536574 
 4436      56656374 
 4436      6F7200
 4437              	.LASF49:
 4438 01db 6D61736B 		.ascii	"mask\000"
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 120


 4438      00
 4439              	.LASF96:
 4440 01e0 4144435F 		.ascii	"ADC_initVar\000"
 4440      696E6974 
 4440      56617200 
 4441              	.LASF75:
 4442 01ec 74656D70 		.ascii	"temp\000"
 4442      00
 4443              	.LASF53:
 4444 01f1 7265744D 		.ascii	"retMode\000"
 4444      6F646500 
 4445              	.LASF65:
 4446 01f9 4144435F 		.ascii	"ADC_SetLimitMask\000"
 4446      5365744C 
 4446      696D6974 
 4446      4D61736B 
 4446      00
 4447              	.LASF8:
 4448 020a 756E7369 		.ascii	"unsigned int\000"
 4448      676E6564 
 4448      20696E74 
 4448      00
 4449              	.LASF31:
 4450 0217 72616E67 		.ascii	"rangeIntMask\000"
 4450      65496E74 
 4450      4D61736B 
 4450      00
 4451              	.LASF85:
 4452 0224 636F6E66 		.ascii	"configNum\000"
 4452      69674E75 
 4452      6D00
 4453              	.LASF5:
 4454 022e 6C6F6E67 		.ascii	"long unsigned int\000"
 4454      20756E73 
 4454      69676E65 
 4454      6420696E 
 4454      7400
 4455              	.LASF42:
 4456 0240 746D7052 		.ascii	"tmpRegVal\000"
 4456      65675661 
 4456      6C00
 4457              	.LASF51:
 4458 024a 656E6162 		.ascii	"enableMask\000"
 4458      6C654D61 
 4458      736B00
 4459              	.LASF76:
 4460 0255 61766572 		.ascii	"averageAdcSamplesDiv\000"
 4460      61676541 
 4460      64635361 
 4460      6D706C65 
 4460      73446976 
 4461              	.LASF3:
 4462 026a 73686F72 		.ascii	"short unsigned int\000"
 4462      7420756E 
 4462      7369676E 
 4462      65642069 
 4462      6E7400
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 121


 4463              	.LASF28:
 4464 027d 72616E67 		.ascii	"rangeThres\000"
 4464      65546872 
 4464      657300
 4465              	.LASF93:
 4466 0288 4144435F 		.ascii	"ADC_StopConvert\000"
 4466      53746F70 
 4466      436F6E76 
 4466      65727400 
 4467              	.LASF60:
 4468 0298 66696E61 		.ascii	"finalResult\000"
 4468      6C526573 
 4468      756C7400 
 4469              	.LASF66:
 4470 02a4 6C696D69 		.ascii	"limitMask\000"
 4470      744D6173 
 4470      6B00
 4471              	.LASF77:
 4472 02ae 72617743 		.ascii	"rawChannel\000"
 4472      68616E6E 
 4472      656C00
 4473              	.LASF23:
 4474 02b9 6E756D43 		.ascii	"numChannels\000"
 4474      68616E6E 
 4474      656C7300 
 4475              	.LASF38:
 4476 02c5 6368616E 		.ascii	"chanConfig\000"
 4476      436F6E66 
 4476      696700
 4477              	.LASF19:
 4478 02d0 72656733 		.ascii	"reg32\000"
 4478      3200
 4479              	.LASF37:
 4480 02d6 69735369 		.ascii	"isSigned\000"
 4480      676E6564 
 4480      00
 4481              	.LASF57:
 4482 02df 61646352 		.ascii	"adcResult\000"
 4482      6573756C 
 4482      7400
 4483              	.LASF46:
 4484 02e9 4144435F 		.ascii	"ADC_SetConvertMode\000"
 4484      53657443 
 4484      6F6E7665 
 4484      72744D6F 
 4484      646500
 4485              	.LASF14:
 4486 02fc 666C6F61 		.ascii	"float32\000"
 4486      74333200 
 4487              	.LASF21:
 4488 0304 73697A65 		.ascii	"sizetype\000"
 4488      74797065 
 4488      00
 4489              	.LASF62:
 4490 030d 6C6F774C 		.ascii	"lowLimit\000"
 4490      696D6974 
 4490      00
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 122


 4491              	.LASF63:
 4492 0316 4144435F 		.ascii	"ADC_SetHighLimit\000"
 4492      53657448 
 4492      6967684C 
 4492      696D6974 
 4492      00
 4493              	.LASF90:
 4494 0327 61646472 		.ascii	"address\000"
 4494      65737300 
 4495              	.LASF108:
 4496 032f 4144435F 		.ascii	"ADC_IsChannelSigned\000"
 4496      49734368 
 4496      616E6E65 
 4496      6C536967 
 4496      6E656400 
 4497              	.LASF27:
 4498 0343 73616D70 		.ascii	"sampleTime23\000"
 4498      6C655469 
 4498      6D653233 
 4498      00
 4499              	.LASF32:
 4500 0350 73617449 		.ascii	"satIntMask\000"
 4500      6E744D61 
 4500      736B00
 4501              	.LASF55:
 4502 035b 4144435F 		.ascii	"ADC_IsEndConversion\000"
 4502      4973456E 
 4502      64436F6E 
 4502      76657273 
 4502      696F6E00 
 4503              	.LASF45:
 4504 036f 4144435F 		.ascii	"ADC_InitConfig\000"
 4504      496E6974 
 4504      436F6E66 
 4504      696700
 4505              	.LASF68:
 4506 037e 7361744D 		.ascii	"satMask\000"
 4506      61736B00 
 4507              	.LASF17:
 4508 0386 696E7436 		.ascii	"int64\000"
 4508      3400
 4509              	.LASF103:
 4510 038c 4379496E 		.ascii	"CyIntSetPriority\000"
 4510      74536574 
 4510      5072696F 
 4510      72697479 
 4510      00
 4511              	.LASF50:
 4512 039d 4144435F 		.ascii	"ADC_SetChanMask\000"
 4512      53657443 
 4512      68616E4D 
 4512      61736B00 
 4513              	.LASF106:
 4514 03ad 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 4514      72617465 
 4514      645F536F 
 4514      75726365 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 123


 4514      5C50536F 
 4515              	.LASF71:
 4516 03ca 4144435F 		.ascii	"ADC_SetGain\000"
 4516      53657447 
 4516      61696E00 
 4517              	.LASF15:
 4518 03d6 666C6F61 		.ascii	"float\000"
 4518      7400
 4519              	.LASF64:
 4520 03dc 68696768 		.ascii	"highLimit\000"
 4520      4C696D69 
 4520      7400
 4521              	.LASF80:
 4522 03e6 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 4522      436F756E 
 4522      7473546F 
 4522      5F6D566F 
 4522      6C747300 
 4523              	.LASF30:
 4524 03fa 6368616E 		.ascii	"chanEn\000"
 4524      456E00
 4525              	.LASF61:
 4526 0401 4144435F 		.ascii	"ADC_SetLowLimit\000"
 4526      5365744C 
 4526      6F774C69 
 4526      6D697400 
 4527              	.LASF102:
 4528 0411 43794861 		.ascii	"CyHalt\000"
 4528      6C7400
 4529              	.LASF1:
 4530 0418 756E7369 		.ascii	"unsigned char\000"
 4530      676E6564 
 4530      20636861 
 4530      7200
 4531              	.LASF98:
 4532 0426 4144435F 		.ascii	"ADC_offset\000"
 4532      6F666673 
 4532      657400
 4533              	.LASF2:
 4534 0431 73686F72 		.ascii	"short int\000"
 4534      7420696E 
 4534      7400
 4535              	.LASF101:
 4536 043b 4144435F 		.ascii	"ADC_intSarClock_SetFractionalDividerRegister\000"
 4536      696E7453 
 4536      6172436C 
 4536      6F636B5F 
 4536      53657446 
 4537              	.LASF43:
 4538 0468 4144435F 		.ascii	"ADC_Stop\000"
 4538      53746F70 
 4538      00
 4539              	.LASF79:
 4540 0471 72657375 		.ascii	"result_Volts\000"
 4540      6C745F56 
 4540      6F6C7473 
 4540      00
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 124


 4541              	.LASF59:
 4542 047e 61646352 		.ascii	"adcResult16\000"
 4542      6573756C 
 4542      74313600 
 4543              	.LASF41:
 4544 048a 63684E75 		.ascii	"chNum\000"
 4544      6D00
 4545              	.LASF33:
 4546 0490 76726566 		.ascii	"vrefMvValue\000"
 4546      4D765661 
 4546      6C756500 
 4547              	.LASF39:
 4548 049c 6368616E 		.ascii	"chan\000"
 4548      00
 4549              	.LASF18:
 4550 04a1 63686172 		.ascii	"char\000"
 4550      00
 4551              	.LASF47:
 4552 04a6 6D6F6465 		.ascii	"mode\000"
 4552      00
 4553              	.LASF20:
 4554 04ab 63796973 		.ascii	"cyisraddress\000"
 4554      72616464 
 4554      72657373 
 4554      00
 4555              	.LASF100:
 4556 04b8 4144435F 		.ascii	"ADC_allConfigs\000"
 4556      616C6C43 
 4556      6F6E6669 
 4556      677300
 4557              	.LASF40:
 4558 04c7 636F6E66 		.ascii	"config\000"
 4558      696700
 4559              	.LASF95:
 4560 04ce 4144435F 		.ascii	"ADC_channelsConfig\000"
 4560      6368616E 
 4560      6E656C73 
 4560      436F6E66 
 4560      696700
 4561              	.LASF97:
 4562 04e1 4144435F 		.ascii	"ADC_selected\000"
 4562      73656C65 
 4562      63746564 
 4562      00
 4563              	.LASF89:
 4564 04ee 4144435F 		.ascii	"ADC_StartEx\000"
 4564      53746172 
 4564      74457800 
 4565              	.LASF83:
 4566 04fa 72657375 		.ascii	"result_uVolts\000"
 4566      6C745F75 
 4566      566F6C74 
 4566      7300
 4567              	.LASF92:
 4568 0508 72657374 		.ascii	"restart\000"
 4568      61727400 
 4569              	.LASF70:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 125


 4570 0510 6F666673 		.ascii	"offset\000"
 4570      657400
 4571              	.LASF24:
 4572 0517 6374726C 		.ascii	"ctrl\000"
 4572      00
 4573              	.LASF34:
 4574 051c 6D697363 		.ascii	"miscConfig\000"
 4574      436F6E66 
 4574      696700
 4575              	.LASF74:
 4576 0527 61646343 		.ascii	"adcCounts\000"
 4576      6F756E74 
 4576      7300
 4577              	.LASF88:
 4578 0531 4144435F 		.ascii	"ADC_Start\000"
 4578      53746172 
 4578      7400
 4579              	.LASF29:
 4580 053b 72616E67 		.ascii	"rangeCond\000"
 4580      65436F6E 
 4580      6400
 4581              	.LASF87:
 4582 0545 4144435F 		.ascii	"ADC_Enable\000"
 4582      456E6162 
 4582      6C6500
 4583              	.LASF25:
 4584 0550 73616D70 		.ascii	"sampleCtrl\000"
 4584      6C654374 
 4584      726C00
 4585              	.LASF12:
 4586 055b 696E7431 		.ascii	"int16\000"
 4586      3600
 4587              	.LASF81:
 4588 0561 72657375 		.ascii	"result_mVolts\000"
 4588      6C745F6D 
 4588      566F6C74 
 4588      7300
 4589              	.LASF69:
 4590 056f 4144435F 		.ascii	"ADC_SetOffset\000"
 4590      5365744F 
 4590      66667365 
 4590      7400
 4591              	.LASF110:
 4592 057d 4144435F 		.ascii	"ADC_IRQ_StartEx\000"
 4592      4952515F 
 4592      53746172 
 4592      74457800 
 4593              	.LASF22:
 4594 058d 6368616E 		.ascii	"channelBase\000"
 4594      6E656C42 
 4594      61736500 
 4595              	.LASF54:
 4596 0599 656E644F 		.ascii	"endOfConversion\000"
 4596      66436F6E 
 4596      76657273 
 4596      696F6E00 
 4597              	.LASF105:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccE97CNm.s 			page 126


 4598 05a9 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4598      4320342E 
 4598      392E3320 
 4598      32303135 
 4598      30333033 
 4599 05dc 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 4599      20726576 
 4599      6973696F 
 4599      6E203232 
 4599      31323230 
 4600 060f 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4600      67202D66 
 4600      66756E63 
 4600      74696F6E 
 4600      2D736563 
 4601              	.LASF56:
 4602 063b 4144435F 		.ascii	"ADC_GetResult16\000"
 4602      47657452 
 4602      6573756C 
 4602      74313600 
 4603              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
