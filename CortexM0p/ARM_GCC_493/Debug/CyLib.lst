ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoStart,"ax",%progbits
  18              		.align	2
  19              		.global	CySysClkImoStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkImoStart, %function
  23              	CySysClkImoStart:
  24              	.LFB1:
  25              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.50
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 2


  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 3


  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
  26              		.loc 1 108 0
  27              		.cfi_startproc
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  28              		.loc 1 109 0
  29 0000 034A     		ldr	r2, .L2
  30 0002 1368     		ldr	r3, [r2]
  31 0004 8021     		mov	r1, #128
  32 0006 0906     		lsl	r1, r1, #24
  33 0008 0B43     		orr	r3, r1
  34 000a 1360     		str	r3, [r2]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
  35              		.loc 1 124 0
  36              		@ sp needed
  37 000c 7047     		bx	lr
  38              	.L3:
  39 000e C046     		.align	2
  40              	.L2:
  41 0010 30000340 		.word	1073938480
  42              		.cfi_endproc
  43              	.LFE1:
  44              		.size	CySysClkImoStart, .-CySysClkImoStart
  45              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  46              		.align	2
  47              		.global	CySysClkImoDisableWcoLock
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 4


  48              		.code	16
  49              		.thumb_func
  50              		.type	CySysClkImoDisableWcoLock, %function
  51              	CySysClkImoDisableWcoLock:
  52              	.LFB4:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 150:Generated_Source\PSoC4/CyLib.c **** }
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 5


 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 6


 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
  53              		.loc 1 286 0
  54              		.cfi_startproc
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  55              		.loc 1 287 0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 7


  56 0000 024A     		ldr	r2, .L5
  57 0002 1168     		ldr	r1, [r2]
  58 0004 024B     		ldr	r3, .L5+4
  59 0006 0B40     		and	r3, r1
  60 0008 1360     		str	r3, [r2]
 288:Generated_Source\PSoC4/CyLib.c ****     }
  61              		.loc 1 288 0
  62              		@ sp needed
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 00000640 		.word	1074135040
  68 0010 FFFFFFBF 		.word	-1073741825
  69              		.cfi_endproc
  70              	.LFE4:
  71              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
  72              		.section	.text.CySysClkImoStop,"ax",%progbits
  73              		.align	2
  74              		.global	CySysClkImoStop
  75              		.code	16
  76              		.thumb_func
  77              		.type	CySysClkImoStop, %function
  78              	CySysClkImoStop:
  79              	.LFB2:
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  80              		.loc 1 140 0
  81              		.cfi_startproc
  82 0000 08B5     		push	{r3, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 3, -8
  85              		.cfi_offset 14, -4
 142:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  86              		.loc 1 142 0
  87 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
  88              	.LVL0:
 149:Generated_Source\PSoC4/CyLib.c **** }
  89              		.loc 1 149 0
  90 0006 034A     		ldr	r2, .L8
  91 0008 1368     		ldr	r3, [r2]
  92 000a 5B00     		lsl	r3, r3, #1
  93 000c 5B08     		lsr	r3, r3, #1
  94 000e 1360     		str	r3, [r2]
 150:Generated_Source\PSoC4/CyLib.c **** 
  95              		.loc 1 150 0
  96              		@ sp needed
  97 0010 08BD     		pop	{r3, pc}
  98              	.L9:
  99 0012 C046     		.align	2
 100              	.L8:
 101 0014 30000340 		.word	1073938480
 102              		.cfi_endproc
 103              	.LFE2:
 104              		.size	CySysClkImoStop, .-CySysClkImoStop
 105              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 106              		.align	2
 107              		.global	CySysClkImoGetWcoLock
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 8


 108              		.code	16
 109              		.thumb_func
 110              		.type	CySysClkImoGetWcoLock, %function
 111              	CySysClkImoGetWcoLock:
 112              	.LFB5:
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 113              		.loc 1 305 0
 114              		.cfi_startproc
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 115              		.loc 1 306 0
 116 0000 034B     		ldr	r3, .L12
 117 0002 1868     		ldr	r0, [r3]
 118 0004 8023     		mov	r3, #128
 119 0006 DB05     		lsl	r3, r3, #23
 120 0008 1840     		and	r0, r3
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 121              		.loc 1 307 0
 122 000a 00D0     		beq	.L11
 123 000c 0120     		mov	r0, #1
 124              	.L11:
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 125              		.loc 1 309 0
 126              		@ sp needed
 127 000e 7047     		bx	lr
 128              	.L13:
 129              		.align	2
 130              	.L12:
 131 0010 00000640 		.word	1074135040
 132              		.cfi_endproc
 133              	.LFE5:
 134              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 135              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 136              		.align	2
 137              		.global	CySysClkWriteHfclkDirect
 138              		.code	16
 139              		.thumb_func
 140              		.type	CySysClkWriteHfclkDirect, %function
 141              	CySysClkWriteHfclkDirect:
 142              	.LFB6:
 310:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 9


 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 10


 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 11


 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
 143              		.loc 1 430 0
 144              		.cfi_startproc
 145              	.LVL1:
 146 0000 10B5     		push	{r4, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 4, -8
 149              		.cfi_offset 14, -4
 150 0002 041C     		mov	r4, r0
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 151              		.loc 1 434 0
 152 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 153              	.LVL2:
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 154              		.loc 1 437 0
 155 0008 0449     		ldr	r1, .L15
 156 000a 0A68     		ldr	r2, [r1]
 157 000c 0323     		mov	r3, #3
 158 000e 9A43     		bic	r2, r3
 159              	.LVL3:
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 160              		.loc 1 448 0
 161 0010 2340     		and	r3, r4
 162 0012 1343     		orr	r3, r2
 163              	.LVL4:
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 164              		.loc 1 451 0
 165 0014 0B60     		str	r3, [r1]
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 166              		.loc 1 453 0
 167 0016 FFF7FEFF 		bl	CyExitCriticalSection
 168              	.LVL5:
 454:Generated_Source\PSoC4/CyLib.c **** }
 169              		.loc 1 454 0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 12


 170              		@ sp needed
 171              	.LVL6:
 172 001a 10BD     		pop	{r4, pc}
 173              	.L16:
 174              		.align	2
 175              	.L15:
 176 001c 28000340 		.word	1073938472
 177              		.cfi_endproc
 178              	.LFE6:
 179              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 180              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 181              		.align	2
 182              		.global	CySysEnablePumpClock
 183              		.code	16
 184              		.thumb_func
 185              		.type	CySysEnablePumpClock, %function
 186              	CySysEnablePumpClock:
 187              	.LFB7:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 188              		.loc 1 474 0
 189              		.cfi_startproc
 190              	.LVL7:
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 191              		.loc 1 487 0
 192 0000 C307     		lsl	r3, r0, #31
 193 0002 07D5     		bpl	.L18
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 13


 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 194              		.loc 1 489 0
 195 0004 094A     		ldr	r2, .L20
 196 0006 1168     		ldr	r1, [r2]
 197 0008 094B     		ldr	r3, .L20+4
 198 000a 1B68     		ldr	r3, [r3]
 199 000c 1B01     		lsl	r3, r3, #4
 200 000e 0B43     		orr	r3, r1
 201 0010 1360     		str	r3, [r2]
 202 0012 09E0     		b	.L17
 203              	.L18:
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 204              		.loc 1 493 0
 205 0014 054A     		ldr	r2, .L20
 206 0016 1368     		ldr	r3, [r2]
 207 0018 9B06     		lsl	r3, r3, #26
 208 001a 9B0F     		lsr	r3, r3, #30
 209 001c 0449     		ldr	r1, .L20+4
 210 001e 0B60     		str	r3, [r1]
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 211              		.loc 1 495 0
 212 0020 1368     		ldr	r3, [r2]
 213 0022 3021     		mov	r1, #48
 214 0024 8B43     		bic	r3, r1
 215 0026 1360     		str	r3, [r2]
 216              	.L17:
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 217              		.loc 1 498 0
 218              		@ sp needed
 219 0028 7047     		bx	lr
 220              	.L21:
 221 002a C046     		.align	2
 222              	.L20:
 223 002c 28000340 		.word	1073938472
 224 0030 00000000 		.word	.LANCHOR0
 225              		.cfi_endproc
 226              	.LFE7:
 227              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 228              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 229              		.align	2
 230              		.global	CySysClkGetSysclkSource
 231              		.code	16
 232              		.thumb_func
 233              		.type	CySysClkGetSysclkSource, %function
 234              	CySysClkGetSysclkSource:
 235              	.LFB8:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 14


 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 236              		.loc 1 511 0
 237              		.cfi_startproc
 238 0000 10B5     		push	{r4, lr}
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 4, -8
 241              		.cfi_offset 14, -4
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 242              		.loc 1 515 0
 243 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 244              	.LVL8:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 245              		.loc 1 525 0
 246 0006 044B     		ldr	r3, .L23
 247 0008 1B68     		ldr	r3, [r3]
 248 000a 0324     		mov	r4, #3
 249 000c 1C40     		and	r4, r3
 250              	.LVL9:
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 251              		.loc 1 528 0
 252 000e FFF7FEFF 		bl	CyExitCriticalSection
 253              	.LVL10:
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 531:Generated_Source\PSoC4/CyLib.c **** }
 254              		.loc 1 531 0
 255 0012 201C     		mov	r0, r4
 256              		@ sp needed
 257              	.LVL11:
 258 0014 10BD     		pop	{r4, pc}
 259              	.L24:
 260 0016 C046     		.align	2
 261              	.L23:
 262 0018 28000340 		.word	1073938472
 263              		.cfi_endproc
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 15


 264              	.LFE8:
 265              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 266              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 267              		.align	2
 268              		.global	CySysClkWriteSysclkDiv
 269              		.code	16
 270              		.thumb_func
 271              		.type	CySysClkWriteSysclkDiv, %function
 272              	CySysClkWriteSysclkDiv:
 273              	.LFB9:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 274              		.loc 1 566 0
 275              		.cfi_startproc
 276              	.LVL12:
 277 0000 10B5     		push	{r4, lr}
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 4, -8
 280              		.cfi_offset 14, -4
 281 0002 041C     		mov	r4, r0
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 282              		.loc 1 569 0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 16


 283 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 284              	.LVL13:
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 285              		.loc 1 571 0
 286 0008 A401     		lsl	r4, r4, #6
 287              	.LVL14:
 288 000a FF23     		mov	r3, #255
 289 000c 2340     		and	r3, r4
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 290              		.loc 1 573 0
 291 000e 0449     		ldr	r1, .L26
 292 0010 0A68     		ldr	r2, [r1]
 293 0012 C024     		mov	r4, #192
 294 0014 A243     		bic	r2, r4
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 295              		.loc 1 572 0
 296 0016 1343     		orr	r3, r2
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 297              		.loc 1 571 0
 298 0018 0B60     		str	r3, [r1]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 299              		.loc 1 576 0
 300 001a FFF7FEFF 		bl	CyExitCriticalSection
 301              	.LVL15:
 577:Generated_Source\PSoC4/CyLib.c **** }
 302              		.loc 1 577 0
 303              		@ sp needed
 304 001e 10BD     		pop	{r4, pc}
 305              	.L27:
 306              		.align	2
 307              	.L26:
 308 0020 28000340 		.word	1073938472
 309              		.cfi_endproc
 310              	.LFE9:
 311              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 312              		.section	.text.CySysClkWriteHfclkDiv,"ax",%progbits
 313              		.align	2
 314              		.global	CySysClkWriteHfclkDiv
 315              		.code	16
 316              		.thumb_func
 317              		.type	CySysClkWriteHfclkDiv, %function
 318              	CySysClkWriteHfclkDiv:
 319              	.LFB11:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 17


 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 18


 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 19


 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 20


 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 21


 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 824:Generated_Source\PSoC4/CyLib.c ****     }
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 22


 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 23


 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 320              		.loc 1 982 0
 321              		.cfi_startproc
 322              	.LVL16:
 323 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 24


 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 4, -8
 326              		.cfi_offset 14, -4
 327 0002 041C     		mov	r4, r0
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 328              		.loc 1 985 0
 329 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 330              	.LVL17:
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 331              		.loc 1 987 0
 332 0008 054A     		ldr	r2, .L29
 333 000a 1368     		ldr	r3, [r2]
 334 000c 0C21     		mov	r1, #12
 335 000e 8B43     		bic	r3, r1
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 336              		.loc 1 989 0
 337 0010 0939     		sub	r1, r1, #9
 338 0012 0C40     		and	r4, r1
 339              	.LVL18:
 340 0014 A400     		lsl	r4, r4, #2
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 341              		.loc 1 988 0
 342 0016 1C43     		orr	r4, r3
 987:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 343              		.loc 1 987 0
 344 0018 1460     		str	r4, [r2]
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 345              		.loc 1 991 0
 346 001a FFF7FEFF 		bl	CyExitCriticalSection
 347              	.LVL19:
 992:Generated_Source\PSoC4/CyLib.c ****     }
 348              		.loc 1 992 0
 349              		@ sp needed
 350 001e 10BD     		pop	{r4, pc}
 351              	.L30:
 352              		.align	2
 353              	.L29:
 354 0020 28000340 		.word	1073938472
 355              		.cfi_endproc
 356              	.LFE11:
 357              		.size	CySysClkWriteHfclkDiv, .-CySysClkWriteHfclkDiv
 358              		.section	.text.CySysGetResetReason,"ax",%progbits
 359              		.align	2
 360              		.global	CySysGetResetReason
 361              		.code	16
 362              		.thumb_func
 363              		.type	CySysGetResetReason, %function
 364              	CySysGetResetReason:
 365              	.LFB12:
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 25


 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 26


1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 27


1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 28


1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 29


1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 30


1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 31


1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 32


1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 33


1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 34


1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 35


1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 36


1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 37


1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 38


1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 39


1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 40


1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 41


1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 42


1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 43


2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 44


2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 45


2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2152:Generated_Source\PSoC4/CyLib.c ****     }
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2169:Generated_Source\PSoC4/CyLib.c ****     }
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2185:Generated_Source\PSoC4/CyLib.c ****     }
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 46


2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 366              		.loc 1 2209 0
 367              		.cfi_startproc
 368              	.LVL20:
 369 0000 021C     		mov	r2, r0
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 370              		.loc 1 2212 0
 371 0002 1920     		mov	r0, #25
 372              	.LVL21:
 373 0004 0240     		and	r2, r0
 374              	.LVL22:
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 375              		.loc 1 2213 0
 376 0006 0249     		ldr	r1, .L32
 377 0008 0B68     		ldr	r3, [r1]
 378 000a 1840     		and	r0, r3
 379              	.LVL23:
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 380              		.loc 1 2215 0
 381 000c 0A60     		str	r2, [r1]
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
 382              		.loc 1 2218 0
 383              		@ sp needed
 384 000e 7047     		bx	lr
 385              	.L33:
 386              		.align	2
 387              	.L32:
 388 0010 54000340 		.word	1073938516
 389              		.cfi_endproc
 390              	.LFE12:
 391              		.size	CySysGetResetReason, .-CySysGetResetReason
 392              		.section	.text.CyDisableInts,"ax",%progbits
 393              		.align	2
 394              		.global	CyDisableInts
 395              		.code	16
 396              		.thumb_func
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 47


 397              		.type	CyDisableInts, %function
 398              	CyDisableInts:
 399              	.LFB13:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 400              		.loc 1 2232 0
 401              		.cfi_startproc
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 402              		.loc 1 2236 0
 403 0000 024B     		ldr	r3, .L35
 404 0002 1868     		ldr	r0, [r3]
 405              	.LVL24:
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 406              		.loc 1 2239 0
 407 0004 0122     		mov	r2, #1
 408 0006 5242     		neg	r2, r2
 409 0008 1A60     		str	r2, [r3]
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
 410              		.loc 1 2242 0
 411              		@ sp needed
 412 000a 7047     		bx	lr
 413              	.L36:
 414              		.align	2
 415              	.L35:
 416 000c 80E100E0 		.word	-536813184
 417              		.cfi_endproc
 418              	.LFE13:
 419              		.size	CyDisableInts, .-CyDisableInts
 420              		.section	.text.CyEnableInts,"ax",%progbits
 421              		.align	2
 422              		.global	CyEnableInts
 423              		.code	16
 424              		.thumb_func
 425              		.type	CyEnableInts, %function
 426              	CyEnableInts:
 427              	.LFB14:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 48


2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 428              		.loc 1 2255 0
 429              		.cfi_startproc
 430              	.LVL25:
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 431              		.loc 1 2256 0
 432 0000 014B     		ldr	r3, .L38
 433 0002 1860     		str	r0, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** }
 434              		.loc 1 2257 0
 435              		@ sp needed
 436 0004 7047     		bx	lr
 437              	.L39:
 438 0006 C046     		.align	2
 439              	.L38:
 440 0008 00E100E0 		.word	-536813312
 441              		.cfi_endproc
 442              	.LFE14:
 443              		.size	CyEnableInts, .-CyEnableInts
 444              		.section	.text.CyIntEnable,"ax",%progbits
 445              		.align	2
 446              		.global	CyIntEnable
 447              		.code	16
 448              		.thumb_func
 449              		.type	CyIntEnable, %function
 450              	CyIntEnable:
 451              	.LFB21:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 49


2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2320:Generated_Source\PSoC4/CyLib.c **** }
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 50


2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2370:Generated_Source\PSoC4/CyLib.c **** }
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 51


2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2425:Generated_Source\PSoC4/CyLib.c **** }
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 452              		.loc 1 2438 0
 453              		.cfi_startproc
 454              	.LVL26:
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 455              		.loc 1 2439 0
 456 0000 1F23     		mov	r3, #31
 457 0002 1840     		and	r0, r3
 458              	.LVL27:
 459 0004 1E3B     		sub	r3, r3, #30
 460 0006 8340     		lsl	r3, r3, r0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 52


 461 0008 181C     		mov	r0, r3
 462 000a 014B     		ldr	r3, .L41
 463 000c 1860     		str	r0, [r3]
2440:Generated_Source\PSoC4/CyLib.c **** }
 464              		.loc 1 2440 0
 465              		@ sp needed
 466 000e 7047     		bx	lr
 467              	.L42:
 468              		.align	2
 469              	.L41:
 470 0010 00E100E0 		.word	-536813312
 471              		.cfi_endproc
 472              	.LFE21:
 473              		.size	CyIntEnable, .-CyIntEnable
 474              		.section	.text.CyIntGetState,"ax",%progbits
 475              		.align	2
 476              		.global	CyIntGetState
 477              		.code	16
 478              		.thumb_func
 479              		.type	CyIntGetState, %function
 480              	CyIntGetState:
 481              	.LFB22:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 482              		.loc 1 2456 0
 483              		.cfi_startproc
 484              	.LVL28:
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 485              		.loc 1 2458 0
 486 0000 044B     		ldr	r3, .L44
 487 0002 1B68     		ldr	r3, [r3]
 488 0004 1F22     		mov	r2, #31
 489 0006 1040     		and	r0, r2
 490              	.LVL29:
 491 0008 C340     		lsr	r3, r3, r0
 492 000a 181C     		mov	r0, r3
 493 000c 0123     		mov	r3, #1
 494 000e 1840     		and	r0, r3
2459:Generated_Source\PSoC4/CyLib.c **** }
 495              		.loc 1 2459 0
 496              		@ sp needed
 497 0010 7047     		bx	lr
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 53


 498              	.L45:
 499 0012 C046     		.align	2
 500              	.L44:
 501 0014 00E100E0 		.word	-536813312
 502              		.cfi_endproc
 503              	.LFE22:
 504              		.size	CyIntGetState, .-CyIntGetState
 505              		.section	.text.CyIntDisable,"ax",%progbits
 506              		.align	2
 507              		.global	CyIntDisable
 508              		.code	16
 509              		.thumb_func
 510              		.type	CyIntDisable, %function
 511              	CyIntDisable:
 512              	.LFB23:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 513              		.loc 1 2472 0
 514              		.cfi_startproc
 515              	.LVL30:
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 516              		.loc 1 2473 0
 517 0000 1F23     		mov	r3, #31
 518 0002 1840     		and	r0, r3
 519              	.LVL31:
 520 0004 1E3B     		sub	r3, r3, #30
 521 0006 8340     		lsl	r3, r3, r0
 522 0008 181C     		mov	r0, r3
 523 000a 014B     		ldr	r3, .L47
 524 000c 1860     		str	r0, [r3]
2474:Generated_Source\PSoC4/CyLib.c **** }
 525              		.loc 1 2474 0
 526              		@ sp needed
 527 000e 7047     		bx	lr
 528              	.L48:
 529              		.align	2
 530              	.L47:
 531 0010 80E100E0 		.word	-536813184
 532              		.cfi_endproc
 533              	.LFE23:
 534              		.size	CyIntDisable, .-CyIntDisable
 535              		.section	.text.CyIntSetPending,"ax",%progbits
 536              		.align	2
 537              		.global	CyIntSetPending
 538              		.code	16
 539              		.thumb_func
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 54


 540              		.type	CyIntSetPending, %function
 541              	CyIntSetPending:
 542              	.LFB24:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 543              		.loc 1 2486 0
 544              		.cfi_startproc
 545              	.LVL32:
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 546              		.loc 1 2487 0
 547 0000 1F23     		mov	r3, #31
 548 0002 1840     		and	r0, r3
 549              	.LVL33:
 550 0004 1E3B     		sub	r3, r3, #30
 551 0006 8340     		lsl	r3, r3, r0
 552 0008 181C     		mov	r0, r3
 553 000a 014B     		ldr	r3, .L50
 554 000c 1860     		str	r0, [r3]
2488:Generated_Source\PSoC4/CyLib.c **** }
 555              		.loc 1 2488 0
 556              		@ sp needed
 557 000e 7047     		bx	lr
 558              	.L51:
 559              		.align	2
 560              	.L50:
 561 0010 00E200E0 		.word	-536813056
 562              		.cfi_endproc
 563              	.LFE24:
 564              		.size	CyIntSetPending, .-CyIntSetPending
 565              		.section	.text.CyIntClearPending,"ax",%progbits
 566              		.align	2
 567              		.global	CyIntClearPending
 568              		.code	16
 569              		.thumb_func
 570              		.type	CyIntClearPending, %function
 571              	CyIntClearPending:
 572              	.LFB25:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 55


2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 573              		.loc 1 2501 0
 574              		.cfi_startproc
 575              	.LVL34:
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 576              		.loc 1 2502 0
 577 0000 1F23     		mov	r3, #31
 578 0002 1840     		and	r0, r3
 579              	.LVL35:
 580 0004 1E3B     		sub	r3, r3, #30
 581 0006 8340     		lsl	r3, r3, r0
 582 0008 181C     		mov	r0, r3
 583 000a 014B     		ldr	r3, .L53
 584 000c 1860     		str	r0, [r3]
2503:Generated_Source\PSoC4/CyLib.c **** }
 585              		.loc 1 2503 0
 586              		@ sp needed
 587 000e 7047     		bx	lr
 588              	.L54:
 589              		.align	2
 590              	.L53:
 591 0010 80E200E0 		.word	-536812928
 592              		.cfi_endproc
 593              	.LFE25:
 594              		.size	CyIntClearPending, .-CyIntClearPending
 595              		.section	.text.CyHalt,"ax",%progbits
 596              		.align	2
 597              		.global	CyHalt
 598              		.code	16
 599              		.thumb_func
 600              		.type	CyHalt, %function
 601              	CyHalt:
 602              	.LFB26:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 603              		.loc 1 2516 0
 604              		.cfi_startproc
 605              	.LVL36:
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 56


2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 606              		.loc 1 2525 0
 607              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 608 0000 01BE     		    bkpt    1
 609              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 610              		.loc 1 2529 0
 611              		.code	16
 612              		@ sp needed
 613 0002 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE26:
 616              		.size	CyHalt, .-CyHalt
 617              		.section	.text.CyIntSetSysVector,"ax",%progbits
 618              		.align	2
 619              		.global	CyIntSetSysVector
 620              		.code	16
 621              		.thumb_func
 622              		.type	CyIntSetSysVector, %function
 623              	CyIntSetSysVector:
 624              	.LFB15:
2280:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 625              		.loc 1 2280 0
 626              		.cfi_startproc
 627              	.LVL37:
 628 0000 38B5     		push	{r3, r4, r5, lr}
 629              		.cfi_def_cfa_offset 16
 630              		.cfi_offset 3, -16
 631              		.cfi_offset 4, -12
 632              		.cfi_offset 5, -8
 633              		.cfi_offset 14, -4
 634 0002 041C     		mov	r4, r0
 635 0004 0D1C     		mov	r5, r1
 636              	.LVL38:
2284:Generated_Source\PSoC4/CyLib.c **** 
 637              		.loc 1 2284 0
 638 0006 0F28     		cmp	r0, #15
 639 0008 02D9     		bls	.L57
2284:Generated_Source\PSoC4/CyLib.c **** 
 640              		.loc 1 2284 0 is_stmt 0 discriminator 1
 641 000a 0020     		mov	r0, #0
 642              	.LVL39:
 643 000c FFF7FEFF 		bl	CyHalt
 644              	.LVL40:
 645              	.L57:
2287:Generated_Source\PSoC4/CyLib.c **** 
 646              		.loc 1 2287 0 is_stmt 1
 647 0010 A400     		lsl	r4, r4, #2
 648 0012 8023     		mov	r3, #128
 649 0014 9B05     		lsl	r3, r3, #22
 650 0016 9C46     		mov	ip, r3
 651 0018 6444     		add	r4, r4, ip
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 57


 652 001a 2068     		ldr	r0, [r4]
 653              	.LVL41:
2290:Generated_Source\PSoC4/CyLib.c **** 
 654              		.loc 1 2290 0
 655 001c 2560     		str	r5, [r4]
2293:Generated_Source\PSoC4/CyLib.c **** 
 656              		.loc 1 2293 0
 657              		@ sp needed
 658              	.LVL42:
 659 001e 38BD     		pop	{r3, r4, r5, pc}
 660              		.cfi_endproc
 661              	.LFE15:
 662              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 663              		.section	.text.CyIntGetSysVector,"ax",%progbits
 664              		.align	2
 665              		.global	CyIntGetSysVector
 666              		.code	16
 667              		.thumb_func
 668              		.type	CyIntGetSysVector, %function
 669              	CyIntGetSysVector:
 670              	.LFB16:
2314:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 671              		.loc 1 2314 0
 672              		.cfi_startproc
 673              	.LVL43:
 674 0000 10B5     		push	{r4, lr}
 675              		.cfi_def_cfa_offset 8
 676              		.cfi_offset 4, -8
 677              		.cfi_offset 14, -4
 678 0002 041E     		sub	r4, r0, #0
 679              	.LVL44:
2317:Generated_Source\PSoC4/CyLib.c **** 
 680              		.loc 1 2317 0
 681 0004 0F2C     		cmp	r4, #15
 682 0006 02D9     		bls	.L59
2317:Generated_Source\PSoC4/CyLib.c **** 
 683              		.loc 1 2317 0 is_stmt 0 discriminator 1
 684 0008 0020     		mov	r0, #0
 685              	.LVL45:
 686 000a FFF7FEFF 		bl	CyHalt
 687              	.LVL46:
 688              	.L59:
2319:Generated_Source\PSoC4/CyLib.c **** }
 689              		.loc 1 2319 0 is_stmt 1
 690 000e A400     		lsl	r4, r4, #2
 691 0010 8023     		mov	r3, #128
 692 0012 9B05     		lsl	r3, r3, #22
 693 0014 9C46     		mov	ip, r3
 694 0016 6444     		add	r4, r4, ip
 695 0018 2068     		ldr	r0, [r4]
2320:Generated_Source\PSoC4/CyLib.c **** 
 696              		.loc 1 2320 0
 697              		@ sp needed
 698 001a 10BD     		pop	{r4, pc}
 699              		.cfi_endproc
 700              	.LFE16:
 701              		.size	CyIntGetSysVector, .-CyIntGetSysVector
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 58


 702              		.section	.text.CyIntSetVector,"ax",%progbits
 703              		.align	2
 704              		.global	CyIntSetVector
 705              		.code	16
 706              		.thumb_func
 707              		.type	CyIntSetVector, %function
 708              	CyIntSetVector:
 709              	.LFB17:
2336:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 710              		.loc 1 2336 0
 711              		.cfi_startproc
 712              	.LVL47:
 713 0000 38B5     		push	{r3, r4, r5, lr}
 714              		.cfi_def_cfa_offset 16
 715              		.cfi_offset 3, -16
 716              		.cfi_offset 4, -12
 717              		.cfi_offset 5, -8
 718              		.cfi_offset 14, -4
 719 0002 041C     		mov	r4, r0
 720 0004 0D1C     		mov	r5, r1
 721              	.LVL48:
2340:Generated_Source\PSoC4/CyLib.c **** 
 722              		.loc 1 2340 0
 723 0006 1828     		cmp	r0, #24
 724 0008 02D9     		bls	.L61
2340:Generated_Source\PSoC4/CyLib.c **** 
 725              		.loc 1 2340 0 is_stmt 0 discriminator 1
 726 000a 0020     		mov	r0, #0
 727              	.LVL49:
 728 000c FFF7FEFF 		bl	CyHalt
 729              	.LVL50:
 730              	.L61:
2343:Generated_Source\PSoC4/CyLib.c **** 
 731              		.loc 1 2343 0 is_stmt 1
 732 0010 A400     		lsl	r4, r4, #2
 733 0012 034B     		ldr	r3, .L62
 734 0014 9C46     		mov	ip, r3
 735 0016 6444     		add	r4, r4, ip
 736 0018 2068     		ldr	r0, [r4]
 737              	.LVL51:
2346:Generated_Source\PSoC4/CyLib.c **** 
 738              		.loc 1 2346 0
 739 001a 2560     		str	r5, [r4]
2349:Generated_Source\PSoC4/CyLib.c **** 
 740              		.loc 1 2349 0
 741              		@ sp needed
 742              	.LVL52:
 743 001c 38BD     		pop	{r3, r4, r5, pc}
 744              	.L63:
 745 001e C046     		.align	2
 746              	.L62:
 747 0020 40000020 		.word	536870976
 748              		.cfi_endproc
 749              	.LFE17:
 750              		.size	CyIntSetVector, .-CyIntSetVector
 751              		.section	.text.CyIntGetVector,"ax",%progbits
 752              		.align	2
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 59


 753              		.global	CyIntGetVector
 754              		.code	16
 755              		.thumb_func
 756              		.type	CyIntGetVector, %function
 757              	CyIntGetVector:
 758              	.LFB18:
2364:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 759              		.loc 1 2364 0
 760              		.cfi_startproc
 761              	.LVL53:
 762 0000 10B5     		push	{r4, lr}
 763              		.cfi_def_cfa_offset 8
 764              		.cfi_offset 4, -8
 765              		.cfi_offset 14, -4
 766 0002 041E     		sub	r4, r0, #0
 767              	.LVL54:
2367:Generated_Source\PSoC4/CyLib.c **** 
 768              		.loc 1 2367 0
 769 0004 182C     		cmp	r4, #24
 770 0006 02D9     		bls	.L65
2367:Generated_Source\PSoC4/CyLib.c **** 
 771              		.loc 1 2367 0 is_stmt 0 discriminator 1
 772 0008 0020     		mov	r0, #0
 773              	.LVL55:
 774 000a FFF7FEFF 		bl	CyHalt
 775              	.LVL56:
 776              	.L65:
2369:Generated_Source\PSoC4/CyLib.c **** }
 777              		.loc 1 2369 0 is_stmt 1
 778 000e A400     		lsl	r4, r4, #2
 779 0010 024B     		ldr	r3, .L66
 780 0012 9C46     		mov	ip, r3
 781 0014 6444     		add	r4, r4, ip
 782 0016 2068     		ldr	r0, [r4]
2370:Generated_Source\PSoC4/CyLib.c **** 
 783              		.loc 1 2370 0
 784              		@ sp needed
 785 0018 10BD     		pop	{r4, pc}
 786              	.L67:
 787 001a C046     		.align	2
 788              	.L66:
 789 001c 40000020 		.word	536870976
 790              		.cfi_endproc
 791              	.LFE18:
 792              		.size	CyIntGetVector, .-CyIntGetVector
 793              		.section	.text.CyIntSetPriority,"ax",%progbits
 794              		.align	2
 795              		.global	CyIntSetPriority
 796              		.code	16
 797              		.thumb_func
 798              		.type	CyIntSetPriority, %function
 799              	CyIntSetPriority:
 800              	.LFB19:
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 801              		.loc 1 2383 0
 802              		.cfi_startproc
 803              	.LVL57:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 60


 804 0000 70B5     		push	{r4, r5, r6, lr}
 805              		.cfi_def_cfa_offset 16
 806              		.cfi_offset 4, -16
 807              		.cfi_offset 5, -12
 808              		.cfi_offset 6, -8
 809              		.cfi_offset 14, -4
 810 0002 041C     		mov	r4, r0
 811 0004 0E1E     		sub	r6, r1, #0
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 812              		.loc 1 2388 0
 813 0006 032E     		cmp	r6, #3
 814 0008 02D9     		bls	.L69
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 815              		.loc 1 2388 0 is_stmt 0 discriminator 1
 816 000a 0020     		mov	r0, #0
 817              	.LVL58:
 818 000c FFF7FEFF 		bl	CyHalt
 819              	.LVL59:
 820              	.L69:
2389:Generated_Source\PSoC4/CyLib.c **** 
 821              		.loc 1 2389 0 is_stmt 1
 822 0010 182C     		cmp	r4, #24
 823 0012 02D9     		bls	.L70
2389:Generated_Source\PSoC4/CyLib.c **** 
 824              		.loc 1 2389 0 is_stmt 0 discriminator 1
 825 0014 0020     		mov	r0, #0
 826 0016 FFF7FEFF 		bl	CyHalt
 827              	.LVL60:
 828              	.L70:
2391:Generated_Source\PSoC4/CyLib.c **** 
 829              		.loc 1 2391 0 is_stmt 1
 830 001a 0325     		mov	r5, #3
 831 001c 2540     		and	r5, r4
 832 001e ED00     		lsl	r5, r5, #3
 833 0020 0635     		add	r5, r5, #6
 834              	.LVL61:
2393:Generated_Source\PSoC4/CyLib.c **** 
 835              		.loc 1 2393 0
 836 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 837              	.LVL62:
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 838              		.loc 1 2395 0
 839 0026 A408     		lsr	r4, r4, #2
 840 0028 A400     		lsl	r4, r4, #2
 841 002a 074B     		ldr	r3, .L71
 842 002c 9C46     		mov	ip, r3
 843 002e 6444     		add	r4, r4, ip
 844 0030 2368     		ldr	r3, [r4]
 845              	.LVL63:
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 846              		.loc 1 2396 0
 847 0032 0322     		mov	r2, #3
 848 0034 AA40     		lsl	r2, r2, r5
 849 0036 9343     		bic	r3, r2
 850              	.LVL64:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 851              		.loc 1 2397 0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 61


 852 0038 AE40     		lsl	r6, r6, r5
 853 003a 351C     		mov	r5, r6
 854              	.LVL65:
 855 003c 1D43     		orr	r5, r3
 856              	.LVL66:
2398:Generated_Source\PSoC4/CyLib.c **** 
 857              		.loc 1 2398 0
 858 003e 2560     		str	r5, [r4]
2400:Generated_Source\PSoC4/CyLib.c **** }
 859              		.loc 1 2400 0
 860 0040 FFF7FEFF 		bl	CyExitCriticalSection
 861              	.LVL67:
2401:Generated_Source\PSoC4/CyLib.c **** 
 862              		.loc 1 2401 0
 863              		@ sp needed
 864              	.LVL68:
 865 0044 70BD     		pop	{r4, r5, r6, pc}
 866              	.L72:
 867 0046 C046     		.align	2
 868              	.L71:
 869 0048 00E400E0 		.word	-536812544
 870              		.cfi_endproc
 871              	.LFE19:
 872              		.size	CyIntSetPriority, .-CyIntSetPriority
 873              		.section	.text.CyIntGetPriority,"ax",%progbits
 874              		.align	2
 875              		.global	CyIntGetPriority
 876              		.code	16
 877              		.thumb_func
 878              		.type	CyIntGetPriority, %function
 879              	CyIntGetPriority:
 880              	.LFB20:
2417:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 881              		.loc 1 2417 0
 882              		.cfi_startproc
 883              	.LVL69:
 884 0000 10B5     		push	{r4, lr}
 885              		.cfi_def_cfa_offset 8
 886              		.cfi_offset 4, -8
 887              		.cfi_offset 14, -4
 888 0002 041E     		sub	r4, r0, #0
2420:Generated_Source\PSoC4/CyLib.c **** 
 889              		.loc 1 2420 0
 890 0004 182C     		cmp	r4, #24
 891 0006 02D9     		bls	.L74
2420:Generated_Source\PSoC4/CyLib.c **** 
 892              		.loc 1 2420 0 is_stmt 0 discriminator 1
 893 0008 0020     		mov	r0, #0
 894              	.LVL70:
 895 000a FFF7FEFF 		bl	CyHalt
 896              	.LVL71:
 897              	.L74:
2422:Generated_Source\PSoC4/CyLib.c **** 
 898              		.loc 1 2422 0 is_stmt 1
 899 000e A308     		lsr	r3, r4, #2
 900 0010 9B00     		lsl	r3, r3, #2
 901 0012 054A     		ldr	r2, .L75
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 62


 902 0014 9446     		mov	ip, r2
 903 0016 6344     		add	r3, r3, ip
 904 0018 1868     		ldr	r0, [r3]
 905 001a 0323     		mov	r3, #3
 906 001c 1C40     		and	r4, r3
 907 001e E400     		lsl	r4, r4, #3
 908 0020 0634     		add	r4, r4, #6
 909 0022 E040     		lsr	r0, r0, r4
 910              	.LVL72:
2424:Generated_Source\PSoC4/CyLib.c **** }
 911              		.loc 1 2424 0
 912 0024 1840     		and	r0, r3
 913              	.LVL73:
2425:Generated_Source\PSoC4/CyLib.c **** 
 914              		.loc 1 2425 0
 915              		@ sp needed
 916 0026 10BD     		pop	{r4, pc}
 917              	.L76:
 918              		.align	2
 919              	.L75:
 920 0028 00E400E0 		.word	-536812544
 921              		.cfi_endproc
 922              	.LFE20:
 923              		.size	CyIntGetPriority, .-CyIntGetPriority
 924              		.section	.text.CySoftwareReset,"ax",%progbits
 925              		.align	2
 926              		.global	CySoftwareReset
 927              		.code	16
 928              		.thumb_func
 929              		.type	CySoftwareReset, %function
 930              	CySoftwareReset:
 931              	.LFB27:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 932              		.loc 1 2540 0
 933              		.cfi_startproc
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 934              		.loc 1 2545 0
 935 0000 034A     		ldr	r2, .L78
 936 0002 1368     		ldr	r3, [r2]
 937 0004 1B04     		lsl	r3, r3, #16
 938 0006 1B0C     		lsr	r3, r3, #16
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 939              		.loc 1 2546 0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 63


 940 0008 0249     		ldr	r1, .L78+4
 941 000a 0B43     		orr	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 942              		.loc 1 2545 0
 943 000c 1360     		str	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** }
 944              		.loc 1 2547 0
 945              		@ sp needed
 946 000e 7047     		bx	lr
 947              	.L79:
 948              		.align	2
 949              	.L78:
 950 0010 0CED00E0 		.word	-536810228
 951 0014 0400FA05 		.word	100270084
 952              		.cfi_endproc
 953              	.LFE27:
 954              		.size	CySoftwareReset, .-CySoftwareReset
 955              		.section	.text.CyDelay,"ax",%progbits
 956              		.align	2
 957              		.global	CyDelay
 958              		.code	16
 959              		.thumb_func
 960              		.type	CyDelay, %function
 961              	CyDelay:
 962              	.LFB28:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 963              		.loc 1 2560 0
 964              		.cfi_startproc
 965              	.LVL74:
 966 0000 10B5     		push	{r4, lr}
 967              		.cfi_def_cfa_offset 8
 968              		.cfi_offset 4, -8
 969              		.cfi_offset 14, -4
 970 0002 041C     		mov	r4, r0
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 971              		.loc 1 2561 0
 972 0004 06E0     		b	.L81
 973              	.LVL75:
 974              	.L82:
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 975              		.loc 1 2566 0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 64


 976 0006 084B     		ldr	r3, .L83
 977 0008 5868     		ldr	r0, [r3, #4]
 978 000a FFF7FEFF 		bl	CyDelayCycles
 979              	.LVL76:
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 980              		.loc 1 2567 0
 981 000e 074B     		ldr	r3, .L83+4
 982 0010 9C46     		mov	ip, r3
 983 0012 6444     		add	r4, r4, ip
 984              	.LVL77:
 985              	.L81:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 986              		.loc 1 2561 0
 987 0014 8023     		mov	r3, #128
 988 0016 1B02     		lsl	r3, r3, #8
 989 0018 9C42     		cmp	r4, r3
 990 001a F4D8     		bhi	.L82
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 991              		.loc 1 2570 0
 992 001c 024B     		ldr	r3, .L83
 993 001e 9868     		ldr	r0, [r3, #8]
 994 0020 6043     		mul	r0, r4
 995 0022 FFF7FEFF 		bl	CyDelayCycles
 996              	.LVL78:
2571:Generated_Source\PSoC4/CyLib.c **** }
 997              		.loc 1 2571 0
 998              		@ sp needed
 999              	.LVL79:
 1000 0026 10BD     		pop	{r4, pc}
 1001              	.L84:
 1002              		.align	2
 1003              	.L83:
 1004 0028 00000000 		.word	.LANCHOR0
 1005 002c 0080FFFF 		.word	-32768
 1006              		.cfi_endproc
 1007              	.LFE28:
 1008              		.size	CyDelay, .-CyDelay
 1009              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 1010              		.align	2
 1011              		.global	CySysClkImoEnableWcoLock
 1012              		.code	16
 1013              		.thumb_func
 1014              		.type	CySysClkImoEnableWcoLock, %function
 1015              	CySysClkImoEnableWcoLock:
 1016              	.LFB3:
 176:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 1017              		.loc 1 176 0
 1018              		.cfi_startproc
 1019 0000 30B5     		push	{r4, r5, lr}
 1020              		.cfi_def_cfa_offset 12
 1021              		.cfi_offset 4, -12
 1022              		.cfi_offset 5, -8
 1023              		.cfi_offset 14, -4
 1024 0002 83B0     		sub	sp, sp, #12
 1025              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 65


 1026              	.LVL80:
 187:Generated_Source\PSoC4/CyLib.c ****         {
 1027              		.loc 1 187 0
 1028 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 1029              	.LVL81:
 1030 0008 0028     		cmp	r0, #0
 1031 000a 48D0     		beq	.L85
 189:Generated_Source\PSoC4/CyLib.c **** 
 1032              		.loc 1 189 0
 1033 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1034              	.LVL82:
 1035 0010 041C     		mov	r4, r0
 1036              	.LVL83:
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1037              		.loc 1 212 0
 1038 0012 244B     		ldr	r3, .L90
 1039 0014 1B68     		ldr	r3, [r3]
 1040 0016 0722     		mov	r2, #7
 1041 0018 1A40     		and	r2, r3
 1042 001a 9200     		lsl	r2, r2, #2
 213:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 1043              		.loc 1 213 0
 1044 001c 131C     		mov	r3, r2
 1045 001e 1833     		add	r3, r3, #24
 214:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 1046              		.loc 1 214 0
 1047 0020 214A     		ldr	r2, .L90+4
 1048 0022 1268     		ldr	r2, [r2]
 213:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 1049              		.loc 1 213 0
 1050 0024 1207     		lsl	r2, r2, #28
 1051 0026 920F     		lsr	r2, r2, #30
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1052              		.loc 1 212 0
 1053 0028 D340     		lsr	r3, r3, r2
 1054 002a 1A1C     		mov	r2, r3
 1055              	.LVL84:
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1056              		.loc 1 232 0
 1057 002c 1F4B     		ldr	r3, .L90+8
 1058 002e 1968     		ldr	r1, [r3]
 1059 0030 1F4B     		ldr	r3, .L90+12
 1060 0032 1940     		and	r1, r3
 1061              	.LVL85:
 238:Generated_Source\PSoC4/CyLib.c **** 
 1062              		.loc 1 238 0
 1063 0034 1F4B     		ldr	r3, .L90+16
 1064 0036 5343     		mul	r3, r2
 1065 0038 8020     		mov	r0, #128
 1066 003a C001     		lsl	r0, r0, #7
 1067 003c 8446     		mov	ip, r0
 1068 003e 6344     		add	r3, r3, ip
 1069 0040 DB0B     		lsr	r3, r3, #15
 1070 0042 013B     		sub	r3, r3, #1
 1071 0044 5B05     		lsl	r3, r3, #21
 1072 0046 5B0D     		lsr	r3, r3, #21
 1073 0048 0B43     		orr	r3, r1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 66


 1074              	.LVL86:
 241:Generated_Source\PSoC4/CyLib.c **** 
 1075              		.loc 1 241 0
 1076 004a A021     		mov	r1, #160
 1077 004c 4903     		lsl	r1, r1, #13
 1078 004e 1943     		orr	r1, r3
 1079              	.LVL87:
 244:Generated_Source\PSoC4/CyLib.c ****             {
 1080              		.loc 1 244 0
 1081 0050 192A     		cmp	r2, #25
 1082 0052 02D8     		bhi	.L87
 246:Generated_Source\PSoC4/CyLib.c ****             }
 1083              		.loc 1 246 0
 1084 0054 184A     		ldr	r2, .L90+20
 1085              	.LVL88:
 1086 0056 1343     		orr	r3, r2
 1087              	.LVL89:
 1088 0058 0BE0     		b	.L88
 1089              	.LVL90:
 1090              	.L87:
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1091              		.loc 1 250 0
 1092 005a 184B     		ldr	r3, .L90+24
 1093 005c D318     		add	r3, r2, r3
 1094 005e 1878     		ldrb	r0, [r3]
 251:Generated_Source\PSoC4/CyLib.c **** 
 1095              		.loc 1 251 0
 1096 0060 1A3A     		sub	r2, r2, #26
 1097              	.LVL91:
 1098 0062 174B     		ldr	r3, .L90+28
 1099 0064 9B5C     		ldrb	r3, [r3, r2]
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1100              		.loc 1 250 0
 1101 0066 C318     		add	r3, r0, r3
 1102              	.LVL92:
 253:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 1103              		.loc 1 253 0
 1104 0068 FF2B     		cmp	r3, #255
 1105 006a 00D9     		bls	.L89
 1106 006c FF23     		mov	r3, #255
 1107              	.L89:
 1108              	.LVL93:
 256:Generated_Source\PSoC4/CyLib.c ****             }
 1109              		.loc 1 256 0
 1110 006e 9B05     		lsl	r3, r3, #22
 1111              	.LVL94:
 1112 0070 0B43     		orr	r3, r1
 1113              	.LVL95:
 1114              	.L88:
 259:Generated_Source\PSoC4/CyLib.c **** 
 1115              		.loc 1 259 0
 1116 0072 0E4A     		ldr	r2, .L90+8
 1117 0074 1360     		str	r3, [r2]
 261:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1118              		.loc 1 261 0
 1119 0076 134D     		ldr	r5, .L90+32
 1120 0078 2B68     		ldr	r3, [r5]
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 67


 1121              	.LVL96:
 1122 007a 0193     		str	r3, [sp, #4]
 1123              	.LVL97:
 262:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1124              		.loc 1 262 0
 1125 007c 3020     		mov	r0, #48
 1126 007e FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1127              	.LVL98:
 263:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 1128              		.loc 1 263 0
 1129 0082 114A     		ldr	r2, .L90+36
 1130 0084 1368     		ldr	r3, [r2]
 1131 0086 8021     		mov	r1, #128
 1132 0088 C905     		lsl	r1, r1, #23
 1133 008a 0B43     		orr	r3, r1
 1134 008c 1360     		str	r3, [r2]
 264:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 1135              		.loc 1 264 0
 1136 008e 1420     		mov	r0, #20
 1137 0090 FFF7FEFF 		bl	CyDelay
 1138              	.LVL99:
 265:Generated_Source\PSoC4/CyLib.c **** 
 1139              		.loc 1 265 0
 1140 0094 019B     		ldr	r3, [sp, #4]
 1141 0096 2B60     		str	r3, [r5]
 267:Generated_Source\PSoC4/CyLib.c ****         }
 1142              		.loc 1 267 0
 1143 0098 201C     		mov	r0, r4
 1144 009a FFF7FEFF 		bl	CyExitCriticalSection
 1145              	.LVL100:
 1146              	.L85:
 269:Generated_Source\PSoC4/CyLib.c **** 
 1147              		.loc 1 269 0
 1148 009e 03B0     		add	sp, sp, #12
 1149              		@ sp needed
 1150 00a0 30BD     		pop	{r4, r5, pc}
 1151              	.L91:
 1152 00a2 C046     		.align	2
 1153              	.L90:
 1154 00a4 080F0340 		.word	1073942280
 1155 00a8 28000340 		.word	1073938472
 1156 00ac 08000640 		.word	1074135048
 1157 00b0 00F800C0 		.word	-1073678336
 1158 00b4 40420F00 		.word	1000000
 1159 00b8 0000D43F 		.word	1070858240
 1160 00bc CDF1FF0F 		.word	268431821
 1161 00c0 00000000 		.word	.LANCHOR1
 1162 00c4 30001040 		.word	1074790448
 1163 00c8 00000640 		.word	1074135040
 1164              		.cfi_endproc
 1165              	.LFE3:
 1166              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1167              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1168              		.align	2
 1169              		.global	CySysClkWriteImoFreq
 1170              		.code	16
 1171              		.thumb_func
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 68


 1172              		.type	CySysClkWriteImoFreq, %function
 1173              	CySysClkWriteImoFreq:
 1174              	.LFB10:
 829:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 1175              		.loc 1 829 0
 1176              		.cfi_startproc
 1177              	.LVL101:
 1178 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1179              		.cfi_def_cfa_offset 20
 1180              		.cfi_offset 4, -20
 1181              		.cfi_offset 5, -16
 1182              		.cfi_offset 6, -12
 1183              		.cfi_offset 7, -8
 1184              		.cfi_offset 14, -4
 1185 0002 83B0     		sub	sp, sp, #12
 1186              		.cfi_def_cfa_offset 32
 1187 0004 041E     		sub	r4, r0, #0
 1188              	.LVL102:
 846:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1189              		.loc 1 846 0
 1190 0006 182C     		cmp	r4, #24
 1191 0008 0BD0     		beq	.L93
 846:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1192              		.loc 1 846 0 is_stmt 0 discriminator 1
 1193 000a 1C28     		cmp	r0, #28
 1194 000c 09D0     		beq	.L93
 846:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1195              		.loc 1 846 0 discriminator 2
 1196 000e 2028     		cmp	r0, #32
 1197 0010 07D0     		beq	.L93
 846:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1198              		.loc 1 846 0 discriminator 3
 1199 0012 2428     		cmp	r0, #36
 1200 0014 05D0     		beq	.L93
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1201              		.loc 1 847 0 is_stmt 1
 1202 0016 2828     		cmp	r0, #40
 1203 0018 03D0     		beq	.L93
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1204              		.loc 1 847 0 is_stmt 0 discriminator 1
 1205 001a 2C28     		cmp	r0, #44
 1206 001c 01D0     		beq	.L93
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1207              		.loc 1 847 0 discriminator 2
 1208 001e 3028     		cmp	r0, #48
 1209 0020 49D1     		bne	.L94
 1210              	.L93:
 851:Generated_Source\PSoC4/CyLib.c **** 
 1211              		.loc 1 851 0 is_stmt 1
 1212 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 1213              	.LVL103:
 1214 0026 0190     		str	r0, [sp, #4]
 1215              	.LVL104:
 854:Generated_Source\PSoC4/CyLib.c ****                 {
 1216              		.loc 1 854 0
 1217 0028 FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1218              	.LVL105:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 69


 1219 002c 0028     		cmp	r0, #0
 1220 002e 03D0     		beq	.L99
 1221              	.LVL106:
 857:Generated_Source\PSoC4/CyLib.c ****                 }
 1222              		.loc 1 857 0
 1223 0030 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1224              	.LVL107:
 856:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 1225              		.loc 1 856 0
 1226 0034 0126     		mov	r6, #1
 1227 0036 00E0     		b	.L95
 1228              	.LVL108:
 1229              	.L99:
 834:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 1230              		.loc 1 834 0
 1231 0038 0026     		mov	r6, #0
 1232              	.LVL109:
 1233              	.L95:
 882:Generated_Source\PSoC4/CyLib.c **** 
 1234              		.loc 1 882 0
 1235 003a 214A     		ldr	r2, .L100
 1236 003c 1368     		ldr	r3, [r2]
 1237 003e 0721     		mov	r1, #7
 1238 0040 8B43     		bic	r3, r1
 1239 0042 1360     		str	r3, [r2]
 1240              	.LVL110:
 900:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1241              		.loc 1 900 0
 1242 0044 1F4B     		ldr	r3, .L100+4
 1243 0046 E318     		add	r3, r4, r3
 1244 0048 1B78     		ldrb	r3, [r3]
 1245 004a DBB2     		uxtb	r3, r3
 1246              	.LVL111:
 902:Generated_Source\PSoC4/CyLib.c **** 
 1247              		.loc 1 902 0
 1248 004c 1E4A     		ldr	r2, .L100+8
 1249 004e 1360     		str	r3, [r2]
 905:Generated_Source\PSoC4/CyLib.c **** 
 1250              		.loc 1 905 0
 1251 0050 1E4A     		ldr	r2, .L100+12
 1252 0052 1368     		ldr	r3, [r2]
 1253              	.LVL112:
 1254 0054 8B43     		bic	r3, r1
 1255 0056 1360     		str	r3, [r2]
 1256              	.LVL113:
 908:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1257              		.loc 1 908 0
 1258 0058 1D48     		ldr	r0, .L100+16
 1259 005a 0368     		ldr	r3, [r0]
 1260 005c 7F22     		mov	r2, #127
 1261 005e 9343     		bic	r3, r2
 1262 0060 191C     		mov	r1, r3
 909:Generated_Source\PSoC4/CyLib.c **** 
 1263              		.loc 1 909 0
 1264 0062 1C4B     		ldr	r3, .L100+20
 1265 0064 E318     		add	r3, r4, r3
 1266 0066 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 70


 1267 0068 1340     		and	r3, r2
 908:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1268              		.loc 1 908 0
 1269 006a 0B43     		orr	r3, r1
 1270 006c 0360     		str	r3, [r0]
 911:Generated_Source\PSoC4/CyLib.c **** 
 1271              		.loc 1 911 0
 1272 006e 3220     		mov	r0, #50
 1273 0070 FFF7FEFF 		bl	CyDelayCycles
 1274              	.LVL114:
 913:Generated_Source\PSoC4/CyLib.c ****             {
 1275              		.loc 1 913 0
 1276 0074 182C     		cmp	r4, #24
 1277 0076 16D9     		bls	.L96
 916:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1278              		.loc 1 916 0
 1279 0078 114F     		ldr	r7, .L100
 1280 007a 3B68     		ldr	r3, [r7]
 1281 007c 0725     		mov	r5, #7
 1282 007e AB43     		bic	r3, r5
 1283 0080 1A1C     		mov	r2, r3
 917:Generated_Source\PSoC4/CyLib.c **** 
 1284              		.loc 1 917 0
 1285 0082 231C     		mov	r3, r4
 1286 0084 1C3B     		sub	r3, r3, #28
 1287 0086 9B08     		lsr	r3, r3, #2
 1288 0088 2B40     		and	r3, r5
 916:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1289              		.loc 1 916 0
 1290 008a 1343     		orr	r3, r2
 1291 008c 3B60     		str	r3, [r7]
 919:Generated_Source\PSoC4/CyLib.c **** 
 1292              		.loc 1 919 0
 1293 008e 3220     		mov	r0, #50
 1294 0090 FFF7FEFF 		bl	CyDelayCycles
 1295              	.LVL115:
 923:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1296              		.loc 1 923 0
 1297 0094 3A68     		ldr	r2, [r7]
 1298 0096 AA43     		bic	r2, r5
 924:Generated_Source\PSoC4/CyLib.c ****             }
 1299              		.loc 1 924 0
 1300 0098 231C     		mov	r3, r4
 1301 009a 183B     		sub	r3, r3, #24
 1302 009c 9B08     		lsr	r3, r3, #2
 1303 009e 2C1C     		mov	r4, r5
 1304              	.LVL116:
 1305 00a0 1C40     		and	r4, r3
 923:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1306              		.loc 1 923 0
 1307 00a2 1443     		orr	r4, r2
 1308 00a4 3C60     		str	r4, [r7]
 1309              	.L96:
 928:Generated_Source\PSoC4/CyLib.c ****                 {
 1310              		.loc 1 928 0
 1311 00a6 012E     		cmp	r6, #1
 1312 00a8 01D1     		bne	.L97
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 71


 930:Generated_Source\PSoC4/CyLib.c ****                 }
 1313              		.loc 1 930 0
 1314 00aa FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1315              	.LVL117:
 1316              	.L97:
 942:Generated_Source\PSoC4/CyLib.c ****         }
 1317              		.loc 1 942 0
 1318 00ae 0198     		ldr	r0, [sp, #4]
 1319 00b0 FFF7FEFF 		bl	CyExitCriticalSection
 1320              	.LVL118:
 1321 00b4 02E0     		b	.L92
 1322              	.LVL119:
 1323              	.L94:
 947:Generated_Source\PSoC4/CyLib.c ****         }
 1324              		.loc 1 947 0 discriminator 1
 1325 00b6 0020     		mov	r0, #0
 1326              	.LVL120:
 1327 00b8 FFF7FEFF 		bl	CyHalt
 1328              	.LVL121:
 1329              	.L92:
 949:Generated_Source\PSoC4/CyLib.c **** 
 1330              		.loc 1 949 0
 1331 00bc 03B0     		add	sp, sp, #12
 1332              		@ sp needed
 1333 00be F0BD     		pop	{r4, r5, r6, r7, pc}
 1334              	.L101:
 1335              		.align	2
 1336              	.L100:
 1337 00c0 080F0340 		.word	1073942280
 1338 00c4 CDF1FF0F 		.word	268431821
 1339 00c8 0C0F0340 		.word	1073942284
 1340 00cc 100F0340 		.word	1073942288
 1341 00d0 180F0340 		.word	1073942296
 1342 00d4 B4F1FF0F 		.word	268431796
 1343              		.cfi_endproc
 1344              	.LFE10:
 1345              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1346              		.section	.text.CyDelayUs,"ax",%progbits
 1347              		.align	2
 1348              		.global	CyDelayUs
 1349              		.code	16
 1350              		.thumb_func
 1351              		.type	CyDelayUs, %function
 1352              	CyDelayUs:
 1353              	.LFB29:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 72


 1354              		.loc 1 2583 0
 1355              		.cfi_startproc
 1356              	.LVL122:
 1357 0000 08B5     		push	{r3, lr}
 1358              		.cfi_def_cfa_offset 8
 1359              		.cfi_offset 3, -8
 1360              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1361              		.loc 1 2584 0
 1362 0002 034B     		ldr	r3, .L103
 1363 0004 1B7B     		ldrb	r3, [r3, #12]
 1364 0006 5843     		mul	r0, r3
 1365              	.LVL123:
 1366 0008 FFF7FEFF 		bl	CyDelayCycles
 1367              	.LVL124:
2585:Generated_Source\PSoC4/CyLib.c **** }
 1368              		.loc 1 2585 0
 1369              		@ sp needed
 1370 000c 08BD     		pop	{r3, pc}
 1371              	.L104:
 1372 000e C046     		.align	2
 1373              	.L103:
 1374 0010 00000000 		.word	.LANCHOR0
 1375              		.cfi_endproc
 1376              	.LFE29:
 1377              		.size	CyDelayUs, .-CyDelayUs
 1378              		.global	__aeabi_uidiv
 1379              		.section	.text.CyDelayFreq,"ax",%progbits
 1380              		.align	2
 1381              		.global	CyDelayFreq
 1382              		.code	16
 1383              		.thumb_func
 1384              		.type	CyDelayFreq, %function
 1385              	CyDelayFreq:
 1386              	.LFB30:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1387              		.loc 1 2597 0
 1388              		.cfi_startproc
 1389              	.LVL125:
 1390 0000 38B5     		push	{r3, r4, r5, lr}
 1391              		.cfi_def_cfa_offset 16
 1392              		.cfi_offset 3, -16
 1393              		.cfi_offset 4, -12
 1394              		.cfi_offset 5, -8
 1395              		.cfi_offset 14, -4
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 73


 1396              		.loc 1 2598 0
 1397 0002 0028     		cmp	r0, #0
 1398 0004 02D0     		beq	.L106
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1399              		.loc 1 2600 0
 1400 0006 0C4B     		ldr	r3, .L108
 1401 0008 1861     		str	r0, [r3, #16]
 1402 000a 02E0     		b	.L107
 1403              	.L106:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1404              		.loc 1 2604 0
 1405 000c 0B4A     		ldr	r2, .L108+4
 1406 000e 0A4B     		ldr	r3, .L108
 1407 0010 1A61     		str	r2, [r3, #16]
 1408              	.L107:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1409              		.loc 1 2607 0
 1410 0012 094C     		ldr	r4, .L108
 1411 0014 2569     		ldr	r5, [r4, #16]
 1412 0016 0A4B     		ldr	r3, .L108+8
 1413 0018 E818     		add	r0, r5, r3
 1414              	.LVL126:
 1415 001a 0A49     		ldr	r1, .L108+12
 1416 001c FFF7FEFF 		bl	__aeabi_uidiv
 1417              	.LVL127:
 1418 0020 2073     		strb	r0, [r4, #12]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1419              		.loc 1 2608 0
 1420 0022 094B     		ldr	r3, .L108+16
 1421 0024 E818     		add	r0, r5, r3
 1422 0026 FA21     		mov	r1, #250
 1423 0028 8900     		lsl	r1, r1, #2
 1424 002a FFF7FEFF 		bl	__aeabi_uidiv
 1425              	.LVL128:
 1426 002e A060     		str	r0, [r4, #8]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1427              		.loc 1 2609 0
 1428 0030 C003     		lsl	r0, r0, #15
 1429 0032 6060     		str	r0, [r4, #4]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1430              		.loc 1 2610 0
 1431              		@ sp needed
 1432 0034 38BD     		pop	{r3, r4, r5, pc}
 1433              	.L109:
 1434 0036 C046     		.align	2
 1435              	.L108:
 1436 0038 00000000 		.word	.LANCHOR0
 1437 003c 00366E01 		.word	24000000
 1438 0040 3F420F00 		.word	999999
 1439 0044 40420F00 		.word	1000000
 1440 0048 E7030000 		.word	999
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 74


 1441              		.cfi_endproc
 1442              	.LFE30:
 1443              		.size	CyDelayFreq, .-CyDelayFreq
 1444              		.section	.text.CySysTickStop,"ax",%progbits
 1445              		.align	2
 1446              		.global	CySysTickStop
 1447              		.code	16
 1448              		.thumb_func
 1449              		.type	CySysTickStop, %function
 1450              	CySysTickStop:
 1451              	.LFB34:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 75


2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2675:Generated_Source\PSoC4/CyLib.c **** }
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** 
2678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CyLib.c **** *
2682:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2685:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2688:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2689:Generated_Source\PSoC4/CyLib.c **** {
2690:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2691:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2692:Generated_Source\PSoC4/CyLib.c **** }
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2696:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2697:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2698:Generated_Source\PSoC4/CyLib.c **** *
2699:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2702:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2705:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2706:Generated_Source\PSoC4/CyLib.c **** {
 1452              		.loc 1 2706 0
 1453              		.cfi_startproc
2707:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1454              		.loc 1 2707 0
 1455 0000 024A     		ldr	r2, .L111
 1456 0002 1368     		ldr	r3, [r2]
 1457 0004 0121     		mov	r1, #1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 76


 1458 0006 8B43     		bic	r3, r1
 1459 0008 1360     		str	r3, [r2]
2708:Generated_Source\PSoC4/CyLib.c **** }
 1460              		.loc 1 2708 0
 1461              		@ sp needed
 1462 000a 7047     		bx	lr
 1463              	.L112:
 1464              		.align	2
 1465              	.L111:
 1466 000c 10E000E0 		.word	-536813552
 1467              		.cfi_endproc
 1468              	.LFE34:
 1469              		.size	CySysTickStop, .-CySysTickStop
 1470              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1471              		.align	2
 1472              		.global	CySysTickEnableInterrupt
 1473              		.code	16
 1474              		.thumb_func
 1475              		.type	CySysTickEnableInterrupt, %function
 1476              	CySysTickEnableInterrupt:
 1477              	.LFB35:
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2718:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
 1478              		.loc 1 2722 0
 1479              		.cfi_startproc
2723:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1480              		.loc 1 2723 0
 1481 0000 024A     		ldr	r2, .L114
 1482 0002 1168     		ldr	r1, [r2]
 1483 0004 0223     		mov	r3, #2
 1484 0006 0B43     		orr	r3, r1
 1485 0008 1360     		str	r3, [r2]
2724:Generated_Source\PSoC4/CyLib.c **** }
 1486              		.loc 1 2724 0
 1487              		@ sp needed
 1488 000a 7047     		bx	lr
 1489              	.L115:
 1490              		.align	2
 1491              	.L114:
 1492 000c 10E000E0 		.word	-536813552
 1493              		.cfi_endproc
 1494              	.LFE35:
 1495              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1496              		.section	.text.CySysTickEnable,"ax",%progbits
 1497              		.align	2
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 77


 1498              		.global	CySysTickEnable
 1499              		.code	16
 1500              		.thumb_func
 1501              		.type	CySysTickEnable, %function
 1502              	CySysTickEnable:
 1503              	.LFB33:
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1504              		.loc 1 2689 0
 1505              		.cfi_startproc
 1506 0000 08B5     		push	{r3, lr}
 1507              		.cfi_def_cfa_offset 8
 1508              		.cfi_offset 3, -8
 1509              		.cfi_offset 14, -4
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1510              		.loc 1 2690 0
 1511 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1512              	.LVL129:
2691:Generated_Source\PSoC4/CyLib.c **** }
 1513              		.loc 1 2691 0
 1514 0006 034A     		ldr	r2, .L117
 1515 0008 1168     		ldr	r1, [r2]
 1516 000a 0123     		mov	r3, #1
 1517 000c 0B43     		orr	r3, r1
 1518 000e 1360     		str	r3, [r2]
2692:Generated_Source\PSoC4/CyLib.c **** 
 1519              		.loc 1 2692 0
 1520              		@ sp needed
 1521 0010 08BD     		pop	{r3, pc}
 1522              	.L118:
 1523 0012 C046     		.align	2
 1524              	.L117:
 1525 0014 10E000E0 		.word	-536813552
 1526              		.cfi_endproc
 1527              	.LFE33:
 1528              		.size	CySysTickEnable, .-CySysTickEnable
 1529              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1530              		.align	2
 1531              		.global	CySysTickDisableInterrupt
 1532              		.code	16
 1533              		.thumb_func
 1534              		.type	CySysTickDisableInterrupt, %function
 1535              	CySysTickDisableInterrupt:
 1536              	.LFB36:
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** 
2727:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2728:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2729:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2732:Generated_Source\PSoC4/CyLib.c **** *
2733:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2734:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2735:Generated_Source\PSoC4/CyLib.c **** *
2736:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2737:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2738:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 78


 1537              		.loc 1 2738 0
 1538              		.cfi_startproc
2739:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1539              		.loc 1 2739 0
 1540 0000 024A     		ldr	r2, .L120
 1541 0002 1368     		ldr	r3, [r2]
 1542 0004 0221     		mov	r1, #2
 1543 0006 8B43     		bic	r3, r1
 1544 0008 1360     		str	r3, [r2]
2740:Generated_Source\PSoC4/CyLib.c **** }
 1545              		.loc 1 2740 0
 1546              		@ sp needed
 1547 000a 7047     		bx	lr
 1548              	.L121:
 1549              		.align	2
 1550              	.L120:
 1551 000c 10E000E0 		.word	-536813552
 1552              		.cfi_endproc
 1553              	.LFE36:
 1554              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1555              		.section	.text.CySysTickSetReload,"ax",%progbits
 1556              		.align	2
 1557              		.global	CySysTickSetReload
 1558              		.code	16
 1559              		.thumb_func
 1560              		.type	CySysTickSetReload, %function
 1561              	CySysTickSetReload:
 1562              	.LFB37:
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** 
2743:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2744:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2745:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2746:Generated_Source\PSoC4/CyLib.c **** *
2747:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2748:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2749:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2755:Generated_Source\PSoC4/CyLib.c **** {
 1563              		.loc 1 2755 0
 1564              		.cfi_startproc
 1565              	.LVL130:
2756:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1566              		.loc 1 2756 0
 1567 0000 0002     		lsl	r0, r0, #8
 1568              	.LVL131:
 1569 0002 000A     		lsr	r0, r0, #8
 1570 0004 014B     		ldr	r3, .L123
 1571 0006 1860     		str	r0, [r3]
2757:Generated_Source\PSoC4/CyLib.c **** }
 1572              		.loc 1 2757 0
 1573              		@ sp needed
 1574 0008 7047     		bx	lr
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 79


 1575              	.L124:
 1576 000a C046     		.align	2
 1577              	.L123:
 1578 000c 14E000E0 		.word	-536813548
 1579              		.cfi_endproc
 1580              	.LFE37:
 1581              		.size	CySysTickSetReload, .-CySysTickSetReload
 1582              		.section	.text.CySysTickGetReload,"ax",%progbits
 1583              		.align	2
 1584              		.global	CySysTickGetReload
 1585              		.code	16
 1586              		.thumb_func
 1587              		.type	CySysTickGetReload, %function
 1588              	CySysTickGetReload:
 1589              	.LFB38:
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2762:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return
2767:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2771:Generated_Source\PSoC4/CyLib.c **** {
 1590              		.loc 1 2771 0
 1591              		.cfi_startproc
2772:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1592              		.loc 1 2772 0
 1593 0000 024B     		ldr	r3, .L126
 1594 0002 1868     		ldr	r0, [r3]
 1595 0004 0002     		lsl	r0, r0, #8
 1596 0006 000A     		lsr	r0, r0, #8
2773:Generated_Source\PSoC4/CyLib.c **** }
 1597              		.loc 1 2773 0
 1598              		@ sp needed
 1599 0008 7047     		bx	lr
 1600              	.L127:
 1601 000a C046     		.align	2
 1602              	.L126:
 1603 000c 14E000E0 		.word	-536813548
 1604              		.cfi_endproc
 1605              	.LFE38:
 1606              		.size	CySysTickGetReload, .-CySysTickGetReload
 1607              		.section	.text.CySysTickGetValue,"ax",%progbits
 1608              		.align	2
 1609              		.global	CySysTickGetValue
 1610              		.code	16
 1611              		.thumb_func
 1612              		.type	CySysTickGetValue, %function
 1613              	CySysTickGetValue:
 1614              	.LFB39:
2774:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 80


2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** * \return
2783:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2784:Generated_Source\PSoC4/CyLib.c **** *
2785:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2786:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2787:Generated_Source\PSoC4/CyLib.c **** {
 1615              		.loc 1 2787 0
 1616              		.cfi_startproc
2788:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1617              		.loc 1 2788 0
 1618 0000 024B     		ldr	r3, .L129
 1619 0002 1868     		ldr	r0, [r3]
 1620 0004 0002     		lsl	r0, r0, #8
 1621 0006 000A     		lsr	r0, r0, #8
2789:Generated_Source\PSoC4/CyLib.c **** }
 1622              		.loc 1 2789 0
 1623              		@ sp needed
 1624 0008 7047     		bx	lr
 1625              	.L130:
 1626 000a C046     		.align	2
 1627              	.L129:
 1628 000c 18E000E0 		.word	-536813544
 1629              		.cfi_endproc
 1630              	.LFE39:
 1631              		.size	CySysTickGetValue, .-CySysTickGetValue
 1632              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1633              		.align	2
 1634              		.global	CySysTickSetClockSource
 1635              		.code	16
 1636              		.thumb_func
 1637              		.type	CySysTickSetClockSource, %function
 1638              	CySysTickSetClockSource:
 1639              	.LFB40:
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** 
2792:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2793:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2794:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2795:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2796:Generated_Source\PSoC4/CyLib.c ****     *
2797:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2798:Generated_Source\PSoC4/CyLib.c ****     *
2799:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2800:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2801:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2802:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2803:Generated_Source\PSoC4/CyLib.c ****     *
2804:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2805:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2806:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 81


2807:Generated_Source\PSoC4/CyLib.c ****     *
2808:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2809:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2810:Generated_Source\PSoC4/CyLib.c ****     *
2811:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2812:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2814:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2816:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2817:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2818:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2819:Generated_Source\PSoC4/CyLib.c ****     {
 1640              		.loc 1 2819 0
 1641              		.cfi_startproc
 1642              	.LVL132:
2820:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1643              		.loc 1 2820 0
 1644 0000 0128     		cmp	r0, #1
 1645 0002 05D1     		bne	.L132
2821:Generated_Source\PSoC4/CyLib.c ****         {
2822:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1646              		.loc 1 2822 0
 1647 0004 054A     		ldr	r2, .L134
 1648 0006 1168     		ldr	r1, [r2]
 1649 0008 0423     		mov	r3, #4
 1650 000a 0B43     		orr	r3, r1
 1651 000c 1360     		str	r3, [r2]
 1652 000e 04E0     		b	.L131
 1653              	.L132:
2823:Generated_Source\PSoC4/CyLib.c ****         }
2824:Generated_Source\PSoC4/CyLib.c ****         else
2825:Generated_Source\PSoC4/CyLib.c ****         {
2826:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1654              		.loc 1 2826 0
 1655 0010 024A     		ldr	r2, .L134
 1656 0012 1368     		ldr	r3, [r2]
 1657 0014 0421     		mov	r1, #4
 1658 0016 8B43     		bic	r3, r1
 1659 0018 1360     		str	r3, [r2]
 1660              	.L131:
2827:Generated_Source\PSoC4/CyLib.c ****         }
2828:Generated_Source\PSoC4/CyLib.c ****     }
 1661              		.loc 1 2828 0
 1662              		@ sp needed
 1663 001a 7047     		bx	lr
 1664              	.L135:
 1665              		.align	2
 1666              	.L134:
 1667 001c 10E000E0 		.word	-536813552
 1668              		.cfi_endproc
 1669              	.LFE40:
 1670              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1671              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1672              		.align	2
 1673              		.global	CySysTickGetClockSource
 1674              		.code	16
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 82


 1675              		.thumb_func
 1676              		.type	CySysTickGetClockSource, %function
 1677              	CySysTickGetClockSource:
 1678              	.LFB41:
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     
2831:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2832:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2833:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2834:Generated_Source\PSoC4/CyLib.c ****     *
2835:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2836:Generated_Source\PSoC4/CyLib.c ****     *
2837:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2839:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2841:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2842:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2843:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2844:Generated_Source\PSoC4/CyLib.c ****     {
 1679              		.loc 1 2844 0
 1680              		.cfi_startproc
2845:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1681              		.loc 1 2845 0
 1682 0000 024B     		ldr	r3, .L137
 1683 0002 1868     		ldr	r0, [r3]
 1684 0004 4007     		lsl	r0, r0, #29
 1685 0006 C00F     		lsr	r0, r0, #31
2846:Generated_Source\PSoC4/CyLib.c ****     }
 1686              		.loc 1 2846 0
 1687              		@ sp needed
 1688 0008 7047     		bx	lr
 1689              	.L138:
 1690 000a C046     		.align	2
 1691              	.L137:
 1692 000c 10E000E0 		.word	-536813552
 1693              		.cfi_endproc
 1694              	.LFE41:
 1695              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1696              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1697              		.align	2
 1698              		.global	CySysTickGetCountFlag
 1699              		.code	16
 1700              		.thumb_func
 1701              		.type	CySysTickGetCountFlag, %function
 1702              	CySysTickGetCountFlag:
 1703              	.LFB42:
2847:Generated_Source\PSoC4/CyLib.c ****     
2848:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** 
2851:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2852:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2853:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2854:Generated_Source\PSoC4/CyLib.c **** *
2855:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2856:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 83


2857:Generated_Source\PSoC4/CyLib.c **** *
2858:Generated_Source\PSoC4/CyLib.c **** * \return
2859:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2863:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2864:Generated_Source\PSoC4/CyLib.c **** *
2865:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2866:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2867:Generated_Source\PSoC4/CyLib.c **** {
 1704              		.loc 1 2867 0
 1705              		.cfi_startproc
2868:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1706              		.loc 1 2868 0
 1707 0000 024B     		ldr	r3, .L140
 1708 0002 1868     		ldr	r0, [r3]
 1709 0004 C003     		lsl	r0, r0, #15
 1710 0006 C00F     		lsr	r0, r0, #31
2869:Generated_Source\PSoC4/CyLib.c **** }
 1711              		.loc 1 2869 0
 1712              		@ sp needed
 1713 0008 7047     		bx	lr
 1714              	.L141:
 1715 000a C046     		.align	2
 1716              	.L140:
 1717 000c 10E000E0 		.word	-536813552
 1718              		.cfi_endproc
 1719              	.LFE42:
 1720              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1721              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1722              		.align	2
 1723              		.code	16
 1724              		.thumb_func
 1725              		.type	CySysTickServiceCallbacks, %function
 1726              	CySysTickServiceCallbacks:
 1727              	.LFB46:
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** 
2872:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2873:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2874:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2880:Generated_Source\PSoC4/CyLib.c **** {
2881:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2882:Generated_Source\PSoC4/CyLib.c **** }
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2886:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2887:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2888:Generated_Source\PSoC4/CyLib.c **** *
2889:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 84


2890:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2891:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2892:Generated_Source\PSoC4/CyLib.c **** *
2893:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2894:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2895:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2896:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2897:Generated_Source\PSoC4/CyLib.c **** *  functions.
2898:Generated_Source\PSoC4/CyLib.c **** *
2899:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2900:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2903:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2904:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** * \return
2907:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2908:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2909:Generated_Source\PSoC4/CyLib.c **** *
2910:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2911:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2914:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2915:Generated_Source\PSoC4/CyLib.c **** {
2916:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2919:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2920:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2921:Generated_Source\PSoC4/CyLib.c **** }
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** 
2924:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2925:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2926:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2927:Generated_Source\PSoC4/CyLib.c **** *
2928:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2929:Generated_Source\PSoC4/CyLib.c **** *
2930:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2931:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2932:Generated_Source\PSoC4/CyLib.c **** *
2933:Generated_Source\PSoC4/CyLib.c **** * \return
2934:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2935:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2938:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2939:Generated_Source\PSoC4/CyLib.c **** {
2940:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2941:Generated_Source\PSoC4/CyLib.c **** }
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2945:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2946:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 85


2947:Generated_Source\PSoC4/CyLib.c **** *
2948:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2949:Generated_Source\PSoC4/CyLib.c **** *
2950:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2951:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2952:Generated_Source\PSoC4/CyLib.c **** {
 1728              		.loc 1 2952 0
 1729              		.cfi_startproc
 1730 0000 10B5     		push	{r4, lr}
 1731              		.cfi_def_cfa_offset 8
 1732              		.cfi_offset 4, -8
 1733              		.cfi_offset 14, -4
2953:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2954:Generated_Source\PSoC4/CyLib.c **** 
2955:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2956:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1734              		.loc 1 2956 0
 1735 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1736              	.LVL133:
 1737 0006 0128     		cmp	r0, #1
 1738 0008 0BD1     		bne	.L142
 1739 000a 07E0     		b	.L147
 1740              	.LVL134:
 1741              	.L146:
2957:Generated_Source\PSoC4/CyLib.c ****     {
2958:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2959:Generated_Source\PSoC4/CyLib.c ****         {
2960:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1742              		.loc 1 2960 0
 1743 000c A300     		lsl	r3, r4, #2
 1744 000e 054A     		ldr	r2, .L148
 1745 0010 9B58     		ldr	r3, [r3, r2]
 1746 0012 002B     		cmp	r3, #0
 1747 0014 00D0     		beq	.L145
2961:Generated_Source\PSoC4/CyLib.c ****             {
2962:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1748              		.loc 1 2962 0
 1749 0016 9847     		blx	r3
 1750              	.LVL135:
 1751              	.L145:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 1752              		.loc 1 2958 0 discriminator 2
 1753 0018 0134     		add	r4, r4, #1
 1754              	.LVL136:
 1755 001a 00E0     		b	.L143
 1756              	.LVL137:
 1757              	.L147:
 1758 001c 0024     		mov	r4, #0
 1759              	.L143:
 1760              	.LVL138:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 1761              		.loc 1 2958 0 is_stmt 0 discriminator 1
 1762 001e 042C     		cmp	r4, #4
 1763 0020 F4D9     		bls	.L146
 1764              	.LVL139:
 1765              	.L142:
2963:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 86


2964:Generated_Source\PSoC4/CyLib.c ****         }
2965:Generated_Source\PSoC4/CyLib.c ****     }
2966:Generated_Source\PSoC4/CyLib.c **** }
 1766              		.loc 1 2966 0 is_stmt 1
 1767              		@ sp needed
 1768 0022 10BD     		pop	{r4, pc}
 1769              	.L149:
 1770              		.align	2
 1771              	.L148:
 1772 0024 00000000 		.word	.LANCHOR2
 1773              		.cfi_endproc
 1774              	.LFE46:
 1775              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1776              		.section	.text.CySysTickClear,"ax",%progbits
 1777              		.align	2
 1778              		.global	CySysTickClear
 1779              		.code	16
 1780              		.thumb_func
 1781              		.type	CySysTickClear, %function
 1782              	CySysTickClear:
 1783              	.LFB43:
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1784              		.loc 1 2880 0
 1785              		.cfi_startproc
2881:Generated_Source\PSoC4/CyLib.c **** }
 1786              		.loc 1 2881 0
 1787 0000 0022     		mov	r2, #0
 1788 0002 014B     		ldr	r3, .L151
 1789 0004 1A60     		str	r2, [r3]
2882:Generated_Source\PSoC4/CyLib.c **** 
 1790              		.loc 1 2882 0
 1791              		@ sp needed
 1792 0006 7047     		bx	lr
 1793              	.L152:
 1794              		.align	2
 1795              	.L151:
 1796 0008 18E000E0 		.word	-536813544
 1797              		.cfi_endproc
 1798              	.LFE43:
 1799              		.size	CySysTickClear, .-CySysTickClear
 1800              		.section	.text.CySysTickInit,"ax",%progbits
 1801              		.align	2
 1802              		.global	CySysTickInit
 1803              		.code	16
 1804              		.thumb_func
 1805              		.type	CySysTickInit, %function
 1806              	CySysTickInit:
 1807              	.LFB32:
2658:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1808              		.loc 1 2658 0
 1809              		.cfi_startproc
 1810 0000 08B5     		push	{r3, lr}
 1811              		.cfi_def_cfa_offset 8
 1812              		.cfi_offset 3, -8
 1813              		.cfi_offset 14, -4
 1814              	.LVL140:
2661:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 87


 1815              		.loc 1 2661 0
 1816 0002 0023     		mov	r3, #0
 1817 0004 04E0     		b	.L154
 1818              	.LVL141:
 1819              	.L155:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1820              		.loc 1 2663 0 discriminator 3
 1821 0006 9900     		lsl	r1, r3, #2
 1822 0008 0020     		mov	r0, #0
 1823 000a 0D4A     		ldr	r2, .L156
 1824 000c 8850     		str	r0, [r1, r2]
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1825              		.loc 1 2661 0 discriminator 3
 1826 000e 0133     		add	r3, r3, #1
 1827              	.LVL142:
 1828              	.L154:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 1829              		.loc 1 2661 0 is_stmt 0 discriminator 1
 1830 0010 042B     		cmp	r3, #4
 1831 0012 F8D9     		bls	.L155
2666:Generated_Source\PSoC4/CyLib.c **** 
 1832              		.loc 1 2666 0 is_stmt 1
 1833 0014 0F20     		mov	r0, #15
 1834 0016 0B49     		ldr	r1, .L156+4
 1835 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1836              	.LVL143:
2669:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 1837              		.loc 1 2669 0
 1838 001c 0120     		mov	r0, #1
 1839 001e FFF7FEFF 		bl	CySysTickSetClockSource
 1840              	.LVL144:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1841              		.loc 1 2672 0
 1842 0022 094B     		ldr	r3, .L156+8
 1843 0024 1869     		ldr	r0, [r3, #16]
 1844 0026 FA21     		mov	r1, #250
 1845 0028 8900     		lsl	r1, r1, #2
 1846 002a FFF7FEFF 		bl	__aeabi_uidiv
 1847              	.LVL145:
 1848 002e FFF7FEFF 		bl	CySysTickSetReload
 1849              	.LVL146:
2673:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 1850              		.loc 1 2673 0
 1851 0032 FFF7FEFF 		bl	CySysTickClear
 1852              	.LVL147:
2674:Generated_Source\PSoC4/CyLib.c **** }
 1853              		.loc 1 2674 0
 1854 0036 0F20     		mov	r0, #15
 1855 0038 FFF7FEFF 		bl	CyIntEnable
 1856              	.LVL148:
2675:Generated_Source\PSoC4/CyLib.c **** 
 1857              		.loc 1 2675 0
 1858              		@ sp needed
 1859 003c 08BD     		pop	{r3, pc}
 1860              	.L157:
 1861 003e C046     		.align	2
 1862              	.L156:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 88


 1863 0040 00000000 		.word	.LANCHOR2
 1864 0044 00000000 		.word	CySysTickServiceCallbacks
 1865 0048 00000000 		.word	.LANCHOR0
 1866              		.cfi_endproc
 1867              	.LFE32:
 1868              		.size	CySysTickInit, .-CySysTickInit
 1869              		.section	.text.CySysTickStart,"ax",%progbits
 1870              		.align	2
 1871              		.global	CySysTickStart
 1872              		.code	16
 1873              		.thumb_func
 1874              		.type	CySysTickStart, %function
 1875              	CySysTickStart:
 1876              	.LFB31:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1877              		.loc 1 2629 0
 1878              		.cfi_startproc
 1879 0000 08B5     		push	{r3, lr}
 1880              		.cfi_def_cfa_offset 8
 1881              		.cfi_offset 3, -8
 1882              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
 1883              		.loc 1 2630 0
 1884 0002 064B     		ldr	r3, .L160
 1885 0004 5B69     		ldr	r3, [r3, #20]
 1886 0006 002B     		cmp	r3, #0
 1887 0008 04D1     		bne	.L159
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1888              		.loc 1 2632 0
 1889 000a FFF7FEFF 		bl	CySysTickInit
 1890              	.LVL149:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 1891              		.loc 1 2633 0
 1892 000e 0122     		mov	r2, #1
 1893 0010 024B     		ldr	r3, .L160
 1894 0012 5A61     		str	r2, [r3, #20]
 1895              	.L159:
2636:Generated_Source\PSoC4/CyLib.c **** }
 1896              		.loc 1 2636 0
 1897 0014 FFF7FEFF 		bl	CySysTickEnable
 1898              	.LVL150:
2637:Generated_Source\PSoC4/CyLib.c **** 
 1899              		.loc 1 2637 0
 1900              		@ sp needed
 1901 0018 08BD     		pop	{r3, pc}
 1902              	.L161:
 1903 001a C046     		.align	2
 1904              	.L160:
 1905 001c 00000000 		.word	.LANCHOR2
 1906              		.cfi_endproc
 1907              	.LFE31:
 1908              		.size	CySysTickStart, .-CySysTickStart
 1909              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1910              		.align	2
 1911              		.global	CySysTickSetCallback
 1912              		.code	16
 1913              		.thumb_func
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 89


 1914              		.type	CySysTickSetCallback, %function
 1915              	CySysTickSetCallback:
 1916              	.LFB44:
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1917              		.loc 1 2915 0
 1918              		.cfi_startproc
 1919              	.LVL151:
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1920              		.loc 1 2918 0
 1921 0000 024A     		ldr	r2, .L163
 1922 0002 8300     		lsl	r3, r0, #2
 1923 0004 9858     		ldr	r0, [r3, r2]
 1924              	.LVL152:
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1925              		.loc 1 2919 0
 1926 0006 9950     		str	r1, [r3, r2]
2921:Generated_Source\PSoC4/CyLib.c **** 
 1927              		.loc 1 2921 0
 1928              		@ sp needed
 1929 0008 7047     		bx	lr
 1930              	.L164:
 1931 000a C046     		.align	2
 1932              	.L163:
 1933 000c 00000000 		.word	.LANCHOR2
 1934              		.cfi_endproc
 1935              	.LFE44:
 1936              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1937              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1938              		.align	2
 1939              		.global	CySysTickGetCallback
 1940              		.code	16
 1941              		.thumb_func
 1942              		.type	CySysTickGetCallback, %function
 1943              	CySysTickGetCallback:
 1944              	.LFB45:
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1945              		.loc 1 2939 0
 1946              		.cfi_startproc
 1947              	.LVL153:
2940:Generated_Source\PSoC4/CyLib.c **** }
 1948              		.loc 1 2940 0
 1949 0000 8000     		lsl	r0, r0, #2
 1950              	.LVL154:
 1951 0002 014B     		ldr	r3, .L166
 1952 0004 C058     		ldr	r0, [r0, r3]
2941:Generated_Source\PSoC4/CyLib.c **** 
 1953              		.loc 1 2941 0
 1954              		@ sp needed
 1955 0006 7047     		bx	lr
 1956              	.L167:
 1957              		.align	2
 1958              	.L166:
 1959 0008 00000000 		.word	.LANCHOR2
 1960              		.cfi_endproc
 1961              	.LFE45:
 1962              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1963              		.section	.text.CyGetUniqueId,"ax",%progbits
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 90


 1964              		.align	2
 1965              		.global	CyGetUniqueId
 1966              		.code	16
 1967              		.thumb_func
 1968              		.type	CyGetUniqueId, %function
 1969              	CyGetUniqueId:
 1970              	.LFB47:
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** 
2969:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2970:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2971:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2972:Generated_Source\PSoC4/CyLib.c **** *
2973:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2974:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2975:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2976:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2979:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2980:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2983:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2984:Generated_Source\PSoC4/CyLib.c **** {
 1971              		.loc 1 2984 0
 1972              		.cfi_startproc
 1973              	.LVL155:
2985:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1974              		.loc 1 2986 0
 1975 0000 134B     		ldr	r3, .L169
 1976 0002 1B78     		ldrb	r3, [r3]
 1977 0004 DAB2     		uxtb	r2, r3
 1978 0006 0260     		str	r2, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1979              		.loc 1 2987 0
 1980 0008 124B     		ldr	r3, .L169+4
 1981 000a 1B78     		ldrb	r3, [r3]
 1982 000c 1B02     		lsl	r3, r3, #8
 1983 000e 1343     		orr	r3, r2
 1984 0010 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1985              		.loc 1 2988 0
 1986 0012 114A     		ldr	r2, .L169+8
 1987 0014 1278     		ldrb	r2, [r2]
 1988 0016 1204     		lsl	r2, r2, #16
 1989 0018 1343     		orr	r3, r2
 1990 001a 0360     		str	r3, [r0]
2989:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1991              		.loc 1 2989 0
 1992 001c 0F4A     		ldr	r2, .L169+12
 1993 001e 1278     		ldrb	r2, [r2]
 1994 0020 1206     		lsl	r2, r2, #24
 1995 0022 1343     		orr	r3, r2
 1996 0024 0360     		str	r3, [r0]
2990:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 91


2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 1997              		.loc 1 2991 0
 1998 0026 0E4B     		ldr	r3, .L169+16
 1999 0028 1B78     		ldrb	r3, [r3]
 2000 002a DAB2     		uxtb	r2, r3
 2001 002c 4260     		str	r2, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2002              		.loc 1 2992 0
 2003 002e 0D4B     		ldr	r3, .L169+20
 2004 0030 1B78     		ldrb	r3, [r3]
 2005 0032 1B02     		lsl	r3, r3, #8
 2006 0034 1343     		orr	r3, r2
 2007 0036 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2008              		.loc 1 2993 0
 2009 0038 0B4A     		ldr	r2, .L169+24
 2010 003a 1278     		ldrb	r2, [r2]
 2011 003c 1204     		lsl	r2, r2, #16
 2012 003e 1343     		orr	r3, r2
 2013 0040 4360     		str	r3, [r0, #4]
2994:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2014              		.loc 1 2994 0
 2015 0042 0A4A     		ldr	r2, .L169+28
 2016 0044 1278     		ldrb	r2, [r2]
 2017 0046 1206     		lsl	r2, r2, #24
 2018 0048 1343     		orr	r3, r2
 2019 004a 4360     		str	r3, [r0, #4]
2995:Generated_Source\PSoC4/CyLib.c **** #else
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2999:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3000:Generated_Source\PSoC4/CyLib.c **** 
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3004:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3005:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3006:Generated_Source\PSoC4/CyLib.c **** }
 2020              		.loc 1 3006 0
 2021              		@ sp needed
 2022 004c 7047     		bx	lr
 2023              	.L170:
 2024 004e C046     		.align	2
 2025              	.L169:
 2026 0050 78F1FF0F 		.word	268431736
 2027 0054 79F1FF0F 		.word	268431737
 2028 0058 7AF1FF0F 		.word	268431738
 2029 005c 7BF1FF0F 		.word	268431739
 2030 0060 7CF1FF0F 		.word	268431740
 2031 0064 7DF1FF0F 		.word	268431741
 2032 0068 7EF1FF0F 		.word	268431742
 2033 006c 7FF1FF0F 		.word	268431743
 2034              		.cfi_endproc
 2035              	.LFE47:
 2036              		.size	CyGetUniqueId, .-CyGetUniqueId
 2037              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 92


 2038              		.align	2
 2039              		.global	CySysSetRamAccessArbPriority
 2040              		.code	16
 2041              		.thumb_func
 2042              		.type	CySysSetRamAccessArbPriority, %function
 2043              	CySysSetRamAccessArbPriority:
 2044              	.LFB48:
3007:Generated_Source\PSoC4/CyLib.c **** 
3008:Generated_Source\PSoC4/CyLib.c **** 
3009:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3010:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3011:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3012:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3013:Generated_Source\PSoC4/CyLib.c ****     *
3014:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3015:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3016:Generated_Source\PSoC4/CyLib.c ****     *  details.
3017:Generated_Source\PSoC4/CyLib.c ****     *
3018:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3019:Generated_Source\PSoC4/CyLib.c ****     *
3020:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3021:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3022:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3023:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3024:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3025:Generated_Source\PSoC4/CyLib.c ****     *
3026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3027:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3028:Generated_Source\PSoC4/CyLib.c ****     {
 2045              		.loc 1 3028 0
 2046              		.cfi_startproc
 2047              	.LVL156:
3029:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3030:Generated_Source\PSoC4/CyLib.c **** 
3031:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2048              		.loc 1 3031 0
 2049 0000 0549     		ldr	r1, .L172
 2050 0002 0A68     		ldr	r2, [r1]
 2051 0004 054B     		ldr	r3, .L172+4
 2052 0006 1340     		and	r3, r2
 2053              	.LVL157:
3032:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2054              		.loc 1 3032 0
 2055 0008 4004     		lsl	r0, r0, #17
 2056              	.LVL158:
 2057 000a C022     		mov	r2, #192
 2058 000c D202     		lsl	r2, r2, #11
 2059 000e 1040     		and	r0, r2
 2060 0010 1843     		orr	r0, r3
 2061              	.LVL159:
3033:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2062              		.loc 1 3033 0
 2063 0012 0860     		str	r0, [r1]
3034:Generated_Source\PSoC4/CyLib.c ****     }
 2064              		.loc 1 3034 0
 2065              		@ sp needed
 2066 0014 7047     		bx	lr
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 93


 2067              	.L173:
 2068 0016 C046     		.align	2
 2069              	.L172:
 2070 0018 38001040 		.word	1074790456
 2071 001c FFFFF9FF 		.word	-393217
 2072              		.cfi_endproc
 2073              	.LFE48:
 2074              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2075              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2076              		.align	2
 2077              		.global	CySysSetFlashAccessArbPriority
 2078              		.code	16
 2079              		.thumb_func
 2080              		.type	CySysSetFlashAccessArbPriority, %function
 2081              	CySysSetFlashAccessArbPriority:
 2082              	.LFB49:
3035:Generated_Source\PSoC4/CyLib.c **** 
3036:Generated_Source\PSoC4/CyLib.c **** 
3037:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3038:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3039:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3040:Generated_Source\PSoC4/CyLib.c ****     *
3041:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3042:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3043:Generated_Source\PSoC4/CyLib.c ****     *  details.
3044:Generated_Source\PSoC4/CyLib.c ****     *
3045:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3046:Generated_Source\PSoC4/CyLib.c ****     *
3047:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3048:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3049:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3050:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3051:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3052:Generated_Source\PSoC4/CyLib.c ****     *
3053:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3054:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3055:Generated_Source\PSoC4/CyLib.c ****     {
 2083              		.loc 1 3055 0
 2084              		.cfi_startproc
 2085              	.LVL160:
3056:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3057:Generated_Source\PSoC4/CyLib.c **** 
3058:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2086              		.loc 1 3058 0
 2087 0000 0549     		ldr	r1, .L175
 2088 0002 0A68     		ldr	r2, [r1]
 2089 0004 054B     		ldr	r3, .L175+4
 2090 0006 1340     		and	r3, r2
 2091              	.LVL161:
3059:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2092              		.loc 1 3059 0
 2093 0008 4004     		lsl	r0, r0, #17
 2094              	.LVL162:
 2095 000a C022     		mov	r2, #192
 2096 000c D202     		lsl	r2, r2, #11
 2097 000e 1040     		and	r0, r2
 2098 0010 1843     		orr	r0, r3
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 94


 2099              	.LVL163:
3060:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2100              		.loc 1 3060 0
 2101 0012 0860     		str	r0, [r1]
3061:Generated_Source\PSoC4/CyLib.c ****     }
 2102              		.loc 1 3061 0
 2103              		@ sp needed
 2104 0014 7047     		bx	lr
 2105              	.L176:
 2106 0016 C046     		.align	2
 2107              	.L175:
 2108 0018 30001040 		.word	1074790448
 2109 001c FFFFF9FF 		.word	-393217
 2110              		.cfi_endproc
 2111              	.LFE49:
 2112              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2113              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2114              		.align	2
 2115              		.global	CySysSetDmacAccessArbPriority
 2116              		.code	16
 2117              		.thumb_func
 2118              		.type	CySysSetDmacAccessArbPriority, %function
 2119              	CySysSetDmacAccessArbPriority:
 2120              	.LFB50:
3062:Generated_Source\PSoC4/CyLib.c **** 
3063:Generated_Source\PSoC4/CyLib.c **** 
3064:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3065:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3066:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3067:Generated_Source\PSoC4/CyLib.c ****     *
3068:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3069:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3070:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3071:Generated_Source\PSoC4/CyLib.c ****     *
3072:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3073:Generated_Source\PSoC4/CyLib.c ****     *
3074:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3075:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3076:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3077:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3078:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3079:Generated_Source\PSoC4/CyLib.c ****     *
3080:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3081:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3082:Generated_Source\PSoC4/CyLib.c ****     {
 2121              		.loc 1 3082 0
 2122              		.cfi_startproc
 2123              	.LVL164:
3083:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3084:Generated_Source\PSoC4/CyLib.c **** 
3085:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2124              		.loc 1 3085 0
 2125 0000 0549     		ldr	r1, .L178
 2126 0002 0A68     		ldr	r2, [r1]
 2127 0004 054B     		ldr	r3, .L178+4
 2128 0006 1340     		and	r3, r2
 2129              	.LVL165:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 95


3086:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2130              		.loc 1 3086 0
 2131 0008 4004     		lsl	r0, r0, #17
 2132              	.LVL166:
 2133 000a C022     		mov	r2, #192
 2134 000c D202     		lsl	r2, r2, #11
 2135 000e 1040     		and	r0, r2
 2136 0010 1843     		orr	r0, r3
 2137              	.LVL167:
3087:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2138              		.loc 1 3087 0
 2139 0012 0860     		str	r0, [r1]
3088:Generated_Source\PSoC4/CyLib.c ****     }
 2140              		.loc 1 3088 0
 2141              		@ sp needed
 2142 0014 7047     		bx	lr
 2143              	.L179:
 2144 0016 C046     		.align	2
 2145              	.L178:
 2146 0018 3C001040 		.word	1074790460
 2147 001c FFFFF9FF 		.word	-393217
 2148              		.cfi_endproc
 2149              	.LFE50:
 2150              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2151              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2152              		.align	2
 2153              		.global	CySysSetPeripheralAccessArbPriority
 2154              		.code	16
 2155              		.thumb_func
 2156              		.type	CySysSetPeripheralAccessArbPriority, %function
 2157              	CySysSetPeripheralAccessArbPriority:
 2158              	.LFB51:
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** 
3091:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3092:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3093:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3094:Generated_Source\PSoC4/CyLib.c ****     *
3095:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3096:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3097:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3098:Generated_Source\PSoC4/CyLib.c ****     *
3099:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3100:Generated_Source\PSoC4/CyLib.c ****     *
3101:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3102:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3103:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3104:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3105:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3106:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3107:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3108:Generated_Source\PSoC4/CyLib.c ****     *
3109:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3110:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3111:Generated_Source\PSoC4/CyLib.c ****     {
 2159              		.loc 1 3111 0
 2160              		.cfi_startproc
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 96


 2161              	.LVL168:
 2162 0000 08B5     		push	{r3, lr}
 2163              		.cfi_def_cfa_offset 8
 2164              		.cfi_offset 3, -8
 2165              		.cfi_offset 14, -4
3112:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3113:Generated_Source\PSoC4/CyLib.c **** 
3114:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2166              		.loc 1 3114 0
 2167 0002 0028     		cmp	r0, #0
 2168 0004 0AD1     		bne	.L181
3115:Generated_Source\PSoC4/CyLib.c ****         {
3116:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2169              		.loc 1 3116 0
 2170 0006 0E48     		ldr	r0, .L184
 2171              	.LVL169:
 2172 0008 0268     		ldr	r2, [r0]
 2173 000a 0E4B     		ldr	r3, .L184+4
 2174 000c 1340     		and	r3, r2
 2175              	.LVL170:
3117:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2176              		.loc 1 3117 0
 2177 000e 4904     		lsl	r1, r1, #17
 2178              	.LVL171:
 2179 0010 C022     		mov	r2, #192
 2180 0012 D202     		lsl	r2, r2, #11
 2181 0014 1140     		and	r1, r2
 2182 0016 1943     		orr	r1, r3
 2183              	.LVL172:
3118:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 2184              		.loc 1 3118 0
 2185 0018 0160     		str	r1, [r0]
 2186 001a 0FE0     		b	.L180
 2187              	.LVL173:
 2188              	.L181:
3119:Generated_Source\PSoC4/CyLib.c ****         } else
3120:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3121:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2189              		.loc 1 3121 0
 2190 001c 0128     		cmp	r0, #1
 2191 001e 0AD1     		bne	.L183
3122:Generated_Source\PSoC4/CyLib.c ****         {
3123:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2192              		.loc 1 3123 0
 2193 0020 0948     		ldr	r0, .L184+8
 2194              	.LVL174:
 2195 0022 0268     		ldr	r2, [r0]
 2196 0024 074B     		ldr	r3, .L184+4
 2197 0026 1340     		and	r3, r2
 2198              	.LVL175:
3124:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2199              		.loc 1 3124 0
 2200 0028 4904     		lsl	r1, r1, #17
 2201              	.LVL176:
 2202 002a C022     		mov	r2, #192
 2203 002c D202     		lsl	r2, r2, #11
 2204 002e 1140     		and	r1, r2
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 97


 2205 0030 1943     		orr	r1, r3
 2206              	.LVL177:
3125:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 2207              		.loc 1 3125 0
 2208 0032 0160     		str	r1, [r0]
 2209 0034 02E0     		b	.L180
 2210              	.LVL178:
 2211              	.L183:
3126:Generated_Source\PSoC4/CyLib.c ****         } else
3127:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3128:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3129:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
3130:Generated_Source\PSoC4/CyLib.c ****         {
3131:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3132:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3133:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
3134:Generated_Source\PSoC4/CyLib.c ****         } else
3135:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3136:Generated_Source\PSoC4/CyLib.c ****         {
3137:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3138:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 2212              		.loc 1 3138 0 discriminator 1
 2213 0036 0020     		mov	r0, #0
 2214              	.LVL179:
 2215 0038 FFF7FEFF 		bl	CyHalt
 2216              	.LVL180:
 2217              	.L180:
3139:Generated_Source\PSoC4/CyLib.c ****         }
3140:Generated_Source\PSoC4/CyLib.c ****     }
 2218              		.loc 1 3140 0
 2219              		@ sp needed
 2220 003c 08BD     		pop	{r3, pc}
 2221              	.L185:
 2222 003e C046     		.align	2
 2223              	.L184:
 2224 0040 00011040 		.word	1074790656
 2225 0044 FFFFF9FF 		.word	-393217
 2226 0048 04011040 		.word	1074790660
 2227              		.cfi_endproc
 2228              	.LFE51:
 2229              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2230              		.section	.text.CySysPrbSetGlobalVrefSource,"ax",%progbits
 2231              		.align	2
 2232              		.global	CySysPrbSetGlobalVrefSource
 2233              		.code	16
 2234              		.thumb_func
 2235              		.type	CySysPrbSetGlobalVrefSource, %function
 2236              	CySysPrbSetGlobalVrefSource:
 2237              	.LFB52:
3141:Generated_Source\PSoC4/CyLib.c **** 
3142:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_DMAC_PRESENT) */
3143:Generated_Source\PSoC4/CyLib.c **** 
3144:Generated_Source\PSoC4/CyLib.c **** 
3145:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PASS)
3146:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3147:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetGlobalVrefSource
3148:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 98


3149:Generated_Source\PSoC4/CyLib.c ****     *
3150:Generated_Source\PSoC4/CyLib.c ****     *  Selects the source of the global voltage reference.
3151:Generated_Source\PSoC4/CyLib.c ****     *
3152:Generated_Source\PSoC4/CyLib.c ****     *  \note The global voltage reference uses one of the available programmable
3153:Generated_Source\PSoC4/CyLib.c ****     *  voltage reference lines.
3154:Generated_Source\PSoC4/CyLib.c ****     *
3155:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4 devices that support the programmable
3156:Generated_Source\PSoC4/CyLib.c ****     *  reference block. Please refer to the device TRM for more details.
3157:Generated_Source\PSoC4/CyLib.c ****     *
3158:Generated_Source\PSoC4/CyLib.c ****     *  This API affects the voltage values available in
3159:Generated_Source\PSoC4/CyLib.c ****     *  \ref CySysPrbSetGlobalVrefVoltage().
3160:Generated_Source\PSoC4/CyLib.c ****     *
3161:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M, PSoC 4200L and PSoC 4400 devices only.
3162:Generated_Source\PSoC4/CyLib.c ****     *
3163:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3164:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_VREF_SOURCE_BG   Sets bandgap as the source of the global voltage
3165:Generated_Source\PSoC4/CyLib.c ****     *   reference.
3166:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_VREF_SOURCE_VDDA Sets VDDA as the source of the global voltage
3167:Generated_Source\PSoC4/CyLib.c ****     *   reference.
3168:Generated_Source\PSoC4/CyLib.c ****     *
3169:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3170:Generated_Source\PSoC4/CyLib.c ****     #ifdef CyDesignWideVoltageReference_PRB_REF
3171:Generated_Source\PSoC4/CyLib.c ****         void CySysPrbSetGlobalVrefSource(uint32 source)
3172:Generated_Source\PSoC4/CyLib.c ****         {
 2238              		.loc 1 3172 0
 2239              		.cfi_startproc
 2240              	.LVL181:
 2241 0000 031C     		mov	r3, r0
3173:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_REF, CYFLD_PASS_VREF_SUP_SEL, source);
 2242              		.loc 1 3173 0
 2243 0002 0449     		ldr	r1, .L187
 2244 0004 0A68     		ldr	r2, [r1]
 2245 0006 0220     		mov	r0, #2
 2246              	.LVL182:
 2247 0008 8243     		bic	r2, r0
 2248 000a 5B00     		lsl	r3, r3, #1
 2249              	.LVL183:
 2250 000c 1840     		and	r0, r3
 2251 000e 1043     		orr	r0, r2
 2252 0010 0860     		str	r0, [r1]
3174:Generated_Source\PSoC4/CyLib.c ****         }
 2253              		.loc 1 3174 0
 2254              		@ sp needed
 2255 0012 7047     		bx	lr
 2256              	.L188:
 2257              		.align	2
 2258              	.L187:
 2259 0014 08023F40 		.word	1077871112
 2260              		.cfi_endproc
 2261              	.LFE52:
 2262              		.size	CySysPrbSetGlobalVrefSource, .-CySysPrbSetGlobalVrefSource
 2263              		.section	.text.CySysPrbSetBgGain,"ax",%progbits
 2264              		.align	2
 2265              		.global	CySysPrbSetBgGain
 2266              		.code	16
 2267              		.thumb_func
 2268              		.type	CySysPrbSetBgGain, %function
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 99


 2269              	CySysPrbSetBgGain:
 2270              	.LFB53:
3175:Generated_Source\PSoC4/CyLib.c ****     #endif
3176:Generated_Source\PSoC4/CyLib.c **** 
3177:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3178:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetBgGain
3179:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3180:Generated_Source\PSoC4/CyLib.c ****     *
3181:Generated_Source\PSoC4/CyLib.c ****     * Selects the gain of bandgap reference buffer. Note that this API is effective
3182:Generated_Source\PSoC4/CyLib.c ****     * only when the bandgap is set as the source of global voltage reference.
3183:Generated_Source\PSoC4/CyLib.c ****     *
3184:Generated_Source\PSoC4/CyLib.c ****     * \note This API affects the voltage values available in \ref
3185:Generated_Source\PSoC4/CyLib.c ****     * CySysPrbSetGlobalVrefVoltage() API.
3186:Generated_Source\PSoC4/CyLib.c ****     *
3187:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3188:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3189:Generated_Source\PSoC4/CyLib.c ****     *
3190:Generated_Source\PSoC4/CyLib.c ****     * \param gain:
3191:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_VREF_BG_GAINx1  Gain is 1.
3192:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_VREF_BG_GAINx2  Gain is 2.
3193:Generated_Source\PSoC4/CyLib.c ****     *
3194:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3195:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbSetBgGain(uint32 gain)
3196:Generated_Source\PSoC4/CyLib.c ****     {
 2271              		.loc 1 3196 0
 2272              		.cfi_startproc
 2273              	.LVL184:
3197:Generated_Source\PSoC4/CyLib.c ****         CY_SET_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_VBGR_BUF_GAIN, gain);
 2274              		.loc 1 3197 0
 2275 0000 034A     		ldr	r2, .L190
 2276 0002 1368     		ldr	r3, [r2]
 2277 0004 0321     		mov	r1, #3
 2278 0006 8B43     		bic	r3, r1
 2279 0008 0840     		and	r0, r1
 2280              	.LVL185:
 2281 000a 1843     		orr	r0, r3
 2282 000c 1060     		str	r0, [r2]
3198:Generated_Source\PSoC4/CyLib.c ****     }
 2283              		.loc 1 3198 0
 2284              		@ sp needed
 2285 000e 7047     		bx	lr
 2286              	.L191:
 2287              		.align	2
 2288              	.L190:
 2289 0010 00023F40 		.word	1077871104
 2290              		.cfi_endproc
 2291              	.LFE53:
 2292              		.size	CySysPrbSetBgGain, .-CySysPrbSetBgGain
 2293              		.section	.text.CySysPrbSetGlobalVrefVoltage,"ax",%progbits
 2294              		.align	2
 2295              		.global	CySysPrbSetGlobalVrefVoltage
 2296              		.code	16
 2297              		.thumb_func
 2298              		.type	CySysPrbSetGlobalVrefVoltage, %function
 2299              	CySysPrbSetGlobalVrefVoltage:
 2300              	.LFB54:
3199:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 100


3200:Generated_Source\PSoC4/CyLib.c **** 
3201:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3202:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetGlobalVrefVoltage
3203:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3204:Generated_Source\PSoC4/CyLib.c ****     *
3205:Generated_Source\PSoC4/CyLib.c ****     * Selects the value of global voltage reference. Set the source of the global
3206:Generated_Source\PSoC4/CyLib.c ****     * voltage reference and bandgap buffer gain (if applicable) before calling this
3207:Generated_Source\PSoC4/CyLib.c ****     * API.
3208:Generated_Source\PSoC4/CyLib.c ****     *
3209:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3210:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3211:Generated_Source\PSoC4/CyLib.c ****     *
3212:Generated_Source\PSoC4/CyLib.c ****     * \param voltageTap The range is from 1 to 16 that corresponds to:
3213:Generated_Source\PSoC4/CyLib.c ****     * Source is bandgap (x1): 0.08 V to 1.20 V in steps of 0.07 V approximately.
3214:Generated_Source\PSoC4/CyLib.c ****     * Source is bandgap (x2): 0.16 V to 2.40 V in steps of 0.14 V approximately.
3215:Generated_Source\PSoC4/CyLib.c ****     * Source is Vdda: 0.21 V to 3.30 in steps of 0.21 V approximately. The Vdda
3216:Generated_Source\PSoC4/CyLib.c ****     * is equal to 3.3 V. Voltage value will change according to value of Vdda.
3217:Generated_Source\PSoC4/CyLib.c ****     *
3218:Generated_Source\PSoC4/CyLib.c ****     *   voltageTap  | If bandgap (x1), V| If bandgap (x2), V| If Vdda
3219:Generated_Source\PSoC4/CyLib.c ****     *   ------------|-------------------|-------------------|-------------------
3220:Generated_Source\PSoC4/CyLib.c ****     *       1       |       0.08        |       0.16        |       0.21
3221:Generated_Source\PSoC4/CyLib.c ****     *       2       |       0.15        |       0.30        |       0.41
3222:Generated_Source\PSoC4/CyLib.c ****     *       3       |       0.23        |       0.46        |       0.62
3223:Generated_Source\PSoC4/CyLib.c ****     *       4       |       0.30        |       0.60        |       0.83
3224:Generated_Source\PSoC4/CyLib.c ****     *       5       |       0.38        |       0.76        |       1.03
3225:Generated_Source\PSoC4/CyLib.c ****     *       6       |       0.45        |       0.90        |       1.24
3226:Generated_Source\PSoC4/CyLib.c ****     *       7       |       0.53        |       1.06        |       1.44
3227:Generated_Source\PSoC4/CyLib.c ****     *       8       |       0.60        |       1.20        |       1.65
3228:Generated_Source\PSoC4/CyLib.c ****     *       9       |       0.68        |       1.36        |       1.86
3229:Generated_Source\PSoC4/CyLib.c ****     *       10      |       0.75        |       1.50        |       2.06
3230:Generated_Source\PSoC4/CyLib.c ****     *       11      |       0.83        |       1.66        |       2.27
3231:Generated_Source\PSoC4/CyLib.c ****     *       12      |       0.90        |       1.80        |       2.48
3232:Generated_Source\PSoC4/CyLib.c ****     *       13      |       0.98        |       1.96        |       2.68
3233:Generated_Source\PSoC4/CyLib.c ****     *       14      |       1.05        |       2.10        |       2.89
3234:Generated_Source\PSoC4/CyLib.c ****     *       15      |       1.13        |       2.26        |       3.09
3235:Generated_Source\PSoC4/CyLib.c ****     *       16      |       1.20        |       2.40        |       3.30
3236:Generated_Source\PSoC4/CyLib.c ****     *
3237:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3238:Generated_Source\PSoC4/CyLib.c ****     #ifdef CyDesignWideVoltageReference_PRB_REF
3239:Generated_Source\PSoC4/CyLib.c ****         void CySysPrbSetGlobalVrefVoltage(uint32 voltageTap)
3240:Generated_Source\PSoC4/CyLib.c ****         {
 2301              		.loc 1 3240 0
 2302              		.cfi_startproc
 2303              	.LVL186:
3241:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_REF, CYFLD_PASS_VREF_SEL, voltageTap);
 2304              		.loc 1 3241 0
 2305 0000 0449     		ldr	r1, .L193
 2306 0002 0A68     		ldr	r2, [r1]
 2307 0004 F023     		mov	r3, #240
 2308 0006 9A43     		bic	r2, r3
 2309 0008 0301     		lsl	r3, r0, #4
 2310 000a FF20     		mov	r0, #255
 2311              	.LVL187:
 2312 000c 1840     		and	r0, r3
 2313 000e 1043     		orr	r0, r2
 2314 0010 0860     		str	r0, [r1]
3242:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 101


 2315              		.loc 1 3242 0
 2316              		@ sp needed
 2317 0012 7047     		bx	lr
 2318              	.L194:
 2319              		.align	2
 2320              	.L193:
 2321 0014 08023F40 		.word	1077871112
 2322              		.cfi_endproc
 2323              	.LFE54:
 2324              		.size	CySysPrbSetGlobalVrefVoltage, .-CySysPrbSetGlobalVrefVoltage
 2325              		.section	.text.CySysPrbEnableDeepsleepVddaRef,"ax",%progbits
 2326              		.align	2
 2327              		.global	CySysPrbEnableDeepsleepVddaRef
 2328              		.code	16
 2329              		.thumb_func
 2330              		.type	CySysPrbEnableDeepsleepVddaRef, %function
 2331              	CySysPrbEnableDeepsleepVddaRef:
 2332              	.LFB55:
3243:Generated_Source\PSoC4/CyLib.c ****     #endif
3244:Generated_Source\PSoC4/CyLib.c **** 
3245:Generated_Source\PSoC4/CyLib.c **** 
3246:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3247:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbEnableDeepsleepVddaRef
3248:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3249:Generated_Source\PSoC4/CyLib.c ****     *
3250:Generated_Source\PSoC4/CyLib.c ****     * Enables the Vdda reference in deep sleep mode. The Vdda reference is by
3251:Generated_Source\PSoC4/CyLib.c ****     * default disabled when entering deep sleep mode.
3252:Generated_Source\PSoC4/CyLib.c ****     *
3253:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3254:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3255:Generated_Source\PSoC4/CyLib.c ****     *
3256:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3257:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbEnableDeepsleepVddaRef(void)
3258:Generated_Source\PSoC4/CyLib.c ****     {
 2333              		.loc 1 3258 0
 2334              		.cfi_startproc
3259:Generated_Source\PSoC4/CyLib.c ****         CY_SET_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_DEEPSLEEP_ON, 1u);
 2335              		.loc 1 3259 0
 2336 0000 034A     		ldr	r2, .L196
 2337 0002 1368     		ldr	r3, [r2]
 2338 0004 8021     		mov	r1, #128
 2339 0006 C905     		lsl	r1, r1, #23
 2340 0008 0B43     		orr	r3, r1
 2341 000a 1360     		str	r3, [r2]
3260:Generated_Source\PSoC4/CyLib.c ****     }
 2342              		.loc 1 3260 0
 2343              		@ sp needed
 2344 000c 7047     		bx	lr
 2345              	.L197:
 2346 000e C046     		.align	2
 2347              	.L196:
 2348 0010 00023F40 		.word	1077871104
 2349              		.cfi_endproc
 2350              	.LFE55:
 2351              		.size	CySysPrbEnableDeepsleepVddaRef, .-CySysPrbEnableDeepsleepVddaRef
 2352              		.section	.text.CySysPrbDisableDeepsleepVddaRef,"ax",%progbits
 2353              		.align	2
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 102


 2354              		.global	CySysPrbDisableDeepsleepVddaRef
 2355              		.code	16
 2356              		.thumb_func
 2357              		.type	CySysPrbDisableDeepsleepVddaRef, %function
 2358              	CySysPrbDisableDeepsleepVddaRef:
 2359              	.LFB56:
3261:Generated_Source\PSoC4/CyLib.c **** 
3262:Generated_Source\PSoC4/CyLib.c **** 
3263:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3264:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbDisableDeepsleepVddaRef
3265:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3266:Generated_Source\PSoC4/CyLib.c ****     *
3267:Generated_Source\PSoC4/CyLib.c ****     * Disables the Vdda reference in deep sleep mode. The Vdda reference is by
3268:Generated_Source\PSoC4/CyLib.c ****     * default disabled when entering deep sleep mode.
3269:Generated_Source\PSoC4/CyLib.c ****     *
3270:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3271:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3272:Generated_Source\PSoC4/CyLib.c ****     *
3273:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3274:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbDisableDeepsleepVddaRef(void)
3275:Generated_Source\PSoC4/CyLib.c ****     {
 2360              		.loc 1 3275 0
 2361              		.cfi_startproc
3276:Generated_Source\PSoC4/CyLib.c ****         CY_CLEAR_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_DEEPSLEEP_ON);
 2362              		.loc 1 3276 0
 2363 0000 024A     		ldr	r2, .L199
 2364 0002 1168     		ldr	r1, [r2]
 2365 0004 024B     		ldr	r3, .L199+4
 2366 0006 0B40     		and	r3, r1
 2367 0008 1360     		str	r3, [r2]
3277:Generated_Source\PSoC4/CyLib.c ****     }
 2368              		.loc 1 3277 0
 2369              		@ sp needed
 2370 000a 7047     		bx	lr
 2371              	.L200:
 2372              		.align	2
 2373              	.L199:
 2374 000c 00023F40 		.word	1077871104
 2375 0010 FFFFFFBF 		.word	-1073741825
 2376              		.cfi_endproc
 2377              	.LFE56:
 2378              		.size	CySysPrbDisableDeepsleepVddaRef, .-CySysPrbDisableDeepsleepVddaRef
 2379              		.section	.text.CySysPrbEnableVddaRef,"ax",%progbits
 2380              		.align	2
 2381              		.global	CySysPrbEnableVddaRef
 2382              		.code	16
 2383              		.thumb_func
 2384              		.type	CySysPrbEnableVddaRef, %function
 2385              	CySysPrbEnableVddaRef:
 2386              	.LFB57:
3278:Generated_Source\PSoC4/CyLib.c **** 
3279:Generated_Source\PSoC4/CyLib.c **** 
3280:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3281:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbEnableVddaRef
3282:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3283:Generated_Source\PSoC4/CyLib.c ****     *
3284:Generated_Source\PSoC4/CyLib.c ****     * Enables the Vdda reference. The Vdda reference is by default not enabled.
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 103


3285:Generated_Source\PSoC4/CyLib.c ****     *
3286:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3287:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3288:Generated_Source\PSoC4/CyLib.c ****     *
3289:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3290:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbEnableVddaRef(void)
3291:Generated_Source\PSoC4/CyLib.c ****     {
 2387              		.loc 1 3291 0
 2388              		.cfi_startproc
3292:Generated_Source\PSoC4/CyLib.c ****         CY_SET_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_VDDA_ENABLE, 1u);
 2389              		.loc 1 3292 0
 2390 0000 024A     		ldr	r2, .L202
 2391 0002 1168     		ldr	r1, [r2]
 2392 0004 1023     		mov	r3, #16
 2393 0006 0B43     		orr	r3, r1
 2394 0008 1360     		str	r3, [r2]
3293:Generated_Source\PSoC4/CyLib.c ****     }
 2395              		.loc 1 3293 0
 2396              		@ sp needed
 2397 000a 7047     		bx	lr
 2398              	.L203:
 2399              		.align	2
 2400              	.L202:
 2401 000c 00023F40 		.word	1077871104
 2402              		.cfi_endproc
 2403              	.LFE57:
 2404              		.size	CySysPrbEnableVddaRef, .-CySysPrbEnableVddaRef
 2405              		.section	.text.CySysPrbDisableVddaRef,"ax",%progbits
 2406              		.align	2
 2407              		.global	CySysPrbDisableVddaRef
 2408              		.code	16
 2409              		.thumb_func
 2410              		.type	CySysPrbDisableVddaRef, %function
 2411              	CySysPrbDisableVddaRef:
 2412              	.LFB58:
3294:Generated_Source\PSoC4/CyLib.c **** 
3295:Generated_Source\PSoC4/CyLib.c **** 
3296:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3297:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbDisableVddaRef
3298:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3299:Generated_Source\PSoC4/CyLib.c ****     *
3300:Generated_Source\PSoC4/CyLib.c ****     * Disables the Vdda reference. The Vdda reference is by default not enabled.
3301:Generated_Source\PSoC4/CyLib.c ****     *
3302:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3303:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3304:Generated_Source\PSoC4/CyLib.c ****     *
3305:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3306:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbDisableVddaRef(void)
3307:Generated_Source\PSoC4/CyLib.c ****     {
 2413              		.loc 1 3307 0
 2414              		.cfi_startproc
3308:Generated_Source\PSoC4/CyLib.c ****         CY_CLEAR_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_VDDA_ENABLE);
 2415              		.loc 1 3308 0
 2416 0000 024A     		ldr	r2, .L205
 2417 0002 1368     		ldr	r3, [r2]
 2418 0004 1021     		mov	r1, #16
 2419 0006 8B43     		bic	r3, r1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 104


 2420 0008 1360     		str	r3, [r2]
3309:Generated_Source\PSoC4/CyLib.c ****     }
 2421              		.loc 1 3309 0
 2422              		@ sp needed
 2423 000a 7047     		bx	lr
 2424              	.L206:
 2425              		.align	2
 2426              	.L205:
 2427 000c 00023F40 		.word	1077871104
 2428              		.cfi_endproc
 2429              	.LFE58:
 2430              		.size	CySysPrbDisableVddaRef, .-CySysPrbDisableVddaRef
 2431              		.section	.text.CySysPrbSetBgBufferTrim,"ax",%progbits
 2432              		.align	2
 2433              		.global	CySysPrbSetBgBufferTrim
 2434              		.code	16
 2435              		.thumb_func
 2436              		.type	CySysPrbSetBgBufferTrim, %function
 2437              	CySysPrbSetBgBufferTrim:
 2438              	.LFB59:
3310:Generated_Source\PSoC4/CyLib.c **** 
3311:Generated_Source\PSoC4/CyLib.c **** 
3312:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3313:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetBgBufferTrim
3314:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3315:Generated_Source\PSoC4/CyLib.c ****     *
3316:Generated_Source\PSoC4/CyLib.c ****     * Sets the trim for the bandgap reference buffer.
3317:Generated_Source\PSoC4/CyLib.c ****     *
3318:Generated_Source\PSoC4/CyLib.c ****     * \note Affects all bandgap sourced references.
3319:Generated_Source\PSoC4/CyLib.c ****     *
3320:Generated_Source\PSoC4/CyLib.c ****     * \param bgTrim The trim value from -32 to 31. Step size is approximately 1 mV.
3321:Generated_Source\PSoC4/CyLib.c ****     *
3322:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3323:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3324:Generated_Source\PSoC4/CyLib.c ****     *
3325:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3326:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbSetBgBufferTrim(int32 bgTrim)
3327:Generated_Source\PSoC4/CyLib.c ****     {
 2439              		.loc 1 3327 0
 2440              		.cfi_startproc
 2441              	.LVL188:
3328:Generated_Source\PSoC4/CyLib.c ****         uint8 tmp = 0u;
3329:Generated_Source\PSoC4/CyLib.c **** 
3330:Generated_Source\PSoC4/CyLib.c ****         if (bgTrim >= 0)
 2442              		.loc 1 3330 0
 2443 0000 0028     		cmp	r0, #0
 2444 0002 07DB     		blt	.L208
3331:Generated_Source\PSoC4/CyLib.c ****         {
3332:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_TRIM, CYFLD_PASS_VBGR_BUF_TRIM, (uint32) bgTrim);
 2445              		.loc 1 3332 0
 2446 0004 084A     		ldr	r2, .L210
 2447 0006 1368     		ldr	r3, [r2]
 2448 0008 3F21     		mov	r1, #63
 2449 000a 8B43     		bic	r3, r1
 2450 000c 0840     		and	r0, r1
 2451              	.LVL189:
 2452 000e 1843     		orr	r0, r3
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 105


 2453 0010 1060     		str	r0, [r2]
 2454 0012 08E0     		b	.L207
 2455              	.LVL190:
 2456              	.L208:
3333:Generated_Source\PSoC4/CyLib.c ****         }
3334:Generated_Source\PSoC4/CyLib.c ****         else
3335:Generated_Source\PSoC4/CyLib.c ****         {
3336:Generated_Source\PSoC4/CyLib.c ****             tmp = (uint8)((int32) bgTrim * (int8) (-1));   /* Make positive */
3337:Generated_Source\PSoC4/CyLib.c ****             tmp = (uint8) ~tmp + 1u;                      /* Two's complement */
3338:Generated_Source\PSoC4/CyLib.c ****             tmp |= (uint8) CY_SYS_VREF_BG_BUFFER_TRIM_SIGN_BIT;
3339:Generated_Source\PSoC4/CyLib.c **** 
3340:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_TRIM, CYFLD_PASS_VBGR_BUF_TRIM, tmp);
 2457              		.loc 1 3340 0
 2458 0014 0449     		ldr	r1, .L210
 2459 0016 0A68     		ldr	r2, [r1]
 2460 0018 3F23     		mov	r3, #63
 2461 001a 9A43     		bic	r2, r3
 2462 001c 1840     		and	r0, r3
 2463              	.LVL191:
 2464 001e 1F3B     		sub	r3, r3, #31
 2465 0020 1843     		orr	r0, r3
 2466 0022 1043     		orr	r0, r2
 2467 0024 0860     		str	r0, [r1]
 2468              	.L207:
3341:Generated_Source\PSoC4/CyLib.c ****         }
3342:Generated_Source\PSoC4/CyLib.c ****     }
 2469              		.loc 1 3342 0
 2470              		@ sp needed
 2471 0026 7047     		bx	lr
 2472              	.L211:
 2473              		.align	2
 2474              	.L210:
 2475 0028 040F3F40 		.word	1077874436
 2476              		.cfi_endproc
 2477              	.LFE59:
 2478              		.size	CySysPrbSetBgBufferTrim, .-CySysPrbSetBgBufferTrim
 2479              		.section	.text.CySysPrbGetBgBufferTrim,"ax",%progbits
 2480              		.align	2
 2481              		.global	CySysPrbGetBgBufferTrim
 2482              		.code	16
 2483              		.thumb_func
 2484              		.type	CySysPrbGetBgBufferTrim, %function
 2485              	CySysPrbGetBgBufferTrim:
 2486              	.LFB60:
3343:Generated_Source\PSoC4/CyLib.c **** 
3344:Generated_Source\PSoC4/CyLib.c **** 
3345:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3346:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbGetBgBufferTrim
3347:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3348:Generated_Source\PSoC4/CyLib.c ****     *
3349:Generated_Source\PSoC4/CyLib.c ****     * Returns the current trim of the bandgap reference buffer.
3350:Generated_Source\PSoC4/CyLib.c ****     *
3351:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3352:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3353:Generated_Source\PSoC4/CyLib.c ****     *
3354:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3355:Generated_Source\PSoC4/CyLib.c ****     int32 CySysPrbGetBgBufferTrim(void)
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 106


3356:Generated_Source\PSoC4/CyLib.c ****     {
 2487              		.loc 1 3356 0
 2488              		.cfi_startproc
3357:Generated_Source\PSoC4/CyLib.c ****         uint8 tmp;
3358:Generated_Source\PSoC4/CyLib.c ****         int32 returnValue;
3359:Generated_Source\PSoC4/CyLib.c **** 
3360:Generated_Source\PSoC4/CyLib.c ****         tmp = (uint8) CY_GET_REG32_FIELD(CYREG_PASS_PRB_TRIM, CYFLD_PASS_VBGR_BUF_TRIM);
 2489              		.loc 1 3360 0
 2490 0000 054B     		ldr	r3, .L215
 2491 0002 1B68     		ldr	r3, [r3]
 2492 0004 DBB2     		uxtb	r3, r3
 2493 0006 3F20     		mov	r0, #63
 2494 0008 1840     		and	r0, r3
 2495              	.LVL192:
3361:Generated_Source\PSoC4/CyLib.c ****         if ((tmp & CY_SYS_VREF_BG_BUFFER_TRIM_SIGN_BIT) != 0u)
 2496              		.loc 1 3361 0
 2497 000a 9B06     		lsl	r3, r3, #26
 2498 000c 02D5     		bpl	.L214
3362:Generated_Source\PSoC4/CyLib.c ****         {
3363:Generated_Source\PSoC4/CyLib.c ****             tmp = ((uint8) ~tmp) + 1u;          /* Make positive */
 2499              		.loc 1 3363 0
 2500 000e 4042     		neg	r0, r0
 2501              	.LVL193:
 2502 0010 C0B2     		uxtb	r0, r0
 2503              	.LVL194:
3364:Generated_Source\PSoC4/CyLib.c ****             returnValue = (int32) tmp * (-1);   /* Make negative */
 2504              		.loc 1 3364 0
 2505 0012 4042     		neg	r0, r0
 2506              	.LVL195:
 2507              	.L214:
3365:Generated_Source\PSoC4/CyLib.c ****         }
3366:Generated_Source\PSoC4/CyLib.c ****         else
3367:Generated_Source\PSoC4/CyLib.c ****         {
3368:Generated_Source\PSoC4/CyLib.c ****             returnValue = (int32) tmp;
3369:Generated_Source\PSoC4/CyLib.c ****         }
3370:Generated_Source\PSoC4/CyLib.c **** 
3371:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
3372:Generated_Source\PSoC4/CyLib.c ****     }
 2508              		.loc 1 3372 0
 2509              		@ sp needed
 2510 0014 7047     		bx	lr
 2511              	.L216:
 2512 0016 C046     		.align	2
 2513              	.L215:
 2514 0018 040F3F40 		.word	1077874436
 2515              		.cfi_endproc
 2516              	.LFE60:
 2517              		.size	CySysPrbGetBgBufferTrim, .-CySysPrbGetBgBufferTrim
 2518              		.global	CySysClkPumpConfig
 2519              		.global	cyImoFreqMhz2DpllOffset
 2520              		.global	CySysTickInitVar
 2521              		.global	cydelay32kMs
 2522              		.global	cydelayFreqMhz
 2523              		.global	cydelayFreqKhz
 2524              		.global	cydelayFreqHz
 2525              		.section	.rodata
 2526              		.align	2
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 107


 2527              		.set	.LANCHOR1,. + 0
 2528              		.type	cyImoFreqMhz2DpllOffset, %object
 2529              		.size	cyImoFreqMhz2DpllOffset, 23
 2530              	cyImoFreqMhz2DpllOffset:
 2531 0000 EE       		.byte	-18
 2532 0001 DB       		.byte	-37
 2533 0002 C9       		.byte	-55
 2534 0003 B9       		.byte	-71
 2535 0004 AA       		.byte	-86
 2536 0005 9B       		.byte	-101
 2537 0006 8E       		.byte	-114
 2538 0007 82       		.byte	-126
 2539 0008 76       		.byte	118
 2540 0009 6B       		.byte	107
 2541 000a 60       		.byte	96
 2542 000b 56       		.byte	86
 2543 000c 4D       		.byte	77
 2544 000d 44       		.byte	68
 2545 000e 3B       		.byte	59
 2546 000f 33       		.byte	51
 2547 0010 2C       		.byte	44
 2548 0011 24       		.byte	36
 2549 0012 1D       		.byte	29
 2550 0013 17       		.byte	23
 2551 0014 10       		.byte	16
 2552 0015 0A       		.byte	10
 2553 0016 04       		.byte	4
 2554 0017 00       		.data
 2555              		.align	2
 2556              		.set	.LANCHOR0,. + 0
 2557              		.type	CySysClkPumpConfig, %object
 2558              		.size	CySysClkPumpConfig, 4
 2559              	CySysClkPumpConfig:
 2560 0000 01000000 		.word	1
 2561              		.type	cydelay32kMs, %object
 2562              		.size	cydelay32kMs, 4
 2563              	cydelay32kMs:
 2564 0004 0000E02E 		.word	786432000
 2565              		.type	cydelayFreqKhz, %object
 2566              		.size	cydelayFreqKhz, 4
 2567              	cydelayFreqKhz:
 2568 0008 C05D0000 		.word	24000
 2569              		.type	cydelayFreqMhz, %object
 2570              		.size	cydelayFreqMhz, 1
 2571              	cydelayFreqMhz:
 2572 000c 18       		.byte	24
 2573 000d 000000   		.space	3
 2574              		.type	cydelayFreqHz, %object
 2575              		.size	cydelayFreqHz, 4
 2576              	cydelayFreqHz:
 2577 0010 00366E01 		.word	24000000
 2578              		.bss
 2579              		.align	2
 2580              		.set	.LANCHOR2,. + 0
 2581              		.type	CySysTickCallbacks, %object
 2582              		.size	CySysTickCallbacks, 20
 2583              	CySysTickCallbacks:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 108


 2584 0000 00000000 		.space	20
 2584      00000000 
 2584      00000000 
 2584      00000000 
 2584      00000000 
 2585              		.type	CySysTickInitVar, %object
 2586              		.size	CySysTickInitVar, 4
 2587              	CySysTickInitVar:
 2588 0014 00000000 		.space	4
 2589              		.text
 2590              	.Letext0:
 2591              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2592              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2593              		.file 4 "Generated_Source\\PSoC4\\CyLFClk.h"
 2594              		.file 5 "Generated_Source\\PSoC4\\CyFlash.h"
 2595              		.section	.debug_info,"",%progbits
 2596              	.Ldebug_info0:
 2597 0000 1D0E0000 		.4byte	0xe1d
 2598 0004 0400     		.2byte	0x4
 2599 0006 00000000 		.4byte	.Ldebug_abbrev0
 2600 000a 04       		.byte	0x4
 2601 000b 01       		.uleb128 0x1
 2602 000c 5A080000 		.4byte	.LASF128
 2603 0010 01       		.byte	0x1
 2604 0011 EE070000 		.4byte	.LASF129
 2605 0015 23010000 		.4byte	.LASF130
 2606 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2607 001d 00000000 		.4byte	0
 2608 0021 00000000 		.4byte	.Ldebug_line0
 2609 0025 02       		.uleb128 0x2
 2610 0026 01       		.byte	0x1
 2611 0027 06       		.byte	0x6
 2612 0028 78000000 		.4byte	.LASF0
 2613 002c 02       		.uleb128 0x2
 2614 002d 01       		.byte	0x1
 2615 002e 08       		.byte	0x8
 2616 002f DD050000 		.4byte	.LASF1
 2617 0033 02       		.uleb128 0x2
 2618 0034 02       		.byte	0x2
 2619 0035 05       		.byte	0x5
 2620 0036 EB050000 		.4byte	.LASF2
 2621 003a 02       		.uleb128 0x2
 2622 003b 02       		.byte	0x2
 2623 003c 07       		.byte	0x7
 2624 003d C6030000 		.4byte	.LASF3
 2625 0041 02       		.uleb128 0x2
 2626 0042 04       		.byte	0x4
 2627 0043 05       		.byte	0x5
 2628 0044 EE010000 		.4byte	.LASF4
 2629 0048 02       		.uleb128 0x2
 2630 0049 04       		.byte	0x4
 2631 004a 07       		.byte	0x7
 2632 004b 5A030000 		.4byte	.LASF5
 2633 004f 02       		.uleb128 0x2
 2634 0050 08       		.byte	0x8
 2635 0051 05       		.byte	0x5
 2636 0052 15010000 		.4byte	.LASF6
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 109


 2637 0056 02       		.uleb128 0x2
 2638 0057 08       		.byte	0x8
 2639 0058 07       		.byte	0x7
 2640 0059 99000000 		.4byte	.LASF7
 2641 005d 03       		.uleb128 0x3
 2642 005e 04       		.byte	0x4
 2643 005f 05       		.byte	0x5
 2644 0060 696E7400 		.ascii	"int\000"
 2645 0064 02       		.uleb128 0x2
 2646 0065 04       		.byte	0x4
 2647 0066 07       		.byte	0x7
 2648 0067 28030000 		.4byte	.LASF8
 2649 006b 04       		.uleb128 0x4
 2650 006c 39020000 		.4byte	.LASF9
 2651 0070 02       		.byte	0x2
 2652 0071 B901     		.2byte	0x1b9
 2653 0073 2C000000 		.4byte	0x2c
 2654 0077 04       		.uleb128 0x4
 2655 0078 0F000000 		.4byte	.LASF10
 2656 007c 02       		.byte	0x2
 2657 007d BA01     		.2byte	0x1ba
 2658 007f 3A000000 		.4byte	0x3a
 2659 0083 04       		.uleb128 0x4
 2660 0084 62020000 		.4byte	.LASF11
 2661 0088 02       		.byte	0x2
 2662 0089 BB01     		.2byte	0x1bb
 2663 008b 48000000 		.4byte	0x48
 2664 008f 04       		.uleb128 0x4
 2665 0090 0F040000 		.4byte	.LASF12
 2666 0094 02       		.byte	0x2
 2667 0095 BC01     		.2byte	0x1bc
 2668 0097 25000000 		.4byte	0x25
 2669 009b 04       		.uleb128 0x4
 2670 009c AC010000 		.4byte	.LASF13
 2671 00a0 02       		.byte	0x2
 2672 00a1 BE01     		.2byte	0x1be
 2673 00a3 41000000 		.4byte	0x41
 2674 00a7 02       		.uleb128 0x2
 2675 00a8 04       		.byte	0x4
 2676 00a9 04       		.byte	0x4
 2677 00aa 40050000 		.4byte	.LASF14
 2678 00ae 02       		.uleb128 0x2
 2679 00af 08       		.byte	0x8
 2680 00b0 04       		.byte	0x4
 2681 00b1 55020000 		.4byte	.LASF15
 2682 00b5 02       		.uleb128 0x2
 2683 00b6 01       		.byte	0x1
 2684 00b7 08       		.byte	0x8
 2685 00b8 4B060000 		.4byte	.LASF16
 2686 00bc 04       		.uleb128 0x4
 2687 00bd B4050000 		.4byte	.LASF17
 2688 00c1 02       		.byte	0x2
 2689 00c2 6302     		.2byte	0x263
 2690 00c4 C8000000 		.4byte	0xc8
 2691 00c8 05       		.uleb128 0x5
 2692 00c9 6B000000 		.4byte	0x6b
 2693 00cd 04       		.uleb128 0x4
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 110


 2694 00ce 84040000 		.4byte	.LASF18
 2695 00d2 02       		.byte	0x2
 2696 00d3 6502     		.2byte	0x265
 2697 00d5 D9000000 		.4byte	0xd9
 2698 00d9 05       		.uleb128 0x5
 2699 00da 83000000 		.4byte	0x83
 2700 00de 04       		.uleb128 0x4
 2701 00df 68060000 		.4byte	.LASF19
 2702 00e3 02       		.byte	0x2
 2703 00e4 7502     		.2byte	0x275
 2704 00e6 EA000000 		.4byte	0xea
 2705 00ea 06       		.uleb128 0x6
 2706 00eb 04       		.byte	0x4
 2707 00ec F0000000 		.4byte	0xf0
 2708 00f0 07       		.uleb128 0x7
 2709 00f1 02       		.uleb128 0x2
 2710 00f2 04       		.byte	0x4
 2711 00f3 07       		.byte	0x7
 2712 00f4 AD040000 		.4byte	.LASF20
 2713 00f8 08       		.uleb128 0x8
 2714 00f9 5C050000 		.4byte	.LASF21
 2715 00fd 03       		.byte	0x3
 2716 00fe F5       		.byte	0xf5
 2717 00ff EA000000 		.4byte	0xea
 2718 0103 09       		.uleb128 0x9
 2719 0104 94070000 		.4byte	.LASF22
 2720 0108 01       		.byte	0x1
 2721 0109 6B       		.byte	0x6b
 2722 010a 00000000 		.4byte	.LFB1
 2723 010e 14000000 		.4byte	.LFE1-.LFB1
 2724 0112 01       		.uleb128 0x1
 2725 0113 9C       		.byte	0x9c
 2726 0114 0A       		.uleb128 0xa
 2727 0115 6A040000 		.4byte	.LASF23
 2728 0119 01       		.byte	0x1
 2729 011a 1D01     		.2byte	0x11d
 2730 011c 00000000 		.4byte	.LFB4
 2731 0120 14000000 		.4byte	.LFE4-.LFB4
 2732 0124 01       		.uleb128 0x1
 2733 0125 9C       		.byte	0x9c
 2734 0126 0B       		.uleb128 0xb
 2735 0127 73030000 		.4byte	.LASF24
 2736 012b 01       		.byte	0x1
 2737 012c 8B       		.byte	0x8b
 2738 012d 00000000 		.4byte	.LFB2
 2739 0131 18000000 		.4byte	.LFE2-.LFB2
 2740 0135 01       		.uleb128 0x1
 2741 0136 9C       		.byte	0x9c
 2742 0137 45010000 		.4byte	0x145
 2743 013b 0C       		.uleb128 0xc
 2744 013c 06000000 		.4byte	.LVL0
 2745 0140 14010000 		.4byte	0x114
 2746 0144 00       		.byte	0
 2747 0145 0D       		.uleb128 0xd
 2748 0146 D0010000 		.4byte	.LASF81
 2749 014a 01       		.byte	0x1
 2750 014b 3001     		.2byte	0x130
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 111


 2751 014d 83000000 		.4byte	0x83
 2752 0151 00000000 		.4byte	.LFB5
 2753 0155 14000000 		.4byte	.LFE5-.LFB5
 2754 0159 01       		.uleb128 0x1
 2755 015a 9C       		.byte	0x9c
 2756 015b 0E       		.uleb128 0xe
 2757 015c 1F000000 		.4byte	.LASF25
 2758 0160 01       		.byte	0x1
 2759 0161 AD01     		.2byte	0x1ad
 2760 0163 00000000 		.4byte	.LFB6
 2761 0167 20000000 		.4byte	.LFE6-.LFB6
 2762 016b 01       		.uleb128 0x1
 2763 016c 9C       		.byte	0x9c
 2764 016d B4010000 		.4byte	0x1b4
 2765 0171 0F       		.uleb128 0xf
 2766 0172 13060000 		.4byte	.LASF29
 2767 0176 01       		.byte	0x1
 2768 0177 AD01     		.2byte	0x1ad
 2769 0179 83000000 		.4byte	0x83
 2770 017d 00000000 		.4byte	.LLST0
 2771 0181 10       		.uleb128 0x10
 2772 0182 9D010000 		.4byte	.LASF26
 2773 0186 01       		.byte	0x1
 2774 0187 AF01     		.2byte	0x1af
 2775 0189 6B000000 		.4byte	0x6b
 2776 018d 2C000000 		.4byte	.LLST1
 2777 0191 10       		.uleb128 0x10
 2778 0192 1A080000 		.4byte	.LASF27
 2779 0196 01       		.byte	0x1
 2780 0197 B001     		.2byte	0x1b0
 2781 0199 83000000 		.4byte	0x83
 2782 019d 3F000000 		.4byte	.LLST2
 2783 01a1 0C       		.uleb128 0xc
 2784 01a2 08000000 		.4byte	.LVL2
 2785 01a6 DB0D0000 		.4byte	0xddb
 2786 01aa 0C       		.uleb128 0xc
 2787 01ab 1A000000 		.4byte	.LVL5
 2788 01af E60D0000 		.4byte	0xde6
 2789 01b3 00       		.byte	0
 2790 01b4 0E       		.uleb128 0xe
 2791 01b5 63000000 		.4byte	.LASF28
 2792 01b9 01       		.byte	0x1
 2793 01ba D901     		.2byte	0x1d9
 2794 01bc 00000000 		.4byte	.LFB7
 2795 01c0 34000000 		.4byte	.LFE7-.LFB7
 2796 01c4 01       		.uleb128 0x1
 2797 01c5 9C       		.byte	0x9c
 2798 01c6 D9010000 		.4byte	0x1d9
 2799 01ca 11       		.uleb128 0x11
 2800 01cb 4E020000 		.4byte	.LASF30
 2801 01cf 01       		.byte	0x1
 2802 01d0 D901     		.2byte	0x1d9
 2803 01d2 83000000 		.4byte	0x83
 2804 01d6 01       		.uleb128 0x1
 2805 01d7 50       		.byte	0x50
 2806 01d8 00       		.byte	0
 2807 01d9 12       		.uleb128 0x12
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 112


 2808 01da 7D020000 		.4byte	.LASF35
 2809 01de 01       		.byte	0x1
 2810 01df FE01     		.2byte	0x1fe
 2811 01e1 83000000 		.4byte	0x83
 2812 01e5 00000000 		.4byte	.LFB8
 2813 01e9 1C000000 		.4byte	.LFE8-.LFB8
 2814 01ed 01       		.uleb128 0x1
 2815 01ee 9C       		.byte	0x9c
 2816 01ef 26020000 		.4byte	0x226
 2817 01f3 10       		.uleb128 0x10
 2818 01f4 9D010000 		.4byte	.LASF26
 2819 01f8 01       		.byte	0x1
 2820 01f9 0002     		.2byte	0x200
 2821 01fb 6B000000 		.4byte	0x6b
 2822 01ff 5D000000 		.4byte	.LLST3
 2823 0203 10       		.uleb128 0x10
 2824 0204 F4040000 		.4byte	.LASF31
 2825 0208 01       		.byte	0x1
 2826 0209 0102     		.2byte	0x201
 2827 020b 83000000 		.4byte	0x83
 2828 020f 70000000 		.4byte	.LLST4
 2829 0213 0C       		.uleb128 0xc
 2830 0214 06000000 		.4byte	.LVL8
 2831 0218 DB0D0000 		.4byte	0xddb
 2832 021c 0C       		.uleb128 0xc
 2833 021d 12000000 		.4byte	.LVL10
 2834 0221 E60D0000 		.4byte	0xde6
 2835 0225 00       		.byte	0
 2836 0226 0E       		.uleb128 0xe
 2837 0227 9B060000 		.4byte	.LASF32
 2838 022b 01       		.byte	0x1
 2839 022c 3502     		.2byte	0x235
 2840 022e 00000000 		.4byte	.LFB9
 2841 0232 24000000 		.4byte	.LFE9-.LFB9
 2842 0236 01       		.uleb128 0x1
 2843 0237 9C       		.byte	0x9c
 2844 0238 6F020000 		.4byte	0x26f
 2845 023c 0F       		.uleb128 0xf
 2846 023d 8C070000 		.4byte	.LASF33
 2847 0241 01       		.byte	0x1
 2848 0242 3502     		.2byte	0x235
 2849 0244 83000000 		.4byte	0x83
 2850 0248 8E000000 		.4byte	.LLST5
 2851 024c 10       		.uleb128 0x10
 2852 024d 9D010000 		.4byte	.LASF26
 2853 0251 01       		.byte	0x1
 2854 0252 3702     		.2byte	0x237
 2855 0254 6B000000 		.4byte	0x6b
 2856 0258 BA000000 		.4byte	.LLST6
 2857 025c 0C       		.uleb128 0xc
 2858 025d 08000000 		.4byte	.LVL13
 2859 0261 DB0D0000 		.4byte	0xddb
 2860 0265 0C       		.uleb128 0xc
 2861 0266 1E000000 		.4byte	.LVL15
 2862 026a E60D0000 		.4byte	0xde6
 2863 026e 00       		.byte	0
 2864 026f 0E       		.uleb128 0xe
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 113


 2865 0270 85060000 		.4byte	.LASF34
 2866 0274 01       		.byte	0x1
 2867 0275 D503     		.2byte	0x3d5
 2868 0277 00000000 		.4byte	.LFB11
 2869 027b 24000000 		.4byte	.LFE11-.LFB11
 2870 027f 01       		.uleb128 0x1
 2871 0280 9C       		.byte	0x9c
 2872 0281 B8020000 		.4byte	0x2b8
 2873 0285 0F       		.uleb128 0xf
 2874 0286 8C070000 		.4byte	.LASF33
 2875 028a 01       		.byte	0x1
 2876 028b D503     		.2byte	0x3d5
 2877 028d 83000000 		.4byte	0x83
 2878 0291 CD000000 		.4byte	.LLST7
 2879 0295 10       		.uleb128 0x10
 2880 0296 9D010000 		.4byte	.LASF26
 2881 029a 01       		.byte	0x1
 2882 029b D703     		.2byte	0x3d7
 2883 029d 6B000000 		.4byte	0x6b
 2884 02a1 F9000000 		.4byte	.LLST8
 2885 02a5 0C       		.uleb128 0xc
 2886 02a6 08000000 		.4byte	.LVL17
 2887 02aa DB0D0000 		.4byte	0xddb
 2888 02ae 0C       		.uleb128 0xc
 2889 02af 1E000000 		.4byte	.LVL19
 2890 02b3 E60D0000 		.4byte	0xde6
 2891 02b7 00       		.byte	0
 2892 02b8 12       		.uleb128 0x12
 2893 02b9 B2030000 		.4byte	.LASF36
 2894 02bd 01       		.byte	0x1
 2895 02be A008     		.2byte	0x8a0
 2896 02c0 83000000 		.4byte	0x83
 2897 02c4 00000000 		.4byte	.LFB12
 2898 02c8 14000000 		.4byte	.LFE12-.LFB12
 2899 02cc 01       		.uleb128 0x1
 2900 02cd 9C       		.byte	0x9c
 2901 02ce F1020000 		.4byte	0x2f1
 2902 02d2 0F       		.uleb128 0xf
 2903 02d3 27060000 		.4byte	.LASF37
 2904 02d7 01       		.byte	0x1
 2905 02d8 A008     		.2byte	0x8a0
 2906 02da 83000000 		.4byte	0x83
 2907 02de 0C010000 		.4byte	.LLST9
 2908 02e2 13       		.uleb128 0x13
 2909 02e3 99040000 		.4byte	.LASF38
 2910 02e7 01       		.byte	0x1
 2911 02e8 A208     		.2byte	0x8a2
 2912 02ea 83000000 		.4byte	0x83
 2913 02ee 01       		.uleb128 0x1
 2914 02ef 50       		.byte	0x50
 2915 02f0 00       		.byte	0
 2916 02f1 12       		.uleb128 0x12
 2917 02f2 8B000000 		.4byte	.LASF39
 2918 02f6 01       		.byte	0x1
 2919 02f7 B708     		.2byte	0x8b7
 2920 02f9 83000000 		.4byte	0x83
 2921 02fd 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 114


 2922 0301 10000000 		.4byte	.LFE13-.LFB13
 2923 0305 01       		.uleb128 0x1
 2924 0306 9C       		.byte	0x9c
 2925 0307 1A030000 		.4byte	0x31a
 2926 030b 13       		.uleb128 0x13
 2927 030c 16000000 		.4byte	.LASF40
 2928 0310 01       		.byte	0x1
 2929 0311 B908     		.2byte	0x8b9
 2930 0313 83000000 		.4byte	0x83
 2931 0317 01       		.uleb128 0x1
 2932 0318 50       		.byte	0x50
 2933 0319 00       		.byte	0
 2934 031a 0E       		.uleb128 0xe
 2935 031b C1000000 		.4byte	.LASF41
 2936 031f 01       		.byte	0x1
 2937 0320 CE08     		.2byte	0x8ce
 2938 0322 00000000 		.4byte	.LFB14
 2939 0326 0C000000 		.4byte	.LFE14-.LFB14
 2940 032a 01       		.uleb128 0x1
 2941 032b 9C       		.byte	0x9c
 2942 032c 3F030000 		.4byte	0x33f
 2943 0330 11       		.uleb128 0x11
 2944 0331 78020000 		.4byte	.LASF42
 2945 0335 01       		.byte	0x1
 2946 0336 CE08     		.2byte	0x8ce
 2947 0338 83000000 		.4byte	0x83
 2948 033c 01       		.uleb128 0x1
 2949 033d 50       		.byte	0x50
 2950 033e 00       		.byte	0
 2951 033f 0E       		.uleb128 0xe
 2952 0340 F5050000 		.4byte	.LASF43
 2953 0344 01       		.byte	0x1
 2954 0345 8509     		.2byte	0x985
 2955 0347 00000000 		.4byte	.LFB21
 2956 034b 14000000 		.4byte	.LFE21-.LFB21
 2957 034f 01       		.uleb128 0x1
 2958 0350 9C       		.byte	0x9c
 2959 0351 66030000 		.4byte	0x366
 2960 0355 0F       		.uleb128 0xf
 2961 0356 14040000 		.4byte	.LASF44
 2962 035a 01       		.byte	0x1
 2963 035b 8509     		.2byte	0x985
 2964 035d 6B000000 		.4byte	0x6b
 2965 0361 2A010000 		.4byte	.LLST10
 2966 0365 00       		.byte	0
 2967 0366 12       		.uleb128 0x12
 2968 0367 07010000 		.4byte	.LASF45
 2969 036b 01       		.byte	0x1
 2970 036c 9709     		.2byte	0x997
 2971 036e 6B000000 		.4byte	0x6b
 2972 0372 00000000 		.4byte	.LFB22
 2973 0376 18000000 		.4byte	.LFE22-.LFB22
 2974 037a 01       		.uleb128 0x1
 2975 037b 9C       		.byte	0x9c
 2976 037c 91030000 		.4byte	0x391
 2977 0380 0F       		.uleb128 0xf
 2978 0381 14040000 		.4byte	.LASF44
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 115


 2979 0385 01       		.byte	0x1
 2980 0386 9709     		.2byte	0x997
 2981 0388 6B000000 		.4byte	0x6b
 2982 038c 4B010000 		.4byte	.LLST11
 2983 0390 00       		.byte	0
 2984 0391 0E       		.uleb128 0xe
 2985 0392 F7010000 		.4byte	.LASF46
 2986 0396 01       		.byte	0x1
 2987 0397 A709     		.2byte	0x9a7
 2988 0399 00000000 		.4byte	.LFB23
 2989 039d 14000000 		.4byte	.LFE23-.LFB23
 2990 03a1 01       		.uleb128 0x1
 2991 03a2 9C       		.byte	0x9c
 2992 03a3 B8030000 		.4byte	0x3b8
 2993 03a7 0F       		.uleb128 0xf
 2994 03a8 14040000 		.4byte	.LASF44
 2995 03ac 01       		.byte	0x1
 2996 03ad A709     		.2byte	0x9a7
 2997 03af 6B000000 		.4byte	0x6b
 2998 03b3 6C010000 		.4byte	.LLST12
 2999 03b7 00       		.byte	0
 3000 03b8 0E       		.uleb128 0xe
 3001 03b9 9A030000 		.4byte	.LASF47
 3002 03bd 01       		.byte	0x1
 3003 03be B509     		.2byte	0x9b5
 3004 03c0 00000000 		.4byte	.LFB24
 3005 03c4 14000000 		.4byte	.LFE24-.LFB24
 3006 03c8 01       		.uleb128 0x1
 3007 03c9 9C       		.byte	0x9c
 3008 03ca DF030000 		.4byte	0x3df
 3009 03ce 0F       		.uleb128 0xf
 3010 03cf 14040000 		.4byte	.LASF44
 3011 03d3 01       		.byte	0x1
 3012 03d4 B509     		.2byte	0x9b5
 3013 03d6 6B000000 		.4byte	0x6b
 3014 03da 8D010000 		.4byte	.LLST13
 3015 03de 00       		.byte	0
 3016 03df 0E       		.uleb128 0xe
 3017 03e0 DA040000 		.4byte	.LASF48
 3018 03e4 01       		.byte	0x1
 3019 03e5 C409     		.2byte	0x9c4
 3020 03e7 00000000 		.4byte	.LFB25
 3021 03eb 14000000 		.4byte	.LFE25-.LFB25
 3022 03ef 01       		.uleb128 0x1
 3023 03f0 9C       		.byte	0x9c
 3024 03f1 06040000 		.4byte	0x406
 3025 03f5 0F       		.uleb128 0xf
 3026 03f6 14040000 		.4byte	.LASF44
 3027 03fa 01       		.byte	0x1
 3028 03fb C409     		.2byte	0x9c4
 3029 03fd 6B000000 		.4byte	0x6b
 3030 0401 AE010000 		.4byte	.LLST14
 3031 0405 00       		.byte	0
 3032 0406 0E       		.uleb128 0xe
 3033 0407 B9050000 		.4byte	.LASF49
 3034 040b 01       		.byte	0x1
 3035 040c D309     		.2byte	0x9d3
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 116


 3036 040e 00000000 		.4byte	.LFB26
 3037 0412 04000000 		.4byte	.LFE26-.LFB26
 3038 0416 01       		.uleb128 0x1
 3039 0417 9C       		.byte	0x9c
 3040 0418 2B040000 		.4byte	0x42b
 3041 041c 11       		.uleb128 0x11
 3042 041d 27060000 		.4byte	.LASF37
 3043 0421 01       		.byte	0x1
 3044 0422 D309     		.2byte	0x9d3
 3045 0424 6B000000 		.4byte	0x6b
 3046 0428 01       		.uleb128 0x1
 3047 0429 50       		.byte	0x50
 3048 042a 00       		.byte	0
 3049 042b 12       		.uleb128 0x12
 3050 042c 58040000 		.4byte	.LASF50
 3051 0430 01       		.byte	0x1
 3052 0431 E708     		.2byte	0x8e7
 3053 0433 DE000000 		.4byte	0xde
 3054 0437 00000000 		.4byte	.LFB15
 3055 043b 20000000 		.4byte	.LFE15-.LFB15
 3056 043f 01       		.uleb128 0x1
 3057 0440 9C       		.byte	0x9c
 3058 0441 93040000 		.4byte	0x493
 3059 0445 0F       		.uleb128 0xf
 3060 0446 14040000 		.4byte	.LASF44
 3061 044a 01       		.byte	0x1
 3062 044b E708     		.2byte	0x8e7
 3063 044d 6B000000 		.4byte	0x6b
 3064 0451 CF010000 		.4byte	.LLST15
 3065 0455 0F       		.uleb128 0xf
 3066 0456 EC040000 		.4byte	.LASF51
 3067 045a 01       		.byte	0x1
 3068 045b E708     		.2byte	0x8e7
 3069 045d DE000000 		.4byte	0xde
 3070 0461 F0010000 		.4byte	.LLST16
 3071 0465 13       		.uleb128 0x13
 3072 0466 37070000 		.4byte	.LASF52
 3073 046a 01       		.byte	0x1
 3074 046b E908     		.2byte	0x8e9
 3075 046d DE000000 		.4byte	0xde
 3076 0471 01       		.uleb128 0x1
 3077 0472 50       		.byte	0x50
 3078 0473 14       		.uleb128 0x14
 3079 0474 00000000 		.4byte	.LASF53
 3080 0478 01       		.byte	0x1
 3081 0479 EA08     		.2byte	0x8ea
 3082 047b 93040000 		.4byte	0x493
 3083 047f 00000020 		.4byte	0x20000000
 3084 0483 15       		.uleb128 0x15
 3085 0484 10000000 		.4byte	.LVL40
 3086 0488 06040000 		.4byte	0x406
 3087 048c 16       		.uleb128 0x16
 3088 048d 01       		.uleb128 0x1
 3089 048e 50       		.byte	0x50
 3090 048f 01       		.uleb128 0x1
 3091 0490 30       		.byte	0x30
 3092 0491 00       		.byte	0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 117


 3093 0492 00       		.byte	0
 3094 0493 06       		.uleb128 0x6
 3095 0494 04       		.byte	0x4
 3096 0495 DE000000 		.4byte	0xde
 3097 0499 12       		.uleb128 0x12
 3098 049a 01060000 		.4byte	.LASF54
 3099 049e 01       		.byte	0x1
 3100 049f 0909     		.2byte	0x909
 3101 04a1 DE000000 		.4byte	0xde
 3102 04a5 00000000 		.4byte	.LFB16
 3103 04a9 1C000000 		.4byte	.LFE16-.LFB16
 3104 04ad 01       		.uleb128 0x1
 3105 04ae 9C       		.byte	0x9c
 3106 04af E3040000 		.4byte	0x4e3
 3107 04b3 0F       		.uleb128 0xf
 3108 04b4 14040000 		.4byte	.LASF44
 3109 04b8 01       		.byte	0x1
 3110 04b9 0909     		.2byte	0x909
 3111 04bb 6B000000 		.4byte	0x6b
 3112 04bf 1C020000 		.4byte	.LLST17
 3113 04c3 14       		.uleb128 0x14
 3114 04c4 00000000 		.4byte	.LASF53
 3115 04c8 01       		.byte	0x1
 3116 04c9 0B09     		.2byte	0x90b
 3117 04cb 93040000 		.4byte	0x493
 3118 04cf 00000020 		.4byte	0x20000000
 3119 04d3 15       		.uleb128 0x15
 3120 04d4 0E000000 		.4byte	.LVL46
 3121 04d8 06040000 		.4byte	0x406
 3122 04dc 16       		.uleb128 0x16
 3123 04dd 01       		.uleb128 0x1
 3124 04de 50       		.byte	0x50
 3125 04df 01       		.uleb128 0x1
 3126 04e0 30       		.byte	0x30
 3127 04e1 00       		.byte	0
 3128 04e2 00       		.byte	0
 3129 04e3 12       		.uleb128 0x12
 3130 04e4 69020000 		.4byte	.LASF55
 3131 04e8 01       		.byte	0x1
 3132 04e9 1F09     		.2byte	0x91f
 3133 04eb DE000000 		.4byte	0xde
 3134 04ef 00000000 		.4byte	.LFB17
 3135 04f3 24000000 		.4byte	.LFE17-.LFB17
 3136 04f7 01       		.uleb128 0x1
 3137 04f8 9C       		.byte	0x9c
 3138 04f9 4B050000 		.4byte	0x54b
 3139 04fd 0F       		.uleb128 0xf
 3140 04fe 14040000 		.4byte	.LASF44
 3141 0502 01       		.byte	0x1
 3142 0503 1F09     		.2byte	0x91f
 3143 0505 6B000000 		.4byte	0x6b
 3144 0509 3D020000 		.4byte	.LLST18
 3145 050d 0F       		.uleb128 0xf
 3146 050e EC040000 		.4byte	.LASF51
 3147 0512 01       		.byte	0x1
 3148 0513 1F09     		.2byte	0x91f
 3149 0515 DE000000 		.4byte	0xde
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 118


 3150 0519 5E020000 		.4byte	.LLST19
 3151 051d 13       		.uleb128 0x13
 3152 051e 37070000 		.4byte	.LASF52
 3153 0522 01       		.byte	0x1
 3154 0523 2109     		.2byte	0x921
 3155 0525 DE000000 		.4byte	0xde
 3156 0529 01       		.uleb128 0x1
 3157 052a 50       		.byte	0x50
 3158 052b 14       		.uleb128 0x14
 3159 052c 00000000 		.4byte	.LASF53
 3160 0530 01       		.byte	0x1
 3161 0531 2209     		.2byte	0x922
 3162 0533 93040000 		.4byte	0x493
 3163 0537 00000020 		.4byte	0x20000000
 3164 053b 15       		.uleb128 0x15
 3165 053c 10000000 		.4byte	.LVL50
 3166 0540 06040000 		.4byte	0x406
 3167 0544 16       		.uleb128 0x16
 3168 0545 01       		.uleb128 0x1
 3169 0546 50       		.byte	0x50
 3170 0547 01       		.uleb128 0x1
 3171 0548 30       		.byte	0x30
 3172 0549 00       		.byte	0
 3173 054a 00       		.byte	0
 3174 054b 12       		.uleb128 0x12
 3175 054c 6E050000 		.4byte	.LASF56
 3176 0550 01       		.byte	0x1
 3177 0551 3B09     		.2byte	0x93b
 3178 0553 DE000000 		.4byte	0xde
 3179 0557 00000000 		.4byte	.LFB18
 3180 055b 20000000 		.4byte	.LFE18-.LFB18
 3181 055f 01       		.uleb128 0x1
 3182 0560 9C       		.byte	0x9c
 3183 0561 95050000 		.4byte	0x595
 3184 0565 0F       		.uleb128 0xf
 3185 0566 14040000 		.4byte	.LASF44
 3186 056a 01       		.byte	0x1
 3187 056b 3B09     		.2byte	0x93b
 3188 056d 6B000000 		.4byte	0x6b
 3189 0571 8A020000 		.4byte	.LLST20
 3190 0575 14       		.uleb128 0x14
 3191 0576 00000000 		.4byte	.LASF53
 3192 057a 01       		.byte	0x1
 3193 057b 3D09     		.2byte	0x93d
 3194 057d 93040000 		.4byte	0x493
 3195 0581 00000020 		.4byte	0x20000000
 3196 0585 15       		.uleb128 0x15
 3197 0586 0E000000 		.4byte	.LVL56
 3198 058a 06040000 		.4byte	0x406
 3199 058e 16       		.uleb128 0x16
 3200 058f 01       		.uleb128 0x1
 3201 0590 50       		.byte	0x50
 3202 0591 01       		.uleb128 0x1
 3203 0592 30       		.byte	0x30
 3204 0593 00       		.byte	0
 3205 0594 00       		.byte	0
 3206 0595 0E       		.uleb128 0xe
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 119


 3207 0596 2A050000 		.4byte	.LASF57
 3208 059a 01       		.byte	0x1
 3209 059b 4E09     		.2byte	0x94e
 3210 059d 00000000 		.4byte	.LFB19
 3211 05a1 4C000000 		.4byte	.LFE19-.LFB19
 3212 05a5 01       		.uleb128 0x1
 3213 05a6 9C       		.byte	0x9c
 3214 05a7 34060000 		.4byte	0x634
 3215 05ab 0F       		.uleb128 0xf
 3216 05ac 14040000 		.4byte	.LASF44
 3217 05b0 01       		.byte	0x1
 3218 05b1 4E09     		.2byte	0x94e
 3219 05b3 6B000000 		.4byte	0x6b
 3220 05b7 AB020000 		.4byte	.LLST21
 3221 05bb 0F       		.uleb128 0xf
 3222 05bc 1B040000 		.4byte	.LASF58
 3223 05c0 01       		.byte	0x1
 3224 05c1 4E09     		.2byte	0x94e
 3225 05c3 6B000000 		.4byte	0x6b
 3226 05c7 CC020000 		.4byte	.LLST22
 3227 05cb 10       		.uleb128 0x10
 3228 05cc 9D010000 		.4byte	.LASF26
 3229 05d0 01       		.byte	0x1
 3230 05d1 5009     		.2byte	0x950
 3231 05d3 6B000000 		.4byte	0x6b
 3232 05d7 ED020000 		.4byte	.LLST23
 3233 05db 10       		.uleb128 0x10
 3234 05dc 5C020000 		.4byte	.LASF59
 3235 05e0 01       		.byte	0x1
 3236 05e1 5109     		.2byte	0x951
 3237 05e3 83000000 		.4byte	0x83
 3238 05e7 00030000 		.4byte	.LLST24
 3239 05eb 10       		.uleb128 0x10
 3240 05ec F2020000 		.4byte	.LASF60
 3241 05f0 01       		.byte	0x1
 3242 05f1 5209     		.2byte	0x952
 3243 05f3 83000000 		.4byte	0x83
 3244 05f7 13030000 		.4byte	.LLST25
 3245 05fb 17       		.uleb128 0x17
 3246 05fc 10000000 		.4byte	.LVL59
 3247 0600 06040000 		.4byte	0x406
 3248 0604 0E060000 		.4byte	0x60e
 3249 0608 16       		.uleb128 0x16
 3250 0609 01       		.uleb128 0x1
 3251 060a 50       		.byte	0x50
 3252 060b 01       		.uleb128 0x1
 3253 060c 30       		.byte	0x30
 3254 060d 00       		.byte	0
 3255 060e 17       		.uleb128 0x17
 3256 060f 1A000000 		.4byte	.LVL60
 3257 0613 06040000 		.4byte	0x406
 3258 0617 21060000 		.4byte	0x621
 3259 061b 16       		.uleb128 0x16
 3260 061c 01       		.uleb128 0x1
 3261 061d 50       		.byte	0x50
 3262 061e 01       		.uleb128 0x1
 3263 061f 30       		.byte	0x30
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 120


 3264 0620 00       		.byte	0
 3265 0621 0C       		.uleb128 0xc
 3266 0622 26000000 		.4byte	.LVL62
 3267 0626 DB0D0000 		.4byte	0xddb
 3268 062a 0C       		.uleb128 0xc
 3269 062b 44000000 		.4byte	.LVL67
 3270 062f E60D0000 		.4byte	0xde6
 3271 0633 00       		.byte	0
 3272 0634 12       		.uleb128 0x12
 3273 0635 AE020000 		.4byte	.LASF61
 3274 0639 01       		.byte	0x1
 3275 063a 7009     		.2byte	0x970
 3276 063c 6B000000 		.4byte	0x6b
 3277 0640 00000000 		.4byte	.LFB20
 3278 0644 2C000000 		.4byte	.LFE20-.LFB20
 3279 0648 01       		.uleb128 0x1
 3280 0649 9C       		.byte	0x9c
 3281 064a 7E060000 		.4byte	0x67e
 3282 064e 0F       		.uleb128 0xf
 3283 064f 14040000 		.4byte	.LASF44
 3284 0653 01       		.byte	0x1
 3285 0654 7009     		.2byte	0x970
 3286 0656 6B000000 		.4byte	0x6b
 3287 065a 31030000 		.4byte	.LLST26
 3288 065e 10       		.uleb128 0x10
 3289 065f 1B040000 		.4byte	.LASF58
 3290 0663 01       		.byte	0x1
 3291 0664 7209     		.2byte	0x972
 3292 0666 6B000000 		.4byte	0x6b
 3293 066a 52030000 		.4byte	.LLST27
 3294 066e 15       		.uleb128 0x15
 3295 066f 0E000000 		.4byte	.LVL71
 3296 0673 06040000 		.4byte	0x406
 3297 0677 16       		.uleb128 0x16
 3298 0678 01       		.uleb128 0x1
 3299 0679 50       		.byte	0x50
 3300 067a 01       		.uleb128 0x1
 3301 067b 30       		.byte	0x30
 3302 067c 00       		.byte	0
 3303 067d 00       		.byte	0
 3304 067e 0A       		.uleb128 0xa
 3305 067f DE000000 		.4byte	.LASF62
 3306 0683 01       		.byte	0x1
 3307 0684 EB09     		.2byte	0x9eb
 3308 0686 00000000 		.4byte	.LFB27
 3309 068a 18000000 		.4byte	.LFE27-.LFB27
 3310 068e 01       		.uleb128 0x1
 3311 068f 9C       		.byte	0x9c
 3312 0690 0E       		.uleb128 0xe
 3313 0691 FD060000 		.4byte	.LASF63
 3314 0695 01       		.byte	0x1
 3315 0696 FF09     		.2byte	0x9ff
 3316 0698 00000000 		.4byte	.LFB28
 3317 069c 30000000 		.4byte	.LFE28-.LFB28
 3318 06a0 01       		.uleb128 0x1
 3319 06a1 9C       		.byte	0x9c
 3320 06a2 C9060000 		.4byte	0x6c9
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 121


 3321 06a6 0F       		.uleb128 0xf
 3322 06a7 7D050000 		.4byte	.LASF64
 3323 06ab 01       		.byte	0x1
 3324 06ac FF09     		.2byte	0x9ff
 3325 06ae 83000000 		.4byte	0x83
 3326 06b2 65030000 		.4byte	.LLST28
 3327 06b6 0C       		.uleb128 0xc
 3328 06b7 0E000000 		.4byte	.LVL76
 3329 06bb F70D0000 		.4byte	0xdf7
 3330 06bf 0C       		.uleb128 0xc
 3331 06c0 26000000 		.4byte	.LVL78
 3332 06c4 F70D0000 		.4byte	0xdf7
 3333 06c8 00       		.byte	0
 3334 06c9 0B       		.uleb128 0xb
 3335 06ca 95020000 		.4byte	.LASF65
 3336 06ce 01       		.byte	0x1
 3337 06cf AF       		.byte	0xaf
 3338 06d0 00000000 		.4byte	.LFB3
 3339 06d4 CC000000 		.4byte	.LFE3-.LFB3
 3340 06d8 01       		.uleb128 0x1
 3341 06d9 9C       		.byte	0x9c
 3342 06da 72070000 		.4byte	0x772
 3343 06de 18       		.uleb128 0x18
 3344 06df 8C010000 		.4byte	.LASF66
 3345 06e3 01       		.byte	0x1
 3346 06e4 B5       		.byte	0xb5
 3347 06e5 83000000 		.4byte	0x83
 3348 06e9 83030000 		.4byte	.LLST29
 3349 06ed 18       		.uleb128 0x18
 3350 06ee 9D010000 		.4byte	.LASF26
 3351 06f2 01       		.byte	0x1
 3352 06f3 B6       		.byte	0xb6
 3353 06f4 6B000000 		.4byte	0x6b
 3354 06f8 AE030000 		.4byte	.LLST30
 3355 06fc 18       		.uleb128 0x18
 3356 06fd D9030000 		.4byte	.LASF67
 3357 0701 01       		.byte	0x1
 3358 0702 B7       		.byte	0xb7
 3359 0703 83000000 		.4byte	0x83
 3360 0707 C1030000 		.4byte	.LLST31
 3361 070b 18       		.uleb128 0x18
 3362 070c AA030000 		.4byte	.LASF68
 3363 0710 01       		.byte	0x1
 3364 0711 B8       		.byte	0xb8
 3365 0712 83000000 		.4byte	0x83
 3366 0716 17040000 		.4byte	.LLST32
 3367 071a 19       		.uleb128 0x19
 3368 071b F1060000 		.4byte	.LASF69
 3369 071f 01       		.byte	0x1
 3370 0720 B9       		.byte	0xb9
 3371 0721 D9000000 		.4byte	0xd9
 3372 0725 02       		.uleb128 0x2
 3373 0726 91       		.byte	0x91
 3374 0727 6C       		.sleb128 -20
 3375 0728 0C       		.uleb128 0xc
 3376 0729 08000000 		.4byte	.LVL81
 3377 072d 080E0000 		.4byte	0xe08
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 122


 3378 0731 0C       		.uleb128 0xc
 3379 0732 10000000 		.4byte	.LVL82
 3380 0736 DB0D0000 		.4byte	0xddb
 3381 073a 17       		.uleb128 0x17
 3382 073b 82000000 		.4byte	.LVL98
 3383 073f 130E0000 		.4byte	0xe13
 3384 0743 4E070000 		.4byte	0x74e
 3385 0747 16       		.uleb128 0x16
 3386 0748 01       		.uleb128 0x1
 3387 0749 50       		.byte	0x50
 3388 074a 02       		.uleb128 0x2
 3389 074b 08       		.byte	0x8
 3390 074c 30       		.byte	0x30
 3391 074d 00       		.byte	0
 3392 074e 17       		.uleb128 0x17
 3393 074f 94000000 		.4byte	.LVL99
 3394 0753 90060000 		.4byte	0x690
 3395 0757 61070000 		.4byte	0x761
 3396 075b 16       		.uleb128 0x16
 3397 075c 01       		.uleb128 0x1
 3398 075d 50       		.byte	0x50
 3399 075e 01       		.uleb128 0x1
 3400 075f 44       		.byte	0x44
 3401 0760 00       		.byte	0
 3402 0761 15       		.uleb128 0x15
 3403 0762 9E000000 		.4byte	.LVL100
 3404 0766 E60D0000 		.4byte	0xde6
 3405 076a 16       		.uleb128 0x16
 3406 076b 01       		.uleb128 0x1
 3407 076c 50       		.byte	0x50
 3408 076d 02       		.uleb128 0x2
 3409 076e 74       		.byte	0x74
 3410 076f 00       		.sleb128 0
 3411 0770 00       		.byte	0
 3412 0771 00       		.byte	0
 3413 0772 0E       		.uleb128 0xe
 3414 0773 24040000 		.4byte	.LASF70
 3415 0777 01       		.byte	0x1
 3416 0778 3C03     		.2byte	0x33c
 3417 077a 00000000 		.4byte	.LFB10
 3418 077e D8000000 		.4byte	.LFE10-.LFB10
 3419 0782 01       		.uleb128 0x1
 3420 0783 9C       		.byte	0x9c
 3421 0784 3A080000 		.4byte	0x83a
 3422 0788 0F       		.uleb128 0xf
 3423 0789 8C010000 		.4byte	.LASF66
 3424 078d 01       		.byte	0x1
 3425 078e 3C03     		.2byte	0x33c
 3426 0790 83000000 		.4byte	0x83
 3427 0794 36040000 		.4byte	.LLST33
 3428 0798 10       		.uleb128 0x10
 3429 0799 9D010000 		.4byte	.LASF26
 3430 079d 01       		.byte	0x1
 3431 079e 3E03     		.2byte	0x33e
 3432 07a0 6B000000 		.4byte	0x6b
 3433 07a4 86040000 		.4byte	.LLST34
 3434 07a8 10       		.uleb128 0x10
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 123


 3435 07a9 DA060000 		.4byte	.LASF71
 3436 07ad 01       		.byte	0x1
 3437 07ae 3F03     		.2byte	0x33f
 3438 07b0 6B000000 		.4byte	0x6b
 3439 07b4 9A040000 		.4byte	.LLST35
 3440 07b8 10       		.uleb128 0x10
 3441 07b9 E6010000 		.4byte	.LASF72
 3442 07bd 01       		.byte	0x1
 3443 07be 4203     		.2byte	0x342
 3444 07c0 83000000 		.4byte	0x83
 3445 07c4 BE040000 		.4byte	.LLST36
 3446 07c8 0C       		.uleb128 0xc
 3447 07c9 26000000 		.4byte	.LVL103
 3448 07cd DB0D0000 		.4byte	0xddb
 3449 07d1 0C       		.uleb128 0xc
 3450 07d2 2C000000 		.4byte	.LVL105
 3451 07d6 45010000 		.4byte	0x145
 3452 07da 0C       		.uleb128 0xc
 3453 07db 34000000 		.4byte	.LVL107
 3454 07df 14010000 		.4byte	0x114
 3455 07e3 17       		.uleb128 0x17
 3456 07e4 74000000 		.4byte	.LVL114
 3457 07e8 F70D0000 		.4byte	0xdf7
 3458 07ec F7070000 		.4byte	0x7f7
 3459 07f0 16       		.uleb128 0x16
 3460 07f1 01       		.uleb128 0x1
 3461 07f2 50       		.byte	0x50
 3462 07f3 02       		.uleb128 0x2
 3463 07f4 08       		.byte	0x8
 3464 07f5 32       		.byte	0x32
 3465 07f6 00       		.byte	0
 3466 07f7 17       		.uleb128 0x17
 3467 07f8 94000000 		.4byte	.LVL115
 3468 07fc F70D0000 		.4byte	0xdf7
 3469 0800 0B080000 		.4byte	0x80b
 3470 0804 16       		.uleb128 0x16
 3471 0805 01       		.uleb128 0x1
 3472 0806 50       		.byte	0x50
 3473 0807 02       		.uleb128 0x2
 3474 0808 08       		.byte	0x8
 3475 0809 32       		.byte	0x32
 3476 080a 00       		.byte	0
 3477 080b 0C       		.uleb128 0xc
 3478 080c AE000000 		.4byte	.LVL117
 3479 0810 C9060000 		.4byte	0x6c9
 3480 0814 17       		.uleb128 0x17
 3481 0815 B4000000 		.4byte	.LVL118
 3482 0819 E60D0000 		.4byte	0xde6
 3483 081d 2A080000 		.4byte	0x82a
 3484 0821 16       		.uleb128 0x16
 3485 0822 01       		.uleb128 0x1
 3486 0823 50       		.byte	0x50
 3487 0824 04       		.uleb128 0x4
 3488 0825 91       		.byte	0x91
 3489 0826 64       		.sleb128 -28
 3490 0827 94       		.byte	0x94
 3491 0828 01       		.byte	0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 124


 3492 0829 00       		.byte	0
 3493 082a 15       		.uleb128 0x15
 3494 082b BC000000 		.4byte	.LVL121
 3495 082f 06040000 		.4byte	0x406
 3496 0833 16       		.uleb128 0x16
 3497 0834 01       		.uleb128 0x1
 3498 0835 50       		.byte	0x50
 3499 0836 01       		.uleb128 0x1
 3500 0837 30       		.byte	0x30
 3501 0838 00       		.byte	0
 3502 0839 00       		.byte	0
 3503 083a 0E       		.uleb128 0xe
 3504 083b 1D060000 		.4byte	.LASF73
 3505 083f 01       		.byte	0x1
 3506 0840 160A     		.2byte	0xa16
 3507 0842 00000000 		.4byte	.LFB29
 3508 0846 14000000 		.4byte	.LFE29-.LFB29
 3509 084a 01       		.uleb128 0x1
 3510 084b 9C       		.byte	0x9c
 3511 084c 6A080000 		.4byte	0x86a
 3512 0850 0F       		.uleb128 0xf
 3513 0851 0D080000 		.4byte	.LASF74
 3514 0855 01       		.byte	0x1
 3515 0856 160A     		.2byte	0xa16
 3516 0858 77000000 		.4byte	0x77
 3517 085c 01050000 		.4byte	.LLST37
 3518 0860 0C       		.uleb128 0xc
 3519 0861 0C000000 		.4byte	.LVL124
 3520 0865 F70D0000 		.4byte	0xdf7
 3521 0869 00       		.byte	0
 3522 086a 1A       		.uleb128 0x1a
 3523 086b 91010000 		.4byte	.LASF75
 3524 086f 01       		.byte	0x1
 3525 0870 240A     		.2byte	0xa24
 3526 0872 00000000 		.4byte	.LFB30
 3527 0876 4C000000 		.4byte	.LFE30-.LFB30
 3528 087a 01       		.uleb128 0x1
 3529 087b 9C       		.byte	0x9c
 3530 087c 91080000 		.4byte	0x891
 3531 0880 0F       		.uleb128 0xf
 3532 0881 8C010000 		.4byte	.LASF66
 3533 0885 01       		.byte	0x1
 3534 0886 240A     		.2byte	0xa24
 3535 0888 83000000 		.4byte	0x83
 3536 088c 22050000 		.4byte	.LLST38
 3537 0890 00       		.byte	0
 3538 0891 0A       		.uleb128 0xa
 3539 0892 7E070000 		.4byte	.LASF76
 3540 0896 01       		.byte	0x1
 3541 0897 910A     		.2byte	0xa91
 3542 0899 00000000 		.4byte	.LFB34
 3543 089d 10000000 		.4byte	.LFE34-.LFB34
 3544 08a1 01       		.uleb128 0x1
 3545 08a2 9C       		.byte	0x9c
 3546 08a3 0A       		.uleb128 0xa
 3547 08a4 EE000000 		.4byte	.LASF77
 3548 08a8 01       		.byte	0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 125


 3549 08a9 A10A     		.2byte	0xaa1
 3550 08ab 00000000 		.4byte	.LFB35
 3551 08af 10000000 		.4byte	.LFE35-.LFB35
 3552 08b3 01       		.uleb128 0x1
 3553 08b4 9C       		.byte	0x9c
 3554 08b5 0E       		.uleb128 0xe
 3555 08b6 75060000 		.4byte	.LASF78
 3556 08ba 01       		.byte	0x1
 3557 08bb 800A     		.2byte	0xa80
 3558 08bd 00000000 		.4byte	.LFB33
 3559 08c1 18000000 		.4byte	.LFE33-.LFB33
 3560 08c5 01       		.uleb128 0x1
 3561 08c6 9C       		.byte	0x9c
 3562 08c7 D5080000 		.4byte	0x8d5
 3563 08cb 0C       		.uleb128 0xc
 3564 08cc 06000000 		.4byte	.LVL129
 3565 08d0 A3080000 		.4byte	0x8a3
 3566 08d4 00       		.byte	0
 3567 08d5 0A       		.uleb128 0xa
 3568 08d6 1D070000 		.4byte	.LASF79
 3569 08da 01       		.byte	0x1
 3570 08db B10A     		.2byte	0xab1
 3571 08dd 00000000 		.4byte	.LFB36
 3572 08e1 10000000 		.4byte	.LFE36-.LFB36
 3573 08e5 01       		.uleb128 0x1
 3574 08e6 9C       		.byte	0x9c
 3575 08e7 0E       		.uleb128 0xe
 3576 08e8 21080000 		.4byte	.LASF80
 3577 08ec 01       		.byte	0x1
 3578 08ed C20A     		.2byte	0xac2
 3579 08ef 00000000 		.4byte	.LFB37
 3580 08f3 10000000 		.4byte	.LFE37-.LFB37
 3581 08f7 01       		.uleb128 0x1
 3582 08f8 9C       		.byte	0x9c
 3583 08f9 0E090000 		.4byte	0x90e
 3584 08fd 0F       		.uleb128 0xf
 3585 08fe F2020000 		.4byte	.LASF60
 3586 0902 01       		.byte	0x1
 3587 0903 C20A     		.2byte	0xac2
 3588 0905 83000000 		.4byte	0x83
 3589 0909 43050000 		.4byte	.LLST39
 3590 090d 00       		.byte	0
 3591 090e 0D       		.uleb128 0xd
 3592 090f B2010000 		.4byte	.LASF82
 3593 0913 01       		.byte	0x1
 3594 0914 D20A     		.2byte	0xad2
 3595 0916 83000000 		.4byte	0x83
 3596 091a 00000000 		.4byte	.LFB38
 3597 091e 10000000 		.4byte	.LFE38-.LFB38
 3598 0922 01       		.uleb128 0x1
 3599 0923 9C       		.byte	0x9c
 3600 0924 0D       		.uleb128 0xd
 3601 0925 0A050000 		.4byte	.LASF83
 3602 0929 01       		.byte	0x1
 3603 092a E20A     		.2byte	0xae2
 3604 092c 83000000 		.4byte	0x83
 3605 0930 00000000 		.4byte	.LFB39
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 126


 3606 0934 10000000 		.4byte	.LFE39-.LFB39
 3607 0938 01       		.uleb128 0x1
 3608 0939 9C       		.byte	0x9c
 3609 093a 0E       		.uleb128 0xe
 3610 093b F7030000 		.4byte	.LASF84
 3611 093f 01       		.byte	0x1
 3612 0940 020B     		.2byte	0xb02
 3613 0942 00000000 		.4byte	.LFB40
 3614 0946 20000000 		.4byte	.LFE40-.LFB40
 3615 094a 01       		.uleb128 0x1
 3616 094b 9C       		.byte	0x9c
 3617 094c 5F090000 		.4byte	0x95f
 3618 0950 11       		.uleb128 0x11
 3619 0951 F8020000 		.4byte	.LASF85
 3620 0955 01       		.byte	0x1
 3621 0956 020B     		.2byte	0xb02
 3622 0958 83000000 		.4byte	0x83
 3623 095c 01       		.uleb128 0x1
 3624 095d 50       		.byte	0x50
 3625 095e 00       		.byte	0
 3626 095f 0D       		.uleb128 0xd
 3627 0960 05070000 		.4byte	.LASF86
 3628 0964 01       		.byte	0x1
 3629 0965 1B0B     		.2byte	0xb1b
 3630 0967 83000000 		.4byte	0x83
 3631 096b 00000000 		.4byte	.LFB41
 3632 096f 10000000 		.4byte	.LFE41-.LFB41
 3633 0973 01       		.uleb128 0x1
 3634 0974 9C       		.byte	0x9c
 3635 0975 0D       		.uleb128 0xd
 3636 0976 12030000 		.4byte	.LASF87
 3637 097a 01       		.byte	0x1
 3638 097b 320B     		.2byte	0xb32
 3639 097d 83000000 		.4byte	0x83
 3640 0981 00000000 		.4byte	.LFB42
 3641 0985 10000000 		.4byte	.LFE42-.LFB42
 3642 0989 01       		.uleb128 0x1
 3643 098a 9C       		.byte	0x9c
 3644 098b 1B       		.uleb128 0x1b
 3645 098c 34080000 		.4byte	.LASF131
 3646 0990 01       		.byte	0x1
 3647 0991 870B     		.2byte	0xb87
 3648 0993 00000000 		.4byte	.LFB46
 3649 0997 28000000 		.4byte	.LFE46-.LFB46
 3650 099b 01       		.uleb128 0x1
 3651 099c 9C       		.byte	0x9c
 3652 099d B9090000 		.4byte	0x9b9
 3653 09a1 1C       		.uleb128 0x1c
 3654 09a2 6900     		.ascii	"i\000"
 3655 09a4 01       		.byte	0x1
 3656 09a5 890B     		.2byte	0xb89
 3657 09a7 83000000 		.4byte	0x83
 3658 09ab 64050000 		.4byte	.LLST40
 3659 09af 0C       		.uleb128 0xc
 3660 09b0 06000000 		.4byte	.LVL133
 3661 09b4 75090000 		.4byte	0x975
 3662 09b8 00       		.byte	0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 127


 3663 09b9 0A       		.uleb128 0xa
 3664 09ba 4B030000 		.4byte	.LASF88
 3665 09be 01       		.byte	0x1
 3666 09bf 3F0B     		.2byte	0xb3f
 3667 09c1 00000000 		.4byte	.LFB43
 3668 09c5 0C000000 		.4byte	.LFE43-.LFB43
 3669 09c9 01       		.uleb128 0x1
 3670 09ca 9C       		.byte	0x9c
 3671 09cb 1A       		.uleb128 0x1a
 3672 09cc E4020000 		.4byte	.LASF89
 3673 09d0 01       		.byte	0x1
 3674 09d1 610A     		.2byte	0xa61
 3675 09d3 00000000 		.4byte	.LFB32
 3676 09d7 4C000000 		.4byte	.LFE32-.LFB32
 3677 09db 01       		.uleb128 0x1
 3678 09dc 9C       		.byte	0x9c
 3679 09dd 400A0000 		.4byte	0xa40
 3680 09e1 1C       		.uleb128 0x1c
 3681 09e2 6900     		.ascii	"i\000"
 3682 09e4 01       		.byte	0x1
 3683 09e5 630A     		.2byte	0xa63
 3684 09e7 83000000 		.4byte	0x83
 3685 09eb 82050000 		.4byte	.LLST41
 3686 09ef 17       		.uleb128 0x17
 3687 09f0 1C000000 		.4byte	.LVL143
 3688 09f4 2B040000 		.4byte	0x42b
 3689 09f8 0B0A0000 		.4byte	0xa0b
 3690 09fc 16       		.uleb128 0x16
 3691 09fd 01       		.uleb128 0x1
 3692 09fe 51       		.byte	0x51
 3693 09ff 05       		.uleb128 0x5
 3694 0a00 03       		.byte	0x3
 3695 0a01 00000000 		.4byte	CySysTickServiceCallbacks
 3696 0a05 16       		.uleb128 0x16
 3697 0a06 01       		.uleb128 0x1
 3698 0a07 50       		.byte	0x50
 3699 0a08 01       		.uleb128 0x1
 3700 0a09 3F       		.byte	0x3f
 3701 0a0a 00       		.byte	0
 3702 0a0b 17       		.uleb128 0x17
 3703 0a0c 22000000 		.4byte	.LVL144
 3704 0a10 3A090000 		.4byte	0x93a
 3705 0a14 1E0A0000 		.4byte	0xa1e
 3706 0a18 16       		.uleb128 0x16
 3707 0a19 01       		.uleb128 0x1
 3708 0a1a 50       		.byte	0x50
 3709 0a1b 01       		.uleb128 0x1
 3710 0a1c 31       		.byte	0x31
 3711 0a1d 00       		.byte	0
 3712 0a1e 0C       		.uleb128 0xc
 3713 0a1f 32000000 		.4byte	.LVL146
 3714 0a23 E7080000 		.4byte	0x8e7
 3715 0a27 0C       		.uleb128 0xc
 3716 0a28 36000000 		.4byte	.LVL147
 3717 0a2c B9090000 		.4byte	0x9b9
 3718 0a30 15       		.uleb128 0x15
 3719 0a31 3C000000 		.4byte	.LVL148
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 128


 3720 0a35 3F030000 		.4byte	0x33f
 3721 0a39 16       		.uleb128 0x16
 3722 0a3a 01       		.uleb128 0x1
 3723 0a3b 50       		.byte	0x50
 3724 0a3c 01       		.uleb128 0x1
 3725 0a3d 3F       		.byte	0x3f
 3726 0a3e 00       		.byte	0
 3727 0a3f 00       		.byte	0
 3728 0a40 0E       		.uleb128 0xe
 3729 0a41 8A040000 		.4byte	.LASF90
 3730 0a45 01       		.byte	0x1
 3731 0a46 440A     		.2byte	0xa44
 3732 0a48 00000000 		.4byte	.LFB31
 3733 0a4c 20000000 		.4byte	.LFE31-.LFB31
 3734 0a50 01       		.uleb128 0x1
 3735 0a51 9C       		.byte	0x9c
 3736 0a52 690A0000 		.4byte	0xa69
 3737 0a56 0C       		.uleb128 0xc
 3738 0a57 0E000000 		.4byte	.LVL149
 3739 0a5b CB090000 		.4byte	0x9cb
 3740 0a5f 0C       		.uleb128 0xc
 3741 0a60 18000000 		.4byte	.LVL150
 3742 0a64 B5080000 		.4byte	0x8b5
 3743 0a68 00       		.byte	0
 3744 0a69 12       		.uleb128 0x12
 3745 0a6a B2060000 		.4byte	.LASF91
 3746 0a6e 01       		.byte	0x1
 3747 0a6f 620B     		.2byte	0xb62
 3748 0a71 F8000000 		.4byte	0xf8
 3749 0a75 00000000 		.4byte	.LFB44
 3750 0a79 10000000 		.4byte	.LFE44-.LFB44
 3751 0a7d 01       		.uleb128 0x1
 3752 0a7e 9C       		.byte	0x9c
 3753 0a7f B00A0000 		.4byte	0xab0
 3754 0a83 0F       		.uleb128 0xf
 3755 0a84 14040000 		.4byte	.LASF44
 3756 0a88 01       		.byte	0x1
 3757 0a89 620B     		.2byte	0xb62
 3758 0a8b 83000000 		.4byte	0x83
 3759 0a8f A1050000 		.4byte	.LLST42
 3760 0a93 11       		.uleb128 0x11
 3761 0a94 01050000 		.4byte	.LASF92
 3762 0a98 01       		.byte	0x1
 3763 0a99 620B     		.2byte	0xb62
 3764 0a9b F8000000 		.4byte	0xf8
 3765 0a9f 01       		.uleb128 0x1
 3766 0aa0 51       		.byte	0x51
 3767 0aa1 13       		.uleb128 0x13
 3768 0aa2 84000000 		.4byte	.LASF93
 3769 0aa6 01       		.byte	0x1
 3770 0aa7 640B     		.2byte	0xb64
 3771 0aa9 F8000000 		.4byte	0xf8
 3772 0aad 01       		.uleb128 0x1
 3773 0aae 50       		.byte	0x50
 3774 0aaf 00       		.byte	0
 3775 0ab0 12       		.uleb128 0x12
 3776 0ab1 24020000 		.4byte	.LASF94
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 129


 3777 0ab5 01       		.byte	0x1
 3778 0ab6 7A0B     		.2byte	0xb7a
 3779 0ab8 F8000000 		.4byte	0xf8
 3780 0abc 00000000 		.4byte	.LFB45
 3781 0ac0 0C000000 		.4byte	.LFE45-.LFB45
 3782 0ac4 01       		.uleb128 0x1
 3783 0ac5 9C       		.byte	0x9c
 3784 0ac6 DB0A0000 		.4byte	0xadb
 3785 0aca 0F       		.uleb128 0xf
 3786 0acb 14040000 		.4byte	.LASF44
 3787 0acf 01       		.byte	0x1
 3788 0ad0 7A0B     		.2byte	0xb7a
 3789 0ad2 83000000 		.4byte	0x83
 3790 0ad6 C2050000 		.4byte	.LLST43
 3791 0ada 00       		.byte	0
 3792 0adb 0E       		.uleb128 0xe
 3793 0adc 04030000 		.4byte	.LASF95
 3794 0ae0 01       		.byte	0x1
 3795 0ae1 A70B     		.2byte	0xba7
 3796 0ae3 00000000 		.4byte	.LFB47
 3797 0ae7 70000000 		.4byte	.LFE47-.LFB47
 3798 0aeb 01       		.uleb128 0x1
 3799 0aec 9C       		.byte	0x9c
 3800 0aed 000B0000 		.4byte	0xb00
 3801 0af1 11       		.uleb128 0x11
 3802 0af2 E8060000 		.4byte	.LASF96
 3803 0af6 01       		.byte	0x1
 3804 0af7 A70B     		.2byte	0xba7
 3805 0af9 000B0000 		.4byte	0xb00
 3806 0afd 01       		.uleb128 0x1
 3807 0afe 50       		.byte	0x50
 3808 0aff 00       		.byte	0
 3809 0b00 06       		.uleb128 0x6
 3810 0b01 04       		.byte	0x4
 3811 0b02 83000000 		.4byte	0x83
 3812 0b06 0E       		.uleb128 0xe
 3813 0b07 C0050000 		.4byte	.LASF97
 3814 0b0b 01       		.byte	0x1
 3815 0b0c D30B     		.2byte	0xbd3
 3816 0b0e 00000000 		.4byte	.LFB48
 3817 0b12 20000000 		.4byte	.LFE48-.LFB48
 3818 0b16 01       		.uleb128 0x1
 3819 0b17 9C       		.byte	0x9c
 3820 0b18 3D0B0000 		.4byte	0xb3d
 3821 0b1c 0F       		.uleb128 0xf
 3822 0b1d A6040000 		.4byte	.LASF98
 3823 0b21 01       		.byte	0x1
 3824 0b22 D30B     		.2byte	0xbd3
 3825 0b24 83000000 		.4byte	0x83
 3826 0b28 E3050000 		.4byte	.LLST44
 3827 0b2c 10       		.uleb128 0x10
 3828 0b2d D9030000 		.4byte	.LASF67
 3829 0b31 01       		.byte	0x1
 3830 0b32 D50B     		.2byte	0xbd5
 3831 0b34 83000000 		.4byte	0x83
 3832 0b38 04060000 		.4byte	.LLST45
 3833 0b3c 00       		.byte	0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 130


 3834 0b3d 0E       		.uleb128 0xe
 3835 0b3e 39040000 		.4byte	.LASF99
 3836 0b42 01       		.byte	0x1
 3837 0b43 EE0B     		.2byte	0xbee
 3838 0b45 00000000 		.4byte	.LFB49
 3839 0b49 20000000 		.4byte	.LFE49-.LFB49
 3840 0b4d 01       		.uleb128 0x1
 3841 0b4e 9C       		.byte	0x9c
 3842 0b4f 740B0000 		.4byte	0xb74
 3843 0b53 0F       		.uleb128 0xf
 3844 0b54 A6040000 		.4byte	.LASF98
 3845 0b58 01       		.byte	0x1
 3846 0b59 EE0B     		.2byte	0xbee
 3847 0b5b 83000000 		.4byte	0x83
 3848 0b5f 22060000 		.4byte	.LLST46
 3849 0b63 10       		.uleb128 0x10
 3850 0b64 D9030000 		.4byte	.LASF67
 3851 0b68 01       		.byte	0x1
 3852 0b69 F00B     		.2byte	0xbf0
 3853 0b6b 83000000 		.4byte	0x83
 3854 0b6f 43060000 		.4byte	.LLST47
 3855 0b73 00       		.byte	0
 3856 0b74 0E       		.uleb128 0xe
 3857 0b75 60070000 		.4byte	.LASF100
 3858 0b79 01       		.byte	0x1
 3859 0b7a 090C     		.2byte	0xc09
 3860 0b7c 00000000 		.4byte	.LFB50
 3861 0b80 20000000 		.4byte	.LFE50-.LFB50
 3862 0b84 01       		.uleb128 0x1
 3863 0b85 9C       		.byte	0x9c
 3864 0b86 AB0B0000 		.4byte	0xbab
 3865 0b8a 0F       		.uleb128 0xf
 3866 0b8b A6040000 		.4byte	.LASF98
 3867 0b8f 01       		.byte	0x1
 3868 0b90 090C     		.2byte	0xc09
 3869 0b92 83000000 		.4byte	0x83
 3870 0b96 61060000 		.4byte	.LLST48
 3871 0b9a 10       		.uleb128 0x10
 3872 0b9b D9030000 		.4byte	.LASF67
 3873 0b9f 01       		.byte	0x1
 3874 0ba0 0B0C     		.2byte	0xc0b
 3875 0ba2 83000000 		.4byte	0x83
 3876 0ba6 82060000 		.4byte	.LLST49
 3877 0baa 00       		.byte	0
 3878 0bab 0E       		.uleb128 0xe
 3879 0bac B6040000 		.4byte	.LASF101
 3880 0bb0 01       		.byte	0x1
 3881 0bb1 260C     		.2byte	0xc26
 3882 0bb3 00000000 		.4byte	.LFB51
 3883 0bb7 4C000000 		.4byte	.LFE51-.LFB51
 3884 0bbb 01       		.uleb128 0x1
 3885 0bbc 9C       		.byte	0x9c
 3886 0bbd 010C0000 		.4byte	0xc01
 3887 0bc1 0F       		.uleb128 0xf
 3888 0bc2 CE000000 		.4byte	.LASF102
 3889 0bc6 01       		.byte	0x1
 3890 0bc7 260C     		.2byte	0xc26
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 131


 3891 0bc9 83000000 		.4byte	0x83
 3892 0bcd A0060000 		.4byte	.LLST50
 3893 0bd1 0F       		.uleb128 0xf
 3894 0bd2 A6040000 		.4byte	.LASF98
 3895 0bd6 01       		.byte	0x1
 3896 0bd7 260C     		.2byte	0xc26
 3897 0bd9 83000000 		.4byte	0x83
 3898 0bdd F3060000 		.4byte	.LLST51
 3899 0be1 10       		.uleb128 0x10
 3900 0be2 D9030000 		.4byte	.LASF67
 3901 0be6 01       		.byte	0x1
 3902 0be7 280C     		.2byte	0xc28
 3903 0be9 83000000 		.4byte	0x83
 3904 0bed 46070000 		.4byte	.LLST52
 3905 0bf1 15       		.uleb128 0x15
 3906 0bf2 3C000000 		.4byte	.LVL180
 3907 0bf6 06040000 		.4byte	0x406
 3908 0bfa 16       		.uleb128 0x16
 3909 0bfb 01       		.uleb128 0x1
 3910 0bfc 50       		.byte	0x50
 3911 0bfd 01       		.uleb128 0x1
 3912 0bfe 30       		.byte	0x30
 3913 0bff 00       		.byte	0
 3914 0c00 00       		.byte	0
 3915 0c01 0E       		.uleb128 0xe
 3916 0c02 8A050000 		.4byte	.LASF103
 3917 0c06 01       		.byte	0x1
 3918 0c07 630C     		.2byte	0xc63
 3919 0c09 00000000 		.4byte	.LFB52
 3920 0c0d 18000000 		.4byte	.LFE52-.LFB52
 3921 0c11 01       		.uleb128 0x1
 3922 0c12 9C       		.byte	0x9c
 3923 0c13 280C0000 		.4byte	0xc28
 3924 0c17 0F       		.uleb128 0xf
 3925 0c18 A6040000 		.4byte	.LASF98
 3926 0c1c 01       		.byte	0x1
 3927 0c1d 630C     		.2byte	0xc63
 3928 0c1f 83000000 		.4byte	0x83
 3929 0c23 7A070000 		.4byte	.LLST53
 3930 0c27 00       		.byte	0
 3931 0c28 0E       		.uleb128 0xe
 3932 0c29 DC070000 		.4byte	.LASF104
 3933 0c2d 01       		.byte	0x1
 3934 0c2e 7B0C     		.2byte	0xc7b
 3935 0c30 00000000 		.4byte	.LFB53
 3936 0c34 14000000 		.4byte	.LFE53-.LFB53
 3937 0c38 01       		.uleb128 0x1
 3938 0c39 9C       		.byte	0x9c
 3939 0c3a 4F0C0000 		.4byte	0xc4f
 3940 0c3e 0F       		.uleb128 0xf
 3941 0c3f 3B050000 		.4byte	.LASF105
 3942 0c43 01       		.byte	0x1
 3943 0c44 7B0C     		.2byte	0xc7b
 3944 0c46 83000000 		.4byte	0x83
 3945 0c4a A6070000 		.4byte	.LLST54
 3946 0c4e 00       		.byte	0
 3947 0c4f 0E       		.uleb128 0xe
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 132


 3948 0c50 2E060000 		.4byte	.LASF106
 3949 0c54 01       		.byte	0x1
 3950 0c55 A70C     		.2byte	0xca7
 3951 0c57 00000000 		.4byte	.LFB54
 3952 0c5b 18000000 		.4byte	.LFE54-.LFB54
 3953 0c5f 01       		.uleb128 0x1
 3954 0c60 9C       		.byte	0x9c
 3955 0c61 760C0000 		.4byte	0xc76
 3956 0c65 0F       		.uleb128 0xf
 3957 0c66 C5010000 		.4byte	.LASF107
 3958 0c6a 01       		.byte	0x1
 3959 0c6b A70C     		.2byte	0xca7
 3960 0c6d 83000000 		.4byte	0x83
 3961 0c71 C7070000 		.4byte	.LLST55
 3962 0c75 00       		.byte	0
 3963 0c76 0A       		.uleb128 0xa
 3964 0c77 BD070000 		.4byte	.LASF108
 3965 0c7b 01       		.byte	0x1
 3966 0c7c B90C     		.2byte	0xcb9
 3967 0c7e 00000000 		.4byte	.LFB55
 3968 0c82 14000000 		.4byte	.LFE55-.LFB55
 3969 0c86 01       		.uleb128 0x1
 3970 0c87 9C       		.byte	0x9c
 3971 0c88 0A       		.uleb128 0xa
 3972 0c89 04020000 		.4byte	.LASF109
 3973 0c8d 01       		.byte	0x1
 3974 0c8e CA0C     		.2byte	0xcca
 3975 0c90 00000000 		.4byte	.LFB56
 3976 0c94 14000000 		.4byte	.LFE56-.LFB56
 3977 0c98 01       		.uleb128 0x1
 3978 0c99 9C       		.byte	0x9c
 3979 0c9a 0A       		.uleb128 0xa
 3980 0c9b 35030000 		.4byte	.LASF110
 3981 0c9f 01       		.byte	0x1
 3982 0ca0 DA0C     		.2byte	0xcda
 3983 0ca2 00000000 		.4byte	.LFB57
 3984 0ca6 10000000 		.4byte	.LFE57-.LFB57
 3985 0caa 01       		.uleb128 0x1
 3986 0cab 9C       		.byte	0x9c
 3987 0cac 0A       		.uleb128 0xa
 3988 0cad E0030000 		.4byte	.LASF111
 3989 0cb1 01       		.byte	0x1
 3990 0cb2 EA0C     		.2byte	0xcea
 3991 0cb4 00000000 		.4byte	.LFB58
 3992 0cb8 10000000 		.4byte	.LFE58-.LFB58
 3993 0cbc 01       		.uleb128 0x1
 3994 0cbd 9C       		.byte	0x9c
 3995 0cbe 0E       		.uleb128 0xe
 3996 0cbf CC020000 		.4byte	.LASF112
 3997 0cc3 01       		.byte	0x1
 3998 0cc4 FE0C     		.2byte	0xcfe
 3999 0cc6 00000000 		.4byte	.LFB59
 4000 0cca 2C000000 		.4byte	.LFE59-.LFB59
 4001 0cce 01       		.uleb128 0x1
 4002 0ccf 9C       		.byte	0x9c
 4003 0cd0 F50C0000 		.4byte	0xcf5
 4004 0cd4 0F       		.uleb128 0xf
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 133


 4005 0cd5 6C030000 		.4byte	.LASF113
 4006 0cd9 01       		.byte	0x1
 4007 0cda FE0C     		.2byte	0xcfe
 4008 0cdc 9B000000 		.4byte	0x9b
 4009 0ce0 E8070000 		.4byte	.LLST56
 4010 0ce4 1C       		.uleb128 0x1c
 4011 0ce5 746D7000 		.ascii	"tmp\000"
 4012 0ce9 01       		.byte	0x1
 4013 0cea 000D     		.2byte	0xd00
 4014 0cec 6B000000 		.4byte	0x6b
 4015 0cf0 22080000 		.4byte	.LLST57
 4016 0cf4 00       		.byte	0
 4017 0cf5 12       		.uleb128 0x12
 4018 0cf6 38000000 		.4byte	.LASF114
 4019 0cfa 01       		.byte	0x1
 4020 0cfb 1B0D     		.2byte	0xd1b
 4021 0cfd 9B000000 		.4byte	0x9b
 4022 0d01 00000000 		.4byte	.LFB60
 4023 0d05 1C000000 		.4byte	.LFE60-.LFB60
 4024 0d09 01       		.uleb128 0x1
 4025 0d0a 9C       		.byte	0x9c
 4026 0d0b 2E0D0000 		.4byte	0xd2e
 4027 0d0f 1C       		.uleb128 0x1c
 4028 0d10 746D7000 		.ascii	"tmp\000"
 4029 0d14 01       		.byte	0x1
 4030 0d15 1D0D     		.2byte	0xd1d
 4031 0d17 6B000000 		.4byte	0x6b
 4032 0d1b 46080000 		.4byte	.LLST58
 4033 0d1f 13       		.uleb128 0x13
 4034 0d20 4E080000 		.4byte	.LASF115
 4035 0d24 01       		.byte	0x1
 4036 0d25 1E0D     		.2byte	0xd1e
 4037 0d27 9B000000 		.4byte	0x9b
 4038 0d2b 01       		.uleb128 0x1
 4039 0d2c 50       		.byte	0x50
 4040 0d2d 00       		.byte	0
 4041 0d2e 1D       		.uleb128 0x1d
 4042 0d2f F8000000 		.4byte	0xf8
 4043 0d33 3E0D0000 		.4byte	0xd3e
 4044 0d37 1E       		.uleb128 0x1e
 4045 0d38 F1000000 		.4byte	0xf1
 4046 0d3c 04       		.byte	0x4
 4047 0d3d 00       		.byte	0
 4048 0d3e 19       		.uleb128 0x19
 4049 0d3f C7060000 		.4byte	.LASF116
 4050 0d43 01       		.byte	0x1
 4051 0d44 22       		.byte	0x22
 4052 0d45 2E0D0000 		.4byte	0xd2e
 4053 0d49 05       		.uleb128 0x5
 4054 0d4a 03       		.byte	0x3
 4055 0d4b 00000000 		.4byte	CySysTickCallbacks
 4056 0d4f 1F       		.uleb128 0x1f
 4057 0d50 1C050000 		.4byte	.LASF117
 4058 0d54 01       		.byte	0x1
 4059 0d55 1B       		.byte	0x1b
 4060 0d56 83000000 		.4byte	0x83
 4061 0d5a 05       		.uleb128 0x5
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 134


 4062 0d5b 03       		.byte	0x3
 4063 0d5c 00000000 		.4byte	cydelayFreqHz
 4064 0d60 1F       		.uleb128 0x1f
 4065 0d61 3F020000 		.4byte	.LASF118
 4066 0d65 01       		.byte	0x1
 4067 0d66 1C       		.byte	0x1c
 4068 0d67 83000000 		.4byte	0x83
 4069 0d6b 05       		.uleb128 0x5
 4070 0d6c 03       		.byte	0x3
 4071 0d6d 00000000 		.4byte	cydelayFreqKhz
 4072 0d71 1F       		.uleb128 0x1f
 4073 0d72 3E070000 		.4byte	.LASF119
 4074 0d76 01       		.byte	0x1
 4075 0d77 1D       		.byte	0x1d
 4076 0d78 6B000000 		.4byte	0x6b
 4077 0d7c 05       		.uleb128 0x5
 4078 0d7d 03       		.byte	0x3
 4079 0d7e 00000000 		.4byte	cydelayFreqMhz
 4080 0d82 1F       		.uleb128 0x1f
 4081 0d83 BF020000 		.4byte	.LASF120
 4082 0d87 01       		.byte	0x1
 4083 0d88 1E       		.byte	0x1e
 4084 0d89 83000000 		.4byte	0x83
 4085 0d8d 05       		.uleb128 0x5
 4086 0d8e 03       		.byte	0x3
 4087 0d8f 00000000 		.4byte	cydelay32kMs
 4088 0d93 1F       		.uleb128 0x1f
 4089 0d94 B0000000 		.4byte	.LASF121
 4090 0d98 01       		.byte	0x1
 4091 0d99 36       		.byte	0x36
 4092 0d9a 83000000 		.4byte	0x83
 4093 0d9e 05       		.uleb128 0x5
 4094 0d9f 03       		.byte	0x3
 4095 0da0 00000000 		.4byte	CySysTickInitVar
 4096 0da4 1D       		.uleb128 0x1d
 4097 0da5 6B000000 		.4byte	0x6b
 4098 0da9 B40D0000 		.4byte	0xdb4
 4099 0dad 1E       		.uleb128 0x1e
 4100 0dae F1000000 		.4byte	0xf1
 4101 0db2 16       		.byte	0x16
 4102 0db3 00       		.byte	0
 4103 0db4 1F       		.uleb128 0x1f
 4104 0db5 50060000 		.4byte	.LASF122
 4105 0db9 01       		.byte	0x1
 4106 0dba 4C       		.byte	0x4c
 4107 0dbb C50D0000 		.4byte	0xdc5
 4108 0dbf 05       		.uleb128 0x5
 4109 0dc0 03       		.byte	0x3
 4110 0dc1 00000000 		.4byte	cyImoFreqMhz2DpllOffset
 4111 0dc5 20       		.uleb128 0x20
 4112 0dc6 A40D0000 		.4byte	0xda4
 4113 0dca 1F       		.uleb128 0x1f
 4114 0dcb 50000000 		.4byte	.LASF123
 4115 0dcf 01       		.byte	0x1
 4116 0dd0 5B       		.byte	0x5b
 4117 0dd1 83000000 		.4byte	0x83
 4118 0dd5 05       		.uleb128 0x5
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 135


 4119 0dd6 03       		.byte	0x3
 4120 0dd7 00000000 		.4byte	CySysClkPumpConfig
 4121 0ddb 21       		.uleb128 0x21
 4122 0ddc 83030000 		.4byte	.LASF126
 4123 0de0 03       		.byte	0x3
 4124 0de1 E5       		.byte	0xe5
 4125 0de2 6B000000 		.4byte	0x6b
 4126 0de6 22       		.uleb128 0x22
 4127 0de7 46050000 		.4byte	.LASF124
 4128 0deb 03       		.byte	0x3
 4129 0dec E6       		.byte	0xe6
 4130 0ded F70D0000 		.4byte	0xdf7
 4131 0df1 23       		.uleb128 0x23
 4132 0df2 6B000000 		.4byte	0x6b
 4133 0df6 00       		.byte	0
 4134 0df7 22       		.uleb128 0x22
 4135 0df8 A6050000 		.4byte	.LASF125
 4136 0dfc 03       		.byte	0x3
 4137 0dfd DC       		.byte	0xdc
 4138 0dfe 080E0000 		.4byte	0xe08
 4139 0e02 23       		.uleb128 0x23
 4140 0e03 83000000 		.4byte	0x83
 4141 0e07 00       		.byte	0
 4142 0e08 21       		.uleb128 0x21
 4143 0e09 4D070000 		.4byte	.LASF127
 4144 0e0d 04       		.byte	0x4
 4145 0e0e 54       		.byte	0x54
 4146 0e0f 83000000 		.4byte	0x83
 4147 0e13 24       		.uleb128 0x24
 4148 0e14 A5070000 		.4byte	.LASF132
 4149 0e18 05       		.byte	0x5
 4150 0e19 52       		.byte	0x52
 4151 0e1a 23       		.uleb128 0x23
 4152 0e1b 83000000 		.4byte	0x83
 4153 0e1f 00       		.byte	0
 4154 0e20 00       		.byte	0
 4155              		.section	.debug_abbrev,"",%progbits
 4156              	.Ldebug_abbrev0:
 4157 0000 01       		.uleb128 0x1
 4158 0001 11       		.uleb128 0x11
 4159 0002 01       		.byte	0x1
 4160 0003 25       		.uleb128 0x25
 4161 0004 0E       		.uleb128 0xe
 4162 0005 13       		.uleb128 0x13
 4163 0006 0B       		.uleb128 0xb
 4164 0007 03       		.uleb128 0x3
 4165 0008 0E       		.uleb128 0xe
 4166 0009 1B       		.uleb128 0x1b
 4167 000a 0E       		.uleb128 0xe
 4168 000b 55       		.uleb128 0x55
 4169 000c 17       		.uleb128 0x17
 4170 000d 11       		.uleb128 0x11
 4171 000e 01       		.uleb128 0x1
 4172 000f 10       		.uleb128 0x10
 4173 0010 17       		.uleb128 0x17
 4174 0011 00       		.byte	0
 4175 0012 00       		.byte	0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 136


 4176 0013 02       		.uleb128 0x2
 4177 0014 24       		.uleb128 0x24
 4178 0015 00       		.byte	0
 4179 0016 0B       		.uleb128 0xb
 4180 0017 0B       		.uleb128 0xb
 4181 0018 3E       		.uleb128 0x3e
 4182 0019 0B       		.uleb128 0xb
 4183 001a 03       		.uleb128 0x3
 4184 001b 0E       		.uleb128 0xe
 4185 001c 00       		.byte	0
 4186 001d 00       		.byte	0
 4187 001e 03       		.uleb128 0x3
 4188 001f 24       		.uleb128 0x24
 4189 0020 00       		.byte	0
 4190 0021 0B       		.uleb128 0xb
 4191 0022 0B       		.uleb128 0xb
 4192 0023 3E       		.uleb128 0x3e
 4193 0024 0B       		.uleb128 0xb
 4194 0025 03       		.uleb128 0x3
 4195 0026 08       		.uleb128 0x8
 4196 0027 00       		.byte	0
 4197 0028 00       		.byte	0
 4198 0029 04       		.uleb128 0x4
 4199 002a 16       		.uleb128 0x16
 4200 002b 00       		.byte	0
 4201 002c 03       		.uleb128 0x3
 4202 002d 0E       		.uleb128 0xe
 4203 002e 3A       		.uleb128 0x3a
 4204 002f 0B       		.uleb128 0xb
 4205 0030 3B       		.uleb128 0x3b
 4206 0031 05       		.uleb128 0x5
 4207 0032 49       		.uleb128 0x49
 4208 0033 13       		.uleb128 0x13
 4209 0034 00       		.byte	0
 4210 0035 00       		.byte	0
 4211 0036 05       		.uleb128 0x5
 4212 0037 35       		.uleb128 0x35
 4213 0038 00       		.byte	0
 4214 0039 49       		.uleb128 0x49
 4215 003a 13       		.uleb128 0x13
 4216 003b 00       		.byte	0
 4217 003c 00       		.byte	0
 4218 003d 06       		.uleb128 0x6
 4219 003e 0F       		.uleb128 0xf
 4220 003f 00       		.byte	0
 4221 0040 0B       		.uleb128 0xb
 4222 0041 0B       		.uleb128 0xb
 4223 0042 49       		.uleb128 0x49
 4224 0043 13       		.uleb128 0x13
 4225 0044 00       		.byte	0
 4226 0045 00       		.byte	0
 4227 0046 07       		.uleb128 0x7
 4228 0047 15       		.uleb128 0x15
 4229 0048 00       		.byte	0
 4230 0049 27       		.uleb128 0x27
 4231 004a 19       		.uleb128 0x19
 4232 004b 00       		.byte	0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 137


 4233 004c 00       		.byte	0
 4234 004d 08       		.uleb128 0x8
 4235 004e 16       		.uleb128 0x16
 4236 004f 00       		.byte	0
 4237 0050 03       		.uleb128 0x3
 4238 0051 0E       		.uleb128 0xe
 4239 0052 3A       		.uleb128 0x3a
 4240 0053 0B       		.uleb128 0xb
 4241 0054 3B       		.uleb128 0x3b
 4242 0055 0B       		.uleb128 0xb
 4243 0056 49       		.uleb128 0x49
 4244 0057 13       		.uleb128 0x13
 4245 0058 00       		.byte	0
 4246 0059 00       		.byte	0
 4247 005a 09       		.uleb128 0x9
 4248 005b 2E       		.uleb128 0x2e
 4249 005c 00       		.byte	0
 4250 005d 3F       		.uleb128 0x3f
 4251 005e 19       		.uleb128 0x19
 4252 005f 03       		.uleb128 0x3
 4253 0060 0E       		.uleb128 0xe
 4254 0061 3A       		.uleb128 0x3a
 4255 0062 0B       		.uleb128 0xb
 4256 0063 3B       		.uleb128 0x3b
 4257 0064 0B       		.uleb128 0xb
 4258 0065 27       		.uleb128 0x27
 4259 0066 19       		.uleb128 0x19
 4260 0067 11       		.uleb128 0x11
 4261 0068 01       		.uleb128 0x1
 4262 0069 12       		.uleb128 0x12
 4263 006a 06       		.uleb128 0x6
 4264 006b 40       		.uleb128 0x40
 4265 006c 18       		.uleb128 0x18
 4266 006d 9742     		.uleb128 0x2117
 4267 006f 19       		.uleb128 0x19
 4268 0070 00       		.byte	0
 4269 0071 00       		.byte	0
 4270 0072 0A       		.uleb128 0xa
 4271 0073 2E       		.uleb128 0x2e
 4272 0074 00       		.byte	0
 4273 0075 3F       		.uleb128 0x3f
 4274 0076 19       		.uleb128 0x19
 4275 0077 03       		.uleb128 0x3
 4276 0078 0E       		.uleb128 0xe
 4277 0079 3A       		.uleb128 0x3a
 4278 007a 0B       		.uleb128 0xb
 4279 007b 3B       		.uleb128 0x3b
 4280 007c 05       		.uleb128 0x5
 4281 007d 27       		.uleb128 0x27
 4282 007e 19       		.uleb128 0x19
 4283 007f 11       		.uleb128 0x11
 4284 0080 01       		.uleb128 0x1
 4285 0081 12       		.uleb128 0x12
 4286 0082 06       		.uleb128 0x6
 4287 0083 40       		.uleb128 0x40
 4288 0084 18       		.uleb128 0x18
 4289 0085 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 138


 4290 0087 19       		.uleb128 0x19
 4291 0088 00       		.byte	0
 4292 0089 00       		.byte	0
 4293 008a 0B       		.uleb128 0xb
 4294 008b 2E       		.uleb128 0x2e
 4295 008c 01       		.byte	0x1
 4296 008d 3F       		.uleb128 0x3f
 4297 008e 19       		.uleb128 0x19
 4298 008f 03       		.uleb128 0x3
 4299 0090 0E       		.uleb128 0xe
 4300 0091 3A       		.uleb128 0x3a
 4301 0092 0B       		.uleb128 0xb
 4302 0093 3B       		.uleb128 0x3b
 4303 0094 0B       		.uleb128 0xb
 4304 0095 27       		.uleb128 0x27
 4305 0096 19       		.uleb128 0x19
 4306 0097 11       		.uleb128 0x11
 4307 0098 01       		.uleb128 0x1
 4308 0099 12       		.uleb128 0x12
 4309 009a 06       		.uleb128 0x6
 4310 009b 40       		.uleb128 0x40
 4311 009c 18       		.uleb128 0x18
 4312 009d 9742     		.uleb128 0x2117
 4313 009f 19       		.uleb128 0x19
 4314 00a0 01       		.uleb128 0x1
 4315 00a1 13       		.uleb128 0x13
 4316 00a2 00       		.byte	0
 4317 00a3 00       		.byte	0
 4318 00a4 0C       		.uleb128 0xc
 4319 00a5 898201   		.uleb128 0x4109
 4320 00a8 00       		.byte	0
 4321 00a9 11       		.uleb128 0x11
 4322 00aa 01       		.uleb128 0x1
 4323 00ab 31       		.uleb128 0x31
 4324 00ac 13       		.uleb128 0x13
 4325 00ad 00       		.byte	0
 4326 00ae 00       		.byte	0
 4327 00af 0D       		.uleb128 0xd
 4328 00b0 2E       		.uleb128 0x2e
 4329 00b1 00       		.byte	0
 4330 00b2 3F       		.uleb128 0x3f
 4331 00b3 19       		.uleb128 0x19
 4332 00b4 03       		.uleb128 0x3
 4333 00b5 0E       		.uleb128 0xe
 4334 00b6 3A       		.uleb128 0x3a
 4335 00b7 0B       		.uleb128 0xb
 4336 00b8 3B       		.uleb128 0x3b
 4337 00b9 05       		.uleb128 0x5
 4338 00ba 27       		.uleb128 0x27
 4339 00bb 19       		.uleb128 0x19
 4340 00bc 49       		.uleb128 0x49
 4341 00bd 13       		.uleb128 0x13
 4342 00be 11       		.uleb128 0x11
 4343 00bf 01       		.uleb128 0x1
 4344 00c0 12       		.uleb128 0x12
 4345 00c1 06       		.uleb128 0x6
 4346 00c2 40       		.uleb128 0x40
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 139


 4347 00c3 18       		.uleb128 0x18
 4348 00c4 9742     		.uleb128 0x2117
 4349 00c6 19       		.uleb128 0x19
 4350 00c7 00       		.byte	0
 4351 00c8 00       		.byte	0
 4352 00c9 0E       		.uleb128 0xe
 4353 00ca 2E       		.uleb128 0x2e
 4354 00cb 01       		.byte	0x1
 4355 00cc 3F       		.uleb128 0x3f
 4356 00cd 19       		.uleb128 0x19
 4357 00ce 03       		.uleb128 0x3
 4358 00cf 0E       		.uleb128 0xe
 4359 00d0 3A       		.uleb128 0x3a
 4360 00d1 0B       		.uleb128 0xb
 4361 00d2 3B       		.uleb128 0x3b
 4362 00d3 05       		.uleb128 0x5
 4363 00d4 27       		.uleb128 0x27
 4364 00d5 19       		.uleb128 0x19
 4365 00d6 11       		.uleb128 0x11
 4366 00d7 01       		.uleb128 0x1
 4367 00d8 12       		.uleb128 0x12
 4368 00d9 06       		.uleb128 0x6
 4369 00da 40       		.uleb128 0x40
 4370 00db 18       		.uleb128 0x18
 4371 00dc 9742     		.uleb128 0x2117
 4372 00de 19       		.uleb128 0x19
 4373 00df 01       		.uleb128 0x1
 4374 00e0 13       		.uleb128 0x13
 4375 00e1 00       		.byte	0
 4376 00e2 00       		.byte	0
 4377 00e3 0F       		.uleb128 0xf
 4378 00e4 05       		.uleb128 0x5
 4379 00e5 00       		.byte	0
 4380 00e6 03       		.uleb128 0x3
 4381 00e7 0E       		.uleb128 0xe
 4382 00e8 3A       		.uleb128 0x3a
 4383 00e9 0B       		.uleb128 0xb
 4384 00ea 3B       		.uleb128 0x3b
 4385 00eb 05       		.uleb128 0x5
 4386 00ec 49       		.uleb128 0x49
 4387 00ed 13       		.uleb128 0x13
 4388 00ee 02       		.uleb128 0x2
 4389 00ef 17       		.uleb128 0x17
 4390 00f0 00       		.byte	0
 4391 00f1 00       		.byte	0
 4392 00f2 10       		.uleb128 0x10
 4393 00f3 34       		.uleb128 0x34
 4394 00f4 00       		.byte	0
 4395 00f5 03       		.uleb128 0x3
 4396 00f6 0E       		.uleb128 0xe
 4397 00f7 3A       		.uleb128 0x3a
 4398 00f8 0B       		.uleb128 0xb
 4399 00f9 3B       		.uleb128 0x3b
 4400 00fa 05       		.uleb128 0x5
 4401 00fb 49       		.uleb128 0x49
 4402 00fc 13       		.uleb128 0x13
 4403 00fd 02       		.uleb128 0x2
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 140


 4404 00fe 17       		.uleb128 0x17
 4405 00ff 00       		.byte	0
 4406 0100 00       		.byte	0
 4407 0101 11       		.uleb128 0x11
 4408 0102 05       		.uleb128 0x5
 4409 0103 00       		.byte	0
 4410 0104 03       		.uleb128 0x3
 4411 0105 0E       		.uleb128 0xe
 4412 0106 3A       		.uleb128 0x3a
 4413 0107 0B       		.uleb128 0xb
 4414 0108 3B       		.uleb128 0x3b
 4415 0109 05       		.uleb128 0x5
 4416 010a 49       		.uleb128 0x49
 4417 010b 13       		.uleb128 0x13
 4418 010c 02       		.uleb128 0x2
 4419 010d 18       		.uleb128 0x18
 4420 010e 00       		.byte	0
 4421 010f 00       		.byte	0
 4422 0110 12       		.uleb128 0x12
 4423 0111 2E       		.uleb128 0x2e
 4424 0112 01       		.byte	0x1
 4425 0113 3F       		.uleb128 0x3f
 4426 0114 19       		.uleb128 0x19
 4427 0115 03       		.uleb128 0x3
 4428 0116 0E       		.uleb128 0xe
 4429 0117 3A       		.uleb128 0x3a
 4430 0118 0B       		.uleb128 0xb
 4431 0119 3B       		.uleb128 0x3b
 4432 011a 05       		.uleb128 0x5
 4433 011b 27       		.uleb128 0x27
 4434 011c 19       		.uleb128 0x19
 4435 011d 49       		.uleb128 0x49
 4436 011e 13       		.uleb128 0x13
 4437 011f 11       		.uleb128 0x11
 4438 0120 01       		.uleb128 0x1
 4439 0121 12       		.uleb128 0x12
 4440 0122 06       		.uleb128 0x6
 4441 0123 40       		.uleb128 0x40
 4442 0124 18       		.uleb128 0x18
 4443 0125 9742     		.uleb128 0x2117
 4444 0127 19       		.uleb128 0x19
 4445 0128 01       		.uleb128 0x1
 4446 0129 13       		.uleb128 0x13
 4447 012a 00       		.byte	0
 4448 012b 00       		.byte	0
 4449 012c 13       		.uleb128 0x13
 4450 012d 34       		.uleb128 0x34
 4451 012e 00       		.byte	0
 4452 012f 03       		.uleb128 0x3
 4453 0130 0E       		.uleb128 0xe
 4454 0131 3A       		.uleb128 0x3a
 4455 0132 0B       		.uleb128 0xb
 4456 0133 3B       		.uleb128 0x3b
 4457 0134 05       		.uleb128 0x5
 4458 0135 49       		.uleb128 0x49
 4459 0136 13       		.uleb128 0x13
 4460 0137 02       		.uleb128 0x2
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 141


 4461 0138 18       		.uleb128 0x18
 4462 0139 00       		.byte	0
 4463 013a 00       		.byte	0
 4464 013b 14       		.uleb128 0x14
 4465 013c 34       		.uleb128 0x34
 4466 013d 00       		.byte	0
 4467 013e 03       		.uleb128 0x3
 4468 013f 0E       		.uleb128 0xe
 4469 0140 3A       		.uleb128 0x3a
 4470 0141 0B       		.uleb128 0xb
 4471 0142 3B       		.uleb128 0x3b
 4472 0143 05       		.uleb128 0x5
 4473 0144 49       		.uleb128 0x49
 4474 0145 13       		.uleb128 0x13
 4475 0146 1C       		.uleb128 0x1c
 4476 0147 06       		.uleb128 0x6
 4477 0148 00       		.byte	0
 4478 0149 00       		.byte	0
 4479 014a 15       		.uleb128 0x15
 4480 014b 898201   		.uleb128 0x4109
 4481 014e 01       		.byte	0x1
 4482 014f 11       		.uleb128 0x11
 4483 0150 01       		.uleb128 0x1
 4484 0151 31       		.uleb128 0x31
 4485 0152 13       		.uleb128 0x13
 4486 0153 00       		.byte	0
 4487 0154 00       		.byte	0
 4488 0155 16       		.uleb128 0x16
 4489 0156 8A8201   		.uleb128 0x410a
 4490 0159 00       		.byte	0
 4491 015a 02       		.uleb128 0x2
 4492 015b 18       		.uleb128 0x18
 4493 015c 9142     		.uleb128 0x2111
 4494 015e 18       		.uleb128 0x18
 4495 015f 00       		.byte	0
 4496 0160 00       		.byte	0
 4497 0161 17       		.uleb128 0x17
 4498 0162 898201   		.uleb128 0x4109
 4499 0165 01       		.byte	0x1
 4500 0166 11       		.uleb128 0x11
 4501 0167 01       		.uleb128 0x1
 4502 0168 31       		.uleb128 0x31
 4503 0169 13       		.uleb128 0x13
 4504 016a 01       		.uleb128 0x1
 4505 016b 13       		.uleb128 0x13
 4506 016c 00       		.byte	0
 4507 016d 00       		.byte	0
 4508 016e 18       		.uleb128 0x18
 4509 016f 34       		.uleb128 0x34
 4510 0170 00       		.byte	0
 4511 0171 03       		.uleb128 0x3
 4512 0172 0E       		.uleb128 0xe
 4513 0173 3A       		.uleb128 0x3a
 4514 0174 0B       		.uleb128 0xb
 4515 0175 3B       		.uleb128 0x3b
 4516 0176 0B       		.uleb128 0xb
 4517 0177 49       		.uleb128 0x49
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 142


 4518 0178 13       		.uleb128 0x13
 4519 0179 02       		.uleb128 0x2
 4520 017a 17       		.uleb128 0x17
 4521 017b 00       		.byte	0
 4522 017c 00       		.byte	0
 4523 017d 19       		.uleb128 0x19
 4524 017e 34       		.uleb128 0x34
 4525 017f 00       		.byte	0
 4526 0180 03       		.uleb128 0x3
 4527 0181 0E       		.uleb128 0xe
 4528 0182 3A       		.uleb128 0x3a
 4529 0183 0B       		.uleb128 0xb
 4530 0184 3B       		.uleb128 0x3b
 4531 0185 0B       		.uleb128 0xb
 4532 0186 49       		.uleb128 0x49
 4533 0187 13       		.uleb128 0x13
 4534 0188 02       		.uleb128 0x2
 4535 0189 18       		.uleb128 0x18
 4536 018a 00       		.byte	0
 4537 018b 00       		.byte	0
 4538 018c 1A       		.uleb128 0x1a
 4539 018d 2E       		.uleb128 0x2e
 4540 018e 01       		.byte	0x1
 4541 018f 3F       		.uleb128 0x3f
 4542 0190 19       		.uleb128 0x19
 4543 0191 03       		.uleb128 0x3
 4544 0192 0E       		.uleb128 0xe
 4545 0193 3A       		.uleb128 0x3a
 4546 0194 0B       		.uleb128 0xb
 4547 0195 3B       		.uleb128 0x3b
 4548 0196 05       		.uleb128 0x5
 4549 0197 27       		.uleb128 0x27
 4550 0198 19       		.uleb128 0x19
 4551 0199 11       		.uleb128 0x11
 4552 019a 01       		.uleb128 0x1
 4553 019b 12       		.uleb128 0x12
 4554 019c 06       		.uleb128 0x6
 4555 019d 40       		.uleb128 0x40
 4556 019e 18       		.uleb128 0x18
 4557 019f 9642     		.uleb128 0x2116
 4558 01a1 19       		.uleb128 0x19
 4559 01a2 01       		.uleb128 0x1
 4560 01a3 13       		.uleb128 0x13
 4561 01a4 00       		.byte	0
 4562 01a5 00       		.byte	0
 4563 01a6 1B       		.uleb128 0x1b
 4564 01a7 2E       		.uleb128 0x2e
 4565 01a8 01       		.byte	0x1
 4566 01a9 03       		.uleb128 0x3
 4567 01aa 0E       		.uleb128 0xe
 4568 01ab 3A       		.uleb128 0x3a
 4569 01ac 0B       		.uleb128 0xb
 4570 01ad 3B       		.uleb128 0x3b
 4571 01ae 05       		.uleb128 0x5
 4572 01af 27       		.uleb128 0x27
 4573 01b0 19       		.uleb128 0x19
 4574 01b1 11       		.uleb128 0x11
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 143


 4575 01b2 01       		.uleb128 0x1
 4576 01b3 12       		.uleb128 0x12
 4577 01b4 06       		.uleb128 0x6
 4578 01b5 40       		.uleb128 0x40
 4579 01b6 18       		.uleb128 0x18
 4580 01b7 9642     		.uleb128 0x2116
 4581 01b9 19       		.uleb128 0x19
 4582 01ba 01       		.uleb128 0x1
 4583 01bb 13       		.uleb128 0x13
 4584 01bc 00       		.byte	0
 4585 01bd 00       		.byte	0
 4586 01be 1C       		.uleb128 0x1c
 4587 01bf 34       		.uleb128 0x34
 4588 01c0 00       		.byte	0
 4589 01c1 03       		.uleb128 0x3
 4590 01c2 08       		.uleb128 0x8
 4591 01c3 3A       		.uleb128 0x3a
 4592 01c4 0B       		.uleb128 0xb
 4593 01c5 3B       		.uleb128 0x3b
 4594 01c6 05       		.uleb128 0x5
 4595 01c7 49       		.uleb128 0x49
 4596 01c8 13       		.uleb128 0x13
 4597 01c9 02       		.uleb128 0x2
 4598 01ca 17       		.uleb128 0x17
 4599 01cb 00       		.byte	0
 4600 01cc 00       		.byte	0
 4601 01cd 1D       		.uleb128 0x1d
 4602 01ce 01       		.uleb128 0x1
 4603 01cf 01       		.byte	0x1
 4604 01d0 49       		.uleb128 0x49
 4605 01d1 13       		.uleb128 0x13
 4606 01d2 01       		.uleb128 0x1
 4607 01d3 13       		.uleb128 0x13
 4608 01d4 00       		.byte	0
 4609 01d5 00       		.byte	0
 4610 01d6 1E       		.uleb128 0x1e
 4611 01d7 21       		.uleb128 0x21
 4612 01d8 00       		.byte	0
 4613 01d9 49       		.uleb128 0x49
 4614 01da 13       		.uleb128 0x13
 4615 01db 2F       		.uleb128 0x2f
 4616 01dc 0B       		.uleb128 0xb
 4617 01dd 00       		.byte	0
 4618 01de 00       		.byte	0
 4619 01df 1F       		.uleb128 0x1f
 4620 01e0 34       		.uleb128 0x34
 4621 01e1 00       		.byte	0
 4622 01e2 03       		.uleb128 0x3
 4623 01e3 0E       		.uleb128 0xe
 4624 01e4 3A       		.uleb128 0x3a
 4625 01e5 0B       		.uleb128 0xb
 4626 01e6 3B       		.uleb128 0x3b
 4627 01e7 0B       		.uleb128 0xb
 4628 01e8 49       		.uleb128 0x49
 4629 01e9 13       		.uleb128 0x13
 4630 01ea 3F       		.uleb128 0x3f
 4631 01eb 19       		.uleb128 0x19
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 144


 4632 01ec 02       		.uleb128 0x2
 4633 01ed 18       		.uleb128 0x18
 4634 01ee 00       		.byte	0
 4635 01ef 00       		.byte	0
 4636 01f0 20       		.uleb128 0x20
 4637 01f1 26       		.uleb128 0x26
 4638 01f2 00       		.byte	0
 4639 01f3 49       		.uleb128 0x49
 4640 01f4 13       		.uleb128 0x13
 4641 01f5 00       		.byte	0
 4642 01f6 00       		.byte	0
 4643 01f7 21       		.uleb128 0x21
 4644 01f8 2E       		.uleb128 0x2e
 4645 01f9 00       		.byte	0
 4646 01fa 3F       		.uleb128 0x3f
 4647 01fb 19       		.uleb128 0x19
 4648 01fc 03       		.uleb128 0x3
 4649 01fd 0E       		.uleb128 0xe
 4650 01fe 3A       		.uleb128 0x3a
 4651 01ff 0B       		.uleb128 0xb
 4652 0200 3B       		.uleb128 0x3b
 4653 0201 0B       		.uleb128 0xb
 4654 0202 27       		.uleb128 0x27
 4655 0203 19       		.uleb128 0x19
 4656 0204 49       		.uleb128 0x49
 4657 0205 13       		.uleb128 0x13
 4658 0206 3C       		.uleb128 0x3c
 4659 0207 19       		.uleb128 0x19
 4660 0208 00       		.byte	0
 4661 0209 00       		.byte	0
 4662 020a 22       		.uleb128 0x22
 4663 020b 2E       		.uleb128 0x2e
 4664 020c 01       		.byte	0x1
 4665 020d 3F       		.uleb128 0x3f
 4666 020e 19       		.uleb128 0x19
 4667 020f 03       		.uleb128 0x3
 4668 0210 0E       		.uleb128 0xe
 4669 0211 3A       		.uleb128 0x3a
 4670 0212 0B       		.uleb128 0xb
 4671 0213 3B       		.uleb128 0x3b
 4672 0214 0B       		.uleb128 0xb
 4673 0215 27       		.uleb128 0x27
 4674 0216 19       		.uleb128 0x19
 4675 0217 3C       		.uleb128 0x3c
 4676 0218 19       		.uleb128 0x19
 4677 0219 01       		.uleb128 0x1
 4678 021a 13       		.uleb128 0x13
 4679 021b 00       		.byte	0
 4680 021c 00       		.byte	0
 4681 021d 23       		.uleb128 0x23
 4682 021e 05       		.uleb128 0x5
 4683 021f 00       		.byte	0
 4684 0220 49       		.uleb128 0x49
 4685 0221 13       		.uleb128 0x13
 4686 0222 00       		.byte	0
 4687 0223 00       		.byte	0
 4688 0224 24       		.uleb128 0x24
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 145


 4689 0225 2E       		.uleb128 0x2e
 4690 0226 01       		.byte	0x1
 4691 0227 3F       		.uleb128 0x3f
 4692 0228 19       		.uleb128 0x19
 4693 0229 03       		.uleb128 0x3
 4694 022a 0E       		.uleb128 0xe
 4695 022b 3A       		.uleb128 0x3a
 4696 022c 0B       		.uleb128 0xb
 4697 022d 3B       		.uleb128 0x3b
 4698 022e 0B       		.uleb128 0xb
 4699 022f 27       		.uleb128 0x27
 4700 0230 19       		.uleb128 0x19
 4701 0231 3C       		.uleb128 0x3c
 4702 0232 19       		.uleb128 0x19
 4703 0233 00       		.byte	0
 4704 0234 00       		.byte	0
 4705 0235 00       		.byte	0
 4706              		.section	.debug_loc,"",%progbits
 4707              	.Ldebug_loc0:
 4708              	.LLST0:
 4709 0000 00000000 		.4byte	.LVL1
 4710 0004 07000000 		.4byte	.LVL2-1
 4711 0008 0100     		.2byte	0x1
 4712 000a 50       		.byte	0x50
 4713 000b 07000000 		.4byte	.LVL2-1
 4714 000f 1A000000 		.4byte	.LVL6
 4715 0013 0100     		.2byte	0x1
 4716 0015 54       		.byte	0x54
 4717 0016 1A000000 		.4byte	.LVL6
 4718 001a 20000000 		.4byte	.LFE6
 4719 001e 0400     		.2byte	0x4
 4720 0020 F3       		.byte	0xf3
 4721 0021 01       		.uleb128 0x1
 4722 0022 50       		.byte	0x50
 4723 0023 9F       		.byte	0x9f
 4724 0024 00000000 		.4byte	0
 4725 0028 00000000 		.4byte	0
 4726              	.LLST1:
 4727 002c 08000000 		.4byte	.LVL2
 4728 0030 19000000 		.4byte	.LVL5-1
 4729 0034 0100     		.2byte	0x1
 4730 0036 50       		.byte	0x50
 4731 0037 00000000 		.4byte	0
 4732 003b 00000000 		.4byte	0
 4733              	.LLST2:
 4734 003f 10000000 		.4byte	.LVL3
 4735 0043 14000000 		.4byte	.LVL4
 4736 0047 0100     		.2byte	0x1
 4737 0049 52       		.byte	0x52
 4738 004a 14000000 		.4byte	.LVL4
 4739 004e 19000000 		.4byte	.LVL5-1
 4740 0052 0100     		.2byte	0x1
 4741 0054 53       		.byte	0x53
 4742 0055 00000000 		.4byte	0
 4743 0059 00000000 		.4byte	0
 4744              	.LLST3:
 4745 005d 06000000 		.4byte	.LVL8
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 146


 4746 0061 11000000 		.4byte	.LVL10-1
 4747 0065 0100     		.2byte	0x1
 4748 0067 50       		.byte	0x50
 4749 0068 00000000 		.4byte	0
 4750 006c 00000000 		.4byte	0
 4751              	.LLST4:
 4752 0070 0E000000 		.4byte	.LVL9
 4753 0074 14000000 		.4byte	.LVL11
 4754 0078 0100     		.2byte	0x1
 4755 007a 54       		.byte	0x54
 4756 007b 14000000 		.4byte	.LVL11
 4757 007f 1C000000 		.4byte	.LFE8
 4758 0083 0100     		.2byte	0x1
 4759 0085 50       		.byte	0x50
 4760 0086 00000000 		.4byte	0
 4761 008a 00000000 		.4byte	0
 4762              	.LLST5:
 4763 008e 00000000 		.4byte	.LVL12
 4764 0092 07000000 		.4byte	.LVL13-1
 4765 0096 0100     		.2byte	0x1
 4766 0098 50       		.byte	0x50
 4767 0099 07000000 		.4byte	.LVL13-1
 4768 009d 0A000000 		.4byte	.LVL14
 4769 00a1 0100     		.2byte	0x1
 4770 00a3 54       		.byte	0x54
 4771 00a4 0A000000 		.4byte	.LVL14
 4772 00a8 24000000 		.4byte	.LFE9
 4773 00ac 0400     		.2byte	0x4
 4774 00ae F3       		.byte	0xf3
 4775 00af 01       		.uleb128 0x1
 4776 00b0 50       		.byte	0x50
 4777 00b1 9F       		.byte	0x9f
 4778 00b2 00000000 		.4byte	0
 4779 00b6 00000000 		.4byte	0
 4780              	.LLST6:
 4781 00ba 08000000 		.4byte	.LVL13
 4782 00be 1D000000 		.4byte	.LVL15-1
 4783 00c2 0100     		.2byte	0x1
 4784 00c4 50       		.byte	0x50
 4785 00c5 00000000 		.4byte	0
 4786 00c9 00000000 		.4byte	0
 4787              	.LLST7:
 4788 00cd 00000000 		.4byte	.LVL16
 4789 00d1 07000000 		.4byte	.LVL17-1
 4790 00d5 0100     		.2byte	0x1
 4791 00d7 50       		.byte	0x50
 4792 00d8 07000000 		.4byte	.LVL17-1
 4793 00dc 14000000 		.4byte	.LVL18
 4794 00e0 0100     		.2byte	0x1
 4795 00e2 54       		.byte	0x54
 4796 00e3 14000000 		.4byte	.LVL18
 4797 00e7 24000000 		.4byte	.LFE11
 4798 00eb 0400     		.2byte	0x4
 4799 00ed F3       		.byte	0xf3
 4800 00ee 01       		.uleb128 0x1
 4801 00ef 50       		.byte	0x50
 4802 00f0 9F       		.byte	0x9f
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 147


 4803 00f1 00000000 		.4byte	0
 4804 00f5 00000000 		.4byte	0
 4805              	.LLST8:
 4806 00f9 08000000 		.4byte	.LVL17
 4807 00fd 1D000000 		.4byte	.LVL19-1
 4808 0101 0100     		.2byte	0x1
 4809 0103 50       		.byte	0x50
 4810 0104 00000000 		.4byte	0
 4811 0108 00000000 		.4byte	0
 4812              	.LLST9:
 4813 010c 00000000 		.4byte	.LVL20
 4814 0110 04000000 		.4byte	.LVL21
 4815 0114 0100     		.2byte	0x1
 4816 0116 50       		.byte	0x50
 4817 0117 04000000 		.4byte	.LVL21
 4818 011b 14000000 		.4byte	.LFE12
 4819 011f 0100     		.2byte	0x1
 4820 0121 52       		.byte	0x52
 4821 0122 00000000 		.4byte	0
 4822 0126 00000000 		.4byte	0
 4823              	.LLST10:
 4824 012a 00000000 		.4byte	.LVL26
 4825 012e 04000000 		.4byte	.LVL27
 4826 0132 0100     		.2byte	0x1
 4827 0134 50       		.byte	0x50
 4828 0135 04000000 		.4byte	.LVL27
 4829 0139 14000000 		.4byte	.LFE21
 4830 013d 0400     		.2byte	0x4
 4831 013f F3       		.byte	0xf3
 4832 0140 01       		.uleb128 0x1
 4833 0141 50       		.byte	0x50
 4834 0142 9F       		.byte	0x9f
 4835 0143 00000000 		.4byte	0
 4836 0147 00000000 		.4byte	0
 4837              	.LLST11:
 4838 014b 00000000 		.4byte	.LVL28
 4839 014f 08000000 		.4byte	.LVL29
 4840 0153 0100     		.2byte	0x1
 4841 0155 50       		.byte	0x50
 4842 0156 08000000 		.4byte	.LVL29
 4843 015a 18000000 		.4byte	.LFE22
 4844 015e 0400     		.2byte	0x4
 4845 0160 F3       		.byte	0xf3
 4846 0161 01       		.uleb128 0x1
 4847 0162 50       		.byte	0x50
 4848 0163 9F       		.byte	0x9f
 4849 0164 00000000 		.4byte	0
 4850 0168 00000000 		.4byte	0
 4851              	.LLST12:
 4852 016c 00000000 		.4byte	.LVL30
 4853 0170 04000000 		.4byte	.LVL31
 4854 0174 0100     		.2byte	0x1
 4855 0176 50       		.byte	0x50
 4856 0177 04000000 		.4byte	.LVL31
 4857 017b 14000000 		.4byte	.LFE23
 4858 017f 0400     		.2byte	0x4
 4859 0181 F3       		.byte	0xf3
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 148


 4860 0182 01       		.uleb128 0x1
 4861 0183 50       		.byte	0x50
 4862 0184 9F       		.byte	0x9f
 4863 0185 00000000 		.4byte	0
 4864 0189 00000000 		.4byte	0
 4865              	.LLST13:
 4866 018d 00000000 		.4byte	.LVL32
 4867 0191 04000000 		.4byte	.LVL33
 4868 0195 0100     		.2byte	0x1
 4869 0197 50       		.byte	0x50
 4870 0198 04000000 		.4byte	.LVL33
 4871 019c 14000000 		.4byte	.LFE24
 4872 01a0 0400     		.2byte	0x4
 4873 01a2 F3       		.byte	0xf3
 4874 01a3 01       		.uleb128 0x1
 4875 01a4 50       		.byte	0x50
 4876 01a5 9F       		.byte	0x9f
 4877 01a6 00000000 		.4byte	0
 4878 01aa 00000000 		.4byte	0
 4879              	.LLST14:
 4880 01ae 00000000 		.4byte	.LVL34
 4881 01b2 04000000 		.4byte	.LVL35
 4882 01b6 0100     		.2byte	0x1
 4883 01b8 50       		.byte	0x50
 4884 01b9 04000000 		.4byte	.LVL35
 4885 01bd 14000000 		.4byte	.LFE25
 4886 01c1 0400     		.2byte	0x4
 4887 01c3 F3       		.byte	0xf3
 4888 01c4 01       		.uleb128 0x1
 4889 01c5 50       		.byte	0x50
 4890 01c6 9F       		.byte	0x9f
 4891 01c7 00000000 		.4byte	0
 4892 01cb 00000000 		.4byte	0
 4893              	.LLST15:
 4894 01cf 00000000 		.4byte	.LVL37
 4895 01d3 0C000000 		.4byte	.LVL39
 4896 01d7 0100     		.2byte	0x1
 4897 01d9 50       		.byte	0x50
 4898 01da 0C000000 		.4byte	.LVL39
 4899 01de 20000000 		.4byte	.LFE15
 4900 01e2 0400     		.2byte	0x4
 4901 01e4 F3       		.byte	0xf3
 4902 01e5 01       		.uleb128 0x1
 4903 01e6 50       		.byte	0x50
 4904 01e7 9F       		.byte	0x9f
 4905 01e8 00000000 		.4byte	0
 4906 01ec 00000000 		.4byte	0
 4907              	.LLST16:
 4908 01f0 00000000 		.4byte	.LVL37
 4909 01f4 0F000000 		.4byte	.LVL40-1
 4910 01f8 0100     		.2byte	0x1
 4911 01fa 51       		.byte	0x51
 4912 01fb 0F000000 		.4byte	.LVL40-1
 4913 01ff 1E000000 		.4byte	.LVL42
 4914 0203 0100     		.2byte	0x1
 4915 0205 55       		.byte	0x55
 4916 0206 1E000000 		.4byte	.LVL42
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 149


 4917 020a 20000000 		.4byte	.LFE15
 4918 020e 0400     		.2byte	0x4
 4919 0210 F3       		.byte	0xf3
 4920 0211 01       		.uleb128 0x1
 4921 0212 51       		.byte	0x51
 4922 0213 9F       		.byte	0x9f
 4923 0214 00000000 		.4byte	0
 4924 0218 00000000 		.4byte	0
 4925              	.LLST17:
 4926 021c 00000000 		.4byte	.LVL43
 4927 0220 0A000000 		.4byte	.LVL45
 4928 0224 0100     		.2byte	0x1
 4929 0226 50       		.byte	0x50
 4930 0227 0A000000 		.4byte	.LVL45
 4931 022b 1C000000 		.4byte	.LFE16
 4932 022f 0400     		.2byte	0x4
 4933 0231 F3       		.byte	0xf3
 4934 0232 01       		.uleb128 0x1
 4935 0233 50       		.byte	0x50
 4936 0234 9F       		.byte	0x9f
 4937 0235 00000000 		.4byte	0
 4938 0239 00000000 		.4byte	0
 4939              	.LLST18:
 4940 023d 00000000 		.4byte	.LVL47
 4941 0241 0C000000 		.4byte	.LVL49
 4942 0245 0100     		.2byte	0x1
 4943 0247 50       		.byte	0x50
 4944 0248 0C000000 		.4byte	.LVL49
 4945 024c 24000000 		.4byte	.LFE17
 4946 0250 0400     		.2byte	0x4
 4947 0252 F3       		.byte	0xf3
 4948 0253 01       		.uleb128 0x1
 4949 0254 50       		.byte	0x50
 4950 0255 9F       		.byte	0x9f
 4951 0256 00000000 		.4byte	0
 4952 025a 00000000 		.4byte	0
 4953              	.LLST19:
 4954 025e 00000000 		.4byte	.LVL47
 4955 0262 0F000000 		.4byte	.LVL50-1
 4956 0266 0100     		.2byte	0x1
 4957 0268 51       		.byte	0x51
 4958 0269 0F000000 		.4byte	.LVL50-1
 4959 026d 1C000000 		.4byte	.LVL52
 4960 0271 0100     		.2byte	0x1
 4961 0273 55       		.byte	0x55
 4962 0274 1C000000 		.4byte	.LVL52
 4963 0278 24000000 		.4byte	.LFE17
 4964 027c 0400     		.2byte	0x4
 4965 027e F3       		.byte	0xf3
 4966 027f 01       		.uleb128 0x1
 4967 0280 51       		.byte	0x51
 4968 0281 9F       		.byte	0x9f
 4969 0282 00000000 		.4byte	0
 4970 0286 00000000 		.4byte	0
 4971              	.LLST20:
 4972 028a 00000000 		.4byte	.LVL53
 4973 028e 0A000000 		.4byte	.LVL55
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 150


 4974 0292 0100     		.2byte	0x1
 4975 0294 50       		.byte	0x50
 4976 0295 0A000000 		.4byte	.LVL55
 4977 0299 20000000 		.4byte	.LFE18
 4978 029d 0400     		.2byte	0x4
 4979 029f F3       		.byte	0xf3
 4980 02a0 01       		.uleb128 0x1
 4981 02a1 50       		.byte	0x50
 4982 02a2 9F       		.byte	0x9f
 4983 02a3 00000000 		.4byte	0
 4984 02a7 00000000 		.4byte	0
 4985              	.LLST21:
 4986 02ab 00000000 		.4byte	.LVL57
 4987 02af 0C000000 		.4byte	.LVL58
 4988 02b3 0100     		.2byte	0x1
 4989 02b5 50       		.byte	0x50
 4990 02b6 0C000000 		.4byte	.LVL58
 4991 02ba 4C000000 		.4byte	.LFE19
 4992 02be 0400     		.2byte	0x4
 4993 02c0 F3       		.byte	0xf3
 4994 02c1 01       		.uleb128 0x1
 4995 02c2 50       		.byte	0x50
 4996 02c3 9F       		.byte	0x9f
 4997 02c4 00000000 		.4byte	0
 4998 02c8 00000000 		.4byte	0
 4999              	.LLST22:
 5000 02cc 00000000 		.4byte	.LVL57
 5001 02d0 0F000000 		.4byte	.LVL59-1
 5002 02d4 0100     		.2byte	0x1
 5003 02d6 51       		.byte	0x51
 5004 02d7 0F000000 		.4byte	.LVL59-1
 5005 02db 4C000000 		.4byte	.LFE19
 5006 02df 0400     		.2byte	0x4
 5007 02e1 F3       		.byte	0xf3
 5008 02e2 01       		.uleb128 0x1
 5009 02e3 51       		.byte	0x51
 5010 02e4 9F       		.byte	0x9f
 5011 02e5 00000000 		.4byte	0
 5012 02e9 00000000 		.4byte	0
 5013              	.LLST23:
 5014 02ed 26000000 		.4byte	.LVL62
 5015 02f1 43000000 		.4byte	.LVL67-1
 5016 02f5 0100     		.2byte	0x1
 5017 02f7 50       		.byte	0x50
 5018 02f8 00000000 		.4byte	0
 5019 02fc 00000000 		.4byte	0
 5020              	.LLST24:
 5021 0300 22000000 		.4byte	.LVL61
 5022 0304 3C000000 		.4byte	.LVL65
 5023 0308 0100     		.2byte	0x1
 5024 030a 55       		.byte	0x55
 5025 030b 00000000 		.4byte	0
 5026 030f 00000000 		.4byte	0
 5027              	.LLST25:
 5028 0313 32000000 		.4byte	.LVL63
 5029 0317 3E000000 		.4byte	.LVL66
 5030 031b 0100     		.2byte	0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 151


 5031 031d 53       		.byte	0x53
 5032 031e 3E000000 		.4byte	.LVL66
 5033 0322 44000000 		.4byte	.LVL68
 5034 0326 0100     		.2byte	0x1
 5035 0328 55       		.byte	0x55
 5036 0329 00000000 		.4byte	0
 5037 032d 00000000 		.4byte	0
 5038              	.LLST26:
 5039 0331 00000000 		.4byte	.LVL69
 5040 0335 0A000000 		.4byte	.LVL70
 5041 0339 0100     		.2byte	0x1
 5042 033b 50       		.byte	0x50
 5043 033c 0A000000 		.4byte	.LVL70
 5044 0340 2C000000 		.4byte	.LFE20
 5045 0344 0400     		.2byte	0x4
 5046 0346 F3       		.byte	0xf3
 5047 0347 01       		.uleb128 0x1
 5048 0348 50       		.byte	0x50
 5049 0349 9F       		.byte	0x9f
 5050 034a 00000000 		.4byte	0
 5051 034e 00000000 		.4byte	0
 5052              	.LLST27:
 5053 0352 24000000 		.4byte	.LVL72
 5054 0356 26000000 		.4byte	.LVL73
 5055 035a 0100     		.2byte	0x1
 5056 035c 50       		.byte	0x50
 5057 035d 00000000 		.4byte	0
 5058 0361 00000000 		.4byte	0
 5059              	.LLST28:
 5060 0365 00000000 		.4byte	.LVL74
 5061 0369 06000000 		.4byte	.LVL75
 5062 036d 0100     		.2byte	0x1
 5063 036f 50       		.byte	0x50
 5064 0370 06000000 		.4byte	.LVL75
 5065 0374 26000000 		.4byte	.LVL79
 5066 0378 0100     		.2byte	0x1
 5067 037a 54       		.byte	0x54
 5068 037b 00000000 		.4byte	0
 5069 037f 00000000 		.4byte	0
 5070              	.LLST29:
 5071 0383 2C000000 		.4byte	.LVL84
 5072 0387 56000000 		.4byte	.LVL88
 5073 038b 0100     		.2byte	0x1
 5074 038d 52       		.byte	0x52
 5075 038e 5A000000 		.4byte	.LVL90
 5076 0392 62000000 		.4byte	.LVL91
 5077 0396 0100     		.2byte	0x1
 5078 0398 52       		.byte	0x52
 5079 0399 62000000 		.4byte	.LVL91
 5080 039d 72000000 		.4byte	.LVL95
 5081 03a1 0300     		.2byte	0x3
 5082 03a3 72       		.byte	0x72
 5083 03a4 1A       		.sleb128 26
 5084 03a5 9F       		.byte	0x9f
 5085 03a6 00000000 		.4byte	0
 5086 03aa 00000000 		.4byte	0
 5087              	.LLST30:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 152


 5088 03ae 12000000 		.4byte	.LVL83
 5089 03b2 9E000000 		.4byte	.LVL100
 5090 03b6 0100     		.2byte	0x1
 5091 03b8 54       		.byte	0x54
 5092 03b9 00000000 		.4byte	0
 5093 03bd 00000000 		.4byte	0
 5094              	.LLST31:
 5095 03c1 34000000 		.4byte	.LVL85
 5096 03c5 4A000000 		.4byte	.LVL86
 5097 03c9 0100     		.2byte	0x1
 5098 03cb 51       		.byte	0x51
 5099 03cc 4A000000 		.4byte	.LVL86
 5100 03d0 50000000 		.4byte	.LVL87
 5101 03d4 0100     		.2byte	0x1
 5102 03d6 53       		.byte	0x53
 5103 03d7 50000000 		.4byte	.LVL87
 5104 03db 58000000 		.4byte	.LVL89
 5105 03df 0100     		.2byte	0x1
 5106 03e1 51       		.byte	0x51
 5107 03e2 58000000 		.4byte	.LVL89
 5108 03e6 5A000000 		.4byte	.LVL90
 5109 03ea 0100     		.2byte	0x1
 5110 03ec 53       		.byte	0x53
 5111 03ed 5A000000 		.4byte	.LVL90
 5112 03f1 72000000 		.4byte	.LVL95
 5113 03f5 0100     		.2byte	0x1
 5114 03f7 51       		.byte	0x51
 5115 03f8 72000000 		.4byte	.LVL95
 5116 03fc 7A000000 		.4byte	.LVL96
 5117 0400 0100     		.2byte	0x1
 5118 0402 53       		.byte	0x53
 5119 0403 7A000000 		.4byte	.LVL96
 5120 0407 7C000000 		.4byte	.LVL97
 5121 040b 0200     		.2byte	0x2
 5122 040d 72       		.byte	0x72
 5123 040e 00       		.sleb128 0
 5124 040f 00000000 		.4byte	0
 5125 0413 00000000 		.4byte	0
 5126              	.LLST32:
 5127 0417 04000000 		.4byte	.LVL80
 5128 041b 68000000 		.4byte	.LVL92
 5129 041f 0200     		.2byte	0x2
 5130 0421 30       		.byte	0x30
 5131 0422 9F       		.byte	0x9f
 5132 0423 6E000000 		.4byte	.LVL93
 5133 0427 70000000 		.4byte	.LVL94
 5134 042b 0100     		.2byte	0x1
 5135 042d 53       		.byte	0x53
 5136 042e 00000000 		.4byte	0
 5137 0432 00000000 		.4byte	0
 5138              	.LLST33:
 5139 0436 00000000 		.4byte	.LVL101
 5140 043a 25000000 		.4byte	.LVL103-1
 5141 043e 0100     		.2byte	0x1
 5142 0440 50       		.byte	0x50
 5143 0441 25000000 		.4byte	.LVL103-1
 5144 0445 A0000000 		.4byte	.LVL116
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 153


 5145 0449 0100     		.2byte	0x1
 5146 044b 54       		.byte	0x54
 5147 044c A0000000 		.4byte	.LVL116
 5148 0450 B6000000 		.4byte	.LVL119
 5149 0454 0400     		.2byte	0x4
 5150 0456 F3       		.byte	0xf3
 5151 0457 01       		.uleb128 0x1
 5152 0458 50       		.byte	0x50
 5153 0459 9F       		.byte	0x9f
 5154 045a B6000000 		.4byte	.LVL119
 5155 045e B8000000 		.4byte	.LVL120
 5156 0462 0100     		.2byte	0x1
 5157 0464 50       		.byte	0x50
 5158 0465 B8000000 		.4byte	.LVL120
 5159 0469 BC000000 		.4byte	.LVL121
 5160 046d 0100     		.2byte	0x1
 5161 046f 54       		.byte	0x54
 5162 0470 BC000000 		.4byte	.LVL121
 5163 0474 D8000000 		.4byte	.LFE10
 5164 0478 0400     		.2byte	0x4
 5165 047a F3       		.byte	0xf3
 5166 047b 01       		.uleb128 0x1
 5167 047c 50       		.byte	0x50
 5168 047d 9F       		.byte	0x9f
 5169 047e 00000000 		.4byte	0
 5170 0482 00000000 		.4byte	0
 5171              	.LLST34:
 5172 0486 28000000 		.4byte	.LVL104
 5173 048a 44000000 		.4byte	.LVL110
 5174 048e 0200     		.2byte	0x2
 5175 0490 91       		.byte	0x91
 5176 0491 64       		.sleb128 -28
 5177 0492 00000000 		.4byte	0
 5178 0496 00000000 		.4byte	0
 5179              	.LLST35:
 5180 049a 4C000000 		.4byte	.LVL111
 5181 049e 54000000 		.4byte	.LVL112
 5182 04a2 0100     		.2byte	0x1
 5183 04a4 53       		.byte	0x53
 5184 04a5 54000000 		.4byte	.LVL112
 5185 04a9 58000000 		.4byte	.LVL113
 5186 04ad 0700     		.2byte	0x7
 5187 04af 0C       		.byte	0xc
 5188 04b0 0C0F0340 		.4byte	0x40030f0c
 5189 04b4 06       		.byte	0x6
 5190 04b5 9F       		.byte	0x9f
 5191 04b6 00000000 		.4byte	0
 5192 04ba 00000000 		.4byte	0
 5193              	.LLST36:
 5194 04be 06000000 		.4byte	.LVL102
 5195 04c2 30000000 		.4byte	.LVL106
 5196 04c6 0200     		.2byte	0x2
 5197 04c8 30       		.byte	0x30
 5198 04c9 9F       		.byte	0x9f
 5199 04ca 30000000 		.4byte	.LVL106
 5200 04ce 38000000 		.4byte	.LVL108
 5201 04d2 0200     		.2byte	0x2
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 154


 5202 04d4 31       		.byte	0x31
 5203 04d5 9F       		.byte	0x9f
 5204 04d6 38000000 		.4byte	.LVL108
 5205 04da 3A000000 		.4byte	.LVL109
 5206 04de 0200     		.2byte	0x2
 5207 04e0 30       		.byte	0x30
 5208 04e1 9F       		.byte	0x9f
 5209 04e2 3A000000 		.4byte	.LVL109
 5210 04e6 B6000000 		.4byte	.LVL119
 5211 04ea 0100     		.2byte	0x1
 5212 04ec 56       		.byte	0x56
 5213 04ed B6000000 		.4byte	.LVL119
 5214 04f1 BC000000 		.4byte	.LVL121
 5215 04f5 0200     		.2byte	0x2
 5216 04f7 30       		.byte	0x30
 5217 04f8 9F       		.byte	0x9f
 5218 04f9 00000000 		.4byte	0
 5219 04fd 00000000 		.4byte	0
 5220              	.LLST37:
 5221 0501 00000000 		.4byte	.LVL122
 5222 0505 08000000 		.4byte	.LVL123
 5223 0509 0100     		.2byte	0x1
 5224 050b 50       		.byte	0x50
 5225 050c 08000000 		.4byte	.LVL123
 5226 0510 14000000 		.4byte	.LFE29
 5227 0514 0400     		.2byte	0x4
 5228 0516 F3       		.byte	0xf3
 5229 0517 01       		.uleb128 0x1
 5230 0518 50       		.byte	0x50
 5231 0519 9F       		.byte	0x9f
 5232 051a 00000000 		.4byte	0
 5233 051e 00000000 		.4byte	0
 5234              	.LLST38:
 5235 0522 00000000 		.4byte	.LVL125
 5236 0526 1A000000 		.4byte	.LVL126
 5237 052a 0100     		.2byte	0x1
 5238 052c 50       		.byte	0x50
 5239 052d 1A000000 		.4byte	.LVL126
 5240 0531 4C000000 		.4byte	.LFE30
 5241 0535 0400     		.2byte	0x4
 5242 0537 F3       		.byte	0xf3
 5243 0538 01       		.uleb128 0x1
 5244 0539 50       		.byte	0x50
 5245 053a 9F       		.byte	0x9f
 5246 053b 00000000 		.4byte	0
 5247 053f 00000000 		.4byte	0
 5248              	.LLST39:
 5249 0543 00000000 		.4byte	.LVL130
 5250 0547 02000000 		.4byte	.LVL131
 5251 054b 0100     		.2byte	0x1
 5252 054d 50       		.byte	0x50
 5253 054e 02000000 		.4byte	.LVL131
 5254 0552 10000000 		.4byte	.LFE37
 5255 0556 0400     		.2byte	0x4
 5256 0558 F3       		.byte	0xf3
 5257 0559 01       		.uleb128 0x1
 5258 055a 50       		.byte	0x50
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 155


 5259 055b 9F       		.byte	0x9f
 5260 055c 00000000 		.4byte	0
 5261 0560 00000000 		.4byte	0
 5262              	.LLST40:
 5263 0564 0C000000 		.4byte	.LVL134
 5264 0568 1C000000 		.4byte	.LVL137
 5265 056c 0100     		.2byte	0x1
 5266 056e 54       		.byte	0x54
 5267 056f 1E000000 		.4byte	.LVL138
 5268 0573 22000000 		.4byte	.LVL139
 5269 0577 0100     		.2byte	0x1
 5270 0579 54       		.byte	0x54
 5271 057a 00000000 		.4byte	0
 5272 057e 00000000 		.4byte	0
 5273              	.LLST41:
 5274 0582 02000000 		.4byte	.LVL140
 5275 0586 06000000 		.4byte	.LVL141
 5276 058a 0200     		.2byte	0x2
 5277 058c 30       		.byte	0x30
 5278 058d 9F       		.byte	0x9f
 5279 058e 06000000 		.4byte	.LVL141
 5280 0592 1B000000 		.4byte	.LVL143-1
 5281 0596 0100     		.2byte	0x1
 5282 0598 53       		.byte	0x53
 5283 0599 00000000 		.4byte	0
 5284 059d 00000000 		.4byte	0
 5285              	.LLST42:
 5286 05a1 00000000 		.4byte	.LVL151
 5287 05a5 06000000 		.4byte	.LVL152
 5288 05a9 0100     		.2byte	0x1
 5289 05ab 50       		.byte	0x50
 5290 05ac 06000000 		.4byte	.LVL152
 5291 05b0 10000000 		.4byte	.LFE44
 5292 05b4 0400     		.2byte	0x4
 5293 05b6 F3       		.byte	0xf3
 5294 05b7 01       		.uleb128 0x1
 5295 05b8 50       		.byte	0x50
 5296 05b9 9F       		.byte	0x9f
 5297 05ba 00000000 		.4byte	0
 5298 05be 00000000 		.4byte	0
 5299              	.LLST43:
 5300 05c2 00000000 		.4byte	.LVL153
 5301 05c6 02000000 		.4byte	.LVL154
 5302 05ca 0100     		.2byte	0x1
 5303 05cc 50       		.byte	0x50
 5304 05cd 02000000 		.4byte	.LVL154
 5305 05d1 0C000000 		.4byte	.LFE45
 5306 05d5 0400     		.2byte	0x4
 5307 05d7 F3       		.byte	0xf3
 5308 05d8 01       		.uleb128 0x1
 5309 05d9 50       		.byte	0x50
 5310 05da 9F       		.byte	0x9f
 5311 05db 00000000 		.4byte	0
 5312 05df 00000000 		.4byte	0
 5313              	.LLST44:
 5314 05e3 00000000 		.4byte	.LVL156
 5315 05e7 0A000000 		.4byte	.LVL158
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 156


 5316 05eb 0100     		.2byte	0x1
 5317 05ed 50       		.byte	0x50
 5318 05ee 0A000000 		.4byte	.LVL158
 5319 05f2 20000000 		.4byte	.LFE48
 5320 05f6 0400     		.2byte	0x4
 5321 05f8 F3       		.byte	0xf3
 5322 05f9 01       		.uleb128 0x1
 5323 05fa 50       		.byte	0x50
 5324 05fb 9F       		.byte	0x9f
 5325 05fc 00000000 		.4byte	0
 5326 0600 00000000 		.4byte	0
 5327              	.LLST45:
 5328 0604 08000000 		.4byte	.LVL157
 5329 0608 12000000 		.4byte	.LVL159
 5330 060c 0100     		.2byte	0x1
 5331 060e 53       		.byte	0x53
 5332 060f 12000000 		.4byte	.LVL159
 5333 0613 20000000 		.4byte	.LFE48
 5334 0617 0100     		.2byte	0x1
 5335 0619 50       		.byte	0x50
 5336 061a 00000000 		.4byte	0
 5337 061e 00000000 		.4byte	0
 5338              	.LLST46:
 5339 0622 00000000 		.4byte	.LVL160
 5340 0626 0A000000 		.4byte	.LVL162
 5341 062a 0100     		.2byte	0x1
 5342 062c 50       		.byte	0x50
 5343 062d 0A000000 		.4byte	.LVL162
 5344 0631 20000000 		.4byte	.LFE49
 5345 0635 0400     		.2byte	0x4
 5346 0637 F3       		.byte	0xf3
 5347 0638 01       		.uleb128 0x1
 5348 0639 50       		.byte	0x50
 5349 063a 9F       		.byte	0x9f
 5350 063b 00000000 		.4byte	0
 5351 063f 00000000 		.4byte	0
 5352              	.LLST47:
 5353 0643 08000000 		.4byte	.LVL161
 5354 0647 12000000 		.4byte	.LVL163
 5355 064b 0100     		.2byte	0x1
 5356 064d 53       		.byte	0x53
 5357 064e 12000000 		.4byte	.LVL163
 5358 0652 20000000 		.4byte	.LFE49
 5359 0656 0100     		.2byte	0x1
 5360 0658 50       		.byte	0x50
 5361 0659 00000000 		.4byte	0
 5362 065d 00000000 		.4byte	0
 5363              	.LLST48:
 5364 0661 00000000 		.4byte	.LVL164
 5365 0665 0A000000 		.4byte	.LVL166
 5366 0669 0100     		.2byte	0x1
 5367 066b 50       		.byte	0x50
 5368 066c 0A000000 		.4byte	.LVL166
 5369 0670 20000000 		.4byte	.LFE50
 5370 0674 0400     		.2byte	0x4
 5371 0676 F3       		.byte	0xf3
 5372 0677 01       		.uleb128 0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 157


 5373 0678 50       		.byte	0x50
 5374 0679 9F       		.byte	0x9f
 5375 067a 00000000 		.4byte	0
 5376 067e 00000000 		.4byte	0
 5377              	.LLST49:
 5378 0682 08000000 		.4byte	.LVL165
 5379 0686 12000000 		.4byte	.LVL167
 5380 068a 0100     		.2byte	0x1
 5381 068c 53       		.byte	0x53
 5382 068d 12000000 		.4byte	.LVL167
 5383 0691 20000000 		.4byte	.LFE50
 5384 0695 0100     		.2byte	0x1
 5385 0697 50       		.byte	0x50
 5386 0698 00000000 		.4byte	0
 5387 069c 00000000 		.4byte	0
 5388              	.LLST50:
 5389 06a0 00000000 		.4byte	.LVL168
 5390 06a4 08000000 		.4byte	.LVL169
 5391 06a8 0100     		.2byte	0x1
 5392 06aa 50       		.byte	0x50
 5393 06ab 08000000 		.4byte	.LVL169
 5394 06af 1C000000 		.4byte	.LVL173
 5395 06b3 0400     		.2byte	0x4
 5396 06b5 F3       		.byte	0xf3
 5397 06b6 01       		.uleb128 0x1
 5398 06b7 50       		.byte	0x50
 5399 06b8 9F       		.byte	0x9f
 5400 06b9 1C000000 		.4byte	.LVL173
 5401 06bd 22000000 		.4byte	.LVL174
 5402 06c1 0100     		.2byte	0x1
 5403 06c3 50       		.byte	0x50
 5404 06c4 22000000 		.4byte	.LVL174
 5405 06c8 36000000 		.4byte	.LVL178
 5406 06cc 0400     		.2byte	0x4
 5407 06ce F3       		.byte	0xf3
 5408 06cf 01       		.uleb128 0x1
 5409 06d0 50       		.byte	0x50
 5410 06d1 9F       		.byte	0x9f
 5411 06d2 36000000 		.4byte	.LVL178
 5412 06d6 38000000 		.4byte	.LVL179
 5413 06da 0100     		.2byte	0x1
 5414 06dc 50       		.byte	0x50
 5415 06dd 38000000 		.4byte	.LVL179
 5416 06e1 4C000000 		.4byte	.LFE51
 5417 06e5 0400     		.2byte	0x4
 5418 06e7 F3       		.byte	0xf3
 5419 06e8 01       		.uleb128 0x1
 5420 06e9 50       		.byte	0x50
 5421 06ea 9F       		.byte	0x9f
 5422 06eb 00000000 		.4byte	0
 5423 06ef 00000000 		.4byte	0
 5424              	.LLST51:
 5425 06f3 00000000 		.4byte	.LVL168
 5426 06f7 10000000 		.4byte	.LVL171
 5427 06fb 0100     		.2byte	0x1
 5428 06fd 51       		.byte	0x51
 5429 06fe 10000000 		.4byte	.LVL171
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 158


 5430 0702 1C000000 		.4byte	.LVL173
 5431 0706 0400     		.2byte	0x4
 5432 0708 F3       		.byte	0xf3
 5433 0709 01       		.uleb128 0x1
 5434 070a 51       		.byte	0x51
 5435 070b 9F       		.byte	0x9f
 5436 070c 1C000000 		.4byte	.LVL173
 5437 0710 2A000000 		.4byte	.LVL176
 5438 0714 0100     		.2byte	0x1
 5439 0716 51       		.byte	0x51
 5440 0717 2A000000 		.4byte	.LVL176
 5441 071b 36000000 		.4byte	.LVL178
 5442 071f 0400     		.2byte	0x4
 5443 0721 F3       		.byte	0xf3
 5444 0722 01       		.uleb128 0x1
 5445 0723 51       		.byte	0x51
 5446 0724 9F       		.byte	0x9f
 5447 0725 36000000 		.4byte	.LVL178
 5448 0729 3B000000 		.4byte	.LVL180-1
 5449 072d 0100     		.2byte	0x1
 5450 072f 51       		.byte	0x51
 5451 0730 3B000000 		.4byte	.LVL180-1
 5452 0734 4C000000 		.4byte	.LFE51
 5453 0738 0400     		.2byte	0x4
 5454 073a F3       		.byte	0xf3
 5455 073b 01       		.uleb128 0x1
 5456 073c 51       		.byte	0x51
 5457 073d 9F       		.byte	0x9f
 5458 073e 00000000 		.4byte	0
 5459 0742 00000000 		.4byte	0
 5460              	.LLST52:
 5461 0746 0E000000 		.4byte	.LVL170
 5462 074a 18000000 		.4byte	.LVL172
 5463 074e 0100     		.2byte	0x1
 5464 0750 53       		.byte	0x53
 5465 0751 18000000 		.4byte	.LVL172
 5466 0755 1C000000 		.4byte	.LVL173
 5467 0759 0100     		.2byte	0x1
 5468 075b 51       		.byte	0x51
 5469 075c 28000000 		.4byte	.LVL175
 5470 0760 32000000 		.4byte	.LVL177
 5471 0764 0100     		.2byte	0x1
 5472 0766 53       		.byte	0x53
 5473 0767 32000000 		.4byte	.LVL177
 5474 076b 36000000 		.4byte	.LVL178
 5475 076f 0100     		.2byte	0x1
 5476 0771 51       		.byte	0x51
 5477 0772 00000000 		.4byte	0
 5478 0776 00000000 		.4byte	0
 5479              	.LLST53:
 5480 077a 00000000 		.4byte	.LVL181
 5481 077e 08000000 		.4byte	.LVL182
 5482 0782 0100     		.2byte	0x1
 5483 0784 50       		.byte	0x50
 5484 0785 08000000 		.4byte	.LVL182
 5485 0789 0C000000 		.4byte	.LVL183
 5486 078d 0100     		.2byte	0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 159


 5487 078f 53       		.byte	0x53
 5488 0790 0C000000 		.4byte	.LVL183
 5489 0794 18000000 		.4byte	.LFE52
 5490 0798 0400     		.2byte	0x4
 5491 079a F3       		.byte	0xf3
 5492 079b 01       		.uleb128 0x1
 5493 079c 50       		.byte	0x50
 5494 079d 9F       		.byte	0x9f
 5495 079e 00000000 		.4byte	0
 5496 07a2 00000000 		.4byte	0
 5497              	.LLST54:
 5498 07a6 00000000 		.4byte	.LVL184
 5499 07aa 0A000000 		.4byte	.LVL185
 5500 07ae 0100     		.2byte	0x1
 5501 07b0 50       		.byte	0x50
 5502 07b1 0A000000 		.4byte	.LVL185
 5503 07b5 14000000 		.4byte	.LFE53
 5504 07b9 0400     		.2byte	0x4
 5505 07bb F3       		.byte	0xf3
 5506 07bc 01       		.uleb128 0x1
 5507 07bd 50       		.byte	0x50
 5508 07be 9F       		.byte	0x9f
 5509 07bf 00000000 		.4byte	0
 5510 07c3 00000000 		.4byte	0
 5511              	.LLST55:
 5512 07c7 00000000 		.4byte	.LVL186
 5513 07cb 0C000000 		.4byte	.LVL187
 5514 07cf 0100     		.2byte	0x1
 5515 07d1 50       		.byte	0x50
 5516 07d2 0C000000 		.4byte	.LVL187
 5517 07d6 18000000 		.4byte	.LFE54
 5518 07da 0400     		.2byte	0x4
 5519 07dc F3       		.byte	0xf3
 5520 07dd 01       		.uleb128 0x1
 5521 07de 50       		.byte	0x50
 5522 07df 9F       		.byte	0x9f
 5523 07e0 00000000 		.4byte	0
 5524 07e4 00000000 		.4byte	0
 5525              	.LLST56:
 5526 07e8 00000000 		.4byte	.LVL188
 5527 07ec 0E000000 		.4byte	.LVL189
 5528 07f0 0100     		.2byte	0x1
 5529 07f2 50       		.byte	0x50
 5530 07f3 0E000000 		.4byte	.LVL189
 5531 07f7 14000000 		.4byte	.LVL190
 5532 07fb 0400     		.2byte	0x4
 5533 07fd F3       		.byte	0xf3
 5534 07fe 01       		.uleb128 0x1
 5535 07ff 50       		.byte	0x50
 5536 0800 9F       		.byte	0x9f
 5537 0801 14000000 		.4byte	.LVL190
 5538 0805 1E000000 		.4byte	.LVL191
 5539 0809 0100     		.2byte	0x1
 5540 080b 50       		.byte	0x50
 5541 080c 1E000000 		.4byte	.LVL191
 5542 0810 2C000000 		.4byte	.LFE59
 5543 0814 0400     		.2byte	0x4
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 160


 5544 0816 F3       		.byte	0xf3
 5545 0817 01       		.uleb128 0x1
 5546 0818 50       		.byte	0x50
 5547 0819 9F       		.byte	0x9f
 5548 081a 00000000 		.4byte	0
 5549 081e 00000000 		.4byte	0
 5550              	.LLST57:
 5551 0822 00000000 		.4byte	.LVL188
 5552 0826 14000000 		.4byte	.LVL190
 5553 082a 0200     		.2byte	0x2
 5554 082c 30       		.byte	0x30
 5555 082d 9F       		.byte	0x9f
 5556 082e 14000000 		.4byte	.LVL190
 5557 0832 1E000000 		.4byte	.LVL191
 5558 0836 0600     		.2byte	0x6
 5559 0838 70       		.byte	0x70
 5560 0839 00       		.sleb128 0
 5561 083a 08       		.byte	0x8
 5562 083b 20       		.byte	0x20
 5563 083c 21       		.byte	0x21
 5564 083d 9F       		.byte	0x9f
 5565 083e 00000000 		.4byte	0
 5566 0842 00000000 		.4byte	0
 5567              	.LLST58:
 5568 0846 0A000000 		.4byte	.LVL192
 5569 084a 10000000 		.4byte	.LVL193
 5570 084e 0100     		.2byte	0x1
 5571 0850 50       		.byte	0x50
 5572 0851 10000000 		.4byte	.LVL193
 5573 0855 12000000 		.4byte	.LVL194
 5574 0859 0400     		.2byte	0x4
 5575 085b 70       		.byte	0x70
 5576 085c 00       		.sleb128 0
 5577 085d 1F       		.byte	0x1f
 5578 085e 9F       		.byte	0x9f
 5579 085f 12000000 		.4byte	.LVL194
 5580 0863 14000000 		.4byte	.LVL195
 5581 0867 0100     		.2byte	0x1
 5582 0869 50       		.byte	0x50
 5583 086a 00000000 		.4byte	0
 5584 086e 00000000 		.4byte	0
 5585              		.section	.debug_aranges,"",%progbits
 5586 0000 F4010000 		.4byte	0x1f4
 5587 0004 0200     		.2byte	0x2
 5588 0006 00000000 		.4byte	.Ldebug_info0
 5589 000a 04       		.byte	0x4
 5590 000b 00       		.byte	0
 5591 000c 0000     		.2byte	0
 5592 000e 0000     		.2byte	0
 5593 0010 00000000 		.4byte	.LFB1
 5594 0014 14000000 		.4byte	.LFE1-.LFB1
 5595 0018 00000000 		.4byte	.LFB4
 5596 001c 14000000 		.4byte	.LFE4-.LFB4
 5597 0020 00000000 		.4byte	.LFB2
 5598 0024 18000000 		.4byte	.LFE2-.LFB2
 5599 0028 00000000 		.4byte	.LFB5
 5600 002c 14000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 161


 5601 0030 00000000 		.4byte	.LFB6
 5602 0034 20000000 		.4byte	.LFE6-.LFB6
 5603 0038 00000000 		.4byte	.LFB7
 5604 003c 34000000 		.4byte	.LFE7-.LFB7
 5605 0040 00000000 		.4byte	.LFB8
 5606 0044 1C000000 		.4byte	.LFE8-.LFB8
 5607 0048 00000000 		.4byte	.LFB9
 5608 004c 24000000 		.4byte	.LFE9-.LFB9
 5609 0050 00000000 		.4byte	.LFB11
 5610 0054 24000000 		.4byte	.LFE11-.LFB11
 5611 0058 00000000 		.4byte	.LFB12
 5612 005c 14000000 		.4byte	.LFE12-.LFB12
 5613 0060 00000000 		.4byte	.LFB13
 5614 0064 10000000 		.4byte	.LFE13-.LFB13
 5615 0068 00000000 		.4byte	.LFB14
 5616 006c 0C000000 		.4byte	.LFE14-.LFB14
 5617 0070 00000000 		.4byte	.LFB21
 5618 0074 14000000 		.4byte	.LFE21-.LFB21
 5619 0078 00000000 		.4byte	.LFB22
 5620 007c 18000000 		.4byte	.LFE22-.LFB22
 5621 0080 00000000 		.4byte	.LFB23
 5622 0084 14000000 		.4byte	.LFE23-.LFB23
 5623 0088 00000000 		.4byte	.LFB24
 5624 008c 14000000 		.4byte	.LFE24-.LFB24
 5625 0090 00000000 		.4byte	.LFB25
 5626 0094 14000000 		.4byte	.LFE25-.LFB25
 5627 0098 00000000 		.4byte	.LFB26
 5628 009c 04000000 		.4byte	.LFE26-.LFB26
 5629 00a0 00000000 		.4byte	.LFB15
 5630 00a4 20000000 		.4byte	.LFE15-.LFB15
 5631 00a8 00000000 		.4byte	.LFB16
 5632 00ac 1C000000 		.4byte	.LFE16-.LFB16
 5633 00b0 00000000 		.4byte	.LFB17
 5634 00b4 24000000 		.4byte	.LFE17-.LFB17
 5635 00b8 00000000 		.4byte	.LFB18
 5636 00bc 20000000 		.4byte	.LFE18-.LFB18
 5637 00c0 00000000 		.4byte	.LFB19
 5638 00c4 4C000000 		.4byte	.LFE19-.LFB19
 5639 00c8 00000000 		.4byte	.LFB20
 5640 00cc 2C000000 		.4byte	.LFE20-.LFB20
 5641 00d0 00000000 		.4byte	.LFB27
 5642 00d4 18000000 		.4byte	.LFE27-.LFB27
 5643 00d8 00000000 		.4byte	.LFB28
 5644 00dc 30000000 		.4byte	.LFE28-.LFB28
 5645 00e0 00000000 		.4byte	.LFB3
 5646 00e4 CC000000 		.4byte	.LFE3-.LFB3
 5647 00e8 00000000 		.4byte	.LFB10
 5648 00ec D8000000 		.4byte	.LFE10-.LFB10
 5649 00f0 00000000 		.4byte	.LFB29
 5650 00f4 14000000 		.4byte	.LFE29-.LFB29
 5651 00f8 00000000 		.4byte	.LFB30
 5652 00fc 4C000000 		.4byte	.LFE30-.LFB30
 5653 0100 00000000 		.4byte	.LFB34
 5654 0104 10000000 		.4byte	.LFE34-.LFB34
 5655 0108 00000000 		.4byte	.LFB35
 5656 010c 10000000 		.4byte	.LFE35-.LFB35
 5657 0110 00000000 		.4byte	.LFB33
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 162


 5658 0114 18000000 		.4byte	.LFE33-.LFB33
 5659 0118 00000000 		.4byte	.LFB36
 5660 011c 10000000 		.4byte	.LFE36-.LFB36
 5661 0120 00000000 		.4byte	.LFB37
 5662 0124 10000000 		.4byte	.LFE37-.LFB37
 5663 0128 00000000 		.4byte	.LFB38
 5664 012c 10000000 		.4byte	.LFE38-.LFB38
 5665 0130 00000000 		.4byte	.LFB39
 5666 0134 10000000 		.4byte	.LFE39-.LFB39
 5667 0138 00000000 		.4byte	.LFB40
 5668 013c 20000000 		.4byte	.LFE40-.LFB40
 5669 0140 00000000 		.4byte	.LFB41
 5670 0144 10000000 		.4byte	.LFE41-.LFB41
 5671 0148 00000000 		.4byte	.LFB42
 5672 014c 10000000 		.4byte	.LFE42-.LFB42
 5673 0150 00000000 		.4byte	.LFB46
 5674 0154 28000000 		.4byte	.LFE46-.LFB46
 5675 0158 00000000 		.4byte	.LFB43
 5676 015c 0C000000 		.4byte	.LFE43-.LFB43
 5677 0160 00000000 		.4byte	.LFB32
 5678 0164 4C000000 		.4byte	.LFE32-.LFB32
 5679 0168 00000000 		.4byte	.LFB31
 5680 016c 20000000 		.4byte	.LFE31-.LFB31
 5681 0170 00000000 		.4byte	.LFB44
 5682 0174 10000000 		.4byte	.LFE44-.LFB44
 5683 0178 00000000 		.4byte	.LFB45
 5684 017c 0C000000 		.4byte	.LFE45-.LFB45
 5685 0180 00000000 		.4byte	.LFB47
 5686 0184 70000000 		.4byte	.LFE47-.LFB47
 5687 0188 00000000 		.4byte	.LFB48
 5688 018c 20000000 		.4byte	.LFE48-.LFB48
 5689 0190 00000000 		.4byte	.LFB49
 5690 0194 20000000 		.4byte	.LFE49-.LFB49
 5691 0198 00000000 		.4byte	.LFB50
 5692 019c 20000000 		.4byte	.LFE50-.LFB50
 5693 01a0 00000000 		.4byte	.LFB51
 5694 01a4 4C000000 		.4byte	.LFE51-.LFB51
 5695 01a8 00000000 		.4byte	.LFB52
 5696 01ac 18000000 		.4byte	.LFE52-.LFB52
 5697 01b0 00000000 		.4byte	.LFB53
 5698 01b4 14000000 		.4byte	.LFE53-.LFB53
 5699 01b8 00000000 		.4byte	.LFB54
 5700 01bc 18000000 		.4byte	.LFE54-.LFB54
 5701 01c0 00000000 		.4byte	.LFB55
 5702 01c4 14000000 		.4byte	.LFE55-.LFB55
 5703 01c8 00000000 		.4byte	.LFB56
 5704 01cc 14000000 		.4byte	.LFE56-.LFB56
 5705 01d0 00000000 		.4byte	.LFB57
 5706 01d4 10000000 		.4byte	.LFE57-.LFB57
 5707 01d8 00000000 		.4byte	.LFB58
 5708 01dc 10000000 		.4byte	.LFE58-.LFB58
 5709 01e0 00000000 		.4byte	.LFB59
 5710 01e4 2C000000 		.4byte	.LFE59-.LFB59
 5711 01e8 00000000 		.4byte	.LFB60
 5712 01ec 1C000000 		.4byte	.LFE60-.LFB60
 5713 01f0 00000000 		.4byte	0
 5714 01f4 00000000 		.4byte	0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 163


 5715              		.section	.debug_ranges,"",%progbits
 5716              	.Ldebug_ranges0:
 5717 0000 00000000 		.4byte	.LFB1
 5718 0004 14000000 		.4byte	.LFE1
 5719 0008 00000000 		.4byte	.LFB4
 5720 000c 14000000 		.4byte	.LFE4
 5721 0010 00000000 		.4byte	.LFB2
 5722 0014 18000000 		.4byte	.LFE2
 5723 0018 00000000 		.4byte	.LFB5
 5724 001c 14000000 		.4byte	.LFE5
 5725 0020 00000000 		.4byte	.LFB6
 5726 0024 20000000 		.4byte	.LFE6
 5727 0028 00000000 		.4byte	.LFB7
 5728 002c 34000000 		.4byte	.LFE7
 5729 0030 00000000 		.4byte	.LFB8
 5730 0034 1C000000 		.4byte	.LFE8
 5731 0038 00000000 		.4byte	.LFB9
 5732 003c 24000000 		.4byte	.LFE9
 5733 0040 00000000 		.4byte	.LFB11
 5734 0044 24000000 		.4byte	.LFE11
 5735 0048 00000000 		.4byte	.LFB12
 5736 004c 14000000 		.4byte	.LFE12
 5737 0050 00000000 		.4byte	.LFB13
 5738 0054 10000000 		.4byte	.LFE13
 5739 0058 00000000 		.4byte	.LFB14
 5740 005c 0C000000 		.4byte	.LFE14
 5741 0060 00000000 		.4byte	.LFB21
 5742 0064 14000000 		.4byte	.LFE21
 5743 0068 00000000 		.4byte	.LFB22
 5744 006c 18000000 		.4byte	.LFE22
 5745 0070 00000000 		.4byte	.LFB23
 5746 0074 14000000 		.4byte	.LFE23
 5747 0078 00000000 		.4byte	.LFB24
 5748 007c 14000000 		.4byte	.LFE24
 5749 0080 00000000 		.4byte	.LFB25
 5750 0084 14000000 		.4byte	.LFE25
 5751 0088 00000000 		.4byte	.LFB26
 5752 008c 04000000 		.4byte	.LFE26
 5753 0090 00000000 		.4byte	.LFB15
 5754 0094 20000000 		.4byte	.LFE15
 5755 0098 00000000 		.4byte	.LFB16
 5756 009c 1C000000 		.4byte	.LFE16
 5757 00a0 00000000 		.4byte	.LFB17
 5758 00a4 24000000 		.4byte	.LFE17
 5759 00a8 00000000 		.4byte	.LFB18
 5760 00ac 20000000 		.4byte	.LFE18
 5761 00b0 00000000 		.4byte	.LFB19
 5762 00b4 4C000000 		.4byte	.LFE19
 5763 00b8 00000000 		.4byte	.LFB20
 5764 00bc 2C000000 		.4byte	.LFE20
 5765 00c0 00000000 		.4byte	.LFB27
 5766 00c4 18000000 		.4byte	.LFE27
 5767 00c8 00000000 		.4byte	.LFB28
 5768 00cc 30000000 		.4byte	.LFE28
 5769 00d0 00000000 		.4byte	.LFB3
 5770 00d4 CC000000 		.4byte	.LFE3
 5771 00d8 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 164


 5772 00dc D8000000 		.4byte	.LFE10
 5773 00e0 00000000 		.4byte	.LFB29
 5774 00e4 14000000 		.4byte	.LFE29
 5775 00e8 00000000 		.4byte	.LFB30
 5776 00ec 4C000000 		.4byte	.LFE30
 5777 00f0 00000000 		.4byte	.LFB34
 5778 00f4 10000000 		.4byte	.LFE34
 5779 00f8 00000000 		.4byte	.LFB35
 5780 00fc 10000000 		.4byte	.LFE35
 5781 0100 00000000 		.4byte	.LFB33
 5782 0104 18000000 		.4byte	.LFE33
 5783 0108 00000000 		.4byte	.LFB36
 5784 010c 10000000 		.4byte	.LFE36
 5785 0110 00000000 		.4byte	.LFB37
 5786 0114 10000000 		.4byte	.LFE37
 5787 0118 00000000 		.4byte	.LFB38
 5788 011c 10000000 		.4byte	.LFE38
 5789 0120 00000000 		.4byte	.LFB39
 5790 0124 10000000 		.4byte	.LFE39
 5791 0128 00000000 		.4byte	.LFB40
 5792 012c 20000000 		.4byte	.LFE40
 5793 0130 00000000 		.4byte	.LFB41
 5794 0134 10000000 		.4byte	.LFE41
 5795 0138 00000000 		.4byte	.LFB42
 5796 013c 10000000 		.4byte	.LFE42
 5797 0140 00000000 		.4byte	.LFB46
 5798 0144 28000000 		.4byte	.LFE46
 5799 0148 00000000 		.4byte	.LFB43
 5800 014c 0C000000 		.4byte	.LFE43
 5801 0150 00000000 		.4byte	.LFB32
 5802 0154 4C000000 		.4byte	.LFE32
 5803 0158 00000000 		.4byte	.LFB31
 5804 015c 20000000 		.4byte	.LFE31
 5805 0160 00000000 		.4byte	.LFB44
 5806 0164 10000000 		.4byte	.LFE44
 5807 0168 00000000 		.4byte	.LFB45
 5808 016c 0C000000 		.4byte	.LFE45
 5809 0170 00000000 		.4byte	.LFB47
 5810 0174 70000000 		.4byte	.LFE47
 5811 0178 00000000 		.4byte	.LFB48
 5812 017c 20000000 		.4byte	.LFE48
 5813 0180 00000000 		.4byte	.LFB49
 5814 0184 20000000 		.4byte	.LFE49
 5815 0188 00000000 		.4byte	.LFB50
 5816 018c 20000000 		.4byte	.LFE50
 5817 0190 00000000 		.4byte	.LFB51
 5818 0194 4C000000 		.4byte	.LFE51
 5819 0198 00000000 		.4byte	.LFB52
 5820 019c 18000000 		.4byte	.LFE52
 5821 01a0 00000000 		.4byte	.LFB53
 5822 01a4 14000000 		.4byte	.LFE53
 5823 01a8 00000000 		.4byte	.LFB54
 5824 01ac 18000000 		.4byte	.LFE54
 5825 01b0 00000000 		.4byte	.LFB55
 5826 01b4 14000000 		.4byte	.LFE55
 5827 01b8 00000000 		.4byte	.LFB56
 5828 01bc 14000000 		.4byte	.LFE56
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 165


 5829 01c0 00000000 		.4byte	.LFB57
 5830 01c4 10000000 		.4byte	.LFE57
 5831 01c8 00000000 		.4byte	.LFB58
 5832 01cc 10000000 		.4byte	.LFE58
 5833 01d0 00000000 		.4byte	.LFB59
 5834 01d4 2C000000 		.4byte	.LFE59
 5835 01d8 00000000 		.4byte	.LFB60
 5836 01dc 1C000000 		.4byte	.LFE60
 5837 01e0 00000000 		.4byte	0
 5838 01e4 00000000 		.4byte	0
 5839              		.section	.debug_line,"",%progbits
 5840              	.Ldebug_line0:
 5841 0000 C6050000 		.section	.debug_str,"MS",%progbits,1
 5841      02006700 
 5841      00000201 
 5841      FB0E0D00 
 5841      01010101 
 5842              	.LASF53:
 5843 0000 72616D56 		.ascii	"ramVectorTable\000"
 5843      6563746F 
 5843      72546162 
 5843      6C6500
 5844              	.LASF10:
 5845 000f 75696E74 		.ascii	"uint16\000"
 5845      313600
 5846              	.LASF40:
 5847 0016 696E7453 		.ascii	"intState\000"
 5847      74617465 
 5847      00
 5848              	.LASF25:
 5849 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5849      73436C6B 
 5849      57726974 
 5849      65486663 
 5849      6C6B4469 
 5850              	.LASF114:
 5851 0038 43795379 		.ascii	"CySysPrbGetBgBufferTrim\000"
 5851      73507262 
 5851      47657442 
 5851      67427566 
 5851      66657254 
 5852              	.LASF123:
 5853 0050 43795379 		.ascii	"CySysClkPumpConfig\000"
 5853      73436C6B 
 5853      50756D70 
 5853      436F6E66 
 5853      696700
 5854              	.LASF28:
 5855 0063 43795379 		.ascii	"CySysEnablePumpClock\000"
 5855      73456E61 
 5855      626C6550 
 5855      756D7043 
 5855      6C6F636B 
 5856              	.LASF0:
 5857 0078 7369676E 		.ascii	"signed char\000"
 5857      65642063 
 5857      68617200 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 166


 5858              	.LASF93:
 5859 0084 72657456 		.ascii	"retVal\000"
 5859      616C00
 5860              	.LASF39:
 5861 008b 43794469 		.ascii	"CyDisableInts\000"
 5861      7361626C 
 5861      65496E74 
 5861      7300
 5862              	.LASF7:
 5863 0099 6C6F6E67 		.ascii	"long long unsigned int\000"
 5863      206C6F6E 
 5863      6720756E 
 5863      7369676E 
 5863      65642069 
 5864              	.LASF121:
 5865 00b0 43795379 		.ascii	"CySysTickInitVar\000"
 5865      73546963 
 5865      6B496E69 
 5865      74566172 
 5865      00
 5866              	.LASF41:
 5867 00c1 4379456E 		.ascii	"CyEnableInts\000"
 5867      61626C65 
 5867      496E7473 
 5867      00
 5868              	.LASF102:
 5869 00ce 696E7465 		.ascii	"interfaceNumber\000"
 5869      72666163 
 5869      654E756D 
 5869      62657200 
 5870              	.LASF62:
 5871 00de 4379536F 		.ascii	"CySoftwareReset\000"
 5871      66747761 
 5871      72655265 
 5871      73657400 
 5872              	.LASF77:
 5873 00ee 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5873      73546963 
 5873      6B456E61 
 5873      626C6549 
 5873      6E746572 
 5874              	.LASF45:
 5875 0107 4379496E 		.ascii	"CyIntGetState\000"
 5875      74476574 
 5875      53746174 
 5875      6500
 5876              	.LASF6:
 5877 0115 6C6F6E67 		.ascii	"long long int\000"
 5877      206C6F6E 
 5877      6720696E 
 5877      7400
 5878              	.LASF130:
 5879 0123 433A5C55 		.ascii	"C:\\Users\\Zeus\\Documents\\PSoC Creator\\CE211252_"
 5879      73657273 
 5879      5C5A6575 
 5879      735C446F 
 5879      63756D65 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 167


 5880 0151 416D6269 		.ascii	"Ambient_Light_Sensing\\CE211252_Ambient_Light_Sensi"
 5880      656E745F 
 5880      4C696768 
 5880      745F5365 
 5880      6E73696E 
 5881 0183 6E672E63 		.ascii	"ng.cydsn\000"
 5881      7964736E 
 5881      00
 5882              	.LASF66:
 5883 018c 66726571 		.ascii	"freq\000"
 5883      00
 5884              	.LASF75:
 5885 0191 43794465 		.ascii	"CyDelayFreq\000"
 5885      6C617946 
 5885      72657100 
 5886              	.LASF26:
 5887 019d 696E7465 		.ascii	"interruptState\000"
 5887      72727570 
 5887      74537461 
 5887      746500
 5888              	.LASF13:
 5889 01ac 696E7433 		.ascii	"int32\000"
 5889      3200
 5890              	.LASF82:
 5891 01b2 43795379 		.ascii	"CySysTickGetReload\000"
 5891      73546963 
 5891      6B476574 
 5891      52656C6F 
 5891      616400
 5892              	.LASF107:
 5893 01c5 766F6C74 		.ascii	"voltageTap\000"
 5893      61676554 
 5893      617000
 5894              	.LASF81:
 5895 01d0 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 5895      73436C6B 
 5895      496D6F47 
 5895      65745763 
 5895      6F4C6F63 
 5896              	.LASF72:
 5897 01e6 77636F4C 		.ascii	"wcoLock\000"
 5897      6F636B00 
 5898              	.LASF4:
 5899 01ee 6C6F6E67 		.ascii	"long int\000"
 5899      20696E74 
 5899      00
 5900              	.LASF46:
 5901 01f7 4379496E 		.ascii	"CyIntDisable\000"
 5901      74446973 
 5901      61626C65 
 5901      00
 5902              	.LASF109:
 5903 0204 43795379 		.ascii	"CySysPrbDisableDeepsleepVddaRef\000"
 5903      73507262 
 5903      44697361 
 5903      626C6544 
 5903      65657073 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 168


 5904              	.LASF94:
 5905 0224 43795379 		.ascii	"CySysTickGetCallback\000"
 5905      73546963 
 5905      6B476574 
 5905      43616C6C 
 5905      6261636B 
 5906              	.LASF9:
 5907 0239 75696E74 		.ascii	"uint8\000"
 5907      3800
 5908              	.LASF118:
 5909 023f 63796465 		.ascii	"cydelayFreqKhz\000"
 5909      6C617946 
 5909      7265714B 
 5909      687A00
 5910              	.LASF30:
 5911 024e 656E6162 		.ascii	"enable\000"
 5911      6C6500
 5912              	.LASF15:
 5913 0255 646F7562 		.ascii	"double\000"
 5913      6C6500
 5914              	.LASF59:
 5915 025c 73686966 		.ascii	"shift\000"
 5915      7400
 5916              	.LASF11:
 5917 0262 75696E74 		.ascii	"uint32\000"
 5917      333200
 5918              	.LASF55:
 5919 0269 4379496E 		.ascii	"CyIntSetVector\000"
 5919      74536574 
 5919      56656374 
 5919      6F7200
 5920              	.LASF42:
 5921 0278 6D61736B 		.ascii	"mask\000"
 5921      00
 5922              	.LASF35:
 5923 027d 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5923      73436C6B 
 5923      47657453 
 5923      7973636C 
 5923      6B536F75 
 5924              	.LASF65:
 5925 0295 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 5925      73436C6B 
 5925      496D6F45 
 5925      6E61626C 
 5925      6557636F 
 5926              	.LASF61:
 5927 02ae 4379496E 		.ascii	"CyIntGetPriority\000"
 5927      74476574 
 5927      5072696F 
 5927      72697479 
 5927      00
 5928              	.LASF120:
 5929 02bf 63796465 		.ascii	"cydelay32kMs\000"
 5929      6C617933 
 5929      326B4D73 
 5929      00
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 169


 5930              	.LASF112:
 5931 02cc 43795379 		.ascii	"CySysPrbSetBgBufferTrim\000"
 5931      73507262 
 5931      53657442 
 5931      67427566 
 5931      66657254 
 5932              	.LASF89:
 5933 02e4 43795379 		.ascii	"CySysTickInit\000"
 5933      73546963 
 5933      6B496E69 
 5933      7400
 5934              	.LASF60:
 5935 02f2 76616C75 		.ascii	"value\000"
 5935      6500
 5936              	.LASF85:
 5937 02f8 636C6F63 		.ascii	"clockSource\000"
 5937      6B536F75 
 5937      72636500 
 5938              	.LASF95:
 5939 0304 43794765 		.ascii	"CyGetUniqueId\000"
 5939      74556E69 
 5939      71756549 
 5939      6400
 5940              	.LASF87:
 5941 0312 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5941      73546963 
 5941      6B476574 
 5941      436F756E 
 5941      74466C61 
 5942              	.LASF8:
 5943 0328 756E7369 		.ascii	"unsigned int\000"
 5943      676E6564 
 5943      20696E74 
 5943      00
 5944              	.LASF110:
 5945 0335 43795379 		.ascii	"CySysPrbEnableVddaRef\000"
 5945      73507262 
 5945      456E6162 
 5945      6C655664 
 5945      64615265 
 5946              	.LASF88:
 5947 034b 43795379 		.ascii	"CySysTickClear\000"
 5947      73546963 
 5947      6B436C65 
 5947      617200
 5948              	.LASF5:
 5949 035a 6C6F6E67 		.ascii	"long unsigned int\000"
 5949      20756E73 
 5949      69676E65 
 5949      6420696E 
 5949      7400
 5950              	.LASF113:
 5951 036c 62675472 		.ascii	"bgTrim\000"
 5951      696D00
 5952              	.LASF24:
 5953 0373 43795379 		.ascii	"CySysClkImoStop\000"
 5953      73436C6B 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 170


 5953      496D6F53 
 5953      746F7000 
 5954              	.LASF126:
 5955 0383 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5955      74657243 
 5955      72697469 
 5955      63616C53 
 5955      65637469 
 5956              	.LASF47:
 5957 039a 4379496E 		.ascii	"CyIntSetPending\000"
 5957      74536574 
 5957      50656E64 
 5957      696E6700 
 5958              	.LASF68:
 5959 03aa 6C664C69 		.ascii	"lfLimit\000"
 5959      6D697400 
 5960              	.LASF36:
 5961 03b2 43795379 		.ascii	"CySysGetResetReason\000"
 5961      73476574 
 5961      52657365 
 5961      74526561 
 5961      736F6E00 
 5962              	.LASF3:
 5963 03c6 73686F72 		.ascii	"short unsigned int\000"
 5963      7420756E 
 5963      7369676E 
 5963      65642069 
 5963      6E7400
 5964              	.LASF67:
 5965 03d9 72656754 		.ascii	"regTmp\000"
 5965      6D7000
 5966              	.LASF111:
 5967 03e0 43795379 		.ascii	"CySysPrbDisableVddaRef\000"
 5967      73507262 
 5967      44697361 
 5967      626C6556 
 5967      64646152 
 5968              	.LASF84:
 5969 03f7 43795379 		.ascii	"CySysTickSetClockSource\000"
 5969      73546963 
 5969      6B536574 
 5969      436C6F63 
 5969      6B536F75 
 5970              	.LASF12:
 5971 040f 696E7438 		.ascii	"int8\000"
 5971      00
 5972              	.LASF44:
 5973 0414 6E756D62 		.ascii	"number\000"
 5973      657200
 5974              	.LASF58:
 5975 041b 7072696F 		.ascii	"priority\000"
 5975      72697479 
 5975      00
 5976              	.LASF70:
 5977 0424 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5977      73436C6B 
 5977      57726974 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 171


 5977      65496D6F 
 5977      46726571 
 5978              	.LASF99:
 5979 0439 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 5979      73536574 
 5979      466C6173 
 5979      68416363 
 5979      65737341 
 5980              	.LASF50:
 5981 0458 4379496E 		.ascii	"CyIntSetSysVector\000"
 5981      74536574 
 5981      53797356 
 5981      6563746F 
 5981      7200
 5982              	.LASF23:
 5983 046a 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 5983      73436C6B 
 5983      496D6F44 
 5983      69736162 
 5983      6C655763 
 5984              	.LASF18:
 5985 0484 72656733 		.ascii	"reg32\000"
 5985      3200
 5986              	.LASF90:
 5987 048a 43795379 		.ascii	"CySysTickStart\000"
 5987      73546963 
 5987      6B537461 
 5987      727400
 5988              	.LASF38:
 5989 0499 72657475 		.ascii	"returnStatus\000"
 5989      726E5374 
 5989      61747573 
 5989      00
 5990              	.LASF98:
 5991 04a6 736F7572 		.ascii	"source\000"
 5991      636500
 5992              	.LASF20:
 5993 04ad 73697A65 		.ascii	"sizetype\000"
 5993      74797065 
 5993      00
 5994              	.LASF101:
 5995 04b6 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 5995      73536574 
 5995      50657269 
 5995      70686572 
 5995      616C4163 
 5996              	.LASF48:
 5997 04da 4379496E 		.ascii	"CyIntClearPending\000"
 5997      74436C65 
 5997      61725065 
 5997      6E64696E 
 5997      6700
 5998              	.LASF51:
 5999 04ec 61646472 		.ascii	"address\000"
 5999      65737300 
 6000              	.LASF31:
 6001 04f4 73797363 		.ascii	"sysclkSource\000"
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 172


 6001      6C6B536F 
 6001      75726365 
 6001      00
 6002              	.LASF92:
 6003 0501 66756E63 		.ascii	"function\000"
 6003      74696F6E 
 6003      00
 6004              	.LASF83:
 6005 050a 43795379 		.ascii	"CySysTickGetValue\000"
 6005      73546963 
 6005      6B476574 
 6005      56616C75 
 6005      6500
 6006              	.LASF117:
 6007 051c 63796465 		.ascii	"cydelayFreqHz\000"
 6007      6C617946 
 6007      72657148 
 6007      7A00
 6008              	.LASF57:
 6009 052a 4379496E 		.ascii	"CyIntSetPriority\000"
 6009      74536574 
 6009      5072696F 
 6009      72697479 
 6009      00
 6010              	.LASF105:
 6011 053b 6761696E 		.ascii	"gain\000"
 6011      00
 6012              	.LASF14:
 6013 0540 666C6F61 		.ascii	"float\000"
 6013      7400
 6014              	.LASF124:
 6015 0546 43794578 		.ascii	"CyExitCriticalSection\000"
 6015      69744372 
 6015      69746963 
 6015      616C5365 
 6015      6374696F 
 6016              	.LASF21:
 6017 055c 63795379 		.ascii	"cySysTickCallback\000"
 6017      73546963 
 6017      6B43616C 
 6017      6C626163 
 6017      6B00
 6018              	.LASF56:
 6019 056e 4379496E 		.ascii	"CyIntGetVector\000"
 6019      74476574 
 6019      56656374 
 6019      6F7200
 6020              	.LASF64:
 6021 057d 6D696C6C 		.ascii	"milliseconds\000"
 6021      69736563 
 6021      6F6E6473 
 6021      00
 6022              	.LASF103:
 6023 058a 43795379 		.ascii	"CySysPrbSetGlobalVrefSource\000"
 6023      73507262 
 6023      53657447 
 6023      6C6F6261 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 173


 6023      6C567265 
 6024              	.LASF125:
 6025 05a6 43794465 		.ascii	"CyDelayCycles\000"
 6025      6C617943 
 6025      79636C65 
 6025      7300
 6026              	.LASF17:
 6027 05b4 72656738 		.ascii	"reg8\000"
 6027      00
 6028              	.LASF49:
 6029 05b9 43794861 		.ascii	"CyHalt\000"
 6029      6C7400
 6030              	.LASF97:
 6031 05c0 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 6031      73536574 
 6031      52616D41 
 6031      63636573 
 6031      73417262 
 6032              	.LASF1:
 6033 05dd 756E7369 		.ascii	"unsigned char\000"
 6033      676E6564 
 6033      20636861 
 6033      7200
 6034              	.LASF2:
 6035 05eb 73686F72 		.ascii	"short int\000"
 6035      7420696E 
 6035      7400
 6036              	.LASF43:
 6037 05f5 4379496E 		.ascii	"CyIntEnable\000"
 6037      74456E61 
 6037      626C6500 
 6038              	.LASF54:
 6039 0601 4379496E 		.ascii	"CyIntGetSysVector\000"
 6039      74476574 
 6039      53797356 
 6039      6563746F 
 6039      7200
 6040              	.LASF29:
 6041 0613 636C6B53 		.ascii	"clkSelect\000"
 6041      656C6563 
 6041      7400
 6042              	.LASF73:
 6043 061d 43794465 		.ascii	"CyDelayUs\000"
 6043      6C617955 
 6043      7300
 6044              	.LASF37:
 6045 0627 72656173 		.ascii	"reason\000"
 6045      6F6E00
 6046              	.LASF106:
 6047 062e 43795379 		.ascii	"CySysPrbSetGlobalVrefVoltage\000"
 6047      73507262 
 6047      53657447 
 6047      6C6F6261 
 6047      6C567265 
 6048              	.LASF16:
 6049 064b 63686172 		.ascii	"char\000"
 6049      00
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 174


 6050              	.LASF122:
 6051 0650 6379496D 		.ascii	"cyImoFreqMhz2DpllOffset\000"
 6051      6F467265 
 6051      714D687A 
 6051      3244706C 
 6051      6C4F6666 
 6052              	.LASF19:
 6053 0668 63796973 		.ascii	"cyisraddress\000"
 6053      72616464 
 6053      72657373 
 6053      00
 6054              	.LASF78:
 6055 0675 43795379 		.ascii	"CySysTickEnable\000"
 6055      73546963 
 6055      6B456E61 
 6055      626C6500 
 6056              	.LASF34:
 6057 0685 43795379 		.ascii	"CySysClkWriteHfclkDiv\000"
 6057      73436C6B 
 6057      57726974 
 6057      65486663 
 6057      6C6B4469 
 6058              	.LASF32:
 6059 069b 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 6059      73436C6B 
 6059      57726974 
 6059      65537973 
 6059      636C6B44 
 6060              	.LASF91:
 6061 06b2 43795379 		.ascii	"CySysTickSetCallback\000"
 6061      73546963 
 6061      6B536574 
 6061      43616C6C 
 6061      6261636B 
 6062              	.LASF116:
 6063 06c7 43795379 		.ascii	"CySysTickCallbacks\000"
 6063      73546963 
 6063      6B43616C 
 6063      6C626163 
 6063      6B7300
 6064              	.LASF71:
 6065 06da 696D6F54 		.ascii	"imoTrim1Value\000"
 6065      72696D31 
 6065      56616C75 
 6065      6500
 6066              	.LASF96:
 6067 06e8 756E6971 		.ascii	"uniqueId\000"
 6067      75654964 
 6067      00
 6068              	.LASF69:
 6069 06f1 666C6173 		.ascii	"flashCtlReg\000"
 6069      6843746C 
 6069      52656700 
 6070              	.LASF63:
 6071 06fd 43794465 		.ascii	"CyDelay\000"
 6071      6C617900 
 6072              	.LASF86:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 175


 6073 0705 43795379 		.ascii	"CySysTickGetClockSource\000"
 6073      73546963 
 6073      6B476574 
 6073      436C6F63 
 6073      6B536F75 
 6074              	.LASF79:
 6075 071d 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 6075      73546963 
 6075      6B446973 
 6075      61626C65 
 6075      496E7465 
 6076              	.LASF52:
 6077 0737 6F6C6449 		.ascii	"oldIsr\000"
 6077      737200
 6078              	.LASF119:
 6079 073e 63796465 		.ascii	"cydelayFreqMhz\000"
 6079      6C617946 
 6079      7265714D 
 6079      687A00
 6080              	.LASF127:
 6081 074d 43795379 		.ascii	"CySysClkWcoEnabled\000"
 6081      73436C6B 
 6081      57636F45 
 6081      6E61626C 
 6081      656400
 6082              	.LASF100:
 6083 0760 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 6083      73536574 
 6083      446D6163 
 6083      41636365 
 6083      73734172 
 6084              	.LASF76:
 6085 077e 43795379 		.ascii	"CySysTickStop\000"
 6085      73546963 
 6085      6B53746F 
 6085      7000
 6086              	.LASF33:
 6087 078c 64697669 		.ascii	"divider\000"
 6087      64657200 
 6088              	.LASF22:
 6089 0794 43795379 		.ascii	"CySysClkImoStart\000"
 6089      73436C6B 
 6089      496D6F53 
 6089      74617274 
 6089      00
 6090              	.LASF132:
 6091 07a5 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 6091      73466C61 
 6091      73685365 
 6091      74576169 
 6091      74437963 
 6092              	.LASF108:
 6093 07bd 43795379 		.ascii	"CySysPrbEnableDeepsleepVddaRef\000"
 6093      73507262 
 6093      456E6162 
 6093      6C654465 
 6093      6570736C 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccMZ8h0O.s 			page 176


 6094              	.LASF104:
 6095 07dc 43795379 		.ascii	"CySysPrbSetBgGain\000"
 6095      73507262 
 6095      53657442 
 6095      67476169 
 6095      6E00
 6096              	.LASF129:
 6097 07ee 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 6097      72617465 
 6097      645F536F 
 6097      75726365 
 6097      5C50536F 
 6098              	.LASF74:
 6099 080d 6D696372 		.ascii	"microseconds\000"
 6099      6F736563 
 6099      6F6E6473 
 6099      00
 6100              	.LASF27:
 6101 081a 746D7052 		.ascii	"tmpReg\000"
 6101      656700
 6102              	.LASF80:
 6103 0821 43795379 		.ascii	"CySysTickSetReload\000"
 6103      73546963 
 6103      6B536574 
 6103      52656C6F 
 6103      616400
 6104              	.LASF131:
 6105 0834 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 6105      73546963 
 6105      6B536572 
 6105      76696365 
 6105      43616C6C 
 6106              	.LASF115:
 6107 084e 72657475 		.ascii	"returnValue\000"
 6107      726E5661 
 6107      6C756500 
 6108              	.LASF128:
 6109 085a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 6109      4320342E 
 6109      392E3320 
 6109      32303135 
 6109      30333033 
 6110 088d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 6110      20726576 
 6110      6973696F 
 6110      6E203232 
 6110      31323230 
 6111 08c0 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 6111      67202D66 
 6111      66756E63 
 6111      74696F6E 
 6111      2D736563 
 6112              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
