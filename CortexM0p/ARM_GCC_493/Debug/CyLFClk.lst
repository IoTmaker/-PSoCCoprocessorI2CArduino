ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLFClk.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkGetTimerSource,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	CySysClkGetTimerSource, %function
  22              	CySysClkGetTimerSource:
  23              	.LFB25:
  24              		.file 1 "Generated_Source\\PSoC4\\CyLFClk.c"
   1:Generated_Source\PSoC4/CyLFClk.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.c **** * \file .c
   3:Generated_Source\PSoC4/CyLFClk.c **** * \version 1.10
   4:Generated_Source\PSoC4/CyLFClk.c **** *
   5:Generated_Source\PSoC4/CyLFClk.c **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.c **** *  This file provides the source code for configuring watchdog timers WDTs, 
   7:Generated_Source\PSoC4/CyLFClk.c **** *  low frequency clocks (LFCLK) and the Real-time Clock (RTC) component in
   8:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC Creator for the PSoC 4 families.
   9:Generated_Source\PSoC4/CyLFClk.c **** *
  10:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
  11:Generated_Source\PSoC4/CyLFClk.c **** * \copyright
  12:Generated_Source\PSoC4/CyLFClk.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CyLFClk.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CyLFClk.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CyLFClk.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CyLFClk.c **** 
  18:Generated_Source\PSoC4/CyLFClk.c **** 
  19:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLFClk.h"
  20:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLib.h"
  21:Generated_Source\PSoC4/CyLFClk.c **** 
  22:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
  23:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void);
  24:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
  25:Generated_Source\PSoC4/CyLFClk.c **** 
  26:Generated_Source\PSoC4/CyLFClk.c **** 
  27:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
  28:Generated_Source\PSoC4/CyLFClk.c ****     /* Default Ilo Trim Register value for ILO trimming*/
  29:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint16 defaultIloTrimRegValue = CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE;
  30:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
  31:Generated_Source\PSoC4/CyLFClk.c **** 
  32:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  33:Generated_Source\PSoC4/CyLFClk.c ****     /* CySysClkLfclkPosedgeCatch() / CySysClkLfclkPosedgeRestore() */
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 2


  34:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Enabled = 0u;
  35:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Mode    = CY_SYS_WDT_MODE_NONE;
  36:Generated_Source\PSoC4/CyLFClk.c **** 
  37:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableServicedIsr = 0uL;
  38:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 wdtIsrMask = CY_SYS_WDT_COUNTER0_INT |\
  39:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER1_INT |\
  40:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER2_INT;
  41:Generated_Source\PSoC4/CyLFClk.c **** 
  42:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterIntMaskTbl[CY_WDT_NUM_OF_WDT] = {CY_SYS_WDT_COUNTER0_INT,
  43:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER1_INT,
  44:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER2_INT};
  45:Generated_Source\PSoC4/CyLFClk.c **** 
  46:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void);
  47:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void);
  48:Generated_Source\PSoC4/CyLFClk.c **** 
  49:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void);
  50:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void);
  51:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  52:Generated_Source\PSoC4/CyLFClk.c **** 
  53:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  54:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void);
  55:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableTimerServicedIsr = 0uL;
  56:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 timerIsrMask = CY_SYS_TIMER0_INT |\
  57:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER1_INT |\
  58:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER2_INT;
  59:Generated_Source\PSoC4/CyLFClk.c **** 
  60:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterTimerIntMaskTbl[CY_SYS_NUM_OF_TIMERS] = {CY_SYS_TIMER0_INT,
  61:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER1_INT,
  62:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER2_INT};
  63:Generated_Source\PSoC4/CyLFClk.c **** 
  64:Generated_Source\PSoC4/CyLFClk.c ****     static cyTimerCallback cySysTimerCallback[CY_SYS_NUM_OF_TIMERS] = {(void *)0, (void *)0, (void 
  65:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_DWT_EN) */
  66:Generated_Source\PSoC4/CyLFClk.c **** 
  67:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  68:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback[CY_WDT_NUM_OF_WDT] = {(void *)0, (void *)0, (void *)0};
  69:Generated_Source\PSoC4/CyLFClk.c **** #else
  70:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback = (void *)0;
  71:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  72:Generated_Source\PSoC4/CyLFClk.c **** 
  73:Generated_Source\PSoC4/CyLFClk.c **** 
  74:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  75:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStart
  76:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  77:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  78:Generated_Source\PSoC4/CyLFClk.c **** *  Enables ILO.
  79:Generated_Source\PSoC4/CyLFClk.c **** *
  80:Generated_Source\PSoC4/CyLFClk.c **** *  Refer to the device datasheet for the ILO startup time.
  81:Generated_Source\PSoC4/CyLFClk.c **** *
  82:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  83:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStart(void)
  84:Generated_Source\PSoC4/CyLFClk.c **** {
  85:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
  86:Generated_Source\PSoC4/CyLFClk.c **** }
  87:Generated_Source\PSoC4/CyLFClk.c **** 
  88:Generated_Source\PSoC4/CyLFClk.c **** 
  89:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStop
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 3


  91:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  92:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  93:Generated_Source\PSoC4/CyLFClk.c **** *  Disables the ILO.
  94:Generated_Source\PSoC4/CyLFClk.c **** *
  95:Generated_Source\PSoC4/CyLFClk.c **** *  This function has no effect if WDT is locked (CySysWdtLock() is
  96:Generated_Source\PSoC4/CyLFClk.c **** *  called). Call CySysWdtUnlock() to unlock WDT and stop ILO.
  97:Generated_Source\PSoC4/CyLFClk.c **** *
  98:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 / PSoC 4200: Note that ILO is required for WDT's operation.
  99:Generated_Source\PSoC4/CyLFClk.c **** *
 100:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / 
 101:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M:
 102:Generated_Source\PSoC4/CyLFClk.c **** *  Stopping ILO affects the peripheral clocked by LFCLK, if
 103:Generated_Source\PSoC4/CyLFClk.c **** *  LFCLK is configured to be sourced by ILO.
 104:Generated_Source\PSoC4/CyLFClk.c **** *
 105:Generated_Source\PSoC4/CyLFClk.c **** *  If the ILO is disabled, all blocks run by ILO will stop functioning.
 106:Generated_Source\PSoC4/CyLFClk.c **** *
 107:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStop(void)
 109:Generated_Source\PSoC4/CyLFClk.c **** {
 110:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
 111:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 112:Generated_Source\PSoC4/CyLFClk.c **** 
 113:Generated_Source\PSoC4/CyLFClk.c ****         /* Do nothing if WDT is locked or ILO is disabled */
 114:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtLocked())
 115:Generated_Source\PSoC4/CyLFClk.c ****         {
 116:Generated_Source\PSoC4/CyLFClk.c ****             if (0u != CySysClkIloEnabled())
 117:Generated_Source\PSoC4/CyLFClk.c ****             {
 118:Generated_Source\PSoC4/CyLFClk.c **** 
 119:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 120:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_ILO == CySysClkGetLfclkSource())
 121:Generated_Source\PSoC4/CyLFClk.c ****                 {
 122:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 123:Generated_Source\PSoC4/CyLFClk.c **** 
 124:Generated_Source\PSoC4/CyLFClk.c ****                 interruptState = CyEnterCriticalSection();
 125:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeCatch();
 126:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 127:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeRestore();
 128:Generated_Source\PSoC4/CyLFClk.c ****                 CyExitCriticalSection(interruptState);
 129:Generated_Source\PSoC4/CyLFClk.c **** 
 130:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 131:Generated_Source\PSoC4/CyLFClk.c ****                 }
 132:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 133:Generated_Source\PSoC4/CyLFClk.c ****                 {
 134:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 135:Generated_Source\PSoC4/CyLFClk.c ****                 }
 136:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 137:Generated_Source\PSoC4/CyLFClk.c **** 
 138:Generated_Source\PSoC4/CyLFClk.c ****             }
 139:Generated_Source\PSoC4/CyLFClk.c ****         }
 140:Generated_Source\PSoC4/CyLFClk.c ****     #else
 141:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_ILO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_ILO_CONFIG_ENABLE);
 142:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSV2) */
 143:Generated_Source\PSoC4/CyLFClk.c **** }
 144:Generated_Source\PSoC4/CyLFClk.c **** 
 145:Generated_Source\PSoC4/CyLFClk.c **** 
 146:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 147:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStartMeasurement
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 4


 148:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 149:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 150:Generated_Source\PSoC4/CyLFClk.c **** * Starts the ILO accuracy measurement.
 151:Generated_Source\PSoC4/CyLFClk.c **** *
 152:Generated_Source\PSoC4/CyLFClk.c **** * This function is non-blocking and needs to be called before using the 
 153:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloTrim() and CySysClkIloCompensate() API.
 154:Generated_Source\PSoC4/CyLFClk.c **** *
 155:Generated_Source\PSoC4/CyLFClk.c **** * This API configures measurement counters to be sourced by SysClk (Counter 1)
 156:Generated_Source\PSoC4/CyLFClk.c **** * and ILO (Counter 2). 
 157:Generated_Source\PSoC4/CyLFClk.c **** *
 158:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 159:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 160:Generated_Source\PSoC4/CyLFClk.c **** *
 161:Generated_Source\PSoC4/CyLFClk.c **** * In addition, this API stores the factory ILO trim settings on the first call 
 162:Generated_Source\PSoC4/CyLFClk.c **** * after reset. This stored factory setting is used by the 
 163:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloRestoreFactoryTrim() API to restore the ILO factory trim. 
 164:Generated_Source\PSoC4/CyLFClk.c **** * Hence, it is important to call this API before restoring the ILO 
 165:Generated_Source\PSoC4/CyLFClk.c **** * factory trim settings.
 166:Generated_Source\PSoC4/CyLFClk.c **** *
 167:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 168:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStartMeasurement(void)
 169:Generated_Source\PSoC4/CyLFClk.c **** {
 170:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 171:Generated_Source\PSoC4/CyLFClk.c ****     static uint8 iloTrimTrig = 0u;
 172:Generated_Source\PSoC4/CyLFClk.c **** 
 173:Generated_Source\PSoC4/CyLFClk.c ****     /* Write default ILO trim value while ILO starting ( Cypress ID 225244 )*/
 174:Generated_Source\PSoC4/CyLFClk.c ****     if (0u == iloTrimTrig)
 175:Generated_Source\PSoC4/CyLFClk.c ****     {
 176:Generated_Source\PSoC4/CyLFClk.c ****         defaultIloTrimRegValue = ((uint8)(CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK));
 177:Generated_Source\PSoC4/CyLFClk.c ****         iloTrimTrig = 1u;
 178:Generated_Source\PSoC4/CyLFClk.c ****     }
 179:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 180:Generated_Source\PSoC4/CyLFClk.c **** 
 181:Generated_Source\PSoC4/CyLFClk.c ****     /* Configure measurement counters to source by SysClk (Counter 1) and ILO (Counter 2)*/
 182:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG = (CY_SYS_CLK_DFT_REG & (uint32) ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK) |
 183:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 184:Generated_Source\PSoC4/CyLFClk.c **** 
 185:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_TST_DDFT_CTRL_REG = (CY_SYS_TST_DDFT_CTRL_REG & (uint32) ~ CY_SYS_TST_DDFT_CTRL_REG_DEFA
 186:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 187:Generated_Source\PSoC4/CyLFClk.c **** }
 188:Generated_Source\PSoC4/CyLFClk.c **** 
 189:Generated_Source\PSoC4/CyLFClk.c **** 
 190:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 191:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStopMeasurement
 192:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 193:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 194:Generated_Source\PSoC4/CyLFClk.c **** * Stops the ILO accuracy measurement.
 195:Generated_Source\PSoC4/CyLFClk.c **** *
 196:Generated_Source\PSoC4/CyLFClk.c **** * Calling this function immediately stops the the ILO frequency measurement.
 197:Generated_Source\PSoC4/CyLFClk.c **** * This function should be called before placing the device to deepsleep, if 
 198:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API was called before. 
 199:Generated_Source\PSoC4/CyLFClk.c **** *
 200:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 201:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStopMeasurement(void)
 202:Generated_Source\PSoC4/CyLFClk.c **** {
 203:Generated_Source\PSoC4/CyLFClk.c ****     /* Set default configurations in 11...8 DFT register bits to zero */
 204:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG &= ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK;
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 5


 205:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 206:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_TST_DDFT_CTRL_REG &= ((uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 207:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSLT) */
 208:Generated_Source\PSoC4/CyLFClk.c **** }
 209:Generated_Source\PSoC4/CyLFClk.c **** 
 210:Generated_Source\PSoC4/CyLFClk.c **** 
 211:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 212:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloCompensate
 213:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 214:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 215:Generated_Source\PSoC4/CyLFClk.c **** * This API measures the current ILO accuracy.
 216:Generated_Source\PSoC4/CyLFClk.c **** *
 217:Generated_Source\PSoC4/CyLFClk.c **** * Basing on the measured frequency the required number of ILO cycles for a 
 218:Generated_Source\PSoC4/CyLFClk.c **** * given delay (in microseconds) is obtained. The desired delay that needs to 
 219:Generated_Source\PSoC4/CyLFClk.c **** * be compensated is passed through the desiredDelay parameter. The compensated 
 220:Generated_Source\PSoC4/CyLFClk.c **** * cycle count is returned through the compesatedCycles pointer.
 221:Generated_Source\PSoC4/CyLFClk.c **** * The compensated ILO cycles can then be used to define the WDT period value, 
 222:Generated_Source\PSoC4/CyLFClk.c **** * effectively compensating for the ILO inaccuracy and allowing a more 
 223:Generated_Source\PSoC4/CyLFClk.c **** * accurate WDT interrupt generation.
 224:Generated_Source\PSoC4/CyLFClk.c **** *
 225:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API should be called prior to calling this API. 
 226:Generated_Source\PSoC4/CyLFClk.c **** *
 227:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 228:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 229:Generated_Source\PSoC4/CyLFClk.c **** *
 230:Generated_Source\PSoC4/CyLFClk.c **** * \note If the System clock frequency is changed in runtime, the CyDelayFreq() 
 231:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 232:Generated_Source\PSoC4/CyLFClk.c **** * called before calling a next CySysClkIloCompensate().
 233:Generated_Source\PSoC4/CyLFClk.c **** *
 234:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS.
 235:Generated_Source\PSoC4/CyLFClk.c **** *
 236:Generated_Source\PSoC4/CyLFClk.c **** * \param desiredDelay Required delay in microseconds.
 237:Generated_Source\PSoC4/CyLFClk.c **** *
 238:Generated_Source\PSoC4/CyLFClk.c **** * \param *compensatedCycles The pointer to the variable in which the required
 239:Generated_Source\PSoC4/CyLFClk.c **** * number of ILO cycles for the given delay will be returned.
 240:Generated_Source\PSoC4/CyLFClk.c **** *
 241:Generated_Source\PSoC4/CyLFClk.c **** * \details
 242:Generated_Source\PSoC4/CyLFClk.c **** * The value returned in *compensatedCycles pointer is not valid until the 
 243:Generated_Source\PSoC4/CyLFClk.c **** * function returns CYRET_SUCCESS.
 244:Generated_Source\PSoC4/CyLFClk.c **** *
 245:Generated_Source\PSoC4/CyLFClk.c **** * The desiredDelay parameter value should be in next range: <br>From 100 to 
 246:Generated_Source\PSoC4/CyLFClk.c **** * 2 000 000 microseconds for PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
 247:Generated_Source\PSoC4/CyLFClk.c **** * Coprocessor devices.<br>From 100 to 4 000 000 000 microseconds for 
 248:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE /
 249:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L / PSoC 4100M /PSoC 4200M devices.
 250:Generated_Source\PSoC4/CyLFClk.c **** *
 251:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - The compensation process is complete and the 
 252:Generated_Source\PSoC4/CyLFClk.c **** * compensated cycles value is returned in the compensatedCycles pointer.
 253:Generated_Source\PSoC4/CyLFClk.c **** *
 254:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. It is 
 255:Generated_Source\PSoC4/CyLFClk.c **** * strongly recommended to do not make pauses between API calling. The 
 256:Generated_Source\PSoC4/CyLFClk.c **** * function should be called repeatedly until the API returns CYRET_SUCCESS.
 257:Generated_Source\PSoC4/CyLFClk.c **** *
 258:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates that measurement not started. 
 259:Generated_Source\PSoC4/CyLFClk.c **** * The user should call CySysClkIloStartMeasurement() API before calling 
 260:Generated_Source\PSoC4/CyLFClk.c **** * this API.
 261:Generated_Source\PSoC4/CyLFClk.c **** *
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 6


 262:Generated_Source\PSoC4/CyLFClk.c **** * \note For a correct WDT or DeepSleep Timers functioning with ILO compensating 
 263:Generated_Source\PSoC4/CyLFClk.c **** * the CySysClkIloCompensate() should be called before WDT or DeepSleep Timers 
 264:Generated_Source\PSoC4/CyLFClk.c **** * enabling.
 265:Generated_Source\PSoC4/CyLFClk.c **** *
 266:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 267:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloCompensate(uint32 desiredDelay , uint32* compensatedCycles)
 268:Generated_Source\PSoC4/CyLFClk.c **** {
 269:Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 270:Generated_Source\PSoC4/CyLFClk.c ****     uint32 desiredDelayInCounts;
 271:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 272:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 273:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 274:Generated_Source\PSoC4/CyLFClk.c **** 
 275:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 276:Generated_Source\PSoC4/CyLFClk.c **** 
 277:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if CySysStartMeasurement was called before */
 278:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) && 
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 280:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 281:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 282:Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 283:Generated_Source\PSoC4/CyLFClk.c ****     {
 284:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_TRIM_OR_COMP_FINISHED != compensateRunningStatus)
 285:Generated_Source\PSoC4/CyLFClk.c ****         {
 286:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait until counter 1 stopped counting and after it calculate compensated cycles */
 287:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 288:Generated_Source\PSoC4/CyLFClk.c ****             {
 289:Generated_Source\PSoC4/CyLFClk.c ****                 if (0u != CY_SYS_CNT_REG2_REG)
 290:Generated_Source\PSoC4/CyLFClk.c ****                 {
 291:Generated_Source\PSoC4/CyLFClk.c ****                     /* Calculate required number of ILO cycles for given delay */
 292:Generated_Source\PSoC4/CyLFClk.c ****                     #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLFClk.c ****                         if (CY_SYS_CLK_DELAY_COUNTS_LIMIT < desiredDelay)
 294:Generated_Source\PSoC4/CyLFClk.c ****                         {
 295:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = (desiredDelay / CY_SYS_CLK_ILO_PERIOD);
 296:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 297:Generated_Source\PSoC4/CyLFClk.c ****                             (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_
 298:Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 299:Generated_Source\PSoC4/CyLFClk.c ****                         }
 300:Generated_Source\PSoC4/CyLFClk.c ****                         else
 301:Generated_Source\PSoC4/CyLFClk.c ****                         {
 302:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + 
 303:Generated_Source\PSoC4/CyLFClk.c ****                                                      CY_SYS_CLK_HALF_OF_CLOCK) / CY_SYS_CLK_ILO_PER
 304:Generated_Source\PSoC4/CyLFClk.c **** 
 305:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 306:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 307:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 308:Generated_Source\PSoC4/CyLFClk.c ****                         }
 309:Generated_Source\PSoC4/CyLFClk.c ****                     #else /* (CY_IP_SRSSLT) */
 310:Generated_Source\PSoC4/CyLFClk.c ****                         desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + CY_SYS_
 311:Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 312:Generated_Source\PSoC4/CyLFClk.c ****                         if(CY_SYS_CLK_MAX_LITE_NUMBER < desiredDelayInCounts)
 313:Generated_Source\PSoC4/CyLFClk.c ****                         {
 314:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydel
 315:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 316:Generated_Source\PSoC4/CyLFClk.c ****                                                    (desiredDelayInCounts / CY_SYS_CLK_ILO_FREQ_3LSB
 317:Generated_Source\PSoC4/CyLFClk.c ****                         }
 318:Generated_Source\PSoC4/CyLFClk.c ****                         else
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 7


 319:Generated_Source\PSoC4/CyLFClk.c ****                         {
 320:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 321:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 322:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 323:Generated_Source\PSoC4/CyLFClk.c ****                         }
 324:Generated_Source\PSoC4/CyLFClk.c ****                     #endif /* (CY_IP_SRSSV2) */
 325:Generated_Source\PSoC4/CyLFClk.c **** 
 326:Generated_Source\PSoC4/CyLFClk.c ****                     *compensatedCycles = iloCompensatedCycles;
 327:Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 328:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 329:Generated_Source\PSoC4/CyLFClk.c ****                 }
 330:Generated_Source\PSoC4/CyLFClk.c ****                 else
 331:Generated_Source\PSoC4/CyLFClk.c ****                 {
 332:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus  = CYRET_INVALID_STATE;
 333:Generated_Source\PSoC4/CyLFClk.c ****                 }
 334:Generated_Source\PSoC4/CyLFClk.c ****             }
 335:Generated_Source\PSoC4/CyLFClk.c ****             else
 336:Generated_Source\PSoC4/CyLFClk.c ****             {
 337:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 338:Generated_Source\PSoC4/CyLFClk.c ****             }
 339:Generated_Source\PSoC4/CyLFClk.c ****         }
 340:Generated_Source\PSoC4/CyLFClk.c ****         else
 341:Generated_Source\PSoC4/CyLFClk.c ****         {
 342:Generated_Source\PSoC4/CyLFClk.c ****             /* Reload CNTR 1 count value for next measurement cycle*/
 343:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CNT_REG1_REG = (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER);
 344:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 345:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 346:Generated_Source\PSoC4/CyLFClk.c ****         }
 347:Generated_Source\PSoC4/CyLFClk.c ****     }
 348:Generated_Source\PSoC4/CyLFClk.c ****     else
 349:Generated_Source\PSoC4/CyLFClk.c ****     {
 350:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 351:Generated_Source\PSoC4/CyLFClk.c ****     }
 352:Generated_Source\PSoC4/CyLFClk.c **** 
 353:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 354:Generated_Source\PSoC4/CyLFClk.c **** }
 355:Generated_Source\PSoC4/CyLFClk.c **** 
 356:Generated_Source\PSoC4/CyLFClk.c **** 
 357:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 358:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 359:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkIloEnabled
 360:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 361:Generated_Source\PSoC4/CyLFClk.c ****     *
 362:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 363:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the ILO enable state.
 364:Generated_Source\PSoC4/CyLFClk.c ****     *
 365:Generated_Source\PSoC4/CyLFClk.c ****     * \return
 366:Generated_Source\PSoC4/CyLFClk.c ****     * 1 if ILO is enabled, and 0 if ILO is disabled.
 367:Generated_Source\PSoC4/CyLFClk.c ****     *
 368:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 369:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************/
 370:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void)
 371:Generated_Source\PSoC4/CyLFClk.c ****     {
 372:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal to 0 */
 373:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_ILO_CONFIG_REG & (uint32)(CY_SYS_CLK_ILO_CONFIG_ENABLE))) ?
 374:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 1u :
 375:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 0u);
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 8


 376:Generated_Source\PSoC4/CyLFClk.c ****     }
 377:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
 378:Generated_Source\PSoC4/CyLFClk.c **** 
 379:Generated_Source\PSoC4/CyLFClk.c **** 
 380:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 381:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 382:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloTrim
 383:Generated_Source\PSoC4/CyLFClk.c **** *****************************************************************************//**
 384:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 385:Generated_Source\PSoC4/CyLFClk.c **** * The API trims the ILO frequency to +/- 10% accuracy range using accurate 
 386:Generated_Source\PSoC4/CyLFClk.c **** * SysClk.
 387:Generated_Source\PSoC4/CyLFClk.c **** *
 388:Generated_Source\PSoC4/CyLFClk.c **** * The API can be blocking or non-blocking depending on the value of the mode 
 389:Generated_Source\PSoC4/CyLFClk.c **** * parameter passed. The accuracy of ILO after trimming in parts per thousand 
 390:Generated_Source\PSoC4/CyLFClk.c **** * is returned through the iloAccuracyInPPT pointer. A positive number indicates 
 391:Generated_Source\PSoC4/CyLFClk.c **** * that the ILO is running fast and a negative number indicates that the ILO is 
 392:Generated_Source\PSoC4/CyLFClk.c **** * running slowly. This error is relative to the error in the reference clock 
 393:Generated_Source\PSoC4/CyLFClk.c **** * (SysClk), so the absolute error will be higher and depends on the accuracy 
 394:Generated_Source\PSoC4/CyLFClk.c **** * of the reference.
 395:Generated_Source\PSoC4/CyLFClk.c **** *
 396:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to calling this 
 397:Generated_Source\PSoC4/CyLFClk.c **** * API. Otherwise it will return CYRET_INVALID_STATE as the measurement was not 
 398:Generated_Source\PSoC4/CyLFClk.c **** * started.
 399:Generated_Source\PSoC4/CyLFClk.c **** *
 400:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 401:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 402:Generated_Source\PSoC4/CyLFClk.c **** *
 403:Generated_Source\PSoC4/CyLFClk.c **** * \note If System clock frequency is changed in runtime, the CyDelayFreq() 
 404:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 405:Generated_Source\PSoC4/CyLFClk.c **** * called before next CySysClkIloCompensate() usage.
 406:Generated_Source\PSoC4/CyLFClk.c **** *
 407:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS
 408:Generated_Source\PSoC4/CyLFClk.c **** * or CYRET_TIMEOUT.
 409:Generated_Source\PSoC4/CyLFClk.c **** *
 410:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices with ILO trim capability. This excludes 
 411:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4000 / PSoC 4100 / PSoC 4200 / PSoC 4000S / PSoC 4100S / PSoC
 412:Generated_Source\PSoC4/CyLFClk.c **** * Analog Coprocessor devices.
 413:Generated_Source\PSoC4/CyLFClk.c **** *
 414:Generated_Source\PSoC4/CyLFClk.c **** * \param mode
 415:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_BLOCKING -  The function does not return until the ILO is 
 416:Generated_Source\PSoC4/CyLFClk.c **** * within +/-10% accuracy range or time out has occurred.<br>
 417:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_NON_BLOCKING - The function returns immediately after 
 418:Generated_Source\PSoC4/CyLFClk.c **** * performing a single iteration of the trim process. The function should be 
 419:Generated_Source\PSoC4/CyLFClk.c **** * called repeatedly until the trimming is completed successfully.
 420:Generated_Source\PSoC4/CyLFClk.c **** *
 421:Generated_Source\PSoC4/CyLFClk.c **** * \param *iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 422:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned.
 423:Generated_Source\PSoC4/CyLFClk.c **** *
 424:Generated_Source\PSoC4/CyLFClk.c **** * \details The value returned in *iloAccuracyInPPT pointer is not valid 
 425:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. ILO accuracy in PPT is given by:
 426:Generated_Source\PSoC4/CyLFClk.c **** *
 427:Generated_Source\PSoC4/CyLFClk.c **** * IloAccuracyInPPT = ((MeasuredIloFreq - DesiredIloFreq) * 
 428:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_PERTHOUSAND) / DesiredIloFreq);
 429:Generated_Source\PSoC4/CyLFClk.c **** *
 430:Generated_Source\PSoC4/CyLFClk.c **** * DesiredIloFreq  = 32000, CY_SYS_CLK_PERTHOUSAND = 1000;
 431:Generated_Source\PSoC4/CyLFClk.c **** *
 432:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates trimming is complete. This value indicates 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 9


 433:Generated_Source\PSoC4/CyLFClk.c **** * trimming is successful and iloAccuracyInPPT is within +/- 10%.
 434:Generated_Source\PSoC4/CyLFClk.c **** *
 435:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. This is applicable 
 436:Generated_Source\PSoC4/CyLFClk.c **** * only for non-blocking mode.
 437:Generated_Source\PSoC4/CyLFClk.c **** *
 438:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful. You should 
 439:Generated_Source\PSoC4/CyLFClk.c **** * call CySysClkIloStartMeasurement() before calling this API.
 440:Generated_Source\PSoC4/CyLFClk.c **** *
 441:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_TIMEOUT - Indicates trimming was unsuccessful. This is applicable 
 442:Generated_Source\PSoC4/CyLFClk.c **** * only for blocking mode. Timeout means the trimming was tried 5 times without 
 443:Generated_Source\PSoC4/CyLFClk.c **** * success (i.e. ILO accuracy > +/- 10%). The user can call the API again for 
 444:Generated_Source\PSoC4/CyLFClk.c **** * another try or wait for some time before calling it again (to let the system 
 445:Generated_Source\PSoC4/CyLFClk.c **** * to settle to another operating point change in temperature etc.) and continue 
 446:Generated_Source\PSoC4/CyLFClk.c **** * using the previous trim value till the next call.
 447:Generated_Source\PSoC4/CyLFClk.c **** *
 448:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 449:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloTrim(uint32 mode, int32* iloAccuracyInPPT)
 450:Generated_Source\PSoC4/CyLFClk.c **** {
 451:Generated_Source\PSoC4/CyLFClk.c ****     uint32 timeOutClocks = CY_SYS_CLK_TIMEOUT;
 452:Generated_Source\PSoC4/CyLFClk.c ****     uint32 waitUntilCntr1Stops;
 453:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 454:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 455:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 456:Generated_Source\PSoC4/CyLFClk.c **** 
 457:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 458:Generated_Source\PSoC4/CyLFClk.c **** 
 459:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if DFT and CTRL registers were configures in CySysStartMeasurement*/
 460:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) &&
 461:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 462:Generated_Source\PSoC4/CyLFClk.c ****        (iloAccuracyInPPT != NULL))
 463:Generated_Source\PSoC4/CyLFClk.c ****     {
 464:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_BLOCKING == mode)
 465:Generated_Source\PSoC4/CyLFClk.c ****         {
 466:Generated_Source\PSoC4/CyLFClk.c ****             waitUntilCntr1Stops = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 467:Generated_Source\PSoC4/CyLFClk.c ****             do
 468:Generated_Source\PSoC4/CyLFClk.c ****             {
 469:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for measuring cycle*/
 470:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER; 
 471:Generated_Source\PSoC4/CyLFClk.c **** 
 472:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait until counter CNTR 1 will finish down-counting */
 473:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u == (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 474:Generated_Source\PSoC4/CyLFClk.c ****                 {
 475:Generated_Source\PSoC4/CyLFClk.c ****                     waitUntilCntr1Stops--;
 476:Generated_Source\PSoC4/CyLFClk.c ****                     if (0u == waitUntilCntr1Stops)
 477:Generated_Source\PSoC4/CyLFClk.c ****                     {
 478:Generated_Source\PSoC4/CyLFClk.c ****                         break;
 479:Generated_Source\PSoC4/CyLFClk.c ****                     }
 480:Generated_Source\PSoC4/CyLFClk.c ****                 }
 481:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 482:Generated_Source\PSoC4/CyLFClk.c ****                 timeOutClocks--;
 483:Generated_Source\PSoC4/CyLFClk.c **** 
 484:Generated_Source\PSoC4/CyLFClk.c ****             /* Untill ILO accuracy will be in range less than +/- 10% or timeout occurs*/
 485:Generated_Source\PSoC4/CyLFClk.c ****             } while((CYRET_SUCCESS != trimRunningStatus) && 
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 487:Generated_Source\PSoC4/CyLFClk.c ****                                (0u != timeOutClocks));
 488:Generated_Source\PSoC4/CyLFClk.c **** 
 489:Generated_Source\PSoC4/CyLFClk.c ****             if (CYRET_SUCCESS == trimRunningStatus)
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 10


 490:Generated_Source\PSoC4/CyLFClk.c ****             {
 491:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_SUCCESS;
 492:Generated_Source\PSoC4/CyLFClk.c ****             }
 493:Generated_Source\PSoC4/CyLFClk.c ****             else
 494:Generated_Source\PSoC4/CyLFClk.c ****             {
 495:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u == timeOutClocks)
 496:Generated_Source\PSoC4/CyLFClk.c ****                 {
 497:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 498:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_TIMEOUT;
 499:Generated_Source\PSoC4/CyLFClk.c ****                 }
 500:Generated_Source\PSoC4/CyLFClk.c ****                 else
 501:Generated_Source\PSoC4/CyLFClk.c ****                 {
 502:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_INVALID_STATE;
 503:Generated_Source\PSoC4/CyLFClk.c ****                 }
 504:Generated_Source\PSoC4/CyLFClk.c ****             }
 505:Generated_Source\PSoC4/CyLFClk.c ****         }
 506:Generated_Source\PSoC4/CyLFClk.c ****         /* Non - blocking mode */
 507:Generated_Source\PSoC4/CyLFClk.c ****         else
 508:Generated_Source\PSoC4/CyLFClk.c ****         {
 509:Generated_Source\PSoC4/CyLFClk.c ****             if (CY_SYS_CLK_TRIM_OR_COMP_FINISHED != trimRunningStatus)
 510:Generated_Source\PSoC4/CyLFClk.c ****             {
 511:Generated_Source\PSoC4/CyLFClk.c ****                 /* Checking if the counter CNTR 1 finished down-counting */
 512:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 513:Generated_Source\PSoC4/CyLFClk.c ****                 {
 514:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 515:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 516:Generated_Source\PSoC4/CyLFClk.c ****                 }
 517:Generated_Source\PSoC4/CyLFClk.c ****                 else
 518:Generated_Source\PSoC4/CyLFClk.c ****                 {
 519:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_STARTED;
 520:Generated_Source\PSoC4/CyLFClk.c ****                 }
 521:Generated_Source\PSoC4/CyLFClk.c ****             }
 522:Generated_Source\PSoC4/CyLFClk.c ****             else
 523:Generated_Source\PSoC4/CyLFClk.c ****             {
 524:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for next measuring */
 525:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 526:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 527:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 528:Generated_Source\PSoC4/CyLFClk.c ****             }
 529:Generated_Source\PSoC4/CyLFClk.c ****         }
 530:Generated_Source\PSoC4/CyLFClk.c ****     }
 531:Generated_Source\PSoC4/CyLFClk.c ****     else
 532:Generated_Source\PSoC4/CyLFClk.c ****     {
 533:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 534:Generated_Source\PSoC4/CyLFClk.c ****     }
 535:Generated_Source\PSoC4/CyLFClk.c **** 
 536:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 537:Generated_Source\PSoC4/CyLFClk.c **** }
 538:Generated_Source\PSoC4/CyLFClk.c **** 
 539:Generated_Source\PSoC4/CyLFClk.c **** 
 540:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 541:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloUpdateTrimReg
 542:Generated_Source\PSoC4/CyLFClk.c **** *********************************************************************************
 543:Generated_Source\PSoC4/CyLFClk.c **** *
 544:Generated_Source\PSoC4/CyLFClk.c **** * \internal
 545:Generated_Source\PSoC4/CyLFClk.c **** * Function calculates ILO accuracy and check is error range is higher than 
 546:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10%. If Measured frequency is higher than +/- 10% function updates 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 11


 547:Generated_Source\PSoC4/CyLFClk.c **** * ILO Trim register.
 548:Generated_Source\PSoC4/CyLFClk.c **** *
 549:Generated_Source\PSoC4/CyLFClk.c **** * \param
 550:Generated_Source\PSoC4/CyLFClk.c **** * iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 551:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned. The value returned in this pointer is not valid 
 552:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. If ILO frequency error is lower 
 553:Generated_Source\PSoC4/CyLFClk.c **** * than +/- 10% then the value returned in this pointer will be updated.
 554:Generated_Source\PSoC4/CyLFClk.c **** *
 555:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates that ILO frequency error is lower than 
 556:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and no actions are required.
 557:Generated_Source\PSoC4/CyLFClk.c **** *
 558:Generated_Source\PSoC4/CyLFClk.c **** * \return  CYRET_STARTED - Indicates that ILO frequency error is higher than 
 559:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and ILO Trim register was updated.
 560:Generated_Source\PSoC4/CyLFClk.c **** *
 561:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful.
 562:Generated_Source\PSoC4/CyLFClk.c **** *
 563:Generated_Source\PSoC4/CyLFClk.c **** * Post #1 - To obtain 10% ILO accuracy the calculated accuracy should be equal 
 564:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_ERROR_RANGE = 5.6%. Error value should take to account IMO error of 
 565:Generated_Source\PSoC4/CyLFClk.c **** * +/-2% (+/-0.64kHz), trim step of 2.36kHz (+/-1.18kHz) and error while ILO 
 566:Generated_Source\PSoC4/CyLFClk.c **** * frequency measuring.
 567:Generated_Source\PSoC4/CyLFClk.c **** *
 568:Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 569:Generated_Source\PSoC4/CyLFClk.c **** *
 570:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 571:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT)
 572:Generated_Source\PSoC4/CyLFClk.c **** {
 573:Generated_Source\PSoC4/CyLFClk.c ****     uint32 measuredIloFreq;
 574:Generated_Source\PSoC4/CyLFClk.c ****     uint32 currentIloTrimValue;
 575:Generated_Source\PSoC4/CyLFClk.c ****     int32 iloAccuracyValue;
 576:Generated_Source\PSoC4/CyLFClk.c ****     int32 trimStep;
 577:Generated_Source\PSoC4/CyLFClk.c ****     cystatus errorRangeStatus;
 578:Generated_Source\PSoC4/CyLFClk.c **** 
 579:Generated_Source\PSoC4/CyLFClk.c ****     if(0u != CY_SYS_CNT_REG2_REG)
 580:Generated_Source\PSoC4/CyLFClk.c ****     {
 581:Generated_Source\PSoC4/CyLFClk.c ****         measuredIloFreq = (CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_SYS_
 582:Generated_Source\PSoC4/CyLFClk.c **** 
 583:Generated_Source\PSoC4/CyLFClk.c ****         /* Calculate value of error in PPT according to formula - 
 584:Generated_Source\PSoC4/CyLFClk.c ****         *       ((measuredIlofrequency - iloDesired freaquency) * 1000 / iloDesired freaquency) */
 585:Generated_Source\PSoC4/CyLFClk.c ****         iloAccuracyValue = (((int32) measuredIloFreq - (int32) CY_SYS_CLK_ILO_DESIRED_FREQ_HZ) * \
 586:Generated_Source\PSoC4/CyLFClk.c ****                             ((int32) CY_SYS_CLK_PERTHOUSAND)) / ((int32) CY_SYS_CLK_ILO_DESIRED_FRE
 587:Generated_Source\PSoC4/CyLFClk.c **** 
 588:Generated_Source\PSoC4/CyLFClk.c ****         /* Check if ILO accuracy is more than +/- CY_SYS_CLK_ERROR_RANGE. See post #1 of API descri
 589:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_ERROR_RANGE < (uint32) (CY_SYS_CLK_ABS_MACRO(iloAccuracyValue)))
 590:Generated_Source\PSoC4/CyLFClk.c ****         {
 591:Generated_Source\PSoC4/CyLFClk.c ****             if (0 < iloAccuracyValue)
 592:Generated_Source\PSoC4/CyLFClk.c ****             {
 593:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) + 
 594:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 595:Generated_Source\PSoC4/CyLFClk.c ****             }
 596:Generated_Source\PSoC4/CyLFClk.c ****             else
 597:Generated_Source\PSoC4/CyLFClk.c ****             {
 598:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) - 
 599:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 600:Generated_Source\PSoC4/CyLFClk.c ****             }
 601:Generated_Source\PSoC4/CyLFClk.c ****             currentIloTrimValue = (CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK);
 602:Generated_Source\PSoC4/CyLFClk.c ****             trimStep = (int32) currentIloTrimValue - trimStep;
 603:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 12


 604:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep > CY_SYS_CLK_FOURBITS_MAX)
 605:Generated_Source\PSoC4/CyLFClk.c ****             {
 606:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = CY_SYS_CLK_FOURBITS_MAX;
 607:Generated_Source\PSoC4/CyLFClk.c ****             }
 608:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep < 0)
 609:Generated_Source\PSoC4/CyLFClk.c ****             {
 610:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = 0;
 611:Generated_Source\PSoC4/CyLFClk.c ****             }
 612:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = (CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MASK
 613:Generated_Source\PSoC4/CyLFClk.c ****                                                                  ((uint32) trimStep);
 614:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_STARTED;
 615:Generated_Source\PSoC4/CyLFClk.c ****         } /* Else return success because error is in +/- 10% range*/
 616:Generated_Source\PSoC4/CyLFClk.c ****         else
 617:Generated_Source\PSoC4/CyLFClk.c ****         {
 618:Generated_Source\PSoC4/CyLFClk.c ****             /* Write trimmed ILO accuracy through pointer. */
 619:Generated_Source\PSoC4/CyLFClk.c ****             *iloAccuracyInPPT = iloAccuracyValue;
 620:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_SUCCESS;
 621:Generated_Source\PSoC4/CyLFClk.c ****         }
 622:Generated_Source\PSoC4/CyLFClk.c ****     }
 623:Generated_Source\PSoC4/CyLFClk.c ****     else
 624:Generated_Source\PSoC4/CyLFClk.c ****     {
 625:Generated_Source\PSoC4/CyLFClk.c ****         errorRangeStatus = CYRET_INVALID_STATE;
 626:Generated_Source\PSoC4/CyLFClk.c ****     }
 627:Generated_Source\PSoC4/CyLFClk.c **** return (errorRangeStatus);
 628:Generated_Source\PSoC4/CyLFClk.c **** }
 629:Generated_Source\PSoC4/CyLFClk.c **** 
 630:Generated_Source\PSoC4/CyLFClk.c **** 
 631:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 632:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloRestoreFactoryTrim
 633:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 634:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 635:Generated_Source\PSoC4/CyLFClk.c **** * Restores the ILO Trim Register to factory value.
 636:Generated_Source\PSoC4/CyLFClk.c **** *
 637:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to 
 638:Generated_Source\PSoC4/CyLFClk.c **** * calling this API. Otherwise CYRET_UNKNOWN will be returned.
 639:Generated_Source\PSoC4/CyLFClk.c **** *
 640:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices except for PSoC 4000 / PSoC 4100 / PSoC 4200 
 641:Generated_Source\PSoC4/CyLFClk.c **** * / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:Generated_Source\PSoC4/CyLFClk.c **** *
 643:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Operation was successful. 
 644:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_UNKNOWN - CySysClkIloStartMeasurement() was not called 
 645:Generated_Source\PSoC4/CyLFClk.c **** * before this API. Hence the trim value cannot be updated.
 646:Generated_Source\PSoC4/CyLFClk.c **** *
 647:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 648:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloRestoreFactoryTrim(void)
 649:Generated_Source\PSoC4/CyLFClk.c **** {
 650:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus = CYRET_SUCCESS;
 651:Generated_Source\PSoC4/CyLFClk.c **** 
 652:Generated_Source\PSoC4/CyLFClk.c ****     /* Check was defaultIloTrimRegValue modified in CySysClkIloStartMeasurement */
 653:Generated_Source\PSoC4/CyLFClk.c ****     if(CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE != defaultIloTrimRegValue)
 654:Generated_Source\PSoC4/CyLFClk.c ****         {
 655:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = ((CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MAS
 656:Generated_Source\PSoC4/CyLFClk.c ****                                        (defaultIloTrimRegValue & CY_SYS_CLK_ILO_TRIM_MASK));
 657:Generated_Source\PSoC4/CyLFClk.c ****         }
 658:Generated_Source\PSoC4/CyLFClk.c ****         else
 659:Generated_Source\PSoC4/CyLFClk.c ****         {
 660:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_UNKNOWN;
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 13


 661:Generated_Source\PSoC4/CyLFClk.c ****         }
 662:Generated_Source\PSoC4/CyLFClk.c **** 
 663:Generated_Source\PSoC4/CyLFClk.c ****         return (returnStatus);
 664:Generated_Source\PSoC4/CyLFClk.c **** }
 665:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 666:Generated_Source\PSoC4/CyLFClk.c **** 
 667:Generated_Source\PSoC4/CyLFClk.c **** 
 668:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
 669:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 670:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkGetLfclkSource
 671:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
 672:Generated_Source\PSoC4/CyLFClk.c **** *
 673:Generated_Source\PSoC4/CyLFClk.c **** * \internal
 674:Generated_Source\PSoC4/CyLFClk.c **** *  Gets the clock source for the LFCLK clock.
 675:Generated_Source\PSoC4/CyLFClk.c **** *  The function is applicable only for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M /
 676:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M / PSoC 4200L.
 677:Generated_Source\PSoC4/CyLFClk.c **** *
 678:Generated_Source\PSoC4/CyLFClk.c **** * \return The LFCLK source:
 679:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
 680:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
 681:Generated_Source\PSoC4/CyLFClk.c **** *
 682:Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 683:Generated_Source\PSoC4/CyLFClk.c **** *
 684:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 685:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void)
 686:Generated_Source\PSoC4/CyLFClk.c ****     {
 687:Generated_Source\PSoC4/CyLFClk.c ****         uint32 lfclkSource;
 688:Generated_Source\PSoC4/CyLFClk.c ****         lfclkSource = CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK;
 689:Generated_Source\PSoC4/CyLFClk.c ****         return (lfclkSource);
 690:Generated_Source\PSoC4/CyLFClk.c ****     }
 691:Generated_Source\PSoC4/CyLFClk.c **** 
 692:Generated_Source\PSoC4/CyLFClk.c ****     
 693:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 694:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkSetLfclkSource
 695:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 696:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 697:Generated_Source\PSoC4/CyLFClk.c **** *  Sets the clock source for the LFCLK clock.
 698:Generated_Source\PSoC4/CyLFClk.c **** *
 699:Generated_Source\PSoC4/CyLFClk.c **** * The switch between LFCLK sources must be done between the positive edges of
 700:Generated_Source\PSoC4/CyLFClk.c **** * LFCLK, because the glitch risk is around the LFCLK positive edge. To ensure
 701:Generated_Source\PSoC4/CyLFClk.c **** * that the switch can be done safely, the WDT counter value is read until it
 702:Generated_Source\PSoC4/CyLFClk.c **** * changes.
 703:Generated_Source\PSoC4/CyLFClk.c **** *
 704:Generated_Source\PSoC4/CyLFClk.c **** * That means that the positive edge just finished and the switch is performed.
 705:Generated_Source\PSoC4/CyLFClk.c **** * The enabled WDT counter is used for that purpose. If no counters are enabled,
 706:Generated_Source\PSoC4/CyLFClk.c **** * counter 0 is enabled. And after the LFCLK source is switched, counter 0
 707:Generated_Source\PSoC4/CyLFClk.c **** * configuration is restored.
 708:Generated_Source\PSoC4/CyLFClk.c **** *
 709:Generated_Source\PSoC4/CyLFClk.c **** *  The function is applicable only for devices with more than one source for 
 710:Generated_Source\PSoC4/CyLFClk.c **** * LFCLK - PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 4100M / PSoC 4200M / 
 711:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L.
 712:Generated_Source\PSoC4/CyLFClk.c **** *
 713:Generated_Source\PSoC4/CyLFClk.c **** * \note For PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices LFCLK can
 714:Generated_Source\PSoC4/CyLFClk.c **** * only be sourced from ILO even though WCO is available.
 715:Generated_Source\PSoC4/CyLFClk.c **** *
 716:Generated_Source\PSoC4/CyLFClk.c **** * \param
 717:Generated_Source\PSoC4/CyLFClk.c **** * source
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 14


 718:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_ILO - Internal Low Frequency (32 kHz) 
 719:Generated_Source\PSoC4/CyLFClk.c **** * Oscillator (ILO).<br>
 720:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_WCO - Low Frequency Watch Crystal Oscillator (WCO).
 721:Generated_Source\PSoC4/CyLFClk.c **** *
 722:Generated_Source\PSoC4/CyLFClk.c **** * \details
 723:Generated_Source\PSoC4/CyLFClk.c **** * This function has no effect if WDT is locked (CySysWdtLock() is called). 
 724:Generated_Source\PSoC4/CyLFClk.c **** * Call CySysWdtUnlock() to unlock WDT.
 725:Generated_Source\PSoC4/CyLFClk.c **** *
 726:Generated_Source\PSoC4/CyLFClk.c **** * Both the current source and the new source must be running and stable before
 727:Generated_Source\PSoC4/CyLFClk.c **** * calling this function.
 728:Generated_Source\PSoC4/CyLFClk.c **** *
 729:Generated_Source\PSoC4/CyLFClk.c **** * Changing the LFCLK clock source may change the LFCLK clock frequency and
 730:Generated_Source\PSoC4/CyLFClk.c **** * affect the functionality that uses this clock. For example, watchdog timer
 731:Generated_Source\PSoC4/CyLFClk.c **** * "uses this clock" or "this clock uses" (WDT) is clocked by LFCLK.
 732:Generated_Source\PSoC4/CyLFClk.c **** *
 733:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 734:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetLfclkSource(uint32 source)
 735:Generated_Source\PSoC4/CyLFClk.c ****     {
 736:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 737:Generated_Source\PSoC4/CyLFClk.c **** 
 738:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetLfclkSource() != source)
 739:Generated_Source\PSoC4/CyLFClk.c ****         {
 740:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
 741:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeCatch();
 742:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
 743:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_LFCLK_SEL_MASK);
 744:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeRestore();
 745:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
 746:Generated_Source\PSoC4/CyLFClk.c ****         }
 747:Generated_Source\PSoC4/CyLFClk.c ****     }
 748:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
 749:Generated_Source\PSoC4/CyLFClk.c **** 
 750:Generated_Source\PSoC4/CyLFClk.c **** 
 751:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO)
 752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStart
 754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 755:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 756:Generated_Source\PSoC4/CyLFClk.c ****     *  Enables Watch Crystal Oscillator (WCO).
 757:Generated_Source\PSoC4/CyLFClk.c ****     * 
 758:Generated_Source\PSoC4/CyLFClk.c ****     * This API enables WCO which is used as a source for LFCLK. Similar to ILO, 
 759:Generated_Source\PSoC4/CyLFClk.c ****     * WCO is also available in all modes except Hibernate and Stop modes.
 760:Generated_Source\PSoC4/CyLFClk.c ****     * \note In PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices
 761:Generated_Source\PSoC4/CyLFClk.c ****     * WCO cannot be a source for the LFCLK. 
 762:Generated_Source\PSoC4/CyLFClk.c ****     *
 763:Generated_Source\PSoC4/CyLFClk.c ****     *  WCO is always enabled in High Power Mode (HPM). Refer to the device
 764:Generated_Source\PSoC4/CyLFClk.c ****     *  datasheet for the  WCO startup time. Once WCO becomes stable it can be
 765:Generated_Source\PSoC4/CyLFClk.c ****     *  switched to Low Power Mode (LPM). Note that oscillator can be unstable
 766:Generated_Source\PSoC4/CyLFClk.c ****     *  during a switch and hence its output should not be used at that moment.
 767:Generated_Source\PSoC4/CyLFClk.c ****     *
 768:Generated_Source\PSoC4/CyLFClk.c ****     *  The CySysClkWcoSetPowerMode() function configures the WCO power mode.
 769:Generated_Source\PSoC4/CyLFClk.c ****     *
 770:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 771:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoStart(void)
 772:Generated_Source\PSoC4/CyLFClk.c ****     {
 773:Generated_Source\PSoC4/CyLFClk.c ****         CySysClkWcoSetHighPowerMode();
 774:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 15


 775:Generated_Source\PSoC4/CyLFClk.c ****     }
 776:Generated_Source\PSoC4/CyLFClk.c **** 
 777:Generated_Source\PSoC4/CyLFClk.c **** 
 778:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 779:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStop
 780:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 781:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 782:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the 32 KHz Crystal Oscillator.
 783:Generated_Source\PSoC4/CyLFClk.c ****     *
 784:Generated_Source\PSoC4/CyLFClk.c ****     * API switch of WCO.
 785:Generated_Source\PSoC4/CyLFClk.c ****     * \note PSoC 4100S / PSoC Analog Coprocessor: WCO is required for DeepSleep 
 786:Generated_Source\PSoC4/CyLFClk.c ****     * Timer's operation.
 787:Generated_Source\PSoC4/CyLFClk.c ****     *
 788:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 789:Generated_Source\PSoC4/CyLFClk.c ****     void  CySysClkWcoStop(void)
 790:Generated_Source\PSoC4/CyLFClk.c ****     {
 791:Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 792:Generated_Source\PSoC4/CyLFClk.c ****             uint8  interruptState;
 793:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
 794:Generated_Source\PSoC4/CyLFClk.c **** 
 795:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 796:Generated_Source\PSoC4/CyLFClk.c ****         {
 797:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_SRSSV2)
 798:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_WCO == CySysClkGetLfclkSource())
 799:Generated_Source\PSoC4/CyLFClk.c ****                 {
 800:Generated_Source\PSoC4/CyLFClk.c ****                     interruptState = CyEnterCriticalSection();
 801:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeCatch();
 802:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 803:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeRestore();
 804:Generated_Source\PSoC4/CyLFClk.c ****                     CyExitCriticalSection(interruptState);
 805:Generated_Source\PSoC4/CyLFClk.c ****                 }
 806:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 807:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_SRSSV2) */
 808:Generated_Source\PSoC4/CyLFClk.c ****             {
 809:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 810:Generated_Source\PSoC4/CyLFClk.c ****             }
 811:Generated_Source\PSoC4/CyLFClk.c ****         } /* Otherwise do nothing. WCO configuration cannot be changed. */
 812:Generated_Source\PSoC4/CyLFClk.c ****     }
 813:Generated_Source\PSoC4/CyLFClk.c **** 
 814:Generated_Source\PSoC4/CyLFClk.c **** 
 815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoEnabled
 817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal Reports the WCO enable state.
 819:Generated_Source\PSoC4/CyLFClk.c ****     *
 820:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 if WCO is enabled
 821:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 if WCO is disabled.
 822:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 823:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 824:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoEnabled(void)
 825:Generated_Source\PSoC4/CyLFClk.c ****     {
 826:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 827:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 1u :
 828:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 0u);
 829:Generated_Source\PSoC4/CyLFClk.c ****     }
 830:Generated_Source\PSoC4/CyLFClk.c **** 
 831:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 16


 832:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 833:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoSetPowerMode
 834:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 835:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 836:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the power mode for the 32 KHz WCO.
 837:Generated_Source\PSoC4/CyLFClk.c ****     *
 838:Generated_Source\PSoC4/CyLFClk.c ****     * By default (if this function is not called), the WCO is in High power mode 
 839:Generated_Source\PSoC4/CyLFClk.c ****     * during Active and device's low power modes
 840:Generated_Source\PSoC4/CyLFClk.c ****     *
 841:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
 842:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_HPM - The High Power mode.<br>
 843:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_LPM - The Low Power mode.
 844:Generated_Source\PSoC4/CyLFClk.c ****     *
 845:Generated_Source\PSoC4/CyLFClk.c ****     * \return A previous power mode. The same as the parameters.
 846:Generated_Source\PSoC4/CyLFClk.c ****     *
 847:Generated_Source\PSoC4/CyLFClk.c ****     * \note
 848:Generated_Source\PSoC4/CyLFClk.c ****     * The WCO Low Power mode is applicable for PSoC 4100 BLE / PSoC 4200 BLE devices.
 849:Generated_Source\PSoC4/CyLFClk.c ****     *
 850:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 851:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoSetPowerMode(uint32 mode)
 852:Generated_Source\PSoC4/CyLFClk.c ****     {
 853:Generated_Source\PSoC4/CyLFClk.c ****         uint32 powerModeStatus;
 854:Generated_Source\PSoC4/CyLFClk.c **** 
 855:Generated_Source\PSoC4/CyLFClk.c ****         powerModeStatus = CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 856:Generated_Source\PSoC4/CyLFClk.c **** 
 857:Generated_Source\PSoC4/CyLFClk.c ****         switch(mode)
 858:Generated_Source\PSoC4/CyLFClk.c ****         {
 859:Generated_Source\PSoC4/CyLFClk.c ****         case CY_SYS_CLK_WCO_HPM:
 860:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkWcoSetHighPowerMode();
 861:Generated_Source\PSoC4/CyLFClk.c ****             break;
 862:Generated_Source\PSoC4/CyLFClk.c **** 
 863:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 864:Generated_Source\PSoC4/CyLFClk.c ****             case CY_SYS_CLK_WCO_LPM:
 865:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkWcoSetLowPowerMode();
 866:Generated_Source\PSoC4/CyLFClk.c ****                 break;
 867:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 868:Generated_Source\PSoC4/CyLFClk.c **** 
 869:Generated_Source\PSoC4/CyLFClk.c ****         default:
 870:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 871:Generated_Source\PSoC4/CyLFClk.c ****             break;
 872:Generated_Source\PSoC4/CyLFClk.c ****         }
 873:Generated_Source\PSoC4/CyLFClk.c **** 
 874:Generated_Source\PSoC4/CyLFClk.c ****         return (powerModeStatus);
 875:Generated_Source\PSoC4/CyLFClk.c ****     }
 876:Generated_Source\PSoC4/CyLFClk.c **** 
 877:Generated_Source\PSoC4/CyLFClk.c **** 
 878:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 879:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkWcoClockOutSelect
 880:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 881:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 882:Generated_Source\PSoC4/CyLFClk.c **** * Selects the WCO block output source.
 883:Generated_Source\PSoC4/CyLFClk.c **** *
 884:Generated_Source\PSoC4/CyLFClk.c **** * In addition to generating 32.768 kHz clock from external crystals, WCO 
 885:Generated_Source\PSoC4/CyLFClk.c **** * can be sourced by external clock source using wco_out pin. The API help to
 886:Generated_Source\PSoC4/CyLFClk.c **** * lets you select between the sources: External crystal or external pin.
 887:Generated_Source\PSoC4/CyLFClk.c **** *
 888:Generated_Source\PSoC4/CyLFClk.c **** * If you want to use external pin to drive WCO the next procedure is required:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 17


 889:Generated_Source\PSoC4/CyLFClk.c **** * <br> 1) Disable the WCO.
 890:Generated_Source\PSoC4/CyLFClk.c **** * <br> 2) Drive the wco_out pin to an external signal source.
 891:Generated_Source\PSoC4/CyLFClk.c **** * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_PIN).
 892:Generated_Source\PSoC4/CyLFClk.c **** * <br> 4) Enable the WCO and wait for 15 us before clocking the XO pad at the high 
 893:Generated_Source\PSoC4/CyLFClk.c **** * potential. Let's assume you are using the 1.6v clock amplitude, then the
 894:Generated_Source\PSoC4/CyLFClk.c **** * sequence would start at 1.6v, then 0v, then 1.6v etc at a chosen frequency.
 895:Generated_Source\PSoC4/CyLFClk.c **** *
 896:Generated_Source\PSoC4/CyLFClk.c **** * If you want to use WCO after using an external pin source:
 897:Generated_Source\PSoC4/CyLFClk.c **** * <br> 1) Disable the WCO.
 898:Generated_Source\PSoC4/CyLFClk.c **** * <br> 2) Drive off wco_out pin with external signal source.
 899:Generated_Source\PSoC4/CyLFClk.c **** * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_CRYSTAL).
 900:Generated_Source\PSoC4/CyLFClk.c **** * <br> 4) Enable the WCO.
 901:Generated_Source\PSoC4/CyLFClk.c **** *
 902:Generated_Source\PSoC4/CyLFClk.c **** * \warning 
 903:Generated_Source\PSoC4/CyLFClk.c **** * Do not use the oscillator output clock prior to a 15uS delay in your system.
 904:Generated_Source\PSoC4/CyLFClk.c **** * There are no limitations on the external clock frequency.
 905:Generated_Source\PSoC4/CyLFClk.c **** * \warning 
 906:Generated_Source\PSoC4/CyLFClk.c **** * When external clock source was selected to drive WCO block the IMO can be 
 907:Generated_Source\PSoC4/CyLFClk.c **** * trimmed only when external clock source period is equal to WCO external
 908:Generated_Source\PSoC4/CyLFClk.c **** * crystal period. Also external clock source accuracy should be higher 
 909:Generated_Source\PSoC4/CyLFClk.c **** * or equal to WCO external crystal accuracy.
 910:Generated_Source\PSoC4/CyLFClk.c **** *
 911:Generated_Source\PSoC4/CyLFClk.c **** * \param clockSel
 912:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_WCO_SEL_CRYSTAL - Selects External crystal as clock 
 913:Generated_Source\PSoC4/CyLFClk.c **** * source of WCO.<br>
 914:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_WCO_SEL_PIN - Selects External clock input on wco_in pin as 
 915:Generated_Source\PSoC4/CyLFClk.c **** * clock source of WCO.
 916:Generated_Source\PSoC4/CyLFClk.c **** *
 917:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 918:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkWcoClockOutSelect(uint32 clockSel)
 919:Generated_Source\PSoC4/CyLFClk.c ****     {
 920:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 921:Generated_Source\PSoC4/CyLFClk.c ****         {
 922:Generated_Source\PSoC4/CyLFClk.c ****             if (1u >= clockSel)
 923:Generated_Source\PSoC4/CyLFClk.c ****             {
 924:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG = (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(~CY_SYS_CLK_WCO_S
 925:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 926:Generated_Source\PSoC4/CyLFClk.c ****             }
 927:Generated_Source\PSoC4/CyLFClk.c ****             else
 928:Generated_Source\PSoC4/CyLFClk.c ****             {
 929:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 930:Generated_Source\PSoC4/CyLFClk.c ****             }
 931:Generated_Source\PSoC4/CyLFClk.c ****         }
 932:Generated_Source\PSoC4/CyLFClk.c ****     }
 933:Generated_Source\PSoC4/CyLFClk.c **** #endif  /* (CY_IP_WCO) */
 934:Generated_Source\PSoC4/CyLFClk.c **** 
 935:Generated_Source\PSoC4/CyLFClk.c **** 
 936:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 937:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 938:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLock
 939:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 940:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 941:Generated_Source\PSoC4/CyLFClk.c ****     * Locks out configuration changes to the Watchdog timer registers and ILO
 942:Generated_Source\PSoC4/CyLFClk.c ****     * configuration register.
 943:Generated_Source\PSoC4/CyLFClk.c ****     *
 944:Generated_Source\PSoC4/CyLFClk.c ****     * After this function is called, ILO clock can't be disabled until
 945:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtUnlock() is called.
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 18


 946:Generated_Source\PSoC4/CyLFClk.c ****     *
 947:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 948:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtLock(void)
 949:Generated_Source\PSoC4/CyLFClk.c ****     {
 950:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 951:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 952:Generated_Source\PSoC4/CyLFClk.c **** 
 953:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = (CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK)) 
 954:Generated_Source\PSoC4/CyLFClk.c ****                  CY_SYS_WDT_CLK_LOCK_BITS_MASK;
 955:Generated_Source\PSoC4/CyLFClk.c **** 
 956:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 957:Generated_Source\PSoC4/CyLFClk.c ****     }
 958:Generated_Source\PSoC4/CyLFClk.c **** 
 959:Generated_Source\PSoC4/CyLFClk.c **** 
 960:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 961:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLocked
 962:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 963:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 964:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the WDT lock state.
 965:Generated_Source\PSoC4/CyLFClk.c ****     *
 966:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - WDT is locked, and 0 - WDT is unlocked.
 967:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 969:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void)
 970:Generated_Source\PSoC4/CyLFClk.c ****     {
 971:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal 0 */
 972:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_SELECT_REG & (uint32)(CY_SYS_WDT_CLK_LOCK_BITS_MASK))) ? (uint32
 973:Generated_Source\PSoC4/CyLFClk.c ****     }
 974:Generated_Source\PSoC4/CyLFClk.c **** 
 975:Generated_Source\PSoC4/CyLFClk.c **** 
 976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnlock
 978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 979:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 980:Generated_Source\PSoC4/CyLFClk.c ****     *  Unlocks the Watchdog Timer configuration register.
 981:Generated_Source\PSoC4/CyLFClk.c ****     *
 982:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 983:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnlock(void)
 984:Generated_Source\PSoC4/CyLFClk.c ****     {
 985:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 986:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 987:Generated_Source\PSoC4/CyLFClk.c **** 
 988:Generated_Source\PSoC4/CyLFClk.c ****         /* Removing WDT lock requires two writes */
 989:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 990:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT0);
 991:Generated_Source\PSoC4/CyLFClk.c **** 
 992:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 993:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT1);
 994:Generated_Source\PSoC4/CyLFClk.c **** 
 995:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 996:Generated_Source\PSoC4/CyLFClk.c ****     }
 997:Generated_Source\PSoC4/CyLFClk.c **** 
 998:Generated_Source\PSoC4/CyLFClk.c **** 
 999:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1000:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1001:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1002:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 19


1003:Generated_Source\PSoC4/CyLFClk.c ****     *  Reads the enabled status of one of the three WDT counters.
1004:Generated_Source\PSoC4/CyLFClk.c ****     *
1005:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1006:Generated_Source\PSoC4/CyLFClk.c ****     *
1007:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1008:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the counter is disabled.
1009:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the counter is enabled.
1010:Generated_Source\PSoC4/CyLFClk.c ****     *
1011:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1012:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual WDT counter status from the status register. It may
1013:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles for the WDT status register to contain actual data
1014:Generated_Source\PSoC4/CyLFClk.c ****     * after the WDT counter is enabled.
1015:Generated_Source\PSoC4/CyLFClk.c ****     *
1016:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1017:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum)
1018:Generated_Source\PSoC4/CyLFClk.c ****     {
1019:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
1020:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONTROL_REG >> ((CY_SYS_WDT_CNT_SHIFT * counterNum) + CY_SYS_WDT_CNT_ST
1021:Generated_Source\PSoC4/CyLFClk.c ****     }
1022:Generated_Source\PSoC4/CyLFClk.c **** 
1023:Generated_Source\PSoC4/CyLFClk.c **** 
1024:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1025:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMode
1026:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1027:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1028:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the mode of one of the three WDT counters.
1029:Generated_Source\PSoC4/CyLFClk.c ****     *
1030:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1031:Generated_Source\PSoC4/CyLFClk.c ****     *
1032:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
1033:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_MODE_NONE - Free running.<br>
1034:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT - The interrupt generated on match for counter 0
1035:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.<br>
1036:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_RESET - Reset on match (valid for counter 0 and 1 only).<br>
1037:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT_RESET - Generate an interrupt.  Generate a reset on
1038:Generated_Source\PSoC4/CyLFClk.c ****     * the 3rd non-handled interrupt (valid for counter 0 and counter 1 only).
1039:Generated_Source\PSoC4/CyLFClk.c ****     *
1040:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1041:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled to set a mode. Otherwise, this
1042:Generated_Source\PSoC4/CyLFClk.c ****     * function call has no effect. If the specified counter is enabled,
1043:Generated_Source\PSoC4/CyLFClk.c ****     * call the CySysWdtDisable() function with the corresponding parameter to
1044:Generated_Source\PSoC4/CyLFClk.c ****     * disable the specified counter and wait for it to stop.
1045:Generated_Source\PSoC4/CyLFClk.c ****     *
1046:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1047:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMode(uint32 counterNum, uint32 mode)
1048:Generated_Source\PSoC4/CyLFClk.c ****     {
1049:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1050:Generated_Source\PSoC4/CyLFClk.c **** 
1051:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
1052:Generated_Source\PSoC4/CyLFClk.c **** 
1053:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
1054:Generated_Source\PSoC4/CyLFClk.c ****         {
1055:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG &
1056:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
1057:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_WDT_MODE_MASK) << (counterNum * CY_SYS_WDT_CN
1058:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1059:Generated_Source\PSoC4/CyLFClk.c ****         }
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 20


1060:Generated_Source\PSoC4/CyLFClk.c ****     }
1061:Generated_Source\PSoC4/CyLFClk.c **** 
1062:Generated_Source\PSoC4/CyLFClk.c **** 
1063:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1064:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMode
1065:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1066:Generated_Source\PSoC4/CyLFClk.c ****     * 
1067:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three WDT counters.
1068:Generated_Source\PSoC4/CyLFClk.c ****     *
1069:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1070:Generated_Source\PSoC4/CyLFClk.c ****     *
1071:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
1072:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysWdtSetMode().
1073:Generated_Source\PSoC4/CyLFClk.c ****     *
1074:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1075:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMode(uint32 counterNum)
1076:Generated_Source\PSoC4/CyLFClk.c ****     {
1077:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> (counterNum * CY_SYS_WDT_CNT_SHIFT)) & CY_SYS_WDT_MODE_MA
1078:Generated_Source\PSoC4/CyLFClk.c ****     }
1079:Generated_Source\PSoC4/CyLFClk.c **** 
1080:Generated_Source\PSoC4/CyLFClk.c **** 
1081:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1082:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetClearOnMatch
1083:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1084:Generated_Source\PSoC4/CyLFClk.c ****     * 
1085:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter "clear on match" setting.
1086:Generated_Source\PSoC4/CyLFClk.c ****     *
1087:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue
1088:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
1089:Generated_Source\PSoC4/CyLFClk.c ****     *
1090:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1091:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1092:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1093:Generated_Source\PSoC4/CyLFClk.c ****     *
1094:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
1095:Generated_Source\PSoC4/CyLFClk.c ****     *  1 to enable appropriate counter
1096:Generated_Source\PSoC4/CyLFClk.c ****     *
1097:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1098:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled. Otherwise this function call
1099:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysWdtDisable()
1100:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
1101:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three LFCLK cycles.
1102:Generated_Source\PSoC4/CyLFClk.c ****     *
1103:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1104:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable)
1105:Generated_Source\PSoC4/CyLFClk.c ****     {
1106:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1107:Generated_Source\PSoC4/CyLFClk.c **** 
1108:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1109:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1110:Generated_Source\PSoC4/CyLFClk.c **** 
1111:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
1112:Generated_Source\PSoC4/CyLFClk.c ****         {
1113:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
1114:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
1115:Generated_Source\PSoC4/CyLFClk.c **** 
1116:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 21


1117:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_C
1118:Generated_Source\PSoC4/CyLFClk.c **** 
1119:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1120:Generated_Source\PSoC4/CyLFClk.c ****         }
1121:Generated_Source\PSoC4/CyLFClk.c ****     }
1122:Generated_Source\PSoC4/CyLFClk.c **** 
1123:Generated_Source\PSoC4/CyLFClk.c **** 
1124:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1125:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetClearOnMatch
1126:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1127:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1128:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the "clear on match" setting for the specified counter.
1129:Generated_Source\PSoC4/CyLFClk.c ****     *
1130:Generated_Source\PSoC4/CyLFClk.c ****     * \param
1131:Generated_Source\PSoC4/CyLFClk.c ****     * counterNum Valid range [0-1]. The number of the WDT counter. The match values
1132:Generated_Source\PSoC4/CyLFClk.c ****     * are not supported by counter 2.
1133:Generated_Source\PSoC4/CyLFClk.c ****     *
1134:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
1135:Generated_Source\PSoC4/CyLFClk.c ****     *
1136:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1137:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum)
1138:Generated_Source\PSoC4/CyLFClk.c ****     {
1139:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1140:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1141:Generated_Source\PSoC4/CyLFClk.c **** 
1142:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WDT_CONFIG_REG >>
1143:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
1144:Generated_Source\PSoC4/CyLFClk.c ****     }
1145:Generated_Source\PSoC4/CyLFClk.c **** 
1146:Generated_Source\PSoC4/CyLFClk.c **** 
1147:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1148:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1149:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1150:Generated_Source\PSoC4/CyLFClk.c ****     *
1151:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified WDT counters.
1152:Generated_Source\PSoC4/CyLFClk.c ****     *
1153:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are enabled.
1154:Generated_Source\PSoC4/CyLFClk.c ****     *
1155:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1156:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to enable.<br>
1157:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to enable.<br>
1158:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to enable.
1159:Generated_Source\PSoC4/CyLFClk.c ****     *
1160:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1161:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling WDT requires 3 LFCLK cycles to come into effect.
1162:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the WDT enable state must not be changed more than once in
1163:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
1164:Generated_Source\PSoC4/CyLFClk.c ****     *
1165:Generated_Source\PSoC4/CyLFClk.c ****     * After WDT is enabled, it is illegal to write WDT configuration (WDT_CONFIG)
1166:Generated_Source\PSoC4/CyLFClk.c ****     * and control (WDT_CONTROL) registers. This means that all WDT functions that
1167:Generated_Source\PSoC4/CyLFClk.c ****     * contain 'write' in the name (with the exception of CySysWdtSetMatch()
1168:Generated_Source\PSoC4/CyLFClk.c ****     * function) are illegal to call if WDT is enabled.
1169:Generated_Source\PSoC4/CyLFClk.c ****     *
1170:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 / PSoC 4200: This function enables ILO.
1171:Generated_Source\PSoC4/CyLFClk.c ****     *
1172:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 BLE / PSoC 4200 BLE / PSoC4200L / PSoC 4100M 
1173:Generated_Source\PSoC4/CyLFClk.c ****     * / PSoC 4200M:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 22


1174:Generated_Source\PSoC4/CyLFClk.c ****     * LFLCK should be configured before calling this function. The desired
1175:Generated_Source\PSoC4/CyLFClk.c ****     * source should be enabled and configured to be the source for LFCLK.
1176:Generated_Source\PSoC4/CyLFClk.c ****     *
1177:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1178:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(uint32 counterMask)
1179:Generated_Source\PSoC4/CyLFClk.c ****     {
1180:Generated_Source\PSoC4/CyLFClk.c ****         #if (!CY_IP_WCO)
1181:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkIloStart();
1182:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (!CY_IP_WCO) */
1183:Generated_Source\PSoC4/CyLFClk.c **** 
1184:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= counterMask;
1185:Generated_Source\PSoC4/CyLFClk.c **** 
1186:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
1187:Generated_Source\PSoC4/CyLFClk.c ****         {
1188:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1189:Generated_Source\PSoC4/CyLFClk.c ****             {
1190:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1191:Generated_Source\PSoC4/CyLFClk.c ****             }
1192:Generated_Source\PSoC4/CyLFClk.c ****         }
1193:Generated_Source\PSoC4/CyLFClk.c **** 
1194:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
1195:Generated_Source\PSoC4/CyLFClk.c ****         {
1196:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1197:Generated_Source\PSoC4/CyLFClk.c ****             {
1198:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1199:Generated_Source\PSoC4/CyLFClk.c ****             }
1200:Generated_Source\PSoC4/CyLFClk.c ****         }
1201:Generated_Source\PSoC4/CyLFClk.c **** 
1202:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
1203:Generated_Source\PSoC4/CyLFClk.c ****         {
1204:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1205:Generated_Source\PSoC4/CyLFClk.c ****             {
1206:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1207:Generated_Source\PSoC4/CyLFClk.c ****             }
1208:Generated_Source\PSoC4/CyLFClk.c ****         }
1209:Generated_Source\PSoC4/CyLFClk.c ****     }
1210:Generated_Source\PSoC4/CyLFClk.c **** 
1211:Generated_Source\PSoC4/CyLFClk.c **** 
1212:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1213:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1214:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1215:Generated_Source\PSoC4/CyLFClk.c ****     *
1216:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified WDT counters.
1217:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
1218:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
1219:Generated_Source\PSoC4/CyLFClk.c ****     *
1220:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1221:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to disable. <br>
1222:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to disable. <br>
1223:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to disable.
1224:Generated_Source\PSoC4/CyLFClk.c ****     *
1225:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1226:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(uint32 counterMask)
1227:Generated_Source\PSoC4/CyLFClk.c ****     {
1228:Generated_Source\PSoC4/CyLFClk.c ****         if (0uL == CySysWdtLocked())
1229:Generated_Source\PSoC4/CyLFClk.c ****         {
1230:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= ~counterMask;
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 23


1231:Generated_Source\PSoC4/CyLFClk.c **** 
1232:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
1233:Generated_Source\PSoC4/CyLFClk.c ****             {
1234:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1235:Generated_Source\PSoC4/CyLFClk.c ****                 {
1236:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1237:Generated_Source\PSoC4/CyLFClk.c ****                 }
1238:Generated_Source\PSoC4/CyLFClk.c ****             }
1239:Generated_Source\PSoC4/CyLFClk.c **** 
1240:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
1241:Generated_Source\PSoC4/CyLFClk.c ****             {
1242:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1243:Generated_Source\PSoC4/CyLFClk.c ****                 {
1244:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1245:Generated_Source\PSoC4/CyLFClk.c ****                 }
1246:Generated_Source\PSoC4/CyLFClk.c ****             }
1247:Generated_Source\PSoC4/CyLFClk.c **** 
1248:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
1249:Generated_Source\PSoC4/CyLFClk.c ****             {
1250:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1251:Generated_Source\PSoC4/CyLFClk.c ****                 {
1252:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1253:Generated_Source\PSoC4/CyLFClk.c ****                 }
1254:Generated_Source\PSoC4/CyLFClk.c ****             }
1255:Generated_Source\PSoC4/CyLFClk.c ****         }
1256:Generated_Source\PSoC4/CyLFClk.c ****     }
1257:Generated_Source\PSoC4/CyLFClk.c **** 
1258:Generated_Source\PSoC4/CyLFClk.c **** 
1259:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1260:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetCascade
1261:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1262:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1263:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two WDT cascade values based on the combination of mask values
1264:Generated_Source\PSoC4/CyLFClk.c ****     * specified.
1265:Generated_Source\PSoC4/CyLFClk.c ****     *
1266:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
1267:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_NONE - Neither <br>
1268:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_01 - Cascade 01 <br>
1269:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_12 - Cascade 12
1270:Generated_Source\PSoC4/CyLFClk.c ****     *
1271:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
1272:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
1273:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
1274:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysWdtSetCascade() was called with ORed defines it is necessary 
1275:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysWdtSetClearOnMatch(1,1). It is needed to make sure that 
1276:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
1277:Generated_Source\PSoC4/CyLFClk.c ****     *
1278:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counters that are part of the specified cascade should be disabled.
1279:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
1280:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysWdtDisable() function with the corresponding
1281:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
1282:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1283:Generated_Source\PSoC4/CyLFClk.c ****     *
1284:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1285:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetCascade(uint32 cascadeMask)
1286:Generated_Source\PSoC4/CyLFClk.c ****     {
1287:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 24


1288:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
1289:Generated_Source\PSoC4/CyLFClk.c **** 
1290:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0) |
1291:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
1292:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2);
1293:Generated_Source\PSoC4/CyLFClk.c **** 
1294:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
1295:Generated_Source\PSoC4/CyLFClk.c ****         {
1296:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
1297:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_WDT_CASCADE_01|CY_SYS_WDT_CASCADE_12)));
1298:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
1299:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1300:Generated_Source\PSoC4/CyLFClk.c ****         }
1301:Generated_Source\PSoC4/CyLFClk.c ****     }
1302:Generated_Source\PSoC4/CyLFClk.c **** 
1303:Generated_Source\PSoC4/CyLFClk.c **** 
1304:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1305:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCascade
1306:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1307:Generated_Source\PSoC4/CyLFClk.c ****     *
1308:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two WDT cascade values returning a mask of the bits set.
1309:Generated_Source\PSoC4/CyLFClk.c ****     *
1310:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
1311:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_NONE - Neither
1312:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_01 - Cascade 01
1313:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_12 - Cascade 12
1314:Generated_Source\PSoC4/CyLFClk.c ****     *
1315:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1316:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCascade(void)
1317:Generated_Source\PSoC4/CyLFClk.c ****     {
1318:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONFIG_REG & (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12));
1319:Generated_Source\PSoC4/CyLFClk.c ****     }
1320:Generated_Source\PSoC4/CyLFClk.c **** 
1321:Generated_Source\PSoC4/CyLFClk.c **** 
1322:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1323:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1324:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1325:Generated_Source\PSoC4/CyLFClk.c ****     *
1326:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1327:Generated_Source\PSoC4/CyLFClk.c ****     *
1328:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1329:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1330:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1331:Generated_Source\PSoC4/CyLFClk.c ****     *
1332:Generated_Source\PSoC4/CyLFClk.c ****     * \param match
1333:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-65535]. The value to be used to match against the counter.
1334:Generated_Source\PSoC4/CyLFClk.c ****     *
1335:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1336:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 counterNum, uint32 match)
1337:Generated_Source\PSoC4/CyLFClk.c ****     {
1338:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
1339:Generated_Source\PSoC4/CyLFClk.c **** 
1340:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1341:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1342:Generated_Source\PSoC4/CyLFClk.c **** 
1343:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
1344:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_3LFCLK_DELAY_US);
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 25


1345:Generated_Source\PSoC4/CyLFClk.c **** 
1346:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WDT_MATCH_REG;
1347:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
1348:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)));
1349:Generated_Source\PSoC4/CyLFClk.c **** 
1350:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
1351:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_1LFCLK_DELAY_US);
1352:Generated_Source\PSoC4/CyLFClk.c ****     }
1353:Generated_Source\PSoC4/CyLFClk.c **** 
1354:Generated_Source\PSoC4/CyLFClk.c **** 
1355:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1356:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetToggleBit
1357:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1358:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1359:Generated_Source\PSoC4/CyLFClk.c ****     * Configures which bit in WDT counter 2 to monitor for a toggle.
1360:Generated_Source\PSoC4/CyLFClk.c ****     *
1361:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if the mode for counter 2 has
1362:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
1363:Generated_Source\PSoC4/CyLFClk.c ****     *
1364:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31].  Counter 2 bit to monitor for a toggle.
1365:Generated_Source\PSoC4/CyLFClk.c ****     *
1366:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1367:Generated_Source\PSoC4/CyLFClk.c ****     * WDT Counter 2 should be disabled. Otherwise this function call has no
1368:Generated_Source\PSoC4/CyLFClk.c ****     * effect.
1369:Generated_Source\PSoC4/CyLFClk.c ****     *
1370:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysWdtDisable() function with
1371:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
1372:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to 3 LFCLK cycles.
1373:Generated_Source\PSoC4/CyLFClk.c ****     *
1374:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1375:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetToggleBit(uint32 bits)
1376:Generated_Source\PSoC4/CyLFClk.c ****     {
1377:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1378:Generated_Source\PSoC4/CyLFClk.c **** 
1379:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1380:Generated_Source\PSoC4/CyLFClk.c ****         {
1381:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
1382:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_WDT_CONFIG_BITS2_MASK << CY_SYS_WDT_CONFIG
1383:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_WDT_CONFIG_BITS2_MASK) << CY_SYS_WDT_CONFIG_BITS2_POS
1384:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1385:Generated_Source\PSoC4/CyLFClk.c ****         }
1386:Generated_Source\PSoC4/CyLFClk.c ****     }
1387:Generated_Source\PSoC4/CyLFClk.c **** 
1388:Generated_Source\PSoC4/CyLFClk.c **** 
1389:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1390:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetToggleBit
1391:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1392:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1393:Generated_Source\PSoC4/CyLFClk.c ****     * Reads which bit in WDT counter 2 is monitored for a toggle.
1394:Generated_Source\PSoC4/CyLFClk.c ****     *
1395:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
1396:Generated_Source\PSoC4/CyLFClk.c ****     *
1397:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1398:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetToggleBit(void)
1399:Generated_Source\PSoC4/CyLFClk.c ****     {
1400:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> CY_SYS_WDT_CONFIG_BITS2_POS) & CY_SYS_WDT_CONFIG_BITS2_MA
1401:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 26


1402:Generated_Source\PSoC4/CyLFClk.c **** 
1403:Generated_Source\PSoC4/CyLFClk.c **** 
1404:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1405:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1406:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1407:Generated_Source\PSoC4/CyLFClk.c ****     *
1408:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1409:Generated_Source\PSoC4/CyLFClk.c ****     *
1410:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the WDT counter. The match
1411:Generated_Source\PSoC4/CyLFClk.c ****     * values are not supported by counter 2.
1412:Generated_Source\PSoC4/CyLFClk.c ****     *
1413:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
1414:Generated_Source\PSoC4/CyLFClk.c ****     *
1415:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1416:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(uint32 counterNum)
1417:Generated_Source\PSoC4/CyLFClk.c ****     {
1418:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1419:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1420:Generated_Source\PSoC4/CyLFClk.c **** 
1421:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WDT_MATCH_REG >> 
1422:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
1423:Generated_Source\PSoC4/CyLFClk.c ****     }
1424:Generated_Source\PSoC4/CyLFClk.c **** 
1425:Generated_Source\PSoC4/CyLFClk.c **** 
1426:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1427:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1428:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1429:Generated_Source\PSoC4/CyLFClk.c ****     *
1430:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1431:Generated_Source\PSoC4/CyLFClk.c ****     *
1432:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the WDT counter.
1433:Generated_Source\PSoC4/CyLFClk.c ****     *
1434:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.  Counter 0 and Counter 1 are 16 bit counters 
1435:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
1436:Generated_Source\PSoC4/CyLFClk.c ****     *
1437:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1438:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(uint32 counterNum)
1439:Generated_Source\PSoC4/CyLFClk.c ****     {
1440:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
1441:Generated_Source\PSoC4/CyLFClk.c **** 
1442:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
1443:Generated_Source\PSoC4/CyLFClk.c ****         {
1444:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 0 */
1445:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
1446:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRLOW_REG & CY_SYS_WDT_LOWER_16BITS_MASK;
1447:Generated_Source\PSoC4/CyLFClk.c ****             break;
1448:Generated_Source\PSoC4/CyLFClk.c **** 
1449:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 1 */
1450:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
1451:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WDT_CTRLOW_REG >> CY_SYS_WDT_CNT_MATCH_SHIFT) & CY_SYS_WDT_LOWER
1452:Generated_Source\PSoC4/CyLFClk.c ****             break;
1453:Generated_Source\PSoC4/CyLFClk.c **** 
1454:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 2 */
1455:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
1456:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRHIGH_REG;
1457:Generated_Source\PSoC4/CyLFClk.c ****             break;
1458:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 27


1459:Generated_Source\PSoC4/CyLFClk.c ****             default:
1460:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
1461:Generated_Source\PSoC4/CyLFClk.c ****             break;
1462:Generated_Source\PSoC4/CyLFClk.c ****         }
1463:Generated_Source\PSoC4/CyLFClk.c **** 
1464:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
1465:Generated_Source\PSoC4/CyLFClk.c ****     }
1466:Generated_Source\PSoC4/CyLFClk.c **** 
1467:Generated_Source\PSoC4/CyLFClk.c **** 
1468:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1469:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptSource
1470:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1471:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1472:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the WDT counters interrupts that are currently
1473:Generated_Source\PSoC4/CyLFClk.c ****     * set by the hardware, if a corresponding mode is selected.
1474:Generated_Source\PSoC4/CyLFClk.c ****     *
1475:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
1476:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER0_INT - Counter 0
1477:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER1_INT - Counter 1
1478:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER2_INT - Counter 2
1479:Generated_Source\PSoC4/CyLFClk.c ****     *
1480:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1481:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetInterruptSource(void)
1482:Generated_Source\PSoC4/CyLFClk.c ****     {
1483:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONTROL_REG & (CY_SYS_WDT_COUNTER0_INT | CY_SYS_WDT_COUNTER1_INT | CY_SY
1484:Generated_Source\PSoC4/CyLFClk.c ****     }
1485:Generated_Source\PSoC4/CyLFClk.c **** 
1486:Generated_Source\PSoC4/CyLFClk.c **** 
1487:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1488:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
1489:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1490:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1491:Generated_Source\PSoC4/CyLFClk.c ****     * Clears all the WDT counter interrupts set in the mask.
1492:Generated_Source\PSoC4/CyLFClk.c ****     *
1493:Generated_Source\PSoC4/CyLFClk.c ****     * Calling this function also prevents from Reset when the counter mode is set 
1494:Generated_Source\PSoC4/CyLFClk.c ****     * to generate 3 interrupts and then the device resets.
1495:Generated_Source\PSoC4/CyLFClk.c ****     *
1496:Generated_Source\PSoC4/CyLFClk.c ****     * All the WDT interrupts are to be cleared by the firmware, otherwise
1497:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
1498:Generated_Source\PSoC4/CyLFClk.c ****     *
1499:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1500:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_INT - Clears counter 0 interrupts <br>
1501:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_INT - Clears counter 1 interrupts <br>
1502:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_INT - Clears counter 2 interrupts
1503:Generated_Source\PSoC4/CyLFClk.c ****     *
1504:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1505:Generated_Source\PSoC4/CyLFClk.c ****     * This function temporary removes the watchdog lock, if it was set, and
1506:Generated_Source\PSoC4/CyLFClk.c ****     * restores the lock state after cleaning the WDT interrupts that are set in
1507:Generated_Source\PSoC4/CyLFClk.c ****     * a mask.
1508:Generated_Source\PSoC4/CyLFClk.c ****     *
1509:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1510:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(uint32 counterMask)
1511:Generated_Source\PSoC4/CyLFClk.c ****     {
1512:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
1513:Generated_Source\PSoC4/CyLFClk.c ****         uint32 wdtLockState;
1514:Generated_Source\PSoC4/CyLFClk.c **** 
1515:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 28


1516:Generated_Source\PSoC4/CyLFClk.c **** 
1517:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtLocked())
1518:Generated_Source\PSoC4/CyLFClk.c ****         {
1519:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 1u;
1520:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtUnlock();
1521:Generated_Source\PSoC4/CyLFClk.c ****         }
1522:Generated_Source\PSoC4/CyLFClk.c ****         else
1523:Generated_Source\PSoC4/CyLFClk.c ****         {
1524:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 0u;
1525:Generated_Source\PSoC4/CyLFClk.c ****         }
1526:Generated_Source\PSoC4/CyLFClk.c **** 
1527:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT control register value */
1528:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_WDT_COUNTER0_INT |
1529:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER1_INT |
1530:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER2_INT);
1531:Generated_Source\PSoC4/CyLFClk.c **** 
1532:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG = counterMask | (CY_SYS_WDT_CONTROL_REG & ~(CY_SYS_WDT_COUNTER0_INT 
1533:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
1534:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER2_INT)
1535:Generated_Source\PSoC4/CyLFClk.c **** 
1536:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
1537:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
1538:Generated_Source\PSoC4/CyLFClk.c ****         */
1539:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WDT_CONTROL_REG;
1540:Generated_Source\PSoC4/CyLFClk.c **** 
1541:Generated_Source\PSoC4/CyLFClk.c ****         if (1u == wdtLockState)
1542:Generated_Source\PSoC4/CyLFClk.c ****         {
1543:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtLock();
1544:Generated_Source\PSoC4/CyLFClk.c ****         }
1545:Generated_Source\PSoC4/CyLFClk.c **** 
1546:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
1547:Generated_Source\PSoC4/CyLFClk.c ****     }
1548:Generated_Source\PSoC4/CyLFClk.c **** 
1549:Generated_Source\PSoC4/CyLFClk.c **** 
1550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtResetCounters
1552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1553:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1554:Generated_Source\PSoC4/CyLFClk.c ****     * Resets all the WDT counters set in the mask.
1555:Generated_Source\PSoC4/CyLFClk.c ****     *
1556:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
1557:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_RESET - Reset counter 0 <br>
1558:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_RESET - Reset counter 1 <br>
1559:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_RESET - Reset counter 2
1560:Generated_Source\PSoC4/CyLFClk.c ****     *
1561:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1562:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not reset counter values if the Watchdog is locked.
1563:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
1564:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1565:Generated_Source\PSoC4/CyLFClk.c ****     * The LFCLK source must be enabled. Otherwise, the function will never exit.
1566:Generated_Source\PSoC4/CyLFClk.c ****     *
1567:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1568:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtResetCounters(uint32 countersMask)
1569:Generated_Source\PSoC4/CyLFClk.c ****     {
1570:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT reset value */
1571:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= (countersMask & CY_SYS_WDT_COUNTERS_RESET);
1572:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 29


1573:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WDT_CONTROL_REG & CY_SYS_WDT_COUNTERS_RESET))
1574:Generated_Source\PSoC4/CyLFClk.c ****         {
1575:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
1576:Generated_Source\PSoC4/CyLFClk.c ****         }
1577:Generated_Source\PSoC4/CyLFClk.c ****     }
1578:Generated_Source\PSoC4/CyLFClk.c **** 
1579:Generated_Source\PSoC4/CyLFClk.c **** 
1580:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1581:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetInterruptCallback
1582:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1583:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1584:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular WDT counter.
1585:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the WDT interrupt.
1586:Generated_Source\PSoC4/CyLFClk.c ****     *
1587:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1588:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
1589:Generated_Source\PSoC4/CyLFClk.c ****     *
1590:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the previous callback function.
1591:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
1592:Generated_Source\PSoC4/CyLFClk.c ****     *
1593:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1594:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function)
1595:Generated_Source\PSoC4/CyLFClk.c ****     {
1596:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
1597:Generated_Source\PSoC4/CyLFClk.c **** 
1598:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1599:Generated_Source\PSoC4/CyLFClk.c ****         {
1600:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysWdtCallback[counterNum];
1601:Generated_Source\PSoC4/CyLFClk.c ****             cySysWdtCallback[counterNum] = function;
1602:Generated_Source\PSoC4/CyLFClk.c ****         }
1603:Generated_Source\PSoC4/CyLFClk.c ****         else
1604:Generated_Source\PSoC4/CyLFClk.c ****         {
1605:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1606:Generated_Source\PSoC4/CyLFClk.c ****         }
1607:Generated_Source\PSoC4/CyLFClk.c **** 
1608:Generated_Source\PSoC4/CyLFClk.c ****         return((cyWdtCallback)prevCallback);
1609:Generated_Source\PSoC4/CyLFClk.c ****     }
1610:Generated_Source\PSoC4/CyLFClk.c **** 
1611:Generated_Source\PSoC4/CyLFClk.c **** 
1612:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1613:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptCallback
1614:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1615:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1616:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the particular WDT counter.
1617:Generated_Source\PSoC4/CyLFClk.c ****     *
1618:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1619:Generated_Source\PSoC4/CyLFClk.c ****     *
1620:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for a particular WDT by
1621:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
1622:Generated_Source\PSoC4/CyLFClk.c ****     *
1623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1624:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(uint32 counterNum)
1625:Generated_Source\PSoC4/CyLFClk.c ****     {
1626:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback retCallback = (void *)0;
1627:Generated_Source\PSoC4/CyLFClk.c **** 
1628:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1629:Generated_Source\PSoC4/CyLFClk.c ****         {
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 30


1630:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyWdtCallback)cySysWdtCallback[counterNum];
1631:Generated_Source\PSoC4/CyLFClk.c ****         }
1632:Generated_Source\PSoC4/CyLFClk.c ****         else
1633:Generated_Source\PSoC4/CyLFClk.c ****         {
1634:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1635:Generated_Source\PSoC4/CyLFClk.c ****         }
1636:Generated_Source\PSoC4/CyLFClk.c **** 
1637:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
1638:Generated_Source\PSoC4/CyLFClk.c ****     }
1639:Generated_Source\PSoC4/CyLFClk.c **** 
1640:Generated_Source\PSoC4/CyLFClk.c **** 
1641:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1642:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnableCounterIsr
1643:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1644:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1645:Generated_Source\PSoC4/CyLFClk.c ****     * Enables the ISR callback servicing for the particular WDT counter
1646:Generated_Source\PSoC4/CyLFClk.c ****     *
1647:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1648:Generated_Source\PSoC4/CyLFClk.c ****     *
1649:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate WDT counter. For example value 1 
1650:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT counter.
1651:Generated_Source\PSoC4/CyLFClk.c ****     *
1652:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1653:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnableCounterIsr(uint32 counterNum)
1654:Generated_Source\PSoC4/CyLFClk.c ****     {
1655:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1656:Generated_Source\PSoC4/CyLFClk.c ****         {
1657:Generated_Source\PSoC4/CyLFClk.c ****             disableServicedIsr &= ~counterIntMaskTbl[counterNum];
1658:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask |= counterIntMaskTbl[counterNum];
1659:Generated_Source\PSoC4/CyLFClk.c ****         }
1660:Generated_Source\PSoC4/CyLFClk.c ****         else
1661:Generated_Source\PSoC4/CyLFClk.c ****         {
1662:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1663:Generated_Source\PSoC4/CyLFClk.c ****         }
1664:Generated_Source\PSoC4/CyLFClk.c ****     }
1665:Generated_Source\PSoC4/CyLFClk.c **** 
1666:Generated_Source\PSoC4/CyLFClk.c **** 
1667:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1668:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisableCounterIsr
1669:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1670:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1671:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the ISR callback servicing for the particular WDT counter
1672:Generated_Source\PSoC4/CyLFClk.c ****     *
1673:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1674:Generated_Source\PSoC4/CyLFClk.c ****     *
1675:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1676:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisableCounterIsr(uint32 counterNum)
1677:Generated_Source\PSoC4/CyLFClk.c ****     {
1678:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1679:Generated_Source\PSoC4/CyLFClk.c ****         {
1680:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask &= ~counterIntMaskTbl[counterNum];
1681:Generated_Source\PSoC4/CyLFClk.c ****         }
1682:Generated_Source\PSoC4/CyLFClk.c ****         else
1683:Generated_Source\PSoC4/CyLFClk.c ****         {
1684:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1685:Generated_Source\PSoC4/CyLFClk.c ****         }
1686:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 31


1687:Generated_Source\PSoC4/CyLFClk.c **** 
1688:Generated_Source\PSoC4/CyLFClk.c **** 
1689:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1690:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
1691:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1692:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1693:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
1694:Generated_Source\PSoC4/CyLFClk.c ****     *
1695:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which WDT triggered in the interrupt and calls the 
1696:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
1697:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetIsrCallback() API.
1698:Generated_Source\PSoC4/CyLFClk.c ****     *
1699:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
1700:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
1701:Generated_Source\PSoC4/CyLFClk.c ****     *
1702:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1703:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
1704:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
1705:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
1706:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
1707:Generated_Source\PSoC4/CyLFClk.c ****     *
1708:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1709:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
1710:Generated_Source\PSoC4/CyLFClk.c ****     {
1711:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER0_INT & CY_SYS_WDT_CONTROL_REG))
1712:Generated_Source\PSoC4/CyLFClk.c ****         {
1713:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER0_INT & wdtIsrMask))
1714:Generated_Source\PSoC4/CyLFClk.c ****             {
1715:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER0_INT);
1716:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER0_INT;
1717:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER0] != (void *) 0)
1718:Generated_Source\PSoC4/CyLFClk.c ****                 {
1719:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER0])();
1720:Generated_Source\PSoC4/CyLFClk.c ****                 }
1721:Generated_Source\PSoC4/CyLFClk.c ****             }
1722:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1723:Generated_Source\PSoC4/CyLFClk.c ****         }
1724:Generated_Source\PSoC4/CyLFClk.c **** 
1725:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER1_INT & CY_SYS_WDT_CONTROL_REG))
1726:Generated_Source\PSoC4/CyLFClk.c ****         {
1727:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER1_INT & wdtIsrMask))
1728:Generated_Source\PSoC4/CyLFClk.c ****             {
1729:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER1_INT);
1730:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER1_INT;
1731:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER1] != (void *) 0)
1732:Generated_Source\PSoC4/CyLFClk.c ****                 {
1733:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER1])();
1734:Generated_Source\PSoC4/CyLFClk.c ****                 }
1735:Generated_Source\PSoC4/CyLFClk.c ****             }
1736:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1737:Generated_Source\PSoC4/CyLFClk.c ****         }
1738:Generated_Source\PSoC4/CyLFClk.c **** 
1739:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER2_INT & CY_SYS_WDT_CONTROL_REG))
1740:Generated_Source\PSoC4/CyLFClk.c ****         {
1741:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER2_INT & wdtIsrMask))
1742:Generated_Source\PSoC4/CyLFClk.c ****             {
1743:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER2] != (void *) 0)
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 32


1744:Generated_Source\PSoC4/CyLFClk.c ****                 {
1745:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER2])();
1746:Generated_Source\PSoC4/CyLFClk.c ****                 }
1747:Generated_Source\PSoC4/CyLFClk.c ****             }
1748:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER2_INT);
1749:Generated_Source\PSoC4/CyLFClk.c ****         }
1750:Generated_Source\PSoC4/CyLFClk.c ****     }
1751:Generated_Source\PSoC4/CyLFClk.c **** 
1752:Generated_Source\PSoC4/CyLFClk.c **** 
1753:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWatchdogFeed
1755:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1757:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the corresponded Watchdog Counter before it causes the device reset.
1758:Generated_Source\PSoC4/CyLFClk.c ****     *
1759:Generated_Source\PSoC4/CyLFClk.c ****     * Supported only for first WDT0 and second WDT1 counters in the "Watchdog" or 
1760:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" modes.
1761:Generated_Source\PSoC4/CyLFClk.c ****     *
1762:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1763:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0 - Feeds the Counter 0 <br>
1764:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1 - Feeds the Counter 1
1765:Generated_Source\PSoC4/CyLFClk.c ****     *
1766:Generated_Source\PSoC4/CyLFClk.c ****     * Value of counterNum corresponds to appropriate counter. For example value 1 
1767:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT1 Counter.
1768:Generated_Source\PSoC4/CyLFClk.c ****     *
1769:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1770:Generated_Source\PSoC4/CyLFClk.c ****     * Clears the WDT counter in the "Watchdog" mode or clears the WDT interrupt in
1771:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" mode. Does nothing in other modes.
1772:Generated_Source\PSoC4/CyLFClk.c ****     *
1773:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1774:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWatchdogFeed(uint32 counterNum)
1775:Generated_Source\PSoC4/CyLFClk.c ****     {
1776:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum == CY_SYS_WDT_COUNTER0)
1777:Generated_Source\PSoC4/CyLFClk.c ****         {
1778:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1779:Generated_Source\PSoC4/CyLFClk.c ****             {
1780:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1781:Generated_Source\PSoC4/CyLFClk.c ****             }
1782:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1783:Generated_Source\PSoC4/CyLFClk.c ****             {
1784:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER0_RESET);
1785:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1786:Generated_Source\PSoC4/CyLFClk.c ****             }
1787:Generated_Source\PSoC4/CyLFClk.c ****             else
1788:Generated_Source\PSoC4/CyLFClk.c ****             {
1789:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1790:Generated_Source\PSoC4/CyLFClk.c ****             }
1791:Generated_Source\PSoC4/CyLFClk.c ****         }
1792:Generated_Source\PSoC4/CyLFClk.c ****         else if(counterNum == CY_SYS_WDT_COUNTER1)
1793:Generated_Source\PSoC4/CyLFClk.c ****         {
1794:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1795:Generated_Source\PSoC4/CyLFClk.c ****             {
1796:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1797:Generated_Source\PSoC4/CyLFClk.c ****             }
1798:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1799:Generated_Source\PSoC4/CyLFClk.c ****             {
1800:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET);
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 33


1801:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1802:Generated_Source\PSoC4/CyLFClk.c ****             }
1803:Generated_Source\PSoC4/CyLFClk.c ****             else
1804:Generated_Source\PSoC4/CyLFClk.c ****             {
1805:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1806:Generated_Source\PSoC4/CyLFClk.c ****             }
1807:Generated_Source\PSoC4/CyLFClk.c ****         }
1808:Generated_Source\PSoC4/CyLFClk.c ****         else
1809:Generated_Source\PSoC4/CyLFClk.c ****         {
1810:Generated_Source\PSoC4/CyLFClk.c ****             /* Do nothing. */
1811:Generated_Source\PSoC4/CyLFClk.c ****         }
1812:Generated_Source\PSoC4/CyLFClk.c ****     }
1813:Generated_Source\PSoC4/CyLFClk.c **** 
1814:Generated_Source\PSoC4/CyLFClk.c **** 
1815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeCatch
1817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1819:Generated_Source\PSoC4/CyLFClk.c ****     * Returns once the LFCLK positive edge occurred.
1820:Generated_Source\PSoC4/CyLFClk.c ****     *
1821:Generated_Source\PSoC4/CyLFClk.c ****     * CySysClkLfclkPosedgeRestore() should be called after this function
1822:Generated_Source\PSoC4/CyLFClk.c ****     * to restore the WDT configuration.
1823:Generated_Source\PSoC4/CyLFClk.c ****     *
1824:Generated_Source\PSoC4/CyLFClk.c ****     * A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1825:Generated_Source\PSoC4/CyLFClk.c ****     * functions is expected to be called inside a critical section.
1826:Generated_Source\PSoC4/CyLFClk.c ****     *
1827:Generated_Source\PSoC4/CyLFClk.c ****     * To ensure that the WDT counter value is read until it changes, the enabled
1828:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter is used. If no counter is enabled, counter 0 is enabled.
1829:Generated_Source\PSoC4/CyLFClk.c ****     * And after the LFCLK source is switched, the counter 0 configuration
1830:Generated_Source\PSoC4/CyLFClk.c ****     * is restored.
1831:Generated_Source\PSoC4/CyLFClk.c ****     *
1832:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
1833:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1834:Generated_Source\PSoC4/CyLFClk.c ****     *
1835:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1836:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is
1837:Generated_Source\PSoC4/CyLFClk.c ****     * called). Call CySysWdtUnlock() to unlock WDT.
1838:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1839:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1840:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void)
1841:Generated_Source\PSoC4/CyLFClk.c ****     {
1842:Generated_Source\PSoC4/CyLFClk.c ****         uint32 firstCount;
1843:Generated_Source\PSoC4/CyLFClk.c ****         static uint32 lfclkPosedgeEnabledWdtCounter = 0u;
1844:Generated_Source\PSoC4/CyLFClk.c **** 
1845:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1846:Generated_Source\PSoC4/CyLFClk.c ****         {
1847:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
1848:Generated_Source\PSoC4/CyLFClk.c ****         }
1849:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1850:Generated_Source\PSoC4/CyLFClk.c ****         {
1851:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER1;
1852:Generated_Source\PSoC4/CyLFClk.c ****         }
1853:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1854:Generated_Source\PSoC4/CyLFClk.c ****         {
1855:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER2;
1856:Generated_Source\PSoC4/CyLFClk.c ****         }
1857:Generated_Source\PSoC4/CyLFClk.c ****         else /* All WDT counters are disabled */
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 34


1858:Generated_Source\PSoC4/CyLFClk.c ****         {
1859:Generated_Source\PSoC4/CyLFClk.c ****             /* Configure WDT counter # 0 */
1860:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 1u;
1861:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
1862:Generated_Source\PSoC4/CyLFClk.c **** 
1863:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Mode = CySysWdtGetMode(CY_SYS_WDT_COUNTER0);
1864:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_NONE);
1865:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
1866:Generated_Source\PSoC4/CyLFClk.c ****         }
1867:Generated_Source\PSoC4/CyLFClk.c **** 
1868:Generated_Source\PSoC4/CyLFClk.c ****         firstCount = CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter);
1869:Generated_Source\PSoC4/CyLFClk.c ****         while (CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter) == firstCount)
1870:Generated_Source\PSoC4/CyLFClk.c ****         {
1871:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for counter to increment */
1872:Generated_Source\PSoC4/CyLFClk.c ****         }
1873:Generated_Source\PSoC4/CyLFClk.c ****     }
1874:Generated_Source\PSoC4/CyLFClk.c **** 
1875:Generated_Source\PSoC4/CyLFClk.c **** 
1876:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1877:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeRestore
1878:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1879:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1880:Generated_Source\PSoC4/CyLFClk.c ****     *  Restores the WDT configuration after a CySysClkLfclkPosedgeCatch() call.
1881:Generated_Source\PSoC4/CyLFClk.c ****     *
1882:Generated_Source\PSoC4/CyLFClk.c ****     *  A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1883:Generated_Source\PSoC4/CyLFClk.c ****     *  functions is expected to be called inside a critical section.
1884:Generated_Source\PSoC4/CyLFClk.c ****     *
1885:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000/PSoC 4000S / PSoC 4100S / PSoC Analog 
1886:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1887:Generated_Source\PSoC4/CyLFClk.c ****     *
1888:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1889:Generated_Source\PSoC4/CyLFClk.c ****     *  This function has no effect if WDT is locked (CySysWdtLock() is
1890:Generated_Source\PSoC4/CyLFClk.c ****     *  called). Call CySysWdtUnlock() to unlock WDT.
1891:Generated_Source\PSoC4/CyLFClk.c ****     *
1892:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1893:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1894:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void)
1895:Generated_Source\PSoC4/CyLFClk.c ****     {
1896:Generated_Source\PSoC4/CyLFClk.c ****         if (lfclkPosedgeWdtCounter0Enabled != 0u)
1897:Generated_Source\PSoC4/CyLFClk.c ****         {
1898:Generated_Source\PSoC4/CyLFClk.c ****             /* Restore counter # 0 configuration and force its shutdown */
1899:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= (uint32)(~CY_SYS_WDT_COUNTER0_MASK);
1900:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, lfclkPosedgeWdtCounter0Mode);
1901:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 0u;
1902:Generated_Source\PSoC4/CyLFClk.c ****         }
1903:Generated_Source\PSoC4/CyLFClk.c ****     }
1904:Generated_Source\PSoC4/CyLFClk.c **** 
1905:Generated_Source\PSoC4/CyLFClk.c **** #else
1906:Generated_Source\PSoC4/CyLFClk.c **** 
1907:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1909:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1910:Generated_Source\PSoC4/CyLFClk.c ****     *
1911:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of the WDT counter.
1912:Generated_Source\PSoC4/CyLFClk.c ****     *
1913:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1914:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - Counter is disabled
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 35


1915:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - Counter is enabled
1916:Generated_Source\PSoC4/CyLFClk.c ****     *
1917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1918:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(void)
1919:Generated_Source\PSoC4/CyLFClk.c ****     {
1920:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
1921:Generated_Source\PSoC4/CyLFClk.c ****     }
1922:Generated_Source\PSoC4/CyLFClk.c **** 
1923:Generated_Source\PSoC4/CyLFClk.c **** 
1924:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1925:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1926:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1927:Generated_Source\PSoC4/CyLFClk.c ****     *
1928:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1929:Generated_Source\PSoC4/CyLFClk.c ****     * Enables watchdog timer reset generation.
1930:Generated_Source\PSoC4/CyLFClk.c ****     *
1931:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtClearInterrupt() feeds the watchdog. Two unserviced interrupts lead 
1932:Generated_Source\PSoC4/CyLFClk.c ****     * to a system reset (i.e. at the third match).
1933:Generated_Source\PSoC4/CyLFClk.c ****     *
1934:Generated_Source\PSoC4/CyLFClk.c ****     * ILO is enabled by the hardware once WDT is started.
1935:Generated_Source\PSoC4/CyLFClk.c ****     *
1936:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(void)
1938:Generated_Source\PSoC4/CyLFClk.c ****     {
1939:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
1940:Generated_Source\PSoC4/CyLFClk.c ****     }
1941:Generated_Source\PSoC4/CyLFClk.c **** 
1942:Generated_Source\PSoC4/CyLFClk.c **** 
1943:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1944:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1945:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1946:Generated_Source\PSoC4/CyLFClk.c ****     *
1947:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the WDT reset generation.
1948:Generated_Source\PSoC4/CyLFClk.c ****     *
1949:Generated_Source\PSoC4/CyLFClk.c ****     * This function unlocks the ENABLE bit in the CLK_ILO_CONFIG registers and
1950:Generated_Source\PSoC4/CyLFClk.c ****     * enables the user to disable ILO.
1951:Generated_Source\PSoC4/CyLFClk.c ****     *
1952:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1953:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(void)
1954:Generated_Source\PSoC4/CyLFClk.c ****     {
1955:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
1956:Generated_Source\PSoC4/CyLFClk.c ****     }
1957:Generated_Source\PSoC4/CyLFClk.c **** 
1958:Generated_Source\PSoC4/CyLFClk.c **** 
1959:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1960:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1961:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1962:Generated_Source\PSoC4/CyLFClk.c ****     *
1963:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1964:Generated_Source\PSoC4/CyLFClk.c ****     *
1965:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
1966:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
1967:Generated_Source\PSoC4/CyLFClk.c ****     *
1968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 match)
1970:Generated_Source\PSoC4/CyLFClk.c ****     {
1971:Generated_Source\PSoC4/CyLFClk.c ****         match &= CY_SYS_WDT_MATCH_MASK;
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 36


1972:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_MATCH_MASK)) | match;
1973:Generated_Source\PSoC4/CyLFClk.c ****     }
1974:Generated_Source\PSoC4/CyLFClk.c **** 
1975:Generated_Source\PSoC4/CyLFClk.c **** 
1976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1979:Generated_Source\PSoC4/CyLFClk.c ****     *
1980:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1981:Generated_Source\PSoC4/CyLFClk.c ****     *
1982:Generated_Source\PSoC4/CyLFClk.c ****     * \return The counter match value.
1983:Generated_Source\PSoC4/CyLFClk.c ****     *
1984:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1985:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(void)
1986:Generated_Source\PSoC4/CyLFClk.c ****     {
1987:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
1988:Generated_Source\PSoC4/CyLFClk.c ****     }
1989:Generated_Source\PSoC4/CyLFClk.c **** 
1990:Generated_Source\PSoC4/CyLFClk.c **** 
1991:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1993:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLFClk.c ****     *
1995:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1996:Generated_Source\PSoC4/CyLFClk.c ****     *
1997:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.
1998:Generated_Source\PSoC4/CyLFClk.c ****     *
1999:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2000:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(void)
2001:Generated_Source\PSoC4/CyLFClk.c ****     {
2002:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
2003:Generated_Source\PSoC4/CyLFClk.c ****     }
2004:Generated_Source\PSoC4/CyLFClk.c **** 
2005:Generated_Source\PSoC4/CyLFClk.c **** 
2006:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2007:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIgnoreBits
2008:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2009:Generated_Source\PSoC4/CyLFClk.c ****     *
2010:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2011:Generated_Source\PSoC4/CyLFClk.c ****     * Configures the number of the MSB bits of the watchdog timer that are not
2012:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2013:Generated_Source\PSoC4/CyLFClk.c ****     *
2014:Generated_Source\PSoC4/CyLFClk.c ****     * \param bitsNum Valid range [0-15]. The number of the MSB bits.
2015:Generated_Source\PSoC4/CyLFClk.c ****     *
2016:Generated_Source\PSoC4/CyLFClk.c ****     * \details The value of bitsNum controls the time-to-reset of the watchdog
2017:Generated_Source\PSoC4/CyLFClk.c ****     * (which happens after 3 successive matches).
2018:Generated_Source\PSoC4/CyLFClk.c ****     *
2019:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2020:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetIgnoreBits(uint32 bitsNum)
2021:Generated_Source\PSoC4/CyLFClk.c ****     {
2022:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
2023:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_IGNORE_BITS_MASK)) | bi
2024:Generated_Source\PSoC4/CyLFClk.c ****     }
2025:Generated_Source\PSoC4/CyLFClk.c **** 
2026:Generated_Source\PSoC4/CyLFClk.c **** 
2027:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2028:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIgnoreBits
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 37


2029:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2030:Generated_Source\PSoC4/CyLFClk.c ****     *
2031:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2032:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the number of the  MSB bits of the watchdog timer that are not
2033:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2034:Generated_Source\PSoC4/CyLFClk.c ****     *
2035:Generated_Source\PSoC4/CyLFClk.c ****     * \return The number of the MSB bits.
2036:Generated_Source\PSoC4/CyLFClk.c ****     *
2037:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2038:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetIgnoreBits(void)
2039:Generated_Source\PSoC4/CyLFClk.c ****     {
2040:Generated_Source\PSoC4/CyLFClk.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
2041:Generated_Source\PSoC4/CyLFClk.c ****     }
2042:Generated_Source\PSoC4/CyLFClk.c **** 
2043:Generated_Source\PSoC4/CyLFClk.c **** 
2044:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2045:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
2046:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2047:Generated_Source\PSoC4/CyLFClk.c ****     *
2048:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2049:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the watchdog.
2050:Generated_Source\PSoC4/CyLFClk.c ****     * Cleans the WDT match flag which is set every time the WDT counter reaches a 
2051:Generated_Source\PSoC4/CyLFClk.c ****     * WDT match value. Two unserviced interrupts lead to a system reset 
2052:Generated_Source\PSoC4/CyLFClk.c ****     * (i.e. at the third match).
2053:Generated_Source\PSoC4/CyLFClk.c ****     *
2054:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2055:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(void)
2056:Generated_Source\PSoC4/CyLFClk.c ****     {
2057:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
2058:Generated_Source\PSoC4/CyLFClk.c ****     }
2059:Generated_Source\PSoC4/CyLFClk.c **** 
2060:Generated_Source\PSoC4/CyLFClk.c **** 
2061:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2062:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtMaskInterrupt
2063:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2064:Generated_Source\PSoC4/CyLFClk.c ****     *
2065:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2066:Generated_Source\PSoC4/CyLFClk.c ****     * After masking interrupts from WDT, they are not passed to CPU.
2067:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not disable WDT reset generation.
2068:Generated_Source\PSoC4/CyLFClk.c ****     *
2069:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2070:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtMaskInterrupt(void)
2071:Generated_Source\PSoC4/CyLFClk.c ****     {
2072:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
2073:Generated_Source\PSoC4/CyLFClk.c ****     }
2074:Generated_Source\PSoC4/CyLFClk.c **** 
2075:Generated_Source\PSoC4/CyLFClk.c **** 
2076:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2077:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnmaskInterrupt
2078:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2079:Generated_Source\PSoC4/CyLFClk.c ****     *
2080:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2081:Generated_Source\PSoC4/CyLFClk.c ****     * After unmasking interrupts from WDT, they are passed to CPU.
2082:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not impact the reset generation.
2083:Generated_Source\PSoC4/CyLFClk.c ****     *
2084:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2085:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnmaskInterrupt(void)
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 38


2086:Generated_Source\PSoC4/CyLFClk.c ****     {
2087:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
2088:Generated_Source\PSoC4/CyLFClk.c ****     }
2089:Generated_Source\PSoC4/CyLFClk.c **** 
2090:Generated_Source\PSoC4/CyLFClk.c **** 
2091:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIsrCallback
2093:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2094:Generated_Source\PSoC4/CyLFClk.c ****     *
2095:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2096:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the WDT counter
2097:Generated_Source\PSoC4/CyLFClk.c ****     *
2098:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2099:Generated_Source\PSoC4/CyLFClk.c ****     *
2100:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to a previous callback function.
2101:Generated_Source\PSoC4/CyLFClk.c ****     *
2102:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2103:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function)
2104:Generated_Source\PSoC4/CyLFClk.c ****     {
2105:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
2106:Generated_Source\PSoC4/CyLFClk.c **** 
2107:Generated_Source\PSoC4/CyLFClk.c ****         prevCallback = cySysWdtCallback;
2108:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
2109:Generated_Source\PSoC4/CyLFClk.c **** 
2110:Generated_Source\PSoC4/CyLFClk.c ****         return(prevCallback);
2111:Generated_Source\PSoC4/CyLFClk.c ****     }
2112:Generated_Source\PSoC4/CyLFClk.c **** 
2113:Generated_Source\PSoC4/CyLFClk.c **** 
2114:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2115:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIsrCallback
2116:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2117:Generated_Source\PSoC4/CyLFClk.c ****     *
2118:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2119:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the WDT counter
2120:Generated_Source\PSoC4/CyLFClk.c ****     *
2121:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for WDT.
2122:Generated_Source\PSoC4/CyLFClk.c ****     *
2123:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2124:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(void)
2125:Generated_Source\PSoC4/CyLFClk.c ****     {
2126:Generated_Source\PSoC4/CyLFClk.c ****         return(cySysWdtCallback);
2127:Generated_Source\PSoC4/CyLFClk.c ****     }
2128:Generated_Source\PSoC4/CyLFClk.c **** 
2129:Generated_Source\PSoC4/CyLFClk.c **** 
2130:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2131:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
2132:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2133:Generated_Source\PSoC4/CyLFClk.c ****     *
2134:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2135:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
2136:Generated_Source\PSoC4/CyLFClk.c ****     *
2137:Generated_Source\PSoC4/CyLFClk.c ****     * The handler calls the respective callback functions configured by the user 
2138:Generated_Source\PSoC4/CyLFClk.c ****     * by using CySysWdtSetIsrCallback() API.
2139:Generated_Source\PSoC4/CyLFClk.c ****     *
2140:Generated_Source\PSoC4/CyLFClk.c ****     *
2141:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2142:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 39


2143:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
2144:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
2145:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
2146:Generated_Source\PSoC4/CyLFClk.c ****     *
2147:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
2149:Generated_Source\PSoC4/CyLFClk.c ****     {
2150:Generated_Source\PSoC4/CyLFClk.c ****         if(cySysWdtCallback != (void *) 0)
2151:Generated_Source\PSoC4/CyLFClk.c ****         {
2152:Generated_Source\PSoC4/CyLFClk.c ****             (void)(cySysWdtCallback)();
2153:Generated_Source\PSoC4/CyLFClk.c ****         }
2154:Generated_Source\PSoC4/CyLFClk.c **** 
2155:Generated_Source\PSoC4/CyLFClk.c ****         CySysWdtClearInterrupt();
2156:Generated_Source\PSoC4/CyLFClk.c ****     }
2157:Generated_Source\PSoC4/CyLFClk.c **** 
2158:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
2159:Generated_Source\PSoC4/CyLFClk.c **** 
2160:Generated_Source\PSoC4/CyLFClk.c **** 
2161:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
2162:Generated_Source\PSoC4/CyLFClk.c **** 
2163:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2164:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkGetTimerSource
2165:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
2166:Generated_Source\PSoC4/CyLFClk.c **** *
2167:Generated_Source\PSoC4/CyLFClk.c **** * \brief Gets the clock source for the DeepSleep Timers.
2168:Generated_Source\PSoC4/CyLFClk.c **** *
2169:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor.
2170:Generated_Source\PSoC4/CyLFClk.c **** *
2171:Generated_Source\PSoC4/CyLFClk.c **** * \return The DeepSleep Timer source
2172:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
2173:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
2174:Generated_Source\PSoC4/CyLFClk.c **** *
2175:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2176:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void)
2177:Generated_Source\PSoC4/CyLFClk.c ****     {
  25              		.loc 1 2177 0
  26              		.cfi_startproc
2178:Generated_Source\PSoC4/CyLFClk.c ****         uint32 timerSource;
2179:Generated_Source\PSoC4/CyLFClk.c ****         timerSource = CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK;
  27              		.loc 1 2179 0
  28 0000 024B     		ldr	r3, .L2
  29 0002 1868     		ldr	r0, [r3]
  30 0004 800F     		lsr	r0, r0, #30
  31 0006 8007     		lsl	r0, r0, #30
  32              	.LVL0:
2180:Generated_Source\PSoC4/CyLFClk.c ****         return (timerSource);
2181:Generated_Source\PSoC4/CyLFClk.c ****     }    
  33              		.loc 1 2181 0
  34              		@ sp needed
  35 0008 7047     		bx	lr
  36              	.L3:
  37 000a C046     		.align	2
  38              	.L2:
  39 000c 0C020640 		.word	1074135564
  40              		.cfi_endproc
  41              	.LFE25:
  42              		.size	CySysClkGetTimerSource, .-CySysClkGetTimerSource
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 40


  43              		.section	.text.CySysClkIloStart,"ax",%progbits
  44              		.align	2
  45              		.global	CySysClkIloStart
  46              		.code	16
  47              		.thumb_func
  48              		.type	CySysClkIloStart, %function
  49              	CySysClkIloStart:
  50              	.LFB1:
  84:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
  51              		.loc 1 84 0
  52              		.cfi_startproc
  85:Generated_Source\PSoC4/CyLFClk.c **** }
  53              		.loc 1 85 0
  54 0000 034A     		ldr	r2, .L5
  55 0002 1368     		ldr	r3, [r2]
  56 0004 8021     		mov	r1, #128
  57 0006 0906     		lsl	r1, r1, #24
  58 0008 0B43     		orr	r3, r1
  59 000a 1360     		str	r3, [r2]
  86:Generated_Source\PSoC4/CyLFClk.c **** 
  60              		.loc 1 86 0
  61              		@ sp needed
  62 000c 7047     		bx	lr
  63              	.L6:
  64 000e C046     		.align	2
  65              	.L5:
  66 0010 2C000340 		.word	1073938476
  67              		.cfi_endproc
  68              	.LFE1:
  69              		.size	CySysClkIloStart, .-CySysClkIloStart
  70              		.section	.text.CySysClkIloStop,"ax",%progbits
  71              		.align	2
  72              		.global	CySysClkIloStop
  73              		.code	16
  74              		.thumb_func
  75              		.type	CySysClkIloStop, %function
  76              	CySysClkIloStop:
  77              	.LFB2:
 109:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
  78              		.loc 1 109 0
  79              		.cfi_startproc
 141:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSV2) */
  80              		.loc 1 141 0
  81 0000 024A     		ldr	r2, .L8
  82 0002 1368     		ldr	r3, [r2]
  83 0004 5B00     		lsl	r3, r3, #1
  84 0006 5B08     		lsr	r3, r3, #1
  85 0008 1360     		str	r3, [r2]
 143:Generated_Source\PSoC4/CyLFClk.c **** 
  86              		.loc 1 143 0
  87              		@ sp needed
  88 000a 7047     		bx	lr
  89              	.L9:
  90              		.align	2
  91              	.L8:
  92 000c 2C000340 		.word	1073938476
  93              		.cfi_endproc
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 41


  94              	.LFE2:
  95              		.size	CySysClkIloStop, .-CySysClkIloStop
  96              		.section	.text.CySysClkIloStartMeasurement,"ax",%progbits
  97              		.align	2
  98              		.global	CySysClkIloStartMeasurement
  99              		.code	16
 100              		.thumb_func
 101              		.type	CySysClkIloStartMeasurement, %function
 102              	CySysClkIloStartMeasurement:
 103              	.LFB3:
 169:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 104              		.loc 1 169 0
 105              		.cfi_startproc
 182:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 106              		.loc 1 182 0
 107 0000 074A     		ldr	r2, .L11
 108 0002 1168     		ldr	r1, [r2]
 109 0004 074B     		ldr	r3, .L11+4
 110 0006 0B40     		and	r3, r1
 111 0008 8021     		mov	r1, #128
 112 000a 4900     		lsl	r1, r1, #1
 113 000c 0B43     		orr	r3, r1
 114 000e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 115              		.loc 1 185 0
 116 0010 054A     		ldr	r2, .L11+8
 117 0012 1168     		ldr	r1, [r2]
 118 0014 054B     		ldr	r3, .L11+12
 119 0016 0B40     		and	r3, r1
 120 0018 0549     		ldr	r1, .L11+16
 121 001a 0B43     		orr	r3, r1
 122 001c 1360     		str	r3, [r2]
 187:Generated_Source\PSoC4/CyLFClk.c **** 
 123              		.loc 1 187 0
 124              		@ sp needed
 125 001e 7047     		bx	lr
 126              	.L12:
 127              		.align	2
 128              	.L11:
 129 0020 34000340 		.word	1073938484
 130 0024 FFF0FFFF 		.word	-3841
 131 0028 18000340 		.word	1073938456
 132 002c F0F0FFFF 		.word	-3856
 133 0030 08090000 		.word	2312
 134              		.cfi_endproc
 135              	.LFE3:
 136              		.size	CySysClkIloStartMeasurement, .-CySysClkIloStartMeasurement
 137              		.section	.text.CySysClkIloStopMeasurement,"ax",%progbits
 138              		.align	2
 139              		.global	CySysClkIloStopMeasurement
 140              		.code	16
 141              		.thumb_func
 142              		.type	CySysClkIloStopMeasurement, %function
 143              	CySysClkIloStopMeasurement:
 144              	.LFB4:
 202:Generated_Source\PSoC4/CyLFClk.c ****     /* Set default configurations in 11...8 DFT register bits to zero */
 145              		.loc 1 202 0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 42


 146              		.cfi_startproc
 204:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 147              		.loc 1 204 0
 148 0000 054A     		ldr	r2, .L14
 149 0002 1168     		ldr	r1, [r2]
 150 0004 054B     		ldr	r3, .L14+4
 151 0006 0B40     		and	r3, r1
 152 0008 1360     		str	r3, [r2]
 206:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSLT) */
 153              		.loc 1 206 0
 154 000a 054A     		ldr	r2, .L14+8
 155 000c 1168     		ldr	r1, [r2]
 156 000e 054B     		ldr	r3, .L14+12
 157 0010 0B40     		and	r3, r1
 158 0012 1360     		str	r3, [r2]
 208:Generated_Source\PSoC4/CyLFClk.c **** 
 159              		.loc 1 208 0
 160              		@ sp needed
 161 0014 7047     		bx	lr
 162              	.L15:
 163 0016 C046     		.align	2
 164              	.L14:
 165 0018 34000340 		.word	1073938484
 166 001c FFF0FFFF 		.word	-3841
 167 0020 18000340 		.word	1073938456
 168 0024 0F0F0000 		.word	3855
 169              		.cfi_endproc
 170              	.LFE4:
 171              		.size	CySysClkIloStopMeasurement, .-CySysClkIloStopMeasurement
 172              		.global	__aeabi_uidiv
 173              		.section	.text.CySysClkIloCompensate,"ax",%progbits
 174              		.align	2
 175              		.global	CySysClkIloCompensate
 176              		.code	16
 177              		.thumb_func
 178              		.type	CySysClkIloCompensate, %function
 179              	CySysClkIloCompensate:
 180              	.LFB5:
 268:Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 181              		.loc 1 268 0
 182              		.cfi_startproc
 183              	.LVL1:
 184 0000 70B5     		push	{r4, r5, r6, lr}
 185              		.cfi_def_cfa_offset 16
 186              		.cfi_offset 4, -16
 187              		.cfi_offset 5, -12
 188              		.cfi_offset 6, -8
 189              		.cfi_offset 14, -4
 275:Generated_Source\PSoC4/CyLFClk.c **** 
 190              		.loc 1 275 0
 191 0002 344B     		ldr	r3, .L28
 192 0004 1A68     		ldr	r2, [r3]
 193 0006 344B     		ldr	r3, .L28+4
 194 0008 1340     		and	r3, r2
 195              	.LVL2:
 278:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 196              		.loc 1 278 0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 43


 197 000a 8022     		mov	r2, #128
 198 000c 5200     		lsl	r2, r2, #1
 199 000e 9342     		cmp	r3, r2
 200 0010 52D1     		bne	.L21
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 201              		.loc 1 279 0 discriminator 1
 202 0012 324B     		ldr	r3, .L28+8
 203              	.LVL3:
 204 0014 1A68     		ldr	r2, [r3]
 278:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 205              		.loc 1 278 0 discriminator 1
 206 0016 324B     		ldr	r3, .L28+12
 207 0018 9A42     		cmp	r2, r3
 208 001a 4FD1     		bne	.L22
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 209              		.loc 1 279 0
 210 001c 314B     		ldr	r3, .L28+16
 211 001e 9842     		cmp	r0, r3
 212 0020 4ED8     		bhi	.L23
 280:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 213              		.loc 1 280 0
 214 0022 6328     		cmp	r0, #99
 215 0024 4ED9     		bls	.L24
 281:Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 216              		.loc 1 281 0
 217 0026 0029     		cmp	r1, #0
 218 0028 4ED0     		beq	.L25
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 219              		.loc 1 284 0
 220 002a 2F4B     		ldr	r3, .L28+20
 221 002c 1B68     		ldr	r3, [r3]
 222 002e 002B     		cmp	r3, #0
 223 0030 38D0     		beq	.L18
 287:Generated_Source\PSoC4/CyLFClk.c ****             {
 224              		.loc 1 287 0
 225 0032 2E4B     		ldr	r3, .L28+24
 226 0034 1B68     		ldr	r3, [r3]
 227 0036 002B     		cmp	r3, #0
 228 0038 48DA     		bge	.L26
 289:Generated_Source\PSoC4/CyLFClk.c ****                 {
 229              		.loc 1 289 0
 230 003a 2D4B     		ldr	r3, .L28+28
 231 003c 1B68     		ldr	r3, [r3]
 232 003e 002B     		cmp	r3, #0
 233 0040 46D0     		beq	.L27
 234 0042 0D1C     		mov	r5, r1
 310:Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 235              		.loc 1 310 0
 236 0044 6423     		mov	r3, #100
 237 0046 5843     		mul	r0, r3
 238              	.LVL4:
 239 0048 2A4B     		ldr	r3, .L28+32
 240 004a 9C46     		mov	ip, r3
 241 004c 6044     		add	r0, r0, ip
 242 004e 2A49     		ldr	r1, .L28+36
 243              	.LVL5:
 244 0050 FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 44


 245              	.LVL6:
 246 0054 041E     		sub	r4, r0, #0
 247              	.LVL7:
 312:Generated_Source\PSoC4/CyLFClk.c ****                         {
 248              		.loc 1 312 0
 249 0056 294B     		ldr	r3, .L28+40
 250 0058 9C42     		cmp	r4, r3
 251 005a 12D9     		bls	.L19
 314:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 252              		.loc 1 314 0
 253 005c 244B     		ldr	r3, .L28+28
 254 005e 1868     		ldr	r0, [r3]
 255              	.LVL8:
 256 0060 274B     		ldr	r3, .L28+44
 257 0062 1968     		ldr	r1, [r3]
 258 0064 4843     		mul	r0, r1
 259 0066 890A     		lsr	r1, r1, #10
 260 0068 FFF7FEFF 		bl	__aeabi_uidiv
 261              	.LVL9:
 315:Generated_Source\PSoC4/CyLFClk.c ****                                                    (desiredDelayInCounts / CY_SYS_CLK_ILO_FREQ_3LSB
 262              		.loc 1 315 0
 263 006c 2821     		mov	r1, #40
 264 006e FFF7FEFF 		bl	__aeabi_uidiv
 265              	.LVL10:
 266 0072 061C     		mov	r6, r0
 316:Generated_Source\PSoC4/CyLFClk.c ****                         }
 267              		.loc 1 316 0
 268 0074 201C     		mov	r0, r4
 269 0076 FA21     		mov	r1, #250
 270 0078 8900     		lsl	r1, r1, #2
 271 007a FFF7FEFF 		bl	__aeabi_uidiv
 272              	.LVL11:
 314:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 273              		.loc 1 314 0
 274 007e 7043     		mul	r0, r6
 275              	.LVL12:
 276 0080 0BE0     		b	.L20
 277              	.LVL13:
 278              	.L19:
 320:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 279              		.loc 1 320 0
 280 0082 1B4B     		ldr	r3, .L28+28
 281 0084 1868     		ldr	r0, [r3]
 282              	.LVL14:
 283 0086 1E4B     		ldr	r3, .L28+44
 284 0088 1968     		ldr	r1, [r3]
 285 008a 4843     		mul	r0, r1
 321:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 286              		.loc 1 321 0
 287 008c 890A     		lsr	r1, r1, #10
 320:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 288              		.loc 1 320 0
 289 008e FFF7FEFF 		bl	__aeabi_uidiv
 290              	.LVL15:
 321:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 291              		.loc 1 321 0
 292 0092 6043     		mul	r0, r4
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 45


 320:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 293              		.loc 1 320 0
 294 0094 1B49     		ldr	r1, .L28+48
 295 0096 FFF7FEFF 		bl	__aeabi_uidiv
 296              	.LVL16:
 297              	.L20:
 326:Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 298              		.loc 1 326 0
 299 009a 2860     		str	r0, [r5]
 327:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 300              		.loc 1 327 0
 301 009c 0020     		mov	r0, #0
 302              	.LVL17:
 303 009e 124B     		ldr	r3, .L28+20
 304 00a0 1860     		str	r0, [r3]
 305              	.LVL18:
 306 00a2 16E0     		b	.L17
 307              	.LVL19:
 308              	.L18:
 343:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 309              		.loc 1 343 0
 310 00a4 164B     		ldr	r3, .L28+44
 311 00a6 1B68     		ldr	r3, [r3]
 312 00a8 9B0A     		lsr	r3, r3, #10
 313 00aa 104A     		ldr	r2, .L28+24
 314 00ac 1360     		str	r3, [r2]
 344:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 315              		.loc 1 344 0
 316 00ae 0122     		mov	r2, #1
 317 00b0 0D4B     		ldr	r3, .L28+20
 318 00b2 1A60     		str	r2, [r3]
 319              	.LVL20:
 345:Generated_Source\PSoC4/CyLFClk.c ****         }
 320              		.loc 1 345 0
 321 00b4 0720     		mov	r0, #7
 322              	.LVL21:
 323 00b6 0CE0     		b	.L17
 324              	.LVL22:
 325              	.L21:
 350:Generated_Source\PSoC4/CyLFClk.c ****     }
 326              		.loc 1 350 0
 327 00b8 1120     		mov	r0, #17
 328              	.LVL23:
 329 00ba 0AE0     		b	.L17
 330              	.LVL24:
 331              	.L22:
 332 00bc 1120     		mov	r0, #17
 333              	.LVL25:
 334 00be 08E0     		b	.L17
 335              	.LVL26:
 336              	.L23:
 337 00c0 1120     		mov	r0, #17
 338              	.LVL27:
 339 00c2 06E0     		b	.L17
 340              	.LVL28:
 341              	.L24:
 342 00c4 1120     		mov	r0, #17
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 46


 343              	.LVL29:
 344 00c6 04E0     		b	.L17
 345              	.LVL30:
 346              	.L25:
 347 00c8 1120     		mov	r0, #17
 348              	.LVL31:
 349 00ca 02E0     		b	.L17
 350              	.LVL32:
 351              	.L26:
 337:Generated_Source\PSoC4/CyLFClk.c ****             }
 352              		.loc 1 337 0
 353 00cc 0720     		mov	r0, #7
 354              	.LVL33:
 355 00ce 00E0     		b	.L17
 356              	.LVL34:
 357              	.L27:
 332:Generated_Source\PSoC4/CyLFClk.c ****                 }
 358              		.loc 1 332 0
 359 00d0 1120     		mov	r0, #17
 360              	.LVL35:
 361              	.L17:
 354:Generated_Source\PSoC4/CyLFClk.c **** 
 362              		.loc 1 354 0
 363              		@ sp needed
 364 00d2 70BD     		pop	{r4, r5, r6, pc}
 365              	.L29:
 366              		.align	2
 367              	.L28:
 368 00d4 34000340 		.word	1073938484
 369 00d8 0F0F0000 		.word	3855
 370 00dc 18000340 		.word	1073938456
 371 00e0 08090000 		.word	2312
 372 00e4 80841E00 		.word	2000000
 373 00e8 00000000 		.word	.LANCHOR0
 374 00ec 1C000340 		.word	1073938460
 375 00f0 20000340 		.word	1073938464
 376 00f4 71020000 		.word	625
 377 00f8 C4090000 		.word	2500
 378 00fc 60D10000 		.word	53600
 379 0100 00000000 		.word	cydelayFreqHz
 380 0104 409C0000 		.word	40000
 381              		.cfi_endproc
 382              	.LFE5:
 383              		.size	CySysClkIloCompensate, .-CySysClkIloCompensate
 384              		.section	.text.CySysClkWcoStart,"ax",%progbits
 385              		.align	2
 386              		.global	CySysClkWcoStart
 387              		.code	16
 388              		.thumb_func
 389              		.type	CySysClkWcoStart, %function
 390              	CySysClkWcoStart:
 391              	.LFB6:
 772:Generated_Source\PSoC4/CyLFClk.c ****         CySysClkWcoSetHighPowerMode();
 392              		.loc 1 772 0
 393              		.cfi_startproc
 394 0000 10B5     		push	{r4, lr}
 395              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 47


 396              		.cfi_offset 4, -8
 397              		.cfi_offset 14, -4
 398              	.LBB4:
 399              	.LBB5:
 400              		.file 2 "Generated_Source\\PSoC4\\CyLFClk.h"
   1:Generated_Source\PSoC4/CyLFClk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.h **** * \file .h
   3:Generated_Source\PSoC4/CyLFClk.h **** * \version 1.10
   4:Generated_Source\PSoC4/CyLFClk.h **** *
   5:Generated_Source\PSoC4/CyLFClk.h **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.h **** *  This file provides the source code to API for the lfclk and wdt.
   7:Generated_Source\PSoC4/CyLFClk.h **** *
   8:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************
   9:Generated_Source\PSoC4/CyLFClk.h **** * \copyright
  10:Generated_Source\PSoC4/CyLFClk.h **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC4/CyLFClk.h **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC4/CyLFClk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC4/CyLFClk.h **** * the software package with which this file was provided.
  14:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
  15:Generated_Source\PSoC4/CyLFClk.h **** 
  16:Generated_Source\PSoC4/CyLFClk.h **** 
  17:Generated_Source\PSoC4/CyLFClk.h **** #if !defined(CY_LFCLK_CYLIB_H)
  18:Generated_Source\PSoC4/CyLFClk.h **** #define CY_LFCLK_CYLIB_H
  19:Generated_Source\PSoC4/CyLFClk.h **** 
  20:Generated_Source\PSoC4/CyLFClk.h **** #include "cytypes.h"
  21:Generated_Source\PSoC4/CyLFClk.h **** #include "cydevice_trm.h"
  22:Generated_Source\PSoC4/CyLFClk.h **** 
  23:Generated_Source\PSoC4/CyLFClk.h **** #define CY_IP_WCO_WDT_EN           (1 == 1)
  24:Generated_Source\PSoC4/CyLFClk.h **** 
  25:Generated_Source\PSoC4/CyLFClk.h **** 
  26:Generated_Source\PSoC4/CyLFClk.h **** typedef enum
  27:Generated_Source\PSoC4/CyLFClk.h **** {
  28:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_WAIT = 0u,
  29:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_INTERRUPT = 1u
  30:Generated_Source\PSoC4/CyLFClk.h **** } cy_sys_timer_delaytype_enum;
  31:Generated_Source\PSoC4/CyLFClk.h **** 
  32:Generated_Source\PSoC4/CyLFClk.h **** 
  33:Generated_Source\PSoC4/CyLFClk.h **** /***************************************
  34:Generated_Source\PSoC4/CyLFClk.h **** *    Function Prototypes
  35:Generated_Source\PSoC4/CyLFClk.h **** ***************************************/
  36:Generated_Source\PSoC4/CyLFClk.h **** /**
  37:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_general
  38:Generated_Source\PSoC4/CyLFClk.h **** * @{
  39:Generated_Source\PSoC4/CyLFClk.h **** */
  40:Generated_Source\PSoC4/CyLFClk.h **** /* Clocks API */
  41:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStart(void);
  42:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStop(void);
  43:Generated_Source\PSoC4/CyLFClk.h **** /** @} general */
  44:Generated_Source\PSoC4/CyLFClk.h **** 
  45:Generated_Source\PSoC4/CyLFClk.h **** /**
  46:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_compensate
  47:Generated_Source\PSoC4/CyLFClk.h **** * @{
  48:Generated_Source\PSoC4/CyLFClk.h **** */
  49:Generated_Source\PSoC4/CyLFClk.h **** cystatus CySysClkIloCompensate(uint32 desiredDelay, uint32 *compensatedCycles);
  50:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStartMeasurement(void);
  51:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStopMeasurement(void);
  52:Generated_Source\PSoC4/CyLFClk.h **** /** @} compensate */
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 48


  53:Generated_Source\PSoC4/CyLFClk.h **** 
  54:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
  55:Generated_Source\PSoC4/CyLFClk.h **** /**
  56:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_compensate
  57:Generated_Source\PSoC4/CyLFClk.h **** * @{
  58:Generated_Source\PSoC4/CyLFClk.h **** */
  59:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloTrim(uint32 mode, int32 *iloAccuracyInPPT);
  60:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloRestoreFactoryTrim(void);
  61:Generated_Source\PSoC4/CyLFClk.h **** /** @} compensate */
  62:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT);
  63:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
  64:Generated_Source\PSoC4/CyLFClk.h **** 
  65:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
  66:Generated_Source\PSoC4/CyLFClk.h **** /**
  67:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_general
  68:Generated_Source\PSoC4/CyLFClk.h **** * @{
  69:Generated_Source\PSoC4/CyLFClk.h **** */
  70:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkSetLfclkSource(uint32 source);
  71:Generated_Source\PSoC4/CyLFClk.h **** /** @} group_general */
  72:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
  73:Generated_Source\PSoC4/CyLFClk.h **** 
  74:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
  75:Generated_Source\PSoC4/CyLFClk.h **** /**
  76:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_wco
  77:Generated_Source\PSoC4/CyLFClk.h **** * @{
  78:Generated_Source\PSoC4/CyLFClk.h **** */
  79:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStart(void);
  80:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStop(void);
  81:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoSetPowerMode(uint32 mode);
  82:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkWcoClockOutSelect(uint32 clockSel);
  83:Generated_Source\PSoC4/CyLFClk.h **** /** @} wco */
  84:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoEnabled(void);
  85:Generated_Source\PSoC4/CyLFClk.h **** 
  86:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
  87:Generated_Source\PSoC4/CyLFClk.h **** 
  88:Generated_Source\PSoC4/CyLFClk.h **** typedef void (*cyWdtCallback)(void);
  89:Generated_Source\PSoC4/CyLFClk.h **** 
  90:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  91:Generated_Source\PSoC4/CyLFClk.h **** 
  92:Generated_Source\PSoC4/CyLFClk.h ****     typedef void (*cyTimerCallback)(void);
  93:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
  94:Generated_Source\PSoC4/CyLFClk.h **** 
  95:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
  96:Generated_Source\PSoC4/CyLFClk.h **** /**
  97:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_wdtsrssv2
  98:Generated_Source\PSoC4/CyLFClk.h **** * @{
  99:Generated_Source\PSoC4/CyLFClk.h **** */
 100:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 101:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtLock(void);
 102:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnlock(void);
 103:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMode(uint32 counterNum, uint32 mode);
 104:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMode(uint32 counterNum);
 105:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum);
 106:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable);
 107:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum);
 108:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(uint32 counterMask);
 109:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(uint32 counterMask);
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 49


 110:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetCascade(uint32 cascadeMask);
 111:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCascade(void);
 112:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 counterNum, uint32 match);
 113:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetToggleBit(uint32 bits);
 114:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetToggleBit(void);
 115:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(uint32 counterNum);
 116:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(uint32 counterNum);
 117:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetInterruptSource(void);
 118:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(uint32 counterMask);
 119:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtResetCounters(uint32 countersMask);
 120:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function);
 121:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtGetInterruptCallback(uint32 counterNum);
 122:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 123:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 124:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWatchdogFeed(uint32 counterNum);
 125:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnableCounterIsr(uint32 counterNum);
 126:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisableCounterIsr(uint32 counterNum);
 127:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 128:Generated_Source\PSoC4/CyLFClk.h **** /** @} wdtsrssv2 */
 129:Generated_Source\PSoC4/CyLFClk.h **** #else
 130:Generated_Source\PSoC4/CyLFClk.h **** /**
 131:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_wdtsrsslite
 132:Generated_Source\PSoC4/CyLFClk.h **** * @{
 133:Generated_Source\PSoC4/CyLFClk.h **** */
 134:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 135:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(void);
 136:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(void);
 137:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(void);
 138:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 match);
 139:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(void);
 140:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(void);
 141:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetIgnoreBits(uint32 bitsNum);
 142:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetIgnoreBits(void);
 143:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(void);
 144:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtMaskInterrupt(void);
 145:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnmaskInterrupt(void);
 146:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function);
 147:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtGetInterruptCallback(void);
 148:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 149:Generated_Source\PSoC4/CyLFClk.h **** /** @} wdtsrsslite*/
 150:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 151:Generated_Source\PSoC4/CyLFClk.h **** 
 152:Generated_Source\PSoC4/CyLFClk.h **** 
 153:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 154:Generated_Source\PSoC4/CyLFClk.h **** /**
 155:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_deepsleepwdt
 156:Generated_Source\PSoC4/CyLFClk.h **** * @{
 157:Generated_Source\PSoC4/CyLFClk.h **** */
 158:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO WDT APIs */
 159:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkSetTimerSource(uint32 source);
 160:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMode(uint32 counterNum, uint32 mode);
 161:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMode(uint32 counterNum);
 162:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum);
 163:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable);
 164:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum);
 165:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnable(uint32 counterMask);
 166:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisable(uint32 counterMask);
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 50


 167:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetCascade(uint32 cascadeMask);
 168:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCascade(void);
 169:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMatch(uint32 counterNum, uint32 match);
 170:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetToggleBit(uint32 bits);
 171:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetToggleBit(void);
 172:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMatch(uint32 counterNum);
 173:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCount(uint32 counterNum);
 174:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetInterruptSource(void);
 175:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerClearInterrupt(uint32 counterMask);
 176:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function);
 177:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum);
 178:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 179:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 180:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerResetCounters(uint32 countersMask);
 181:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnableIsr(uint32 counterNum);
 182:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisableIsr(uint32 counterNum);
 183:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerIsr(void);
 184:Generated_Source\PSoC4/CyLFClk.h **** /** @} deepsleepwdt */
 185:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 186:Generated_Source\PSoC4/CyLFClk.h **** 
 187:Generated_Source\PSoC4/CyLFClk.h **** 
 188:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 189:Generated_Source\PSoC4/CyLFClk.h **** * API Constants
 190:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 191:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_UINT16_MAX_VAL    (0xFFFFu)
 192:Generated_Source\PSoC4/CyLFClk.h **** 
 193:Generated_Source\PSoC4/CyLFClk.h **** 
 194:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 195:Generated_Source\PSoC4/CyLFClk.h **** * Clock API Constants
 196:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 197:Generated_Source\PSoC4/CyLFClk.h **** 
 198:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloStart()/CySysClkIloStop() - implementation definitions */
 199:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_ENABLE                    ((uint32)(( uint32 )0x01u << 31u))
 200:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK              ((uint32)(( uint32 )0x0fu << 8u ))
 201:Generated_Source\PSoC4/CyLFClk.h **** 
 202:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - one ILO clock in uS multiplied on thousand */
 203:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 204:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x0C35u))
 205:Generated_Source\PSoC4/CyLFClk.h **** #else
 206:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x09C4u))
 207:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 208:Generated_Source\PSoC4/CyLFClk.h **** 
 209:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - implementation definitions */
 210:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK             ((uint32)(( uint32 )0x01u << 31u))
 211:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_DFT_LSB_MASK                     ((uint32)(0x00000FFFu))
 212:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_STARTED                 (1u)
 213:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_FINISHED                (0u)
 214:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_COEF_PHUNDRED                        ((uint32) (0x64u))
 215:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_CLOCK                        ((uint32) ((uint32) CY_SYS_CLK_ILO_PERIOD_P
 216:Generated_Source\PSoC4/CyLFClk.h **** 
 217:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - maximum value of desiredDelay argument */
 218:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 219:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0xEE6B2800u))
 220:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD                       ((uint32) (0x1Fu))
 221:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) 5u)
 222:Generated_Source\PSoC4/CyLFClk.h **** #else
 223:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0x1E8480u))
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 51


 224:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) (0x28u ))
 225:Generated_Source\PSoC4/CyLFClk.h **** 
 226:Generated_Source\PSoC4/CyLFClk.h **** 
 227:Generated_Source\PSoC4/CyLFClk.h **** /**********************************************************************************
 228:Generated_Source\PSoC4/CyLFClk.h **** * CySysClkIloCompensate() - value to walk over oversamling in calculations with srsslite.
 229:Generated_Source\PSoC4/CyLFClk.h **** * The oversample can be obtained when ilo frequency in equal 80 KHz and desired clocks 
 230:Generated_Source\PSoC4/CyLFClk.h **** * are 80 000 clocks.
 231:Generated_Source\PSoC4/CyLFClk.h **** **********************************************************************************/
 232:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_MAX_LITE_NUMBER                     ((uint32) 53600u)
 233:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 234:Generated_Source\PSoC4/CyLFClk.h **** 
 235:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_FREQ_3LSB                       ((uint32) (0x3E8u))
 236:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DELAY_COUNTS_LIMIT                  ((uint32) (0xD160u))
 237:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_MIN_DELAY_US                        ((uint32) (0x64u))
 238:Generated_Source\PSoC4/CyLFClk.h **** 
 239:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetLfclkSource() - parameter definitions */
 240:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 241:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_ILO                    (0u)                                  /**< 
 242:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_WCO                    ((uint32)(( uint32 )0x01u << 30u))    /**< 
 243:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
 244:Generated_Source\PSoC4/CyLFClk.h **** 
 245:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetLfclkSource() - implementation definitions */
 246:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 247:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 248:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 249:Generated_Source\PSoC4/CyLFClk.h **** 
 250:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - implementation definitions */
 251:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 252:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 253:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 254:Generated_Source\PSoC4/CyLFClk.h **** 
 255:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - parameter definitions */
 256:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 257:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_ILO                (0u)                                  /**< Inte
 258:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_WCO                ((uint32)(( uint32 )0x01u << 30u))    /**< Low 
 259:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 260:Generated_Source\PSoC4/CyLFClk.h **** 
 261:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - parameter definitions */
 262:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 263:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_CRYSTAL                  (1u)    /**< Selects External crystal as WC
 264:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_PIN                      (0u)    /**<Selects External clock input on
 265:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 266:Generated_Source\PSoC4/CyLFClk.h **** 
 267:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - implementation definitions */
 268:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 269:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_MASK              ((uint32)(( uint32 )0x01u << 2u))
 270:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_OFFSET            ((uint32) 0x02u)
 271:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 272:Generated_Source\PSoC4/CyLFClk.h **** 
 273:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloRestoreFactoryTrim() - implementation definitions */
 274:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 275:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE           ((uint8 )(0xF0u))
 276:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_MASK            ((uint32)((uint32)0x01u << 3u))
 277:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_MASK                    ((uint32)(0x0Fu))
 278:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 279:Generated_Source\PSoC4/CyLFClk.h **** 
 280:Generated_Source\PSoC4/CyLFClk.h **** /* CySysIloTrim() - parameter definitions and macros*/
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 52


 281:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 282:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_BLOCKING                         (0u)
 283:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_NON_BLOCKING                     (1u)
 284:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_PERTHOUSAND                      ((uint32) 0x000003E8u )
 285:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ABS_MACRO(x)                     ((0 > (x)) ? (-(x)) : (x))
 286:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_RANGE                      ((uint32) 0x38u)
 287:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMEOUT                          ((uint8 ) 0x05u)
 288:Generated_Source\PSoC4/CyLFClk.h **** 
 289:Generated_Source\PSoC4/CyLFClk.h ****     /* ILO error step is 7,37 % error range */
 290:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_STEP                       (( int32) 0x02E1u)
 291:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_COEF                       ((uint32) 0x0Au)
 292:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 293:Generated_Source\PSoC4/CyLFClk.h **** 
 294:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 295:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Configuration Register */
 296:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_EN                (( uint32 )(( uint32 )0x01u <<  0u))
 297:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_AUTO              (( uint32 )(( uint32 )0x01u <<  1u))
 298:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE            (( uint32 )(( uint32 )0x01u << 31u))
 299:Generated_Source\PSoC4/CyLFClk.h **** 
 300:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Status Register */
 301:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_STATUS_OUT_BLNK_A            (( uint32 )(( uint32 )0x01u <<  0u))
 302:Generated_Source\PSoC4/CyLFClk.h **** 
 303:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Trim Register */
 304:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_MASK                (( uint32 ) 0x07u)
 305:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_SHIFT               (( uint32 ) 0x00u)
 306:Generated_Source\PSoC4/CyLFClk.h **** 
 307:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_3370NA              (( uint32 ) 0x00u)
 308:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2620NA              (( uint32 ) 0x01u)
 309:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2250NA              (( uint32 ) 0x02u)
 310:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1500NA              (( uint32 ) 0x03u)
 311:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1870NA              (( uint32 ) 0x04u)
 312:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1120NA              (( uint32 ) 0x05u)
 313:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_750NA               (( uint32 ) 0x06u)
 314:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_0NA                 (( uint32 ) 0x07u)
 315:Generated_Source\PSoC4/CyLFClk.h **** 
 316:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_MASK                 (( uint32 )(( uint32 )0x03u << 4u))
 317:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_SHIFT                (( uint32 ) 0x04u)
 318:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_HPM                  (( uint32 ) 0x01u)
 319:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_LPM                  (( uint32 ) 0x02u)
 320:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 321:Generated_Source\PSoC4/CyLFClk.h **** 
 322:Generated_Source\PSoC4/CyLFClk.h **** 
 323:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 324:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Constants
 325:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 326:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 327:Generated_Source\PSoC4/CyLFClk.h **** 
 328:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_NONE                (0u)
 329:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT                 (1u)
 330:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_RESET               (2u)
 331:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT_RESET           (3u)
 332:Generated_Source\PSoC4/CyLFClk.h **** 
 333:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_MASK            ((uint32)((uint32)0x01u))           /**< Counter 0 
 334:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_MASK            ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 335:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_MASK            ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 336:Generated_Source\PSoC4/CyLFClk.h **** 
 337:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_NONE             ((uint32)0x00u)             /**< Neither */
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 53


 338:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_01               ((uint32)0x01u << 3u)       /**< Cascade 01 */
 339:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_12               ((uint32)0x01u << 11u)      /**< Cascade 12 */
 340:Generated_Source\PSoC4/CyLFClk.h **** 
 341:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_INT             ((uint32)0x01u << 2u)
 342:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_INT             ((uint32)0x01u << 10u)
 343:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_INT             ((uint32)0x01u << 18u)
 344:Generated_Source\PSoC4/CyLFClk.h **** 
 345:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_RESET           ((uint32)0x01u << 3u)       /**< Counter 0 */
 346:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_RESET           ((uint32)0x01u << 11u)      /**< Counter 1 */
 347:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_RESET           ((uint32)0x01u << 19u)      /**< Counter 2 */
 348:Generated_Source\PSoC4/CyLFClk.h **** 
 349:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_RESET           (CY_SYS_WDT_COUNTER0_RESET |\
 350:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER1_RESET |\
 351:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER2_RESET)
 352:Generated_Source\PSoC4/CyLFClk.h **** 
 353:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0                 (0x00u)
 354:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1                 (0x01u)
 355:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2                 (0x02u)
 356:Generated_Source\PSoC4/CyLFClk.h **** 
 357:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_OFFSET          (0x00u)
 358:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_OFFSET          (0x02u)
 359:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_OFFSET          (0x04u)
 360:Generated_Source\PSoC4/CyLFClk.h **** 
 361:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_MASK                ((uint32)(0x03u))
 362:Generated_Source\PSoC4/CyLFClk.h **** 
 363:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_MASK        (uint32)(0x1Fu)
 364:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_POS         (uint32)(24u)
 365:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_LOWER_16BITS_MASK        (uint32)(0x0000FFFFu)
 366:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_HIGHER_16BITS_MASK       (uint32)(0xFFFF0000u)
 367:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_MAX             (0x03u)
 368:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_SHIFT                (0x08u)
 369:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_CLR_SHIFT      (0x02u)
 370:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_STTS_SHIFT           (0x01u)
 371:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_SHIFT          (0x10u)
 372:Generated_Source\PSoC4/CyLFClk.h **** 
 373:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BITS_MASK       ((uint32)0x03u << 14u)
 374:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT0            ((uint32)0x01u << 14u)
 375:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT1            ((uint32)0x01u << 15u)
 376:Generated_Source\PSoC4/CyLFClk.h **** 
 377:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_WDT                   (3u)
 378:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_CALLBACKS             (3u)
 379:Generated_Source\PSoC4/CyLFClk.h **** 
 380:Generated_Source\PSoC4/CyLFClk.h ****     #else
 381:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_WDT               (1u)
 382:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_CALLBACKS         (3u)
 383:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_KEY                  ((uint32)(0xACED8865u))
 384:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_MATCH_MASK           ((uint32)(0x0000FFFFu))
 385:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_MASK     ((uint32)(0x000F0000u))
 386:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_SHIFT    ((uint32)(16u))
 387:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_LOWER_BIT_MASK       ((uint32)(0x00000001u))
 388:Generated_Source\PSoC4/CyLFClk.h **** 
 389:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_COUNTER0             (0x00u)
 390:Generated_Source\PSoC4/CyLFClk.h **** 
 391:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 392:Generated_Source\PSoC4/CyLFClk.h **** 
 393:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 394:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_ILO_DELAY_US    ((uint16)( 67u))
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 54


 395:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_ILO_DELAY_US    ((uint16)(201u))
 396:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_WCO_DELAY_US    ((uint16)( 31u))
 397:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_WCO_DELAY_US    ((uint16)( 93u))
 398:Generated_Source\PSoC4/CyLFClk.h **** 
 399:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_DELAY_US      \
 400:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 401:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_ILO_DELAY_US) : \
 402:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_WCO_DELAY_US))
 403:Generated_Source\PSoC4/CyLFClk.h **** 
 404:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_DELAY_US      \
 405:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 406:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_ILO_DELAY_US) : \
 407:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_WCO_DELAY_US))
 408:Generated_Source\PSoC4/CyLFClk.h ****     #else
 409:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_1LFCLK_DELAY_US      ((uint16)  (67u))
 410:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_3LFCLK_DELAY_US      ((uint16) (201u))
 411:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && !CY_IP_WCO) */
 412:Generated_Source\PSoC4/CyLFClk.h **** 
 413:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 414:Generated_Source\PSoC4/CyLFClk.h **** 
 415:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_NONE              (0u)
 416:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_INT               (1u)
 417:Generated_Source\PSoC4/CyLFClk.h **** 
 418:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_MASK                  ((uint32)((uint32)0x01u))           /**< Counter 0 
 419:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_MASK                  ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 420:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_MASK                  ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 421:Generated_Source\PSoC4/CyLFClk.h **** 
 422:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_RESET                 ((uint32)0x01u << 3u)       /**< Counter 0 */
 423:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_RESET                 ((uint32)0x01u << 11u)      /**< Counter 1 */
 424:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_RESET                 ((uint32)0x01u << 19u)      /**< Counter 2 */
 425:Generated_Source\PSoC4/CyLFClk.h **** 
 426:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_RESET                  (CY_SYS_TIMER0_RESET |\
 427:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER1_RESET |\
 428:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER2_RESET)
 429:Generated_Source\PSoC4/CyLFClk.h **** 
 430:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_NONE           ((uint32)0x00u)             /**< Neither */
 431:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_01             ((uint32)0x01u << 3u)       /**< Cascade 01 */
 432:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_12             ((uint32)0x01u << 11u)      /**< Cascade 12 */
 433:Generated_Source\PSoC4/CyLFClk.h **** 
 434:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_INT                   ((uint32)0x01u << 2u)
 435:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_INT                   ((uint32)0x01u << 10u)
 436:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_INT                   ((uint32)0x01u << 18u)
 437:Generated_Source\PSoC4/CyLFClk.h **** 
 438:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0                       (0x00u)
 439:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1                       (0x01u)
 440:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2                       (0x02u)
 441:Generated_Source\PSoC4/CyLFClk.h **** 
 442:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_MASK              ((uint32)(0x01u))
 443:Generated_Source\PSoC4/CyLFClk.h **** 
 444:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_MASK      (uint32)(0x1Fu)
 445:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_POS       (uint32)(24u)
 446:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_LOWER_16BITS_MASK      (uint32)(0x0000FFFFu)
 447:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_HIGHER_16BITS_MASK     (uint32)(0xFFFF0000u)
 448:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_COUNTERS_MAX           (0x03u)
 449:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_SHIFT              (0x08u)
 450:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT    (0x02u)
 451:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_STTS_SHIFT         (0x01u)
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 55


 452:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_SHIFT        (0x10u)
 453:Generated_Source\PSoC4/CyLFClk.h **** 
 454:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_NUM_OF_TIMERS                (3u)
 455:Generated_Source\PSoC4/CyLFClk.h **** 
 456:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_ILO     ((uint16)(0x02u))
 457:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_WCO     ((uint16)(0x01u))
 458:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_RESET_MASK     ((uint32)(0x03u))
 459:Generated_Source\PSoC4/CyLFClk.h **** 
 460:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1ILO_DELAY_US          ((uint16)( 67u))
 461:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4ILO_DELAY_US          ((uint16)(268u))
 462:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3ILO_DELAY_US          ((uint16)(201u))
 463:Generated_Source\PSoC4/CyLFClk.h **** 
 464:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1WCO_DELAY_US          ((uint16)( 31u))
 465:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4WCO_DELAY_US          ((uint16)(124u))
 466:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3WCO_DELAY_US          ((uint16)( 93u))
 467:Generated_Source\PSoC4/CyLFClk.h **** 
 468:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_1TIMER_DELAY_US      \
 469:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 470:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1ILO_DELAY_US) : \
 471:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1WCO_DELAY_US))
 472:Generated_Source\PSoC4/CyLFClk.h **** 
 473:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_4TIMER_DELAY_US      \
 474:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 475:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4WCO_DELAY_US) : \
 476:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4ILO_DELAY_US))
 477:Generated_Source\PSoC4/CyLFClk.h **** 
 478:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_3TIMER_DELAY_US      \
 479:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 480:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3ILO_DELAY_US) : \
 481:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3WCO_DELAY_US))
 482:Generated_Source\PSoC4/CyLFClk.h **** 
 483:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT      \
 484:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 485:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_ILO) : \
 486:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_WCO))
 487:Generated_Source\PSoC4/CyLFClk.h **** 
 488:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 489:Generated_Source\PSoC4/CyLFClk.h **** 
 490:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoSetPowerMode() */
 491:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_WCO_HPM                              (0x0u)     /**< High power mode */
 492:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 493:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_LPM                          (0x1u)     /**< Low power mode */
 494:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 495:Generated_Source\PSoC4/CyLFClk.h **** 
 496:Generated_Source\PSoC4/CyLFClk.h **** 
 497:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 498:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers Constants 
 499:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 500:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SYS_CLK_DEVIDER                      ((uint32)0x0Au)
 501:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SEL_ILO_DFT_SOURCE                   ((uint32)0x00000100u)
 502:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_FOURBITS_MAX                         (( int32)0x0f)
 503:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_STEP                         (( int32)((uint32) CY_SYS_CLK_ERROR_STEP >>
 504:Generated_Source\PSoC4/CyLFClk.h **** 
 505:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 506:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ              (32000u)
 507:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_DFT_SELSIZE                      ((uint32) 0x3F)
 508:Generated_Source\PSoC4/CyLFClk.h ****     #else
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 56


 509:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ          (40000u)
 510:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1      ((uint32)0x00000908u)
 511:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_DFT_SELSIZE                  ((uint32) 0x0F)
 512:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 513:Generated_Source\PSoC4/CyLFClk.h **** 
 514:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK    ((uint32)((CY_SYS_CLK_DFT_SELSIZE << 8u) | (CY_SYS
 515:Generated_Source\PSoC4/CyLFClk.h **** 
 516:Generated_Source\PSoC4/CyLFClk.h **** #if (0u != (CY_PSOC4_4100 || CY_PSOC4_4200))
 517:Generated_Source\PSoC4/CyLFClk.h ****     #define  CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1              ((uint32)0x00000201u)
 518:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (0u != (CY_PSOC4_4100 || CY_PSOC4_4200)) */
 519:Generated_Source\PSoC4/CyLFClk.h **** 
 520:Generated_Source\PSoC4/CyLFClk.h **** #if (0u != (CY_PSOC4_4200L))
 521:Generated_Source\PSoC4/CyLFClk.h ****     #define  CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1              ((uint32)0x00000908u)
 522:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (0u != (CY_PSOC4_4200L)) */
 523:Generated_Source\PSoC4/CyLFClk.h **** 
 524:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && (!CY_PSOC4_4200L) && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 525:Generated_Source\PSoC4/CyLFClk.h ****     #define  CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1               ((uint32)0x00000B0Au)
 526:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && (!CY_PSOC4_4200L) && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 527:Generated_Source\PSoC4/CyLFClk.h **** 
 528:Generated_Source\PSoC4/CyLFClk.h **** 
 529:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 530:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers 
 531:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 532:Generated_Source\PSoC4/CyLFClk.h ****     /* DFT TST Control Register*/
 533:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG                         (*(reg32*) CYREG_TST_DDFT_CTRL)
 534:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_CTRL_PTR                              ( (reg32*) CYREG_TST_DDFT_CTRL)
 535:Generated_Source\PSoC4/CyLFClk.h **** 
 536:Generated_Source\PSoC4/CyLFClk.h ****     /* DFT TST Counter 1 Register*/
 537:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR1)
 538:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR1)
 539:Generated_Source\PSoC4/CyLFClk.h **** 
 540:Generated_Source\PSoC4/CyLFClk.h ****     /* DFT TST Counter 2 Register*/
 541:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR2)
 542:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR2)
 543:Generated_Source\PSoC4/CyLFClk.h **** 
 544:Generated_Source\PSoC4/CyLFClk.h ****     /* DFT Muxes Configuration Register*/
 545:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_REG                               (*(reg32*) CYREG_CLK_DFT_SELECT)
 546:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_PTR                               ( (reg32*) CYREG_CLK_DFT_SELECT)
 547:Generated_Source\PSoC4/CyLFClk.h **** 
 548:Generated_Source\PSoC4/CyLFClk.h ****     /* ILO Configuration Register*/
 549:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_REG                        (*(reg32 *) CYREG_CLK_ILO_CONFIG)
 550:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_PTR                        ( (reg32 *) CYREG_CLK_ILO_CONFIG)
 551:Generated_Source\PSoC4/CyLFClk.h **** 
 552:Generated_Source\PSoC4/CyLFClk.h ****     /* ILO Trim Register*/
 553:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
 554:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_REG                      (*(reg32 *) CYREG_CLK_ILO_TRIM)
 555:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_PTR                      ( (reg32 *) CYREG_CLK_ILO_TRIM)
 556:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) && CY_IP_WCO*/
 557:Generated_Source\PSoC4/CyLFClk.h **** 
 558:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 559:Generated_Source\PSoC4/CyLFClk.h ****     #if (CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 560:Generated_Source\PSoC4/CyLFClk.h **** 
 561:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 562:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 563:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 564:Generated_Source\PSoC4/CyLFClk.h **** 
 565:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 57


 566:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 567:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 568:Generated_Source\PSoC4/CyLFClk.h **** 
 569:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 570:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 571:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 572:Generated_Source\PSoC4/CyLFClk.h ****     #else   /* (CY_PSOC4_4100M || CY_PSOC4_4200M) && (CY_PSOC4_4100L || CY_PSOC4_4200L) */
 573:Generated_Source\PSoC4/CyLFClk.h **** 
 574:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 575:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_WCO_STATUS)
 576:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_WCO_STATUS)
 577:Generated_Source\PSoC4/CyLFClk.h **** 
 578:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 579:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_WCO_CONFIG)
 580:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_WCO_CONFIG)
 581:Generated_Source\PSoC4/CyLFClk.h **** 
 582:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 583:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_WCO_TRIM)
 584:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_WCO_TRIM)
 585:Generated_Source\PSoC4/CyLFClk.h ****     #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 586:Generated_Source\PSoC4/CyLFClk.h **** 
 587:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 588:Generated_Source\PSoC4/CyLFClk.h **** 
 589:Generated_Source\PSoC4/CyLFClk.h **** 
 590:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 591:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Registers
 592:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 593:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 594:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_REG               (*(reg32 *) CYREG_WDT_CTRLOW)
 595:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_PTR               ( (reg32 *) CYREG_WDT_CTRLOW)
 596:Generated_Source\PSoC4/CyLFClk.h **** 
 597:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_REG              (*(reg32 *) CYREG_WDT_CTRHIGH)
 598:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_PTR              ( (reg32 *) CYREG_WDT_CTRHIGH)
 599:Generated_Source\PSoC4/CyLFClk.h **** 
 600:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 601:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 602:Generated_Source\PSoC4/CyLFClk.h **** 
 603:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_REG               (*(reg32 *) CYREG_WDT_CONFIG)
 604:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_PTR               ( (reg32 *) CYREG_WDT_CONFIG)
 605:Generated_Source\PSoC4/CyLFClk.h **** 
 606:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_REG              (*(reg32 *) CYREG_WDT_CONTROL)
 607:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_PTR              ( (reg32 *) CYREG_WDT_CONTROL)
 608:Generated_Source\PSoC4/CyLFClk.h **** #else
 609:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_REG          (*(reg32 *) CYREG_WDT_DISABLE_KEY)
 610:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_PTR          ( (reg32 *) CYREG_WDT_DISABLE_KEY)
 611:Generated_Source\PSoC4/CyLFClk.h **** 
 612:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 613:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 614:Generated_Source\PSoC4/CyLFClk.h **** 
 615:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_REG              (*(reg32 *) CYREG_WDT_COUNTER)
 616:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_PTR              ( (reg32 *) CYREG_WDT_COUNTER)
 617:Generated_Source\PSoC4/CyLFClk.h **** 
 618:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_REG                (*(reg32 *) CYREG_SRSS_INTR)
 619:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_PTR                ( (reg32 *) CYREG_SRSS_INTR)
 620:Generated_Source\PSoC4/CyLFClk.h **** 
 621:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_REG           (*(reg32 *) CYREG_SRSS_INTR_MASK)
 622:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_PTR           ( (reg32 *) CYREG_SRSS_INTR_MASK)
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 58


 623:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 624:Generated_Source\PSoC4/CyLFClk.h **** 
 625:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 626:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_REG           (*(reg32 *) CYREG_WCO_WDT_CTRLOW)
 627:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_PTR           ( (reg32 *) CYREG_WCO_WDT_CTRLOW)
 628:Generated_Source\PSoC4/CyLFClk.h **** 
 629:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_REG          (*(reg32 *) CYREG_WCO_WDT_CTRHIGH)
 630:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_PTR          ( (reg32 *) CYREG_WCO_WDT_CTRHIGH)
 631:Generated_Source\PSoC4/CyLFClk.h **** 
 632:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_REG            (*(reg32 *) CYREG_WCO_WDT_MATCH)
 633:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_PTR            ( (reg32 *) CYREG_WCO_WDT_MATCH)
 634:Generated_Source\PSoC4/CyLFClk.h **** 
 635:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_REG           (*(reg32 *) CYREG_WCO_WDT_CONFIG)
 636:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_PTR           ( (reg32 *) CYREG_WCO_WDT_CONFIG)
 637:Generated_Source\PSoC4/CyLFClk.h **** 
 638:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_REG          (*(reg32 *) CYREG_WCO_WDT_CONTROL)
 639:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_PTR          ( (reg32 *) CYREG_WCO_WDT_CONTROL)
 640:Generated_Source\PSoC4/CyLFClk.h **** 
 641:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_REG            (*(reg32 *) CYREG_WCO_WDT_CLKEN)
 642:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_PTR            ( (reg32 *) CYREG_WCO_WDT_CLKEN)
 643:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 644:Generated_Source\PSoC4/CyLFClk.h **** 
 645:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 646:Generated_Source\PSoC4/CyLFClk.h **** 
 647:Generated_Source\PSoC4/CyLFClk.h **** 
 648:Generated_Source\PSoC4/CyLFClk.h ****     /*******************************************************************************
 649:Generated_Source\PSoC4/CyLFClk.h ****     * Function Name: CySysClkWcoSetHighPowerMode
 650:Generated_Source\PSoC4/CyLFClk.h ****     ********************************************************************************
 651:Generated_Source\PSoC4/CyLFClk.h ****     *
 652:Generated_Source\PSoC4/CyLFClk.h ****     * Summary:
 653:Generated_Source\PSoC4/CyLFClk.h ****     *  Sets the high power mode for the 32 KHz WCO.
 654:Generated_Source\PSoC4/CyLFClk.h ****     *
 655:Generated_Source\PSoC4/CyLFClk.h ****     *******************************************************************************/
 656:Generated_Source\PSoC4/CyLFClk.h ****     static CY_INLINE void CySysClkWcoSetHighPowerMode(void)
 657:Generated_Source\PSoC4/CyLFClk.h ****     {
 658:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off low power mode for WCO */
 659:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 401              		.loc 2 659 0
 402 0002 0D4B     		ldr	r3, .L31
 403 0004 1A68     		ldr	r2, [r3]
 404 0006 0121     		mov	r1, #1
 405 0008 8A43     		bic	r2, r1
 406 000a 1A60     		str	r2, [r3]
 660:Generated_Source\PSoC4/CyLFClk.h **** 
 661:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off auto low power mode in WCO */
 662:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= ((uint32)~CY_SYS_CLK_WCO_CONFIG_LPM_AUTO);
 407              		.loc 2 662 0
 408 000c 1A68     		ldr	r2, [r3]
 409 000e 0220     		mov	r0, #2
 410 0010 8243     		bic	r2, r0
 411 0012 1A60     		str	r2, [r3]
 663:Generated_Source\PSoC4/CyLFClk.h **** 
 664:Generated_Source\PSoC4/CyLFClk.h ****         /* Restore WCO trim register HPM settings */
 665:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_GM_MASK)
 412              		.loc 2 665 0
 413 0014 094A     		ldr	r2, .L31+4
 414 0016 1068     		ldr	r0, [r2]
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 59


 415 0018 3024     		mov	r4, #48
 416 001a A043     		bic	r0, r4
 666:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
 417              		.loc 2 666 0
 418 001c 203C     		sub	r4, r4, #32
 419 001e 2043     		orr	r0, r4
 665:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
 420              		.loc 2 665 0
 421 0020 1060     		str	r0, [r2]
 667:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
 422              		.loc 2 667 0
 423 0022 1068     		ldr	r0, [r2]
 424 0024 093C     		sub	r4, r4, #9
 425 0026 A043     		bic	r0, r4
 668:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
 426              		.loc 2 668 0
 427 0028 0143     		orr	r1, r0
 667:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
 428              		.loc 2 667 0
 429 002a 1160     		str	r1, [r2]
 430              	.LBE5:
 431              	.LBE4:
 774:Generated_Source\PSoC4/CyLFClk.c ****     }
 432              		.loc 1 774 0
 433 002c 1A68     		ldr	r2, [r3]
 434 002e 8021     		mov	r1, #128
 435 0030 0906     		lsl	r1, r1, #24
 436 0032 0A43     		orr	r2, r1
 437 0034 1A60     		str	r2, [r3]
 775:Generated_Source\PSoC4/CyLFClk.c **** 
 438              		.loc 1 775 0
 439              		@ sp needed
 440 0036 10BD     		pop	{r4, pc}
 441              	.L32:
 442              		.align	2
 443              	.L31:
 444 0038 00000640 		.word	1074135040
 445 003c 000F0640 		.word	1074138880
 446              		.cfi_endproc
 447              	.LFE6:
 448              		.size	CySysClkWcoStart, .-CySysClkWcoStart
 449              		.section	.text.CySysClkWcoEnabled,"ax",%progbits
 450              		.align	2
 451              		.global	CySysClkWcoEnabled
 452              		.code	16
 453              		.thumb_func
 454              		.type	CySysClkWcoEnabled, %function
 455              	CySysClkWcoEnabled:
 456              	.LFB8:
 825:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 457              		.loc 1 825 0
 458              		.cfi_startproc
 826:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 1u :
 459              		.loc 1 826 0
 460 0000 034B     		ldr	r3, .L36
 461 0002 1B68     		ldr	r3, [r3]
 827:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 0u);
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 60


 462              		.loc 1 827 0
 463 0004 002B     		cmp	r3, #0
 464 0006 01DA     		bge	.L35
 465 0008 0120     		mov	r0, #1
 466 000a 00E0     		b	.L34
 467              	.L35:
 468 000c 0020     		mov	r0, #0
 469              	.L34:
 829:Generated_Source\PSoC4/CyLFClk.c **** 
 470              		.loc 1 829 0
 471              		@ sp needed
 472 000e 7047     		bx	lr
 473              	.L37:
 474              		.align	2
 475              	.L36:
 476 0010 00000640 		.word	1074135040
 477              		.cfi_endproc
 478              	.LFE8:
 479              		.size	CySysClkWcoEnabled, .-CySysClkWcoEnabled
 480              		.section	.text.CySysClkWcoStop,"ax",%progbits
 481              		.align	2
 482              		.global	CySysClkWcoStop
 483              		.code	16
 484              		.thumb_func
 485              		.type	CySysClkWcoStop, %function
 486              	CySysClkWcoStop:
 487              	.LFB7:
 790:Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 488              		.loc 1 790 0
 489              		.cfi_startproc
 490 0000 08B5     		push	{r3, lr}
 491              		.cfi_def_cfa_offset 8
 492              		.cfi_offset 3, -8
 493              		.cfi_offset 14, -4
 795:Generated_Source\PSoC4/CyLFClk.c ****         {
 494              		.loc 1 795 0
 495 0002 FFF7FEFF 		bl	CySysClkWcoEnabled
 496              	.LVL36:
 497 0006 0028     		cmp	r0, #0
 498 0008 04D0     		beq	.L38
 809:Generated_Source\PSoC4/CyLFClk.c ****             }
 499              		.loc 1 809 0
 500 000a 034A     		ldr	r2, .L40
 501 000c 1368     		ldr	r3, [r2]
 502 000e 5B00     		lsl	r3, r3, #1
 503 0010 5B08     		lsr	r3, r3, #1
 504 0012 1360     		str	r3, [r2]
 505              	.L38:
 812:Generated_Source\PSoC4/CyLFClk.c **** 
 506              		.loc 1 812 0
 507              		@ sp needed
 508 0014 08BD     		pop	{r3, pc}
 509              	.L41:
 510 0016 C046     		.align	2
 511              	.L40:
 512 0018 00000640 		.word	1074135040
 513              		.cfi_endproc
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 61


 514              	.LFE7:
 515              		.size	CySysClkWcoStop, .-CySysClkWcoStop
 516              		.section	.text.CySysClkWcoSetPowerMode,"ax",%progbits
 517              		.align	2
 518              		.global	CySysClkWcoSetPowerMode
 519              		.code	16
 520              		.thumb_func
 521              		.type	CySysClkWcoSetPowerMode, %function
 522              	CySysClkWcoSetPowerMode:
 523              	.LFB9:
 852:Generated_Source\PSoC4/CyLFClk.c ****         uint32 powerModeStatus;
 524              		.loc 1 852 0
 525              		.cfi_startproc
 526              	.LVL37:
 527 0000 10B5     		push	{r4, lr}
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 4, -8
 530              		.cfi_offset 14, -4
 855:Generated_Source\PSoC4/CyLFClk.c **** 
 531              		.loc 1 855 0
 532 0002 104B     		ldr	r3, .L47
 533 0004 1B68     		ldr	r3, [r3]
 534 0006 0124     		mov	r4, #1
 535 0008 1C40     		and	r4, r3
 536              	.LVL38:
 857:Generated_Source\PSoC4/CyLFClk.c ****         {
 537              		.loc 1 857 0
 538 000a 0028     		cmp	r0, #0
 539 000c 15D1     		bne	.L46
 540              	.LBB8:
 541              	.LBB9:
 659:Generated_Source\PSoC4/CyLFClk.h **** 
 542              		.loc 2 659 0
 543 000e 0D4B     		ldr	r3, .L47
 544 0010 1968     		ldr	r1, [r3]
 545 0012 0122     		mov	r2, #1
 546 0014 9143     		bic	r1, r2
 547 0016 1960     		str	r1, [r3]
 662:Generated_Source\PSoC4/CyLFClk.h **** 
 548              		.loc 2 662 0
 549 0018 1968     		ldr	r1, [r3]
 550 001a 0230     		add	r0, r0, #2
 551              	.LVL39:
 552 001c 8143     		bic	r1, r0
 553 001e 1960     		str	r1, [r3]
 665:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
 554              		.loc 2 665 0
 555 0020 094B     		ldr	r3, .L47+4
 556 0022 1968     		ldr	r1, [r3]
 557 0024 2E30     		add	r0, r0, #46
 558              	.LVL40:
 559 0026 8143     		bic	r1, r0
 666:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
 560              		.loc 2 666 0
 561 0028 2038     		sub	r0, r0, #32
 562              	.LVL41:
 563 002a 0143     		orr	r1, r0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 62


 665:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
 564              		.loc 2 665 0
 565 002c 1960     		str	r1, [r3]
 667:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
 566              		.loc 2 667 0
 567 002e 1968     		ldr	r1, [r3]
 568 0030 0938     		sub	r0, r0, #9
 569              	.LVL42:
 570 0032 8143     		bic	r1, r0
 571              		.loc 2 668 0
 572 0034 0A43     		orr	r2, r1
 667:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
 573              		.loc 2 667 0
 574 0036 1A60     		str	r2, [r3]
 575 0038 02E0     		b	.L45
 576              	.LVL43:
 577              	.L46:
 578              	.LBE9:
 579              	.LBE8:
 870:Generated_Source\PSoC4/CyLFClk.c ****             break;
 580              		.loc 1 870 0 discriminator 1
 581 003a 0020     		mov	r0, #0
 582              	.LVL44:
 583 003c FFF7FEFF 		bl	CyHalt
 584              	.LVL45:
 585              	.L45:
 875:Generated_Source\PSoC4/CyLFClk.c **** 
 586              		.loc 1 875 0
 587 0040 201C     		mov	r0, r4
 588              		@ sp needed
 589              	.LVL46:
 590 0042 10BD     		pop	{r4, pc}
 591              	.L48:
 592              		.align	2
 593              	.L47:
 594 0044 00000640 		.word	1074135040
 595 0048 000F0640 		.word	1074138880
 596              		.cfi_endproc
 597              	.LFE9:
 598              		.size	CySysClkWcoSetPowerMode, .-CySysClkWcoSetPowerMode
 599              		.section	.text.CySysClkWcoClockOutSelect,"ax",%progbits
 600              		.align	2
 601              		.global	CySysClkWcoClockOutSelect
 602              		.code	16
 603              		.thumb_func
 604              		.type	CySysClkWcoClockOutSelect, %function
 605              	CySysClkWcoClockOutSelect:
 606              	.LFB10:
 919:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 607              		.loc 1 919 0
 608              		.cfi_startproc
 609              	.LVL47:
 610 0000 10B5     		push	{r4, lr}
 611              		.cfi_def_cfa_offset 8
 612              		.cfi_offset 4, -8
 613              		.cfi_offset 14, -4
 614 0002 041C     		mov	r4, r0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 63


 920:Generated_Source\PSoC4/CyLFClk.c ****         {
 615              		.loc 1 920 0
 616 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 617              	.LVL48:
 618 0008 0028     		cmp	r0, #0
 619 000a 0CD0     		beq	.L49
 922:Generated_Source\PSoC4/CyLFClk.c ****             {
 620              		.loc 1 922 0
 621 000c 012C     		cmp	r4, #1
 622 000e 07D8     		bhi	.L51
 924:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 623              		.loc 1 924 0
 624 0010 054A     		ldr	r2, .L52
 625 0012 1368     		ldr	r3, [r2]
 626 0014 0421     		mov	r1, #4
 627 0016 8B43     		bic	r3, r1
 925:Generated_Source\PSoC4/CyLFClk.c ****             }
 628              		.loc 1 925 0
 629 0018 A400     		lsl	r4, r4, #2
 630              	.LVL49:
 924:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 631              		.loc 1 924 0
 632 001a 1C43     		orr	r4, r3
 633 001c 1460     		str	r4, [r2]
 634 001e 02E0     		b	.L49
 635              	.LVL50:
 636              	.L51:
 929:Generated_Source\PSoC4/CyLFClk.c ****             }
 637              		.loc 1 929 0 discriminator 1
 638 0020 0020     		mov	r0, #0
 639 0022 FFF7FEFF 		bl	CyHalt
 640              	.LVL51:
 641              	.L49:
 932:Generated_Source\PSoC4/CyLFClk.c **** #endif  /* (CY_IP_WCO) */
 642              		.loc 1 932 0
 643              		@ sp needed
 644 0026 10BD     		pop	{r4, pc}
 645              	.L53:
 646              		.align	2
 647              	.L52:
 648 0028 00000640 		.word	1074135040
 649              		.cfi_endproc
 650              	.LFE10:
 651              		.size	CySysClkWcoClockOutSelect, .-CySysClkWcoClockOutSelect
 652              		.section	.text.CySysWdtGetEnabledStatus,"ax",%progbits
 653              		.align	2
 654              		.global	CySysWdtGetEnabledStatus
 655              		.code	16
 656              		.thumb_func
 657              		.type	CySysWdtGetEnabledStatus, %function
 658              	CySysWdtGetEnabledStatus:
 659              	.LFB11:
1919:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
 660              		.loc 1 1919 0
 661              		.cfi_startproc
1920:Generated_Source\PSoC4/CyLFClk.c ****     }
 662              		.loc 1 1920 0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 64


 663 0000 044B     		ldr	r3, .L55
 664 0002 1868     		ldr	r0, [r3]
 665 0004 044B     		ldr	r3, .L55+4
 666 0006 9C46     		mov	ip, r3
 667 0008 6044     		add	r0, r0, ip
 668 000a 431E     		sub	r3, r0, #1
 669 000c 9841     		sbc	r0, r0, r3
 670 000e C0B2     		uxtb	r0, r0
1921:Generated_Source\PSoC4/CyLFClk.c **** 
 671              		.loc 1 1921 0
 672              		@ sp needed
 673 0010 7047     		bx	lr
 674              	.L56:
 675 0012 C046     		.align	2
 676              	.L55:
 677 0014 38000340 		.word	1073938488
 678 0018 9B771253 		.word	1393719195
 679              		.cfi_endproc
 680              	.LFE11:
 681              		.size	CySysWdtGetEnabledStatus, .-CySysWdtGetEnabledStatus
 682              		.section	.text.CySysWdtEnable,"ax",%progbits
 683              		.align	2
 684              		.global	CySysWdtEnable
 685              		.code	16
 686              		.thumb_func
 687              		.type	CySysWdtEnable, %function
 688              	CySysWdtEnable:
 689              	.LFB12:
1938:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
 690              		.loc 1 1938 0
 691              		.cfi_startproc
1939:Generated_Source\PSoC4/CyLFClk.c ****     }
 692              		.loc 1 1939 0
 693 0000 0022     		mov	r2, #0
 694 0002 014B     		ldr	r3, .L58
 695 0004 1A60     		str	r2, [r3]
1940:Generated_Source\PSoC4/CyLFClk.c **** 
 696              		.loc 1 1940 0
 697              		@ sp needed
 698 0006 7047     		bx	lr
 699              	.L59:
 700              		.align	2
 701              	.L58:
 702 0008 38000340 		.word	1073938488
 703              		.cfi_endproc
 704              	.LFE12:
 705              		.size	CySysWdtEnable, .-CySysWdtEnable
 706              		.section	.text.CySysWdtDisable,"ax",%progbits
 707              		.align	2
 708              		.global	CySysWdtDisable
 709              		.code	16
 710              		.thumb_func
 711              		.type	CySysWdtDisable, %function
 712              	CySysWdtDisable:
 713              	.LFB13:
1954:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
 714              		.loc 1 1954 0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 65


 715              		.cfi_startproc
1955:Generated_Source\PSoC4/CyLFClk.c ****     }
 716              		.loc 1 1955 0
 717 0000 014A     		ldr	r2, .L61
 718 0002 024B     		ldr	r3, .L61+4
 719 0004 1A60     		str	r2, [r3]
1956:Generated_Source\PSoC4/CyLFClk.c **** 
 720              		.loc 1 1956 0
 721              		@ sp needed
 722 0006 7047     		bx	lr
 723              	.L62:
 724              		.align	2
 725              	.L61:
 726 0008 6588EDAC 		.word	-1393719195
 727 000c 38000340 		.word	1073938488
 728              		.cfi_endproc
 729              	.LFE13:
 730              		.size	CySysWdtDisable, .-CySysWdtDisable
 731              		.section	.text.CySysWdtSetMatch,"ax",%progbits
 732              		.align	2
 733              		.global	CySysWdtSetMatch
 734              		.code	16
 735              		.thumb_func
 736              		.type	CySysWdtSetMatch, %function
 737              	CySysWdtSetMatch:
 738              	.LFB14:
1970:Generated_Source\PSoC4/CyLFClk.c ****         match &= CY_SYS_WDT_MATCH_MASK;
 739              		.loc 1 1970 0
 740              		.cfi_startproc
 741              	.LVL52:
1971:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_MATCH_MASK)) | match;
 742              		.loc 1 1971 0
 743 0000 0004     		lsl	r0, r0, #16
 744              	.LVL53:
 745 0002 030C     		lsr	r3, r0, #16
 746              	.LVL54:
1972:Generated_Source\PSoC4/CyLFClk.c ****     }
 747              		.loc 1 1972 0
 748 0004 034A     		ldr	r2, .L64
 749 0006 1068     		ldr	r0, [r2]
 750 0008 000C     		lsr	r0, r0, #16
 751 000a 0004     		lsl	r0, r0, #16
 752 000c 1843     		orr	r0, r3
 753 000e 1060     		str	r0, [r2]
1973:Generated_Source\PSoC4/CyLFClk.c **** 
 754              		.loc 1 1973 0
 755              		@ sp needed
 756 0010 7047     		bx	lr
 757              	.L65:
 758 0012 C046     		.align	2
 759              	.L64:
 760 0014 40000340 		.word	1073938496
 761              		.cfi_endproc
 762              	.LFE14:
 763              		.size	CySysWdtSetMatch, .-CySysWdtSetMatch
 764              		.section	.text.CySysWdtGetMatch,"ax",%progbits
 765              		.align	2
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 66


 766              		.global	CySysWdtGetMatch
 767              		.code	16
 768              		.thumb_func
 769              		.type	CySysWdtGetMatch, %function
 770              	CySysWdtGetMatch:
 771              	.LFB15:
1986:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
 772              		.loc 1 1986 0
 773              		.cfi_startproc
1987:Generated_Source\PSoC4/CyLFClk.c ****     }
 774              		.loc 1 1987 0
 775 0000 024B     		ldr	r3, .L67
 776 0002 1868     		ldr	r0, [r3]
 777 0004 0004     		lsl	r0, r0, #16
 778 0006 000C     		lsr	r0, r0, #16
1988:Generated_Source\PSoC4/CyLFClk.c **** 
 779              		.loc 1 1988 0
 780              		@ sp needed
 781 0008 7047     		bx	lr
 782              	.L68:
 783 000a C046     		.align	2
 784              	.L67:
 785 000c 40000340 		.word	1073938496
 786              		.cfi_endproc
 787              	.LFE15:
 788              		.size	CySysWdtGetMatch, .-CySysWdtGetMatch
 789              		.section	.text.CySysWdtGetCount,"ax",%progbits
 790              		.align	2
 791              		.global	CySysWdtGetCount
 792              		.code	16
 793              		.thumb_func
 794              		.type	CySysWdtGetCount, %function
 795              	CySysWdtGetCount:
 796              	.LFB16:
2001:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
 797              		.loc 1 2001 0
 798              		.cfi_startproc
2002:Generated_Source\PSoC4/CyLFClk.c ****     }
 799              		.loc 1 2002 0
 800 0000 014B     		ldr	r3, .L70
 801 0002 1868     		ldr	r0, [r3]
2003:Generated_Source\PSoC4/CyLFClk.c **** 
 802              		.loc 1 2003 0
 803              		@ sp needed
 804 0004 7047     		bx	lr
 805              	.L71:
 806 0006 C046     		.align	2
 807              	.L70:
 808 0008 3C000340 		.word	1073938492
 809              		.cfi_endproc
 810              	.LFE16:
 811              		.size	CySysWdtGetCount, .-CySysWdtGetCount
 812              		.section	.text.CySysWdtSetIgnoreBits,"ax",%progbits
 813              		.align	2
 814              		.global	CySysWdtSetIgnoreBits
 815              		.code	16
 816              		.thumb_func
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 67


 817              		.type	CySysWdtSetIgnoreBits, %function
 818              	CySysWdtSetIgnoreBits:
 819              	.LFB17:
2021:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
 820              		.loc 1 2021 0
 821              		.cfi_startproc
 822              	.LVL55:
2022:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_IGNORE_BITS_MASK)) | bi
 823              		.loc 1 2022 0
 824 0000 0004     		lsl	r0, r0, #16
 825              	.LVL56:
 826 0002 F022     		mov	r2, #240
 827 0004 1203     		lsl	r2, r2, #12
 828 0006 031C     		mov	r3, r0
 829 0008 1340     		and	r3, r2
 830              	.LVL57:
2023:Generated_Source\PSoC4/CyLFClk.c ****     }
 831              		.loc 1 2023 0
 832 000a 0349     		ldr	r1, .L73
 833 000c 0868     		ldr	r0, [r1]
 834 000e 034A     		ldr	r2, .L73+4
 835 0010 1040     		and	r0, r2
 836 0012 1843     		orr	r0, r3
 837 0014 0860     		str	r0, [r1]
2024:Generated_Source\PSoC4/CyLFClk.c **** 
 838              		.loc 1 2024 0
 839              		@ sp needed
 840 0016 7047     		bx	lr
 841              	.L74:
 842              		.align	2
 843              	.L73:
 844 0018 40000340 		.word	1073938496
 845 001c FFFFF0FF 		.word	-983041
 846              		.cfi_endproc
 847              	.LFE17:
 848              		.size	CySysWdtSetIgnoreBits, .-CySysWdtSetIgnoreBits
 849              		.section	.text.CySysWdtGetIgnoreBits,"ax",%progbits
 850              		.align	2
 851              		.global	CySysWdtGetIgnoreBits
 852              		.code	16
 853              		.thumb_func
 854              		.type	CySysWdtGetIgnoreBits, %function
 855              	CySysWdtGetIgnoreBits:
 856              	.LFB18:
2039:Generated_Source\PSoC4/CyLFClk.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
 857              		.loc 1 2039 0
 858              		.cfi_startproc
2040:Generated_Source\PSoC4/CyLFClk.c ****     }
 859              		.loc 1 2040 0
 860 0000 024B     		ldr	r3, .L76
 861 0002 1868     		ldr	r0, [r3]
 862 0004 0003     		lsl	r0, r0, #12
 863 0006 000F     		lsr	r0, r0, #28
2041:Generated_Source\PSoC4/CyLFClk.c **** 
 864              		.loc 1 2041 0
 865              		@ sp needed
 866 0008 7047     		bx	lr
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 68


 867              	.L77:
 868 000a C046     		.align	2
 869              	.L76:
 870 000c 40000340 		.word	1073938496
 871              		.cfi_endproc
 872              	.LFE18:
 873              		.size	CySysWdtGetIgnoreBits, .-CySysWdtGetIgnoreBits
 874              		.section	.text.CySysWdtClearInterrupt,"ax",%progbits
 875              		.align	2
 876              		.global	CySysWdtClearInterrupt
 877              		.code	16
 878              		.thumb_func
 879              		.type	CySysWdtClearInterrupt, %function
 880              	CySysWdtClearInterrupt:
 881              	.LFB19:
2056:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 882              		.loc 1 2056 0
 883              		.cfi_startproc
2057:Generated_Source\PSoC4/CyLFClk.c ****     }
 884              		.loc 1 2057 0
 885 0000 024A     		ldr	r2, .L79
 886 0002 1168     		ldr	r1, [r2]
 887 0004 0123     		mov	r3, #1
 888 0006 0B43     		orr	r3, r1
 889 0008 1360     		str	r3, [r2]
2058:Generated_Source\PSoC4/CyLFClk.c **** 
 890              		.loc 1 2058 0
 891              		@ sp needed
 892 000a 7047     		bx	lr
 893              	.L80:
 894              		.align	2
 895              	.L79:
 896 000c 44000340 		.word	1073938500
 897              		.cfi_endproc
 898              	.LFE19:
 899              		.size	CySysWdtClearInterrupt, .-CySysWdtClearInterrupt
 900              		.section	.text.CySysWdtMaskInterrupt,"ax",%progbits
 901              		.align	2
 902              		.global	CySysWdtMaskInterrupt
 903              		.code	16
 904              		.thumb_func
 905              		.type	CySysWdtMaskInterrupt, %function
 906              	CySysWdtMaskInterrupt:
 907              	.LFB20:
2071:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
 908              		.loc 1 2071 0
 909              		.cfi_startproc
2072:Generated_Source\PSoC4/CyLFClk.c ****     }
 910              		.loc 1 2072 0
 911 0000 024A     		ldr	r2, .L82
 912 0002 1368     		ldr	r3, [r2]
 913 0004 0121     		mov	r1, #1
 914 0006 8B43     		bic	r3, r1
 915 0008 1360     		str	r3, [r2]
2073:Generated_Source\PSoC4/CyLFClk.c **** 
 916              		.loc 1 2073 0
 917              		@ sp needed
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 69


 918 000a 7047     		bx	lr
 919              	.L83:
 920              		.align	2
 921              	.L82:
 922 000c 4C000340 		.word	1073938508
 923              		.cfi_endproc
 924              	.LFE20:
 925              		.size	CySysWdtMaskInterrupt, .-CySysWdtMaskInterrupt
 926              		.section	.text.CySysWdtUnmaskInterrupt,"ax",%progbits
 927              		.align	2
 928              		.global	CySysWdtUnmaskInterrupt
 929              		.code	16
 930              		.thumb_func
 931              		.type	CySysWdtUnmaskInterrupt, %function
 932              	CySysWdtUnmaskInterrupt:
 933              	.LFB21:
2086:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 934              		.loc 1 2086 0
 935              		.cfi_startproc
2087:Generated_Source\PSoC4/CyLFClk.c ****     }
 936              		.loc 1 2087 0
 937 0000 024A     		ldr	r2, .L85
 938 0002 1168     		ldr	r1, [r2]
 939 0004 0123     		mov	r3, #1
 940 0006 0B43     		orr	r3, r1
 941 0008 1360     		str	r3, [r2]
2088:Generated_Source\PSoC4/CyLFClk.c **** 
 942              		.loc 1 2088 0
 943              		@ sp needed
 944 000a 7047     		bx	lr
 945              	.L86:
 946              		.align	2
 947              	.L85:
 948 000c 4C000340 		.word	1073938508
 949              		.cfi_endproc
 950              	.LFE21:
 951              		.size	CySysWdtUnmaskInterrupt, .-CySysWdtUnmaskInterrupt
 952              		.section	.text.CySysWdtSetInterruptCallback,"ax",%progbits
 953              		.align	2
 954              		.global	CySysWdtSetInterruptCallback
 955              		.code	16
 956              		.thumb_func
 957              		.type	CySysWdtSetInterruptCallback, %function
 958              	CySysWdtSetInterruptCallback:
 959              	.LFB22:
2104:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
 960              		.loc 1 2104 0
 961              		.cfi_startproc
 962              	.LVL58:
2107:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
 963              		.loc 1 2107 0
 964 0000 024B     		ldr	r3, .L88
 965 0002 5A68     		ldr	r2, [r3, #4]
 966              	.LVL59:
2108:Generated_Source\PSoC4/CyLFClk.c **** 
 967              		.loc 1 2108 0
 968 0004 5860     		str	r0, [r3, #4]
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 70


2111:Generated_Source\PSoC4/CyLFClk.c **** 
 969              		.loc 1 2111 0
 970 0006 101C     		mov	r0, r2
 971              	.LVL60:
 972              		@ sp needed
 973 0008 7047     		bx	lr
 974              	.L89:
 975 000a C046     		.align	2
 976              	.L88:
 977 000c 00000000 		.word	.LANCHOR0
 978              		.cfi_endproc
 979              	.LFE22:
 980              		.size	CySysWdtSetInterruptCallback, .-CySysWdtSetInterruptCallback
 981              		.section	.text.CySysWdtGetInterruptCallback,"ax",%progbits
 982              		.align	2
 983              		.global	CySysWdtGetInterruptCallback
 984              		.code	16
 985              		.thumb_func
 986              		.type	CySysWdtGetInterruptCallback, %function
 987              	CySysWdtGetInterruptCallback:
 988              	.LFB23:
2125:Generated_Source\PSoC4/CyLFClk.c ****         return(cySysWdtCallback);
 989              		.loc 1 2125 0
 990              		.cfi_startproc
2126:Generated_Source\PSoC4/CyLFClk.c ****     }
 991              		.loc 1 2126 0
 992 0000 014B     		ldr	r3, .L91
 993 0002 5868     		ldr	r0, [r3, #4]
2127:Generated_Source\PSoC4/CyLFClk.c **** 
 994              		.loc 1 2127 0
 995              		@ sp needed
 996 0004 7047     		bx	lr
 997              	.L92:
 998 0006 C046     		.align	2
 999              	.L91:
 1000 0008 00000000 		.word	.LANCHOR0
 1001              		.cfi_endproc
 1002              	.LFE23:
 1003              		.size	CySysWdtGetInterruptCallback, .-CySysWdtGetInterruptCallback
 1004              		.section	.text.CySysWdtIsr,"ax",%progbits
 1005              		.align	2
 1006              		.global	CySysWdtIsr
 1007              		.code	16
 1008              		.thumb_func
 1009              		.type	CySysWdtIsr, %function
 1010              	CySysWdtIsr:
 1011              	.LFB24:
2149:Generated_Source\PSoC4/CyLFClk.c ****         if(cySysWdtCallback != (void *) 0)
 1012              		.loc 1 2149 0
 1013              		.cfi_startproc
 1014 0000 08B5     		push	{r3, lr}
 1015              		.cfi_def_cfa_offset 8
 1016              		.cfi_offset 3, -8
 1017              		.cfi_offset 14, -4
2150:Generated_Source\PSoC4/CyLFClk.c ****         {
 1018              		.loc 1 2150 0
 1019 0002 044B     		ldr	r3, .L95
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 71


 1020 0004 5B68     		ldr	r3, [r3, #4]
 1021 0006 002B     		cmp	r3, #0
 1022 0008 00D0     		beq	.L94
2152:Generated_Source\PSoC4/CyLFClk.c ****         }
 1023              		.loc 1 2152 0
 1024 000a 9847     		blx	r3
 1025              	.LVL61:
 1026              	.L94:
2155:Generated_Source\PSoC4/CyLFClk.c ****     }
 1027              		.loc 1 2155 0
 1028 000c FFF7FEFF 		bl	CySysWdtClearInterrupt
 1029              	.LVL62:
2156:Generated_Source\PSoC4/CyLFClk.c **** 
 1030              		.loc 1 2156 0
 1031              		@ sp needed
 1032 0010 08BD     		pop	{r3, pc}
 1033              	.L96:
 1034 0012 C046     		.align	2
 1035              	.L95:
 1036 0014 00000000 		.word	.LANCHOR0
 1037              		.cfi_endproc
 1038              	.LFE24:
 1039              		.size	CySysWdtIsr, .-CySysWdtIsr
 1040              		.section	.text.CySysClkSetTimerSource,"ax",%progbits
 1041              		.align	2
 1042              		.global	CySysClkSetTimerSource
 1043              		.code	16
 1044              		.thumb_func
 1045              		.type	CySysClkSetTimerSource, %function
 1046              	CySysClkSetTimerSource:
 1047              	.LFB26:
2182:Generated_Source\PSoC4/CyLFClk.c **** 
2183:Generated_Source\PSoC4/CyLFClk.c **** 
2184:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2185:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkSetTimerSource
2186:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
2187:Generated_Source\PSoC4/CyLFClk.c **** *
2188:Generated_Source\PSoC4/CyLFClk.c **** * \brief Sets the clock source for the DeepSleep Timers.
2189:Generated_Source\PSoC4/CyLFClk.c **** *
2190:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor 
2191:Generated_Source\PSoC4/CyLFClk.c **** * devices.
2192:Generated_Source\PSoC4/CyLFClk.c **** *
2193:Generated_Source\PSoC4/CyLFClk.c **** * \param source
2194:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_TIMER_SRC_ILO - Internal Low Frequency (32 kHz) Oscillator 
2195:Generated_Source\PSoC4/CyLFClk.c **** * (ILO).<br>
2196:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO - Low Frequency Watch Crystal Oscillator 
2197:Generated_Source\PSoC4/CyLFClk.c **** * (WCO).
2198:Generated_Source\PSoC4/CyLFClk.c **** *
2199:Generated_Source\PSoC4/CyLFClk.c **** * \details Both the current source and the new source must be running and stable 
2200:Generated_Source\PSoC4/CyLFClk.c **** * before calling this function.
2201:Generated_Source\PSoC4/CyLFClk.c **** *
2202:Generated_Source\PSoC4/CyLFClk.c **** * \warning DeepSleep Timer reset is required if Timer source was switched while 
2203:Generated_Source\PSoC4/CyLFClk.c **** * DeepSleep Timers were running. Call CySysTimerResetCounters() API after 
2204:Generated_Source\PSoC4/CyLFClk.c **** * Timer source switching.
2205:Generated_Source\PSoC4/CyLFClk.c **** * It is highly recommended to disable DeepSleep Timers before Timer source 
2206:Generated_Source\PSoC4/CyLFClk.c **** * switching. Changing the Timer source may change the functionality that uses 
2207:Generated_Source\PSoC4/CyLFClk.c **** * this Timers as clock source.
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 72


2208:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2209:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetTimerSource(uint32 source)
2210:Generated_Source\PSoC4/CyLFClk.c ****     {
 1048              		.loc 1 2210 0
 1049              		.cfi_startproc
 1050              	.LVL63:
 1051 0000 10B5     		push	{r4, lr}
 1052              		.cfi_def_cfa_offset 8
 1053              		.cfi_offset 4, -8
 1054              		.cfi_offset 14, -4
 1055 0002 041C     		mov	r4, r0
2211:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
2212:Generated_Source\PSoC4/CyLFClk.c **** 
2213:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetTimerSource() != source)
 1056              		.loc 1 2213 0
 1057 0004 FFF7FEFF 		bl	CySysClkGetTimerSource
 1058              	.LVL64:
 1059 0008 A042     		cmp	r0, r4
 1060 000a 1AD0     		beq	.L98
2214:Generated_Source\PSoC4/CyLFClk.c ****         {
2215:Generated_Source\PSoC4/CyLFClk.c **** 
2216:Generated_Source\PSoC4/CyLFClk.c ****             /* Reset both _EN bits in WCO_WDT_CLKEN register */
2217:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CLKEN_REG &= ~CY_SYS_WCO_WDT_CLKEN_RESET_MASK;
 1061              		.loc 1 2217 0
 1062 000c 144A     		ldr	r2, .L103
 1063 000e 1368     		ldr	r3, [r2]
 1064 0010 0321     		mov	r1, #3
 1065 0012 8B43     		bic	r3, r1
 1066 0014 1360     		str	r3, [r2]
2218:Generated_Source\PSoC4/CyLFClk.c ****             
2219:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait 4 new clock source-cycles for change to come into effect */
2220:Generated_Source\PSoC4/CyLFClk.c ****             CyDelayUs(CY_SYS_4TIMER_DELAY_US);
 1067              		.loc 1 2220 0
 1068 0016 134B     		ldr	r3, .L103+4
 1069 0018 1B68     		ldr	r3, [r3]
 1070 001a 9B0F     		lsr	r3, r3, #30
 1071 001c 01D1     		bne	.L101
 1072 001e 7C20     		mov	r0, #124
 1073 0020 01E0     		b	.L99
 1074              	.L101:
 1075 0022 8620     		mov	r0, #134
 1076 0024 4000     		lsl	r0, r0, #1
 1077              	.L99:
 1078              		.loc 1 2220 0 is_stmt 0 discriminator 4
 1079 0026 FFF7FEFF 		bl	CyDelayUs
 1080              	.LVL65:
2221:Generated_Source\PSoC4/CyLFClk.c **** 
2222:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
 1081              		.loc 1 2222 0 is_stmt 1 discriminator 4
 1082 002a FFF7FEFF 		bl	CyEnterCriticalSection
 1083              	.LVL66:
2223:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = (CY_SYS_WCO_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_TIMER_SEL
 1084              		.loc 1 2223 0 discriminator 4
 1085 002e 0D4A     		ldr	r2, .L103+4
 1086 0030 1368     		ldr	r3, [r2]
 1087 0032 9B00     		lsl	r3, r3, #2
 1088 0034 9B08     		lsr	r3, r3, #2
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 73


2224:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_TIMER_SEL_MASK);
 1089              		.loc 1 2224 0 discriminator 4
 1090 0036 A40F     		lsr	r4, r4, #30
 1091              	.LVL67:
 1092 0038 A407     		lsl	r4, r4, #30
2223:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = (CY_SYS_WCO_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_TIMER_SEL
 1093              		.loc 1 2223 0 discriminator 4
 1094 003a 1C43     		orr	r4, r3
 1095 003c 1460     		str	r4, [r2]
2225:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
 1096              		.loc 1 2225 0 discriminator 4
 1097 003e FFF7FEFF 		bl	CyExitCriticalSection
 1098              	.LVL68:
 1099              	.L98:
2226:Generated_Source\PSoC4/CyLFClk.c ****         }
2227:Generated_Source\PSoC4/CyLFClk.c **** 
2228:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CLKEN_REG = (CY_SYS_WCO_WDT_CLKEN_REG & (uint32)(~CY_SYS_WCO_WDT_CLKEN_RESET
 1100              		.loc 1 2228 0
 1101 0042 074B     		ldr	r3, .L103
 1102 0044 1B68     		ldr	r3, [r3]
 1103 0046 0322     		mov	r2, #3
 1104 0048 9343     		bic	r3, r2
2229:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
 1105              		.loc 1 2229 0
 1106 004a 064A     		ldr	r2, .L103+4
 1107 004c 1268     		ldr	r2, [r2]
 1108 004e 920F     		lsr	r2, r2, #30
2228:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
 1109              		.loc 1 2228 0
 1110 0050 01D1     		bne	.L102
 1111 0052 0232     		add	r2, r2, #2
 1112 0054 00E0     		b	.L100
 1113              	.L102:
 1114 0056 0122     		mov	r2, #1
 1115              	.L100:
2228:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
 1116              		.loc 1 2228 0 is_stmt 0 discriminator 4
 1117 0058 1343     		orr	r3, r2
 1118 005a 014A     		ldr	r2, .L103
 1119 005c 1360     		str	r3, [r2]
2230:Generated_Source\PSoC4/CyLFClk.c ****     }
 1120              		.loc 1 2230 0 is_stmt 1 discriminator 4
 1121              		@ sp needed
 1122 005e 10BD     		pop	{r4, pc}
 1123              	.L104:
 1124              		.align	2
 1125              	.L103:
 1126 0060 14020640 		.word	1074135572
 1127 0064 0C020640 		.word	1074135564
 1128              		.cfi_endproc
 1129              	.LFE26:
 1130              		.size	CySysClkSetTimerSource, .-CySysClkSetTimerSource
 1131              		.section	.text.CySysTimerGetEnabledStatus,"ax",%progbits
 1132              		.align	2
 1133              		.global	CySysTimerGetEnabledStatus
 1134              		.code	16
 1135              		.thumb_func
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 74


 1136              		.type	CySysTimerGetEnabledStatus, %function
 1137              	CySysTimerGetEnabledStatus:
 1138              	.LFB27:
2231:Generated_Source\PSoC4/CyLFClk.c **** 
2232:Generated_Source\PSoC4/CyLFClk.c **** 
2233:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2234:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetEnabledStatus
2235:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2236:Generated_Source\PSoC4/CyLFClk.c ****     *
2237:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of one of the three DeepSleep Timer 
2238:Generated_Source\PSoC4/CyLFClk.c ****     * counters.
2239:Generated_Source\PSoC4/CyLFClk.c ****     *
2240:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2241:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2242:Generated_Source\PSoC4/CyLFClk.c ****     *
2243:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the Timers counter:
2244:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the Counter is disabled.
2245:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the Counter is enabled.
2246:Generated_Source\PSoC4/CyLFClk.c ****     *
2247:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2248:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual DeepSleep Timer counter status from the 
2249:Generated_Source\PSoC4/CyLFClk.c ****     * status register. It may take up to 3 LFCLK cycles for the Timer status 
2250:Generated_Source\PSoC4/CyLFClk.c ****     * register to contain actual data after the Timer counter is enabled.
2251:Generated_Source\PSoC4/CyLFClk.c ****     *
2252:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2253:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum)
2254:Generated_Source\PSoC4/CyLFClk.c ****     {
 1139              		.loc 1 2254 0
 1140              		.cfi_startproc
 1141              	.LVL69:
 1142 0000 10B5     		push	{r4, lr}
 1143              		.cfi_def_cfa_offset 8
 1144              		.cfi_offset 4, -8
 1145              		.cfi_offset 14, -4
 1146 0002 041E     		sub	r4, r0, #0
2255:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
 1147              		.loc 1 2255 0
 1148 0004 022C     		cmp	r4, #2
 1149 0006 02D9     		bls	.L106
 1150              		.loc 1 2255 0 is_stmt 0 discriminator 1
 1151 0008 0020     		mov	r0, #0
 1152              	.LVL70:
 1153 000a FFF7FEFF 		bl	CyHalt
 1154              	.LVL71:
 1155              	.L106:
2256:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONTROL_REG >> ((CY_SYS_TIMER_CNT_SHIFT * counterNum) + 
 1156              		.loc 1 2256 0 is_stmt 1
 1157 000e 044B     		ldr	r3, .L107
 1158 0010 1868     		ldr	r0, [r3]
 1159 0012 E400     		lsl	r4, r4, #3
 1160              	.LVL72:
 1161 0014 0134     		add	r4, r4, #1
 1162 0016 E040     		lsr	r0, r0, r4
 1163 0018 041C     		mov	r4, r0
 1164 001a 0120     		mov	r0, #1
 1165 001c 2040     		and	r0, r4
2257:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 75


2258:Generated_Source\PSoC4/CyLFClk.c ****     }
 1166              		.loc 1 2258 0
 1167              		@ sp needed
 1168 001e 10BD     		pop	{r4, pc}
 1169              	.L108:
 1170              		.align	2
 1171              	.L107:
 1172 0020 10020640 		.word	1074135568
 1173              		.cfi_endproc
 1174              	.LFE27:
 1175              		.size	CySysTimerGetEnabledStatus, .-CySysTimerGetEnabledStatus
 1176              		.section	.text.CySysTimerSetMode,"ax",%progbits
 1177              		.align	2
 1178              		.global	CySysTimerSetMode
 1179              		.code	16
 1180              		.thumb_func
 1181              		.type	CySysTimerSetMode, %function
 1182              	CySysTimerSetMode:
 1183              	.LFB28:
2259:Generated_Source\PSoC4/CyLFClk.c **** 
2260:Generated_Source\PSoC4/CyLFClk.c **** 
2261:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2262:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMode
2263:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2264:Generated_Source\PSoC4/CyLFClk.c ****     *
2265:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Writes the mode of one of the three DeepSleep Timer counters.
2266:Generated_Source\PSoC4/CyLFClk.c ****     *
2267:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2268:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2269:Generated_Source\PSoC4/CyLFClk.c ****     *
2270:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
2271:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER_MODE_NONE - Free running.<br>
2272:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_MODE_INT - The interrupt generated on match for counter 0
2273:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.
2274:Generated_Source\PSoC4/CyLFClk.c ****     *
2275:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2276:Generated_Source\PSoC4/CyLFClk.c ****     * DeepSleep Timer counter counterNum should be disabled to set a mode. 
2277:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise, this function call has no effect. If the specified counter is 
2278:Generated_Source\PSoC4/CyLFClk.c ****     * enabled, call the CySysTimerDisable() function with the corresponding 
2279:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop.
2280:Generated_Source\PSoC4/CyLFClk.c ****     *
2281:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2282:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMode(uint32 counterNum, uint32 mode)
2283:Generated_Source\PSoC4/CyLFClk.c ****     {
 1184              		.loc 1 2283 0
 1185              		.cfi_startproc
 1186              	.LVL73:
 1187 0000 38B5     		push	{r3, r4, r5, lr}
 1188              		.cfi_def_cfa_offset 16
 1189              		.cfi_offset 3, -16
 1190              		.cfi_offset 4, -12
 1191              		.cfi_offset 5, -8
 1192              		.cfi_offset 14, -4
 1193 0002 041C     		mov	r4, r0
 1194 0004 0D1C     		mov	r5, r1
2284:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2285:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 76


2286:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
 1195              		.loc 1 2286 0
 1196 0006 0228     		cmp	r0, #2
 1197 0008 02D9     		bls	.L110
 1198              		.loc 1 2286 0 is_stmt 0 discriminator 1
 1199 000a 0020     		mov	r0, #0
 1200              	.LVL74:
 1201 000c FFF7FEFF 		bl	CyHalt
 1202              	.LVL75:
 1203              	.L110:
2287:Generated_Source\PSoC4/CyLFClk.c **** 
2288:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(mode <= CY_SYS_TIMER_MODE_MASK);
 1204              		.loc 1 2288 0 is_stmt 1
 1205 0010 012D     		cmp	r5, #1
 1206 0012 02D9     		bls	.L111
 1207              		.loc 1 2288 0 is_stmt 0 discriminator 1
 1208 0014 0020     		mov	r0, #0
 1209 0016 FFF7FEFF 		bl	CyHalt
 1210              	.LVL76:
 1211              	.L111:
2289:Generated_Source\PSoC4/CyLFClk.c **** 
2290:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
 1212              		.loc 1 2290 0 is_stmt 1
 1213 001a 201C     		mov	r0, r4
 1214 001c FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1215              	.LVL77:
 1216 0020 0028     		cmp	r0, #0
 1217 0022 0BD1     		bne	.L109
2291:Generated_Source\PSoC4/CyLFClk.c ****         {
2292:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG &
 1218              		.loc 1 2292 0
 1219 0024 064A     		ldr	r2, .L113
 1220 0026 1368     		ldr	r3, [r2]
2293:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_TIMER_MODE_MASK << (counterNum * CY_SYS_T
 1221              		.loc 1 2293 0
 1222 0028 E400     		lsl	r4, r4, #3
 1223              	.LVL78:
 1224 002a 0121     		mov	r1, #1
 1225 002c 081C     		mov	r0, r1
 1226 002e A040     		lsl	r0, r0, r4
2292:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_TIMER_MODE_MASK << (counterNum * CY_SYS_T
 1227              		.loc 1 2292 0
 1228 0030 8343     		bic	r3, r0
 1229              	.LVL79:
2294:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_TIMER_MODE_MASK) << (counterNum * CY_SYS_TIME
 1230              		.loc 1 2294 0
 1231 0032 0D40     		and	r5, r1
 1232              	.LVL80:
 1233 0034 A540     		lsl	r5, r5, r4
 1234 0036 2C1C     		mov	r4, r5
 1235 0038 1C43     		orr	r4, r3
 1236              	.LVL81:
2295:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
 1237              		.loc 1 2295 0
 1238 003a 1460     		str	r4, [r2]
 1239              	.LVL82:
 1240              	.L109:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 77


2296:Generated_Source\PSoC4/CyLFClk.c ****         }
2297:Generated_Source\PSoC4/CyLFClk.c ****     }
 1241              		.loc 1 2297 0
 1242              		@ sp needed
 1243 003c 38BD     		pop	{r3, r4, r5, pc}
 1244              	.L114:
 1245 003e C046     		.align	2
 1246              	.L113:
 1247 0040 0C020640 		.word	1074135564
 1248              		.cfi_endproc
 1249              	.LFE28:
 1250              		.size	CySysTimerSetMode, .-CySysTimerSetMode
 1251              		.section	.text.CySysTimerGetMode,"ax",%progbits
 1252              		.align	2
 1253              		.global	CySysTimerGetMode
 1254              		.code	16
 1255              		.thumb_func
 1256              		.type	CySysTimerGetMode, %function
 1257              	CySysTimerGetMode:
 1258              	.LFB29:
2298:Generated_Source\PSoC4/CyLFClk.c **** 
2299:Generated_Source\PSoC4/CyLFClk.c **** 
2300:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2301:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMode
2302:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2303:Generated_Source\PSoC4/CyLFClk.c ****     *
2304:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three DeepSleep Timer counters.
2305:Generated_Source\PSoC4/CyLFClk.c ****     *
2306:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2307:Generated_Source\PSoC4/CyLFClk.c ****     *
2308:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
2309:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysTimerSetMode().
2310:Generated_Source\PSoC4/CyLFClk.c ****     *
2311:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2312:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMode(uint32 counterNum)
2313:Generated_Source\PSoC4/CyLFClk.c ****     {
 1259              		.loc 1 2313 0
 1260              		.cfi_startproc
 1261              	.LVL83:
2314:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> (counterNum * CY_SYS_TIMER_CNT_SHIFT)) & CY_SYS_TIMER
 1262              		.loc 1 2314 0
 1263 0000 034B     		ldr	r3, .L116
 1264 0002 1B68     		ldr	r3, [r3]
 1265 0004 C000     		lsl	r0, r0, #3
 1266              	.LVL84:
 1267 0006 C340     		lsr	r3, r3, r0
 1268 0008 181C     		mov	r0, r3
 1269 000a 0123     		mov	r3, #1
 1270 000c 1840     		and	r0, r3
2315:Generated_Source\PSoC4/CyLFClk.c ****     }
 1271              		.loc 1 2315 0
 1272              		@ sp needed
 1273 000e 7047     		bx	lr
 1274              	.L117:
 1275              		.align	2
 1276              	.L116:
 1277 0010 0C020640 		.word	1074135564
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 78


 1278              		.cfi_endproc
 1279              	.LFE29:
 1280              		.size	CySysTimerGetMode, .-CySysTimerGetMode
 1281              		.section	.text.CySysTimerSetClearOnMatch,"ax",%progbits
 1282              		.align	2
 1283              		.global	CySysTimerSetClearOnMatch
 1284              		.code	16
 1285              		.thumb_func
 1286              		.type	CySysTimerSetClearOnMatch, %function
 1287              	CySysTimerSetClearOnMatch:
 1288              	.LFB30:
2316:Generated_Source\PSoC4/CyLFClk.c **** 
2317:Generated_Source\PSoC4/CyLFClk.c **** 
2318:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2319:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetClearOnMatch
2320:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2321:Generated_Source\PSoC4/CyLFClk.c ****     *
2322:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the DeepSleep Timer counter "clear on match" setting.
2323:Generated_Source\PSoC4/CyLFClk.c ****     *
2324:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue 
2325:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
2326:Generated_Source\PSoC4/CyLFClk.c ****     *
2327:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
2328:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the Timer counter. The match values are not
2329:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
2330:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
2331:Generated_Source\PSoC4/CyLFClk.c ****     * 1 to enable appropriate counter
2332:Generated_Source\PSoC4/CyLFClk.c ****     *
2333:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2334:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counter counterNum should be disabled. Otherwise this function call
2335:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysTimerDisable()
2336:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
2337:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three Timer source-cycles.
2338:Generated_Source\PSoC4/CyLFClk.c ****     *
2339:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2340:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable)
2341:Generated_Source\PSoC4/CyLFClk.c ****     {
 1289              		.loc 1 2341 0
 1290              		.cfi_startproc
 1291              	.LVL85:
 1292 0000 38B5     		push	{r3, r4, r5, lr}
 1293              		.cfi_def_cfa_offset 16
 1294              		.cfi_offset 3, -16
 1295              		.cfi_offset 4, -12
 1296              		.cfi_offset 5, -8
 1297              		.cfi_offset 14, -4
 1298 0002 041C     		mov	r4, r0
 1299 0004 0D1C     		mov	r5, r1
2342:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2343:Generated_Source\PSoC4/CyLFClk.c **** 
2344:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
 1300              		.loc 1 2344 0
 1301 0006 0128     		cmp	r0, #1
 1302 0008 02D9     		bls	.L119
 1303              		.loc 1 2344 0 is_stmt 0 discriminator 1
 1304 000a 0020     		mov	r0, #0
 1305              	.LVL86:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 79


 1306 000c FFF7FEFF 		bl	CyHalt
 1307              	.LVL87:
 1308              	.L119:
2345:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2346:Generated_Source\PSoC4/CyLFClk.c **** 
2347:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
 1309              		.loc 1 2347 0 is_stmt 1
 1310 0010 201C     		mov	r0, r4
 1311 0012 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1312              	.LVL88:
 1313 0016 0028     		cmp	r0, #0
 1314 0018 0AD1     		bne	.L118
2348:Generated_Source\PSoC4/CyLFClk.c ****         {
2349:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
 1315              		.loc 1 2349 0
 1316 001a 0649     		ldr	r1, .L121
 1317 001c 0B68     		ldr	r3, [r1]
2350:Generated_Source\PSoC4/CyLFClk.c ****              ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT)));
 1318              		.loc 1 2350 0
 1319 001e E400     		lsl	r4, r4, #3
 1320              	.LVL89:
 1321 0020 0234     		add	r4, r4, #2
2349:Generated_Source\PSoC4/CyLFClk.c ****              ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT)));
 1322              		.loc 1 2349 0
 1323 0022 0122     		mov	r2, #1
 1324 0024 A240     		lsl	r2, r2, r4
 1325 0026 9343     		bic	r3, r2
 1326              	.LVL90:
2351:Generated_Source\PSoC4/CyLFClk.c **** 
2352:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
2353:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MAT
 1327              		.loc 1 2353 0
 1328 0028 A540     		lsl	r5, r5, r4
 1329              	.LVL91:
 1330 002a 2C1C     		mov	r4, r5
 1331 002c 1C43     		orr	r4, r3
 1332              	.LVL92:
2354:Generated_Source\PSoC4/CyLFClk.c **** 
2355:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
 1333              		.loc 1 2355 0
 1334 002e 0C60     		str	r4, [r1]
 1335              	.LVL93:
 1336              	.L118:
2356:Generated_Source\PSoC4/CyLFClk.c ****         }
2357:Generated_Source\PSoC4/CyLFClk.c ****     }
 1337              		.loc 1 2357 0
 1338              		@ sp needed
 1339 0030 38BD     		pop	{r3, r4, r5, pc}
 1340              	.L122:
 1341 0032 C046     		.align	2
 1342              	.L121:
 1343 0034 0C020640 		.word	1074135564
 1344              		.cfi_endproc
 1345              	.LFE30:
 1346              		.size	CySysTimerSetClearOnMatch, .-CySysTimerSetClearOnMatch
 1347              		.section	.text.CySysTimerGetClearOnMatch,"ax",%progbits
 1348              		.align	2
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 80


 1349              		.global	CySysTimerGetClearOnMatch
 1350              		.code	16
 1351              		.thumb_func
 1352              		.type	CySysTimerGetClearOnMatch, %function
 1353              	CySysTimerGetClearOnMatch:
 1354              	.LFB31:
2358:Generated_Source\PSoC4/CyLFClk.c **** 
2359:Generated_Source\PSoC4/CyLFClk.c **** 
2360:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2361:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetClearOnMatch
2362:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2363:Generated_Source\PSoC4/CyLFClk.c ****     *
2364:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the "clear on match" setting for the specified DeepSleep Timer 
2365:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2366:Generated_Source\PSoC4/CyLFClk.c ****     *
2367:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the Timer counter. The 
2368:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2369:Generated_Source\PSoC4/CyLFClk.c ****     *
2370:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
2371:Generated_Source\PSoC4/CyLFClk.c ****     *
2372:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2373:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum)
2374:Generated_Source\PSoC4/CyLFClk.c ****     {
 1355              		.loc 1 2374 0
 1356              		.cfi_startproc
 1357              	.LVL94:
 1358 0000 10B5     		push	{r4, lr}
 1359              		.cfi_def_cfa_offset 8
 1360              		.cfi_offset 4, -8
 1361              		.cfi_offset 14, -4
 1362 0002 041E     		sub	r4, r0, #0
2375:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
 1363              		.loc 1 2375 0
 1364 0004 012C     		cmp	r4, #1
 1365 0006 02D9     		bls	.L124
 1366              		.loc 1 2375 0 is_stmt 0 discriminator 1
 1367 0008 0020     		mov	r0, #0
 1368              	.LVL95:
 1369 000a FFF7FEFF 		bl	CyHalt
 1370              	.LVL96:
 1371              	.L124:
2376:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2377:Generated_Source\PSoC4/CyLFClk.c **** 
2378:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WCO_WDT_CONFIG_REG >>
 1372              		.loc 1 2378 0 is_stmt 1
 1373 000e 044B     		ldr	r3, .L125
 1374 0010 1868     		ldr	r0, [r3]
2379:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT))
 1375              		.loc 1 2379 0
 1376 0012 E400     		lsl	r4, r4, #3
 1377              	.LVL97:
 1378 0014 0234     		add	r4, r4, #2
2378:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT))
 1379              		.loc 1 2378 0
 1380 0016 E040     		lsr	r0, r0, r4
 1381 0018 041C     		mov	r4, r0
 1382 001a 0120     		mov	r0, #1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 81


 1383 001c 2040     		and	r0, r4
2380:Generated_Source\PSoC4/CyLFClk.c ****     }
 1384              		.loc 1 2380 0
 1385              		@ sp needed
 1386 001e 10BD     		pop	{r4, pc}
 1387              	.L126:
 1388              		.align	2
 1389              	.L125:
 1390 0020 0C020640 		.word	1074135564
 1391              		.cfi_endproc
 1392              	.LFE31:
 1393              		.size	CySysTimerGetClearOnMatch, .-CySysTimerGetClearOnMatch
 1394              		.section	.text.CySysTimerEnable,"ax",%progbits
 1395              		.align	2
 1396              		.global	CySysTimerEnable
 1397              		.code	16
 1398              		.thumb_func
 1399              		.type	CySysTimerEnable, %function
 1400              	CySysTimerEnable:
 1401              	.LFB32:
2381:Generated_Source\PSoC4/CyLFClk.c **** 
2382:Generated_Source\PSoC4/CyLFClk.c **** 
2383:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2384:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnable
2385:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2386:Generated_Source\PSoC4/CyLFClk.c ****     *
2387:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified DeepSleep Timer counters. All the counters 
2388:Generated_Source\PSoC4/CyLFClk.c ****     * specified in the mask are enabled.
2389:Generated_Source\PSoC4/CyLFClk.c ****     *
2390:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask  CY_SYS_TIMER0_MASK - The mask for counter 0 to enable.<br>
2391:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for counter 1 to enable.<br>
2392:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for counter 2 to enable.
2393:Generated_Source\PSoC4/CyLFClk.c ****     *
2394:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2395:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling Timer requires 3 Timer source-cycles to come into effect.
2396:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the Timer enable state must not be changed more than once in
2397:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
2398:Generated_Source\PSoC4/CyLFClk.c ****     *
2399:Generated_Source\PSoC4/CyLFClk.c ****     * After Timer is enabled, it is illegal to write Timer configuration 
2400:Generated_Source\PSoC4/CyLFClk.c ****     * (WCO_WDT_CONFIG) and control (WCO_WDT_CONTROL) registers. This means that all
2401:Generated_Source\PSoC4/CyLFClk.c ****     * Timer functions that contain 'write' in the name (with the exception of 
2402:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetMatch() function) are illegal to call once Timer enabled.
2403:Generated_Source\PSoC4/CyLFClk.c ****     *
2404:Generated_Source\PSoC4/CyLFClk.c ****     * Timer current source must be running and stable before calling this 
2405:Generated_Source\PSoC4/CyLFClk.c ****     * function.
2406:Generated_Source\PSoC4/CyLFClk.c ****     *
2407:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2408:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnable(uint32 counterMask)
2409:Generated_Source\PSoC4/CyLFClk.c ****     {
 1402              		.loc 1 2409 0
 1403              		.cfi_startproc
 1404              	.LVL98:
 1405 0000 10B5     		push	{r4, lr}
 1406              		.cfi_def_cfa_offset 8
 1407              		.cfi_offset 4, -8
 1408              		.cfi_offset 14, -4
 1409 0002 041C     		mov	r4, r0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 82


2410:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= counterMask;
 1410              		.loc 1 2410 0
 1411 0004 0C4A     		ldr	r2, .L134
 1412 0006 1368     		ldr	r3, [r2]
 1413 0008 0343     		orr	r3, r0
 1414 000a 1360     		str	r3, [r2]
2411:Generated_Source\PSoC4/CyLFClk.c **** 
2412:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
 1415              		.loc 1 2412 0
 1416 000c C307     		lsl	r3, r0, #31
 1417 000e 04D5     		bpl	.L128
 1418              	.LVL99:
 1419              	.L129:
2413:Generated_Source\PSoC4/CyLFClk.c ****         {
2414:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
 1420              		.loc 1 2414 0 discriminator 1
 1421 0010 0020     		mov	r0, #0
 1422 0012 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1423              	.LVL100:
 1424 0016 0028     		cmp	r0, #0
 1425 0018 FAD0     		beq	.L129
 1426              	.L128:
2415:Generated_Source\PSoC4/CyLFClk.c ****             {
2416:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2417:Generated_Source\PSoC4/CyLFClk.c ****             }
2418:Generated_Source\PSoC4/CyLFClk.c ****         }
2419:Generated_Source\PSoC4/CyLFClk.c **** 
2420:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
 1427              		.loc 1 2420 0
 1428 001a E305     		lsl	r3, r4, #23
 1429 001c 04D5     		bpl	.L130
 1430              	.L131:
2421:Generated_Source\PSoC4/CyLFClk.c ****         {
2422:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
 1431              		.loc 1 2422 0 discriminator 1
 1432 001e 0120     		mov	r0, #1
 1433 0020 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1434              	.LVL101:
 1435 0024 0028     		cmp	r0, #0
 1436 0026 FAD0     		beq	.L131
 1437              	.L130:
2423:Generated_Source\PSoC4/CyLFClk.c ****             {
2424:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2425:Generated_Source\PSoC4/CyLFClk.c ****             }
2426:Generated_Source\PSoC4/CyLFClk.c ****         }
2427:Generated_Source\PSoC4/CyLFClk.c **** 
2428:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
 1438              		.loc 1 2428 0
 1439 0028 E303     		lsl	r3, r4, #15
 1440 002a 04D5     		bpl	.L127
 1441              	.L133:
2429:Generated_Source\PSoC4/CyLFClk.c ****         {
2430:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
 1442              		.loc 1 2430 0 discriminator 1
 1443 002c 0220     		mov	r0, #2
 1444 002e FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1445              	.LVL102:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 83


 1446 0032 0028     		cmp	r0, #0
 1447 0034 FAD0     		beq	.L133
 1448              	.L127:
2431:Generated_Source\PSoC4/CyLFClk.c ****             {
2432:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2433:Generated_Source\PSoC4/CyLFClk.c ****             }
2434:Generated_Source\PSoC4/CyLFClk.c ****         }
2435:Generated_Source\PSoC4/CyLFClk.c ****     }
 1449              		.loc 1 2435 0
 1450              		@ sp needed
 1451              	.LVL103:
 1452 0036 10BD     		pop	{r4, pc}
 1453              	.L135:
 1454              		.align	2
 1455              	.L134:
 1456 0038 10020640 		.word	1074135568
 1457              		.cfi_endproc
 1458              	.LFE32:
 1459              		.size	CySysTimerEnable, .-CySysTimerEnable
 1460              		.section	.text.CySysTimerDisable,"ax",%progbits
 1461              		.align	2
 1462              		.global	CySysTimerDisable
 1463              		.code	16
 1464              		.thumb_func
 1465              		.type	CySysTimerDisable, %function
 1466              	CySysTimerDisable:
 1467              	.LFB33:
2436:Generated_Source\PSoC4/CyLFClk.c **** 
2437:Generated_Source\PSoC4/CyLFClk.c **** 
2438:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2439:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisable
2440:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2441:Generated_Source\PSoC4/CyLFClk.c ****     *
2442:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified DeepSleep Timer counters.
2443:Generated_Source\PSoC4/CyLFClk.c ****     *
2444:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
2445:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
2446:Generated_Source\PSoC4/CyLFClk.c ****     *
2447:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2448:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_MASK - The mask for Counter 0 to disable.<br>
2449:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for Counter 1 to disable.<br>
2450:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for Counter 2 to disable.
2451:Generated_Source\PSoC4/CyLFClk.c ****     *
2452:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2453:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisable(uint32 counterMask)
2454:Generated_Source\PSoC4/CyLFClk.c ****     {
 1468              		.loc 1 2454 0
 1469              		.cfi_startproc
 1470              	.LVL104:
 1471 0000 10B5     		push	{r4, lr}
 1472              		.cfi_def_cfa_offset 8
 1473              		.cfi_offset 4, -8
 1474              		.cfi_offset 14, -4
 1475 0002 041C     		mov	r4, r0
2455:Generated_Source\PSoC4/CyLFClk.c **** 
2456:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG &= ~counterMask;
 1476              		.loc 1 2456 0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 84


 1477 0004 0C4A     		ldr	r2, .L143
 1478 0006 1368     		ldr	r3, [r2]
 1479 0008 8343     		bic	r3, r0
 1480 000a 1360     		str	r3, [r2]
2457:Generated_Source\PSoC4/CyLFClk.c **** 
2458:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
 1481              		.loc 1 2458 0
 1482 000c C307     		lsl	r3, r0, #31
 1483 000e 04D5     		bpl	.L137
 1484              	.LVL105:
 1485              	.L138:
2459:Generated_Source\PSoC4/CyLFClk.c ****         {
2460:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
 1486              		.loc 1 2460 0 discriminator 1
 1487 0010 0020     		mov	r0, #0
 1488 0012 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1489              	.LVL106:
 1490 0016 0028     		cmp	r0, #0
 1491 0018 FAD1     		bne	.L138
 1492              	.L137:
2461:Generated_Source\PSoC4/CyLFClk.c ****             {
2462:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2463:Generated_Source\PSoC4/CyLFClk.c ****             }
2464:Generated_Source\PSoC4/CyLFClk.c ****         }
2465:Generated_Source\PSoC4/CyLFClk.c **** 
2466:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
 1493              		.loc 1 2466 0
 1494 001a E305     		lsl	r3, r4, #23
 1495 001c 04D5     		bpl	.L139
 1496              	.L140:
2467:Generated_Source\PSoC4/CyLFClk.c ****         {
2468:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
 1497              		.loc 1 2468 0 discriminator 1
 1498 001e 0120     		mov	r0, #1
 1499 0020 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1500              	.LVL107:
 1501 0024 0028     		cmp	r0, #0
 1502 0026 FAD1     		bne	.L140
 1503              	.L139:
2469:Generated_Source\PSoC4/CyLFClk.c ****             {
2470:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2471:Generated_Source\PSoC4/CyLFClk.c ****             }
2472:Generated_Source\PSoC4/CyLFClk.c ****         }
2473:Generated_Source\PSoC4/CyLFClk.c **** 
2474:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
 1504              		.loc 1 2474 0
 1505 0028 E303     		lsl	r3, r4, #15
 1506 002a 04D5     		bpl	.L136
 1507              	.L142:
2475:Generated_Source\PSoC4/CyLFClk.c ****         {
2476:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
 1508              		.loc 1 2476 0 discriminator 1
 1509 002c 0220     		mov	r0, #2
 1510 002e FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1511              	.LVL108:
 1512 0032 0028     		cmp	r0, #0
 1513 0034 FAD1     		bne	.L142
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 85


 1514              	.L136:
2477:Generated_Source\PSoC4/CyLFClk.c ****             {
2478:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2479:Generated_Source\PSoC4/CyLFClk.c ****             }
2480:Generated_Source\PSoC4/CyLFClk.c ****         }
2481:Generated_Source\PSoC4/CyLFClk.c **** 
2482:Generated_Source\PSoC4/CyLFClk.c ****     }
 1515              		.loc 1 2482 0
 1516              		@ sp needed
 1517              	.LVL109:
 1518 0036 10BD     		pop	{r4, pc}
 1519              	.L144:
 1520              		.align	2
 1521              	.L143:
 1522 0038 10020640 		.word	1074135568
 1523              		.cfi_endproc
 1524              	.LFE33:
 1525              		.size	CySysTimerDisable, .-CySysTimerDisable
 1526              		.section	.text.CySysTimerSetCascade,"ax",%progbits
 1527              		.align	2
 1528              		.global	CySysTimerSetCascade
 1529              		.code	16
 1530              		.thumb_func
 1531              		.type	CySysTimerSetCascade, %function
 1532              	CySysTimerSetCascade:
 1533              	.LFB34:
2483:Generated_Source\PSoC4/CyLFClk.c **** 
2484:Generated_Source\PSoC4/CyLFClk.c **** 
2485:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2486:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetCascade
2487:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2488:Generated_Source\PSoC4/CyLFClk.c ****     *
2489:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2490:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two DeepSleep Timers cascade values based on the combination of 
2491:Generated_Source\PSoC4/CyLFClk.c ****     * mask values specified.
2492:Generated_Source\PSoC4/CyLFClk.c ****     *
2493:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
2494:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_NONE - Neither<br>
2495:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_01 - Cascade 01<br>
2496:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_12 - Cascade 12
2497:Generated_Source\PSoC4/CyLFClk.c ****     *
2498:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
2499:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
2500:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
2501:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysTimerSetCascade() was called with ORed defines it is necessary 
2502:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysTimeSetClearOnMatch(1,1). It is needed to make sure that 
2503:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
2504:Generated_Source\PSoC4/CyLFClk.c ****     *
2505:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counters that are part of the specified cascade should be disabled.
2506:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
2507:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysTimerDisable() function with the corresponding
2508:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
2509:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 Timers source-cycles.
2510:Generated_Source\PSoC4/CyLFClk.c ****     *
2511:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2512:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetCascade(uint32 cascadeMask)
2513:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 86


 1534              		.loc 1 2513 0
 1535              		.cfi_startproc
 1536              	.LVL110:
 1537 0000 38B5     		push	{r3, r4, r5, lr}
 1538              		.cfi_def_cfa_offset 16
 1539              		.cfi_offset 3, -16
 1540              		.cfi_offset 4, -12
 1541              		.cfi_offset 5, -8
 1542              		.cfi_offset 14, -4
 1543 0002 051C     		mov	r5, r0
2514:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2515:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
2516:Generated_Source\PSoC4/CyLFClk.c **** 
2517:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysTimerGetEnabledStatus(CY_SYS_TIMER0) |
 1544              		.loc 1 2517 0
 1545 0004 0020     		mov	r0, #0
 1546              	.LVL111:
 1547 0006 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1548              	.LVL112:
 1549 000a 041C     		mov	r4, r0
2518:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER1) |
 1550              		.loc 1 2518 0
 1551 000c 0120     		mov	r0, #1
 1552 000e FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1553              	.LVL113:
2517:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER1) |
 1554              		.loc 1 2517 0
 1555 0012 0443     		orr	r4, r0
2519:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER2);
 1556              		.loc 1 2519 0
 1557 0014 0220     		mov	r0, #2
 1558 0016 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1559              	.LVL114:
2517:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER1) |
 1560              		.loc 1 2517 0
 1561 001a 2043     		orr	r0, r4
 1562              	.LVL115:
2520:Generated_Source\PSoC4/CyLFClk.c **** 
2521:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
 1563              		.loc 1 2521 0
 1564 001c 05D1     		bne	.L145
2522:Generated_Source\PSoC4/CyLFClk.c ****         {
2523:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
 1565              		.loc 1 2523 0
 1566 001e 034A     		ldr	r2, .L147
 1567 0020 1168     		ldr	r1, [r2]
 1568              	.LVL116:
2524:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_TIMER_CASCADE_01|CY_SYS_TIMER_CASCADE_12)));
 1569              		.loc 1 2524 0
 1570 0022 034B     		ldr	r3, .L147+4
 1571 0024 0B40     		and	r3, r1
 1572              	.LVL117:
2525:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
 1573              		.loc 1 2525 0
 1574 0026 1D43     		orr	r5, r3
 1575              	.LVL118:
2526:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 87


 1576              		.loc 1 2526 0
 1577 0028 1560     		str	r5, [r2]
 1578              	.LVL119:
 1579              	.L145:
2527:Generated_Source\PSoC4/CyLFClk.c ****         }
2528:Generated_Source\PSoC4/CyLFClk.c ****     }
 1580              		.loc 1 2528 0
 1581              		@ sp needed
 1582 002a 38BD     		pop	{r3, r4, r5, pc}
 1583              	.L148:
 1584              		.align	2
 1585              	.L147:
 1586 002c 0C020640 		.word	1074135564
 1587 0030 F7F7FFFF 		.word	-2057
 1588              		.cfi_endproc
 1589              	.LFE34:
 1590              		.size	CySysTimerSetCascade, .-CySysTimerSetCascade
 1591              		.section	.text.CySysTimerGetCascade,"ax",%progbits
 1592              		.align	2
 1593              		.global	CySysTimerGetCascade
 1594              		.code	16
 1595              		.thumb_func
 1596              		.type	CySysTimerGetCascade, %function
 1597              	CySysTimerGetCascade:
 1598              	.LFB35:
2529:Generated_Source\PSoC4/CyLFClk.c **** 
2530:Generated_Source\PSoC4/CyLFClk.c **** 
2531:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2532:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCascade
2533:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2534:Generated_Source\PSoC4/CyLFClk.c ****     *
2535:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two DeepSleep Timer cascade values returning a mask of the 
2536:Generated_Source\PSoC4/CyLFClk.c ****     * bits set.
2537:Generated_Source\PSoC4/CyLFClk.c ****     *
2538:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
2539:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_NONE - Neither
2540:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_01 - Cascade 01
2541:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_12 - Cascade 12
2542:Generated_Source\PSoC4/CyLFClk.c ****     *
2543:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2544:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCascade(void)
2545:Generated_Source\PSoC4/CyLFClk.c ****     {
 1599              		.loc 1 2545 0
 1600              		.cfi_startproc
2546:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONFIG_REG & (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12));
 1601              		.loc 1 2546 0
 1602 0000 024B     		ldr	r3, .L150
 1603 0002 1868     		ldr	r0, [r3]
 1604 0004 024B     		ldr	r3, .L150+4
 1605 0006 1840     		and	r0, r3
2547:Generated_Source\PSoC4/CyLFClk.c ****     }
 1606              		.loc 1 2547 0
 1607              		@ sp needed
 1608 0008 7047     		bx	lr
 1609              	.L151:
 1610 000a C046     		.align	2
 1611              	.L150:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 88


 1612 000c 0C020640 		.word	1074135564
 1613 0010 08080000 		.word	2056
 1614              		.cfi_endproc
 1615              	.LFE35:
 1616              		.size	CySysTimerGetCascade, .-CySysTimerGetCascade
 1617              		.section	.text.CySysTimerSetMatch,"ax",%progbits
 1618              		.align	2
 1619              		.global	CySysTimerSetMatch
 1620              		.code	16
 1621              		.thumb_func
 1622              		.type	CySysTimerSetMatch, %function
 1623              	CySysTimerSetMatch:
 1624              	.LFB36:
2548:Generated_Source\PSoC4/CyLFClk.c **** 
2549:Generated_Source\PSoC4/CyLFClk.c **** 
2550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMatch
2552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLFClk.c ****     *
2554:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the Timer counter match comparison value.
2555:Generated_Source\PSoC4/CyLFClk.c ****     *
2556:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the Timer counter. The 
2557:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2558:Generated_Source\PSoC4/CyLFClk.c ****     *
2559:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
2560:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
2561:Generated_Source\PSoC4/CyLFClk.c ****     *
2562:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2563:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMatch(uint32 counterNum, uint32 match)
2564:Generated_Source\PSoC4/CyLFClk.c ****     {
 1625              		.loc 1 2564 0
 1626              		.cfi_startproc
 1627              	.LVL120:
 1628 0000 38B5     		push	{r3, r4, r5, lr}
 1629              		.cfi_def_cfa_offset 16
 1630              		.cfi_offset 3, -16
 1631              		.cfi_offset 4, -12
 1632              		.cfi_offset 5, -8
 1633              		.cfi_offset 14, -4
 1634 0002 041C     		mov	r4, r0
 1635 0004 0D1C     		mov	r5, r1
2565:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
2566:Generated_Source\PSoC4/CyLFClk.c **** 
2567:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
 1636              		.loc 1 2567 0
 1637 0006 0128     		cmp	r0, #1
 1638 0008 02D9     		bls	.L153
 1639              		.loc 1 2567 0 is_stmt 0 discriminator 1
 1640 000a 0020     		mov	r0, #0
 1641              	.LVL121:
 1642 000c FFF7FEFF 		bl	CyHalt
 1643              	.LVL122:
 1644              	.L153:
2568:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2569:Generated_Source\PSoC4/CyLFClk.c **** 
2570:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
2571:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_3TIMER_DELAY_US);
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 89


 1645              		.loc 1 2571 0 is_stmt 1
 1646 0010 0E4B     		ldr	r3, .L158
 1647 0012 1B68     		ldr	r3, [r3]
 1648 0014 9B0F     		lsr	r3, r3, #30
 1649 0016 01D1     		bne	.L156
 1650 0018 C920     		mov	r0, #201
 1651 001a 00E0     		b	.L154
 1652              	.L156:
 1653 001c 5D20     		mov	r0, #93
 1654              	.L154:
 1655              		.loc 1 2571 0 is_stmt 0 discriminator 4
 1656 001e FFF7FEFF 		bl	CyDelayUs
 1657              	.LVL123:
2572:Generated_Source\PSoC4/CyLFClk.c **** 
2573:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WCO_WDT_MATCH_REG;
 1658              		.loc 1 2573 0 is_stmt 1 discriminator 4
 1659 0022 0B4A     		ldr	r2, .L158+4
 1660 0024 1068     		ldr	r0, [r2]
 1661              	.LVL124:
2574:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_TIMER_LOWER_16BITS_MASK << (counterNum * CY_SYS_TIMER
 1662              		.loc 1 2574 0 discriminator 4
 1663 0026 2401     		lsl	r4, r4, #4
 1664              	.LVL125:
 1665 0028 0A4B     		ldr	r3, .L158+8
 1666 002a A340     		lsl	r3, r3, r4
 1667 002c 9843     		bic	r0, r3
 1668              	.LVL126:
 1669 002e 031C     		mov	r3, r0
 1670              	.LVL127:
2575:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT
 1671              		.loc 1 2575 0 discriminator 4
 1672 0030 281C     		mov	r0, r5
 1673              	.LVL128:
 1674 0032 A040     		lsl	r0, r0, r4
 1675 0034 1843     		orr	r0, r3
 1676 0036 1060     		str	r0, [r2]
2576:Generated_Source\PSoC4/CyLFClk.c **** 
2577:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
2578:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_1TIMER_DELAY_US);
 1677              		.loc 1 2578 0 discriminator 4
 1678 0038 044B     		ldr	r3, .L158
 1679              	.LVL129:
 1680 003a 1B68     		ldr	r3, [r3]
 1681 003c 9B0F     		lsr	r3, r3, #30
 1682 003e 01D1     		bne	.L157
 1683              		.loc 1 2578 0 is_stmt 0
 1684 0040 4320     		mov	r0, #67
 1685 0042 00E0     		b	.L155
 1686              	.L157:
 1687 0044 1F20     		mov	r0, #31
 1688              	.L155:
 1689              		.loc 1 2578 0 discriminator 4
 1690 0046 FFF7FEFF 		bl	CyDelayUs
 1691              	.LVL130:
2579:Generated_Source\PSoC4/CyLFClk.c ****     }
 1692              		.loc 1 2579 0 is_stmt 1 discriminator 4
 1693              		@ sp needed
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 90


 1694              	.LVL131:
 1695 004a 38BD     		pop	{r3, r4, r5, pc}
 1696              	.L159:
 1697              		.align	2
 1698              	.L158:
 1699 004c 0C020640 		.word	1074135564
 1700 0050 08020640 		.word	1074135560
 1701 0054 FFFF0000 		.word	65535
 1702              		.cfi_endproc
 1703              	.LFE36:
 1704              		.size	CySysTimerSetMatch, .-CySysTimerSetMatch
 1705              		.section	.text.CySysTimerSetToggleBit,"ax",%progbits
 1706              		.align	2
 1707              		.global	CySysTimerSetToggleBit
 1708              		.code	16
 1709              		.thumb_func
 1710              		.type	CySysTimerSetToggleBit, %function
 1711              	CySysTimerSetToggleBit:
 1712              	.LFB37:
2580:Generated_Source\PSoC4/CyLFClk.c **** 
2581:Generated_Source\PSoC4/CyLFClk.c **** 
2582:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2583:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetToggleBit
2584:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2585:Generated_Source\PSoC4/CyLFClk.c ****     *
2586:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures which bit in Timer counter 2 to monitor for a toggle.
2587:Generated_Source\PSoC4/CyLFClk.c ****     *
2588:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if mode for counter 2 has
2589:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
2590:Generated_Source\PSoC4/CyLFClk.c ****     *
2591:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31]. Counter 2 bit to monitor for a toggle.
2592:Generated_Source\PSoC4/CyLFClk.c ****     *
2593:Generated_Source\PSoC4/CyLFClk.c ****     * \details Timer counter 2 should be disabled. Otherwise this function call has
2594:Generated_Source\PSoC4/CyLFClk.c ****     * no effect.
2595:Generated_Source\PSoC4/CyLFClk.c ****     *
2596:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysTimerDisable() function with
2597:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
2598:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to three Timer source-cycles.
2599:Generated_Source\PSoC4/CyLFClk.c ****     *
2600:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2601:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetToggleBit(uint32 bits)
2602:Generated_Source\PSoC4/CyLFClk.c ****     {
 1713              		.loc 1 2602 0
 1714              		.cfi_startproc
 1715              	.LVL132:
 1716 0000 10B5     		push	{r4, lr}
 1717              		.cfi_def_cfa_offset 8
 1718              		.cfi_offset 4, -8
 1719              		.cfi_offset 14, -4
 1720 0002 041C     		mov	r4, r0
2603:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2604:Generated_Source\PSoC4/CyLFClk.c **** 
2605:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
 1721              		.loc 1 2605 0
 1722 0004 0220     		mov	r0, #2
 1723              	.LVL133:
 1724 0006 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 91


 1725              	.LVL134:
 1726 000a 0028     		cmp	r0, #0
 1727 000c 08D1     		bne	.L160
2606:Generated_Source\PSoC4/CyLFClk.c ****         {
2607:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
 1728              		.loc 1 2607 0
 1729 000e 054A     		ldr	r2, .L162
 1730 0010 1168     		ldr	r1, [r2]
 1731              	.LVL135:
2608:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_TIMER_CONFIG_BITS2_MASK << CY_SYS_TIMER_CO
 1732              		.loc 1 2608 0
 1733 0012 054B     		ldr	r3, .L162+4
 1734 0014 0B40     		and	r3, r1
 1735              	.LVL136:
2609:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_TIMER_CONFIG_BITS2_MASK) << CY_SYS_TIMER_CONFIG_BITS2
 1736              		.loc 1 2609 0
 1737 0016 1F21     		mov	r1, #31
 1738 0018 0C40     		and	r4, r1
 1739              	.LVL137:
 1740 001a 2406     		lsl	r4, r4, #24
 1741 001c 1C43     		orr	r4, r3
 1742              	.LVL138:
2610:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
 1743              		.loc 1 2610 0
 1744 001e 1460     		str	r4, [r2]
 1745              	.LVL139:
 1746              	.L160:
2611:Generated_Source\PSoC4/CyLFClk.c ****         }
2612:Generated_Source\PSoC4/CyLFClk.c ****     }
 1747              		.loc 1 2612 0
 1748              		@ sp needed
 1749 0020 10BD     		pop	{r4, pc}
 1750              	.L163:
 1751 0022 C046     		.align	2
 1752              	.L162:
 1753 0024 0C020640 		.word	1074135564
 1754 0028 FFFFFFE0 		.word	-520093697
 1755              		.cfi_endproc
 1756              	.LFE37:
 1757              		.size	CySysTimerSetToggleBit, .-CySysTimerSetToggleBit
 1758              		.section	.text.CySysTimerGetToggleBit,"ax",%progbits
 1759              		.align	2
 1760              		.global	CySysTimerGetToggleBit
 1761              		.code	16
 1762              		.thumb_func
 1763              		.type	CySysTimerGetToggleBit, %function
 1764              	CySysTimerGetToggleBit:
 1765              	.LFB38:
2613:Generated_Source\PSoC4/CyLFClk.c **** 
2614:Generated_Source\PSoC4/CyLFClk.c **** 
2615:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2616:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetToggleBit
2617:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2618:Generated_Source\PSoC4/CyLFClk.c ****     *
2619:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads which bit in Timer counter 2 is monitored for a toggle.
2620:Generated_Source\PSoC4/CyLFClk.c ****     *
2621:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 92


2622:Generated_Source\PSoC4/CyLFClk.c ****     *
2623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2624:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetToggleBit(void)
2625:Generated_Source\PSoC4/CyLFClk.c ****     {
 1766              		.loc 1 2625 0
 1767              		.cfi_startproc
2626:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> CY_SYS_TIMER_CONFIG_BITS2_POS) & CY_SYS_TIMER_CONFIG_
 1768              		.loc 1 2626 0
 1769 0000 024B     		ldr	r3, .L165
 1770 0002 1868     		ldr	r0, [r3]
 1771 0004 C000     		lsl	r0, r0, #3
 1772 0006 C00E     		lsr	r0, r0, #27
2627:Generated_Source\PSoC4/CyLFClk.c ****     }
 1773              		.loc 1 2627 0
 1774              		@ sp needed
 1775 0008 7047     		bx	lr
 1776              	.L166:
 1777 000a C046     		.align	2
 1778              	.L165:
 1779 000c 0C020640 		.word	1074135564
 1780              		.cfi_endproc
 1781              	.LFE38:
 1782              		.size	CySysTimerGetToggleBit, .-CySysTimerGetToggleBit
 1783              		.section	.text.CySysTimerGetMatch,"ax",%progbits
 1784              		.align	2
 1785              		.global	CySysTimerGetMatch
 1786              		.code	16
 1787              		.thumb_func
 1788              		.type	CySysTimerGetMatch, %function
 1789              	CySysTimerGetMatch:
 1790              	.LFB39:
2628:Generated_Source\PSoC4/CyLFClk.c **** 
2629:Generated_Source\PSoC4/CyLFClk.c **** 
2630:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2631:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMatch
2632:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2633:Generated_Source\PSoC4/CyLFClk.c ****     *
2634:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the Timer counter match comparison value.
2635:Generated_Source\PSoC4/CyLFClk.c ****     *
2636:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the DeepSleep Timer 
2637:Generated_Source\PSoC4/CyLFClk.c ****     * counter. The match values are not supported by counter 2.
2638:Generated_Source\PSoC4/CyLFClk.c ****     *
2639:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
2640:Generated_Source\PSoC4/CyLFClk.c ****     *
2641:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2642:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMatch(uint32 counterNum)
2643:Generated_Source\PSoC4/CyLFClk.c ****     {
 1791              		.loc 1 2643 0
 1792              		.cfi_startproc
 1793              	.LVL140:
 1794 0000 10B5     		push	{r4, lr}
 1795              		.cfi_def_cfa_offset 8
 1796              		.cfi_offset 4, -8
 1797              		.cfi_offset 14, -4
 1798 0002 041E     		sub	r4, r0, #0
2644:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
 1799              		.loc 1 2644 0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 93


 1800 0004 012C     		cmp	r4, #1
 1801 0006 02D9     		bls	.L168
 1802              		.loc 1 2644 0 is_stmt 0 discriminator 1
 1803 0008 0020     		mov	r0, #0
 1804              	.LVL141:
 1805 000a FFF7FEFF 		bl	CyHalt
 1806              	.LVL142:
 1807              	.L168:
2645:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2646:Generated_Source\PSoC4/CyLFClk.c **** 
2647:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WCO_WDT_MATCH_REG >> (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT)) &
 1808              		.loc 1 2647 0 is_stmt 1
 1809 000e 034B     		ldr	r3, .L169
 1810 0010 1B68     		ldr	r3, [r3]
 1811 0012 2401     		lsl	r4, r4, #4
 1812              	.LVL143:
 1813 0014 E340     		lsr	r3, r3, r4
 1814 0016 1804     		lsl	r0, r3, #16
 1815 0018 000C     		lsr	r0, r0, #16
2648:Generated_Source\PSoC4/CyLFClk.c ****                                                                   CY_SYS_TIMER_LOWER_16BITS_MASK);
2649:Generated_Source\PSoC4/CyLFClk.c ****     }
 1816              		.loc 1 2649 0
 1817              		@ sp needed
 1818 001a 10BD     		pop	{r4, pc}
 1819              	.L170:
 1820              		.align	2
 1821              	.L169:
 1822 001c 08020640 		.word	1074135560
 1823              		.cfi_endproc
 1824              	.LFE39:
 1825              		.size	CySysTimerGetMatch, .-CySysTimerGetMatch
 1826              		.section	.text.CySysTimerGetCount,"ax",%progbits
 1827              		.align	2
 1828              		.global	CySysTimerGetCount
 1829              		.code	16
 1830              		.thumb_func
 1831              		.type	CySysTimerGetCount, %function
 1832              	CySysTimerGetCount:
 1833              	.LFB40:
2650:Generated_Source\PSoC4/CyLFClk.c **** 
2651:Generated_Source\PSoC4/CyLFClk.c **** 
2652:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2653:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCount
2654:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2655:Generated_Source\PSoC4/CyLFClk.c ****     *
2656:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current DeepSleep Timer counter value.
2657:Generated_Source\PSoC4/CyLFClk.c ****     *
2658:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2659:Generated_Source\PSoC4/CyLFClk.c ****     *
2660:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value. Counter 0 and Counter 1 are 16 bit counters 
2661:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
2662:Generated_Source\PSoC4/CyLFClk.c ****     *
2663:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2664:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCount(uint32 counterNum)
2665:Generated_Source\PSoC4/CyLFClk.c ****     {
 1834              		.loc 1 2665 0
 1835              		.cfi_startproc
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 94


 1836              	.LVL144:
 1837 0000 08B5     		push	{r3, lr}
 1838              		.cfi_def_cfa_offset 8
 1839              		.cfi_offset 3, -8
 1840              		.cfi_offset 14, -4
 1841              	.LVL145:
2666:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
2667:Generated_Source\PSoC4/CyLFClk.c **** 
2668:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
 1842              		.loc 1 2668 0
 1843 0002 0128     		cmp	r0, #1
 1844 0004 09D0     		beq	.L173
 1845 0006 0028     		cmp	r0, #0
 1846 0008 02D0     		beq	.L174
 1847 000a 0228     		cmp	r0, #2
 1848 000c 09D0     		beq	.L175
 1849 000e 0BE0     		b	.L177
 1850              	.L174:
2669:Generated_Source\PSoC4/CyLFClk.c ****         {
2670:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 0 */
2671:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
2672:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRLOW_REG & CY_SYS_TIMER_LOWER_16BITS_MASK;
 1851              		.loc 1 2672 0
 1852 0010 084B     		ldr	r3, .L178
 1853 0012 1868     		ldr	r0, [r3]
 1854              	.LVL146:
 1855 0014 0004     		lsl	r0, r0, #16
 1856 0016 000C     		lsr	r0, r0, #16
 1857              	.LVL147:
2673:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1858              		.loc 1 2673 0
 1859 0018 0AE0     		b	.L176
 1860              	.LVL148:
 1861              	.L173:
2674:Generated_Source\PSoC4/CyLFClk.c **** 
2675:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 1 */
2676:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
2677:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WCO_WDT_CTRLOW_REG >> CY_SYS_TIMER_CNT_MATCH_SHIFT) & CY_SYS_TIM
 1862              		.loc 1 2677 0
 1863 001a 064B     		ldr	r3, .L178
 1864 001c 1868     		ldr	r0, [r3]
 1865              	.LVL149:
 1866 001e 000C     		lsr	r0, r0, #16
 1867              	.LVL150:
2678:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1868              		.loc 1 2678 0
 1869 0020 06E0     		b	.L176
 1870              	.LVL151:
 1871              	.L175:
2679:Generated_Source\PSoC4/CyLFClk.c **** 
2680:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 2 */
2681:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
2682:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRHIGH_REG;
 1872              		.loc 1 2682 0
 1873 0022 054B     		ldr	r3, .L178+4
 1874 0024 1868     		ldr	r0, [r3]
 1875              	.LVL152:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 95


2683:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1876              		.loc 1 2683 0
 1877 0026 03E0     		b	.L176
 1878              	.LVL153:
 1879              	.L177:
2684:Generated_Source\PSoC4/CyLFClk.c **** 
2685:Generated_Source\PSoC4/CyLFClk.c ****             default:
2686:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 1880              		.loc 1 2686 0 discriminator 1
 1881 0028 0020     		mov	r0, #0
 1882              	.LVL154:
 1883 002a FFF7FEFF 		bl	CyHalt
 1884              	.LVL155:
2666:Generated_Source\PSoC4/CyLFClk.c **** 
 1885              		.loc 1 2666 0 discriminator 1
 1886 002e 0020     		mov	r0, #0
 1887              	.LVL156:
 1888              	.L176:
2687:Generated_Source\PSoC4/CyLFClk.c ****             break;
2688:Generated_Source\PSoC4/CyLFClk.c ****         }
2689:Generated_Source\PSoC4/CyLFClk.c **** 
2690:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
2691:Generated_Source\PSoC4/CyLFClk.c ****     }
 1889              		.loc 1 2691 0
 1890              		@ sp needed
 1891 0030 08BD     		pop	{r3, pc}
 1892              	.L179:
 1893 0032 C046     		.align	2
 1894              	.L178:
 1895 0034 00020640 		.word	1074135552
 1896 0038 04020640 		.word	1074135556
 1897              		.cfi_endproc
 1898              	.LFE40:
 1899              		.size	CySysTimerGetCount, .-CySysTimerGetCount
 1900              		.section	.text.CySysTimerGetInterruptSource,"ax",%progbits
 1901              		.align	2
 1902              		.global	CySysTimerGetInterruptSource
 1903              		.code	16
 1904              		.thumb_func
 1905              		.type	CySysTimerGetInterruptSource, %function
 1906              	CySysTimerGetInterruptSource:
 1907              	.LFB41:
2692:Generated_Source\PSoC4/CyLFClk.c **** 
2693:Generated_Source\PSoC4/CyLFClk.c **** 
2694:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2695:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptSource
2696:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLFClk.c ****     *
2698:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2699:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the DeepSleep Timer counters interrupts that are 
2700:Generated_Source\PSoC4/CyLFClk.c ****     * currently set by the hardware, if a corresponding mode is selected.
2701:Generated_Source\PSoC4/CyLFClk.c ****     *
2702:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
2703:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER0_INT - Set interrupt for Counter 0
2704:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER1_INT - Set interrupt for Counter 1
2705:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER2_INT - Set interrupt for Counter 2
2706:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 96


2707:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2708:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetInterruptSource(void)
2709:Generated_Source\PSoC4/CyLFClk.c ****     {
 1908              		.loc 1 2709 0
 1909              		.cfi_startproc
2710:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONTROL_REG & (CY_SYS_TIMER0_INT | CY_SYS_TIMER1_INT | CY_SYS_TIMER2
 1910              		.loc 1 2710 0
 1911 0000 024B     		ldr	r3, .L181
 1912 0002 1868     		ldr	r0, [r3]
 1913 0004 024B     		ldr	r3, .L181+4
 1914 0006 1840     		and	r0, r3
2711:Generated_Source\PSoC4/CyLFClk.c ****     }
 1915              		.loc 1 2711 0
 1916              		@ sp needed
 1917 0008 7047     		bx	lr
 1918              	.L182:
 1919 000a C046     		.align	2
 1920              	.L181:
 1921 000c 10020640 		.word	1074135568
 1922 0010 04040400 		.word	263172
 1923              		.cfi_endproc
 1924              	.LFE41:
 1925              		.size	CySysTimerGetInterruptSource, .-CySysTimerGetInterruptSource
 1926              		.section	.text.CySysTimerClearInterrupt,"ax",%progbits
 1927              		.align	2
 1928              		.global	CySysTimerClearInterrupt
 1929              		.code	16
 1930              		.thumb_func
 1931              		.type	CySysTimerClearInterrupt, %function
 1932              	CySysTimerClearInterrupt:
 1933              	.LFB42:
2712:Generated_Source\PSoC4/CyLFClk.c **** 
2713:Generated_Source\PSoC4/CyLFClk.c **** 
2714:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2715:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerClearInterrupt
2716:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2717:Generated_Source\PSoC4/CyLFClk.c ****     *
2718:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Clears all the DeepSleep Timer counter interrupts set in the mask.
2719:Generated_Source\PSoC4/CyLFClk.c ****     *
2720:Generated_Source\PSoC4/CyLFClk.c ****     * All the Timer interrupts are to be cleared by the firmware, otherwise
2721:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
2722:Generated_Source\PSoC4/CyLFClk.c ****     *
2723:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2724:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_INT - Clear counter 0<br>
2725:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_INT - Clear counter 1<br>
2726:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_INT - Clear counter 2
2727:Generated_Source\PSoC4/CyLFClk.c ****     *
2728:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2729:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerClearInterrupt(uint32 counterMask)
2730:Generated_Source\PSoC4/CyLFClk.c ****     {
 1934              		.loc 1 2730 0
 1935              		.cfi_startproc
 1936              	.LVL157:
 1937 0000 10B5     		push	{r4, lr}
 1938              		.cfi_def_cfa_offset 8
 1939              		.cfi_offset 4, -8
 1940              		.cfi_offset 14, -4
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 97


 1941 0002 041C     		mov	r4, r0
2731:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
2732:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 1942              		.loc 1 2732 0
 1943 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1944              	.LVL158:
2733:Generated_Source\PSoC4/CyLFClk.c **** 
2734:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WCO_TIMER control register value */
2735:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_TIMER0_INT |
 1945              		.loc 1 2735 0
 1946 0008 064B     		ldr	r3, .L184
 1947 000a 221C     		mov	r2, r4
 1948 000c 1A40     		and	r2, r3
 1949              	.LVL159:
2736:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER1_INT |
2737:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER2_INT);
2738:Generated_Source\PSoC4/CyLFClk.c **** 
2739:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG = counterMask | (CY_SYS_WCO_WDT_CONTROL_REG & ~(CY_SYS_TIMER0_IN
 1950              		.loc 1 2739 0
 1951 000e 0649     		ldr	r1, .L184+4
 1952 0010 0C68     		ldr	r4, [r1]
 1953 0012 064B     		ldr	r3, .L184+8
 1954 0014 2340     		and	r3, r4
 1955 0016 1343     		orr	r3, r2
 1956 0018 0B60     		str	r3, [r1]
2740:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER1_INT |
2741:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER2_INT));
2742:Generated_Source\PSoC4/CyLFClk.c **** 
2743:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
2744:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
2745:Generated_Source\PSoC4/CyLFClk.c ****         */
2746:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WCO_WDT_CONTROL_REG;
 1957              		.loc 1 2746 0
 1958 001a 0B68     		ldr	r3, [r1]
2747:Generated_Source\PSoC4/CyLFClk.c **** 
2748:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 1959              		.loc 1 2748 0
 1960 001c FFF7FEFF 		bl	CyExitCriticalSection
 1961              	.LVL160:
2749:Generated_Source\PSoC4/CyLFClk.c ****     }
 1962              		.loc 1 2749 0
 1963              		@ sp needed
 1964 0020 10BD     		pop	{r4, pc}
 1965              	.L185:
 1966 0022 C046     		.align	2
 1967              	.L184:
 1968 0024 04040400 		.word	263172
 1969 0028 10020640 		.word	1074135568
 1970 002c FBFBFBFF 		.word	-263173
 1971              		.cfi_endproc
 1972              	.LFE42:
 1973              		.size	CySysTimerClearInterrupt, .-CySysTimerClearInterrupt
 1974              		.section	.text.CySysTimerSetInterruptCallback,"ax",%progbits
 1975              		.align	2
 1976              		.global	CySysTimerSetInterruptCallback
 1977              		.code	16
 1978              		.thumb_func
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 98


 1979              		.type	CySysTimerSetInterruptCallback, %function
 1980              	CySysTimerSetInterruptCallback:
 1981              	.LFB43:
2750:Generated_Source\PSoC4/CyLFClk.c **** 
2751:Generated_Source\PSoC4/CyLFClk.c **** 
2752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetInterruptCallback
2754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2755:Generated_Source\PSoC4/CyLFClk.c ****     *
2756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2757:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular DeepSleep Timer counter.
2758:Generated_Source\PSoC4/CyLFClk.c ****     *
2759:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the Timer interrupt.
2760:Generated_Source\PSoC4/CyLFClk.c ****     *
2761:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2762:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2763:Generated_Source\PSoC4/CyLFClk.c ****     *
2764:Generated_Source\PSoC4/CyLFClk.c ****     * \return  The pointer to the previous callback function. 
2765:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
2766:Generated_Source\PSoC4/CyLFClk.c ****     *
2767:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2768:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function)
2769:Generated_Source\PSoC4/CyLFClk.c ****     {
 1982              		.loc 1 2769 0
 1983              		.cfi_startproc
 1984              	.LVL161:
 1985 0000 08B5     		push	{r3, lr}
 1986              		.cfi_def_cfa_offset 8
 1987              		.cfi_offset 3, -8
 1988              		.cfi_offset 14, -4
 1989              	.LVL162:
2770:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback prevCallback = (void *)0;
2771:Generated_Source\PSoC4/CyLFClk.c **** 
2772:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
 1990              		.loc 1 2772 0
 1991 0002 0228     		cmp	r0, #2
 1992 0004 05D8     		bhi	.L187
2773:Generated_Source\PSoC4/CyLFClk.c ****         {
2774:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysTimerCallback[counterNum];
 1993              		.loc 1 2774 0
 1994 0006 8000     		lsl	r0, r0, #2
 1995              	.LVL163:
 1996 0008 044B     		ldr	r3, .L189
 1997 000a 1B18     		add	r3, r3, r0
 1998 000c 9868     		ldr	r0, [r3, #8]
 1999              	.LVL164:
2775:Generated_Source\PSoC4/CyLFClk.c ****             cySysTimerCallback[counterNum] = function;
 2000              		.loc 1 2775 0
 2001 000e 9960     		str	r1, [r3, #8]
 2002 0010 03E0     		b	.L188
 2003              	.LVL165:
 2004              	.L187:
2776:Generated_Source\PSoC4/CyLFClk.c ****         }
2777:Generated_Source\PSoC4/CyLFClk.c ****         else
2778:Generated_Source\PSoC4/CyLFClk.c ****         {
2779:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2005              		.loc 1 2779 0 discriminator 1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 99


 2006 0012 0020     		mov	r0, #0
 2007              	.LVL166:
 2008 0014 FFF7FEFF 		bl	CyHalt
 2009              	.LVL167:
2770:Generated_Source\PSoC4/CyLFClk.c **** 
 2010              		.loc 1 2770 0 discriminator 1
 2011 0018 0020     		mov	r0, #0
 2012              	.LVL168:
 2013              	.L188:
2780:Generated_Source\PSoC4/CyLFClk.c ****         }
2781:Generated_Source\PSoC4/CyLFClk.c **** 
2782:Generated_Source\PSoC4/CyLFClk.c ****         return((cyTimerCallback)prevCallback);
2783:Generated_Source\PSoC4/CyLFClk.c ****     }
 2014              		.loc 1 2783 0
 2015              		@ sp needed
 2016 001a 08BD     		pop	{r3, pc}
 2017              	.L190:
 2018              		.align	2
 2019              	.L189:
 2020 001c 00000000 		.word	.LANCHOR0
 2021              		.cfi_endproc
 2022              	.LFE43:
 2023              		.size	CySysTimerSetInterruptCallback, .-CySysTimerSetInterruptCallback
 2024              		.section	.text.CySysTimerGetInterruptCallback,"ax",%progbits
 2025              		.align	2
 2026              		.global	CySysTimerGetInterruptCallback
 2027              		.code	16
 2028              		.thumb_func
 2029              		.type	CySysTimerGetInterruptCallback, %function
 2030              	CySysTimerGetInterruptCallback:
 2031              	.LFB44:
2784:Generated_Source\PSoC4/CyLFClk.c **** 
2785:Generated_Source\PSoC4/CyLFClk.c **** 
2786:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2787:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptCallback
2788:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2789:Generated_Source\PSoC4/CyLFClk.c ****     *
2790:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Gets the ISR callback function for the particular DeepSleep Timer 
2791:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2792:Generated_Source\PSoC4/CyLFClk.c ****     *
2793:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2794:Generated_Source\PSoC4/CyLFClk.c ****     *
2795:Generated_Source\PSoC4/CyLFClk.c ****     * \return
2796:Generated_Source\PSoC4/CyLFClk.c ****     * The pointer to the callback function registered for a particular Timer by
2797:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
2798:Generated_Source\PSoC4/CyLFClk.c ****     *
2799:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2800:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum)
2801:Generated_Source\PSoC4/CyLFClk.c ****     {
 2032              		.loc 1 2801 0
 2033              		.cfi_startproc
 2034              	.LVL169:
 2035 0000 08B5     		push	{r3, lr}
 2036              		.cfi_def_cfa_offset 8
 2037              		.cfi_offset 3, -8
 2038              		.cfi_offset 14, -4
 2039              	.LVL170:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 100


2802:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback retCallback = (void *)0;
2803:Generated_Source\PSoC4/CyLFClk.c **** 
2804:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
 2040              		.loc 1 2804 0
 2041 0002 0228     		cmp	r0, #2
 2042 0004 04D8     		bhi	.L192
2805:Generated_Source\PSoC4/CyLFClk.c ****         {
2806:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyTimerCallback)cySysTimerCallback[counterNum];
 2043              		.loc 1 2806 0
 2044 0006 8000     		lsl	r0, r0, #2
 2045              	.LVL171:
 2046 0008 044B     		ldr	r3, .L194
 2047 000a 1818     		add	r0, r3, r0
 2048 000c 8068     		ldr	r0, [r0, #8]
 2049              	.LVL172:
 2050 000e 03E0     		b	.L193
 2051              	.LVL173:
 2052              	.L192:
2807:Generated_Source\PSoC4/CyLFClk.c ****         }
2808:Generated_Source\PSoC4/CyLFClk.c ****         else
2809:Generated_Source\PSoC4/CyLFClk.c ****         {
2810:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2053              		.loc 1 2810 0 discriminator 1
 2054 0010 0020     		mov	r0, #0
 2055              	.LVL174:
 2056 0012 FFF7FEFF 		bl	CyHalt
 2057              	.LVL175:
2802:Generated_Source\PSoC4/CyLFClk.c **** 
 2058              		.loc 1 2802 0 discriminator 1
 2059 0016 0020     		mov	r0, #0
 2060              	.LVL176:
 2061              	.L193:
2811:Generated_Source\PSoC4/CyLFClk.c ****         }
2812:Generated_Source\PSoC4/CyLFClk.c **** 
2813:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
2814:Generated_Source\PSoC4/CyLFClk.c ****     }
 2062              		.loc 1 2814 0
 2063              		@ sp needed
 2064 0018 08BD     		pop	{r3, pc}
 2065              	.L195:
 2066 001a C046     		.align	2
 2067              	.L194:
 2068 001c 00000000 		.word	.LANCHOR0
 2069              		.cfi_endproc
 2070              	.LFE44:
 2071              		.size	CySysTimerGetInterruptCallback, .-CySysTimerGetInterruptCallback
 2072              		.section	.text.CySysTimerEnableIsr,"ax",%progbits
 2073              		.align	2
 2074              		.global	CySysTimerEnableIsr
 2075              		.code	16
 2076              		.thumb_func
 2077              		.type	CySysTimerEnableIsr, %function
 2078              	CySysTimerEnableIsr:
 2079              	.LFB45:
2815:Generated_Source\PSoC4/CyLFClk.c **** 
2816:Generated_Source\PSoC4/CyLFClk.c **** 
2817:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 101


2818:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnableIsr
2819:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2820:Generated_Source\PSoC4/CyLFClk.c ****     *
2821:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the ISR callback servicing for the particular Timer counter
2822:Generated_Source\PSoC4/CyLFClk.c ****     *
2823:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2824:Generated_Source\PSoC4/CyLFClk.c ****     *
2825:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate Timer counter. For example value 1 
2826:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second Timer counter.
2827:Generated_Source\PSoC4/CyLFClk.c ****     *
2828:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2829:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnableIsr(uint32 counterNum)
2830:Generated_Source\PSoC4/CyLFClk.c ****     {
 2080              		.loc 1 2830 0
 2081              		.cfi_startproc
 2082              	.LVL177:
 2083 0000 08B5     		push	{r3, lr}
 2084              		.cfi_def_cfa_offset 8
 2085              		.cfi_offset 3, -8
 2086              		.cfi_offset 14, -4
2831:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
 2087              		.loc 1 2831 0
 2088 0002 0228     		cmp	r0, #2
 2089 0004 0BD8     		bhi	.L197
2832:Generated_Source\PSoC4/CyLFClk.c ****         {
2833:Generated_Source\PSoC4/CyLFClk.c ****             disableTimerServicedIsr &= ~counterTimerIntMaskTbl[counterNum];
 2090              		.loc 1 2833 0
 2091 0006 8000     		lsl	r0, r0, #2
 2092              	.LVL178:
 2093 0008 074B     		ldr	r3, .L199
 2094 000a C158     		ldr	r1, [r0, r3]
 2095 000c 074B     		ldr	r3, .L199+4
 2096 000e 5A69     		ldr	r2, [r3, #20]
 2097 0010 8A43     		bic	r2, r1
 2098 0012 5A61     		str	r2, [r3, #20]
2834:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask |= counterTimerIntMaskTbl[counterNum];
 2099              		.loc 1 2834 0
 2100 0014 064A     		ldr	r2, .L199+8
 2101 0016 1368     		ldr	r3, [r2]
 2102 0018 0B43     		orr	r3, r1
 2103 001a 1360     		str	r3, [r2]
 2104 001c 02E0     		b	.L196
 2105              	.LVL179:
 2106              	.L197:
2835:Generated_Source\PSoC4/CyLFClk.c ****         }
2836:Generated_Source\PSoC4/CyLFClk.c ****         else
2837:Generated_Source\PSoC4/CyLFClk.c ****         {
2838:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2107              		.loc 1 2838 0 discriminator 1
 2108 001e 0020     		mov	r0, #0
 2109              	.LVL180:
 2110 0020 FFF7FEFF 		bl	CyHalt
 2111              	.LVL181:
 2112              	.L196:
2839:Generated_Source\PSoC4/CyLFClk.c ****         }
2840:Generated_Source\PSoC4/CyLFClk.c ****     }
 2113              		.loc 1 2840 0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 102


 2114              		@ sp needed
 2115 0024 08BD     		pop	{r3, pc}
 2116              	.L200:
 2117 0026 C046     		.align	2
 2118              	.L199:
 2119 0028 00000000 		.word	.LANCHOR1
 2120 002c 00000000 		.word	.LANCHOR0
 2121 0030 00000000 		.word	.LANCHOR2
 2122              		.cfi_endproc
 2123              	.LFE45:
 2124              		.size	CySysTimerEnableIsr, .-CySysTimerEnableIsr
 2125              		.section	.text.CySysTimerDisableIsr,"ax",%progbits
 2126              		.align	2
 2127              		.global	CySysTimerDisableIsr
 2128              		.code	16
 2129              		.thumb_func
 2130              		.type	CySysTimerDisableIsr, %function
 2131              	CySysTimerDisableIsr:
 2132              	.LFB46:
2841:Generated_Source\PSoC4/CyLFClk.c **** 
2842:Generated_Source\PSoC4/CyLFClk.c **** 
2843:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2844:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisableIsr
2845:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2846:Generated_Source\PSoC4/CyLFClk.c ****     *
2847:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the ISR callback servicing for the particular Timer counter
2848:Generated_Source\PSoC4/CyLFClk.c ****     *
2849:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2850:Generated_Source\PSoC4/CyLFClk.c ****     *
2851:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2852:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisableIsr(uint32 counterNum)
2853:Generated_Source\PSoC4/CyLFClk.c ****     {
 2133              		.loc 1 2853 0
 2134              		.cfi_startproc
 2135              	.LVL182:
 2136 0000 08B5     		push	{r3, lr}
 2137              		.cfi_def_cfa_offset 8
 2138              		.cfi_offset 3, -8
 2139              		.cfi_offset 14, -4
2854:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
 2140              		.loc 1 2854 0
 2141 0002 0228     		cmp	r0, #2
 2142 0004 07D8     		bhi	.L202
2855:Generated_Source\PSoC4/CyLFClk.c ****         {
2856:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask &= ~counterTimerIntMaskTbl[counterNum];
 2143              		.loc 1 2856 0
 2144 0006 8000     		lsl	r0, r0, #2
 2145              	.LVL183:
 2146 0008 054B     		ldr	r3, .L204
 2147 000a C158     		ldr	r1, [r0, r3]
 2148 000c 054A     		ldr	r2, .L204+4
 2149 000e 1368     		ldr	r3, [r2]
 2150 0010 8B43     		bic	r3, r1
 2151 0012 1360     		str	r3, [r2]
 2152 0014 02E0     		b	.L201
 2153              	.LVL184:
 2154              	.L202:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 103


2857:Generated_Source\PSoC4/CyLFClk.c ****         }
2858:Generated_Source\PSoC4/CyLFClk.c ****         else
2859:Generated_Source\PSoC4/CyLFClk.c ****         {
2860:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2155              		.loc 1 2860 0 discriminator 1
 2156 0016 0020     		mov	r0, #0
 2157              	.LVL185:
 2158 0018 FFF7FEFF 		bl	CyHalt
 2159              	.LVL186:
 2160              	.L201:
2861:Generated_Source\PSoC4/CyLFClk.c ****         }
2862:Generated_Source\PSoC4/CyLFClk.c ****     }
 2161              		.loc 1 2862 0
 2162              		@ sp needed
 2163 001c 08BD     		pop	{r3, pc}
 2164              	.L205:
 2165 001e C046     		.align	2
 2166              	.L204:
 2167 0020 00000000 		.word	.LANCHOR1
 2168 0024 00000000 		.word	.LANCHOR2
 2169              		.cfi_endproc
 2170              	.LFE46:
 2171              		.size	CySysTimerDisableIsr, .-CySysTimerDisableIsr
 2172              		.section	.text.CySysTimerIsr,"ax",%progbits
 2173              		.align	2
 2174              		.global	CySysTimerIsr
 2175              		.code	16
 2176              		.thumb_func
 2177              		.type	CySysTimerIsr, %function
 2178              	CySysTimerIsr:
 2179              	.LFB47:
2863:Generated_Source\PSoC4/CyLFClk.c **** 
2864:Generated_Source\PSoC4/CyLFClk.c **** 
2865:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2866:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerIsr
2867:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2868:Generated_Source\PSoC4/CyLFClk.c ****     *
2869:Generated_Source\PSoC4/CyLFClk.c ****     * \brief This is the handler of the DeepSleep Timer interrupt in CPU NVIC.
2870:Generated_Source\PSoC4/CyLFClk.c ****     *
2871:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which Timer triggered in the interrupt and calls the 
2872:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
2873:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() API.
2874:Generated_Source\PSoC4/CyLFClk.c ****     *
2875:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
2876:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
2877:Generated_Source\PSoC4/CyLFClk.c ****     *
2878:Generated_Source\PSoC4/CyLFClk.c ****     * \details This function clears the DeepSleep Timer interrupt every time when 
2879:Generated_Source\PSoC4/CyLFClk.c ****     * it is called.
2880:Generated_Source\PSoC4/CyLFClk.c ****     *
2881:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2882:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerIsr(void)
2883:Generated_Source\PSoC4/CyLFClk.c ****     {
 2180              		.loc 1 2883 0
 2181              		.cfi_startproc
 2182 0000 10B5     		push	{r4, lr}
 2183              		.cfi_def_cfa_offset 8
 2184              		.cfi_offset 4, -8
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 104


 2185              		.cfi_offset 14, -4
2884:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER0_INT & CY_SYS_WCO_WDT_CONTROL_REG))
 2186              		.loc 1 2884 0
 2187 0002 244B     		ldr	r3, .L213
 2188 0004 1B68     		ldr	r3, [r3]
 2189 0006 5B07     		lsl	r3, r3, #29
 2190 0008 15D5     		bpl	.L207
2885:Generated_Source\PSoC4/CyLFClk.c ****         {
2886:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER0_INT & timerIsrMask))
 2191              		.loc 1 2886 0
 2192 000a 234B     		ldr	r3, .L213+4
 2193 000c 1B68     		ldr	r3, [r3]
 2194 000e 5B07     		lsl	r3, r3, #29
 2195 0010 0ED5     		bpl	.L208
2887:Generated_Source\PSoC4/CyLFClk.c ****             {
2888:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER0_INT);
 2196              		.loc 1 2888 0
 2197 0012 224B     		ldr	r3, .L213+8
 2198 0014 5969     		ldr	r1, [r3, #20]
 2199 0016 0420     		mov	r0, #4
 2200 0018 0140     		and	r1, r0
 2201 001a 1F4C     		ldr	r4, .L213+4
 2202 001c 2268     		ldr	r2, [r4]
 2203 001e 8A43     		bic	r2, r1
 2204 0020 2260     		str	r2, [r4]
2889:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER0_INT;
 2205              		.loc 1 2889 0
 2206 0022 5A69     		ldr	r2, [r3, #20]
 2207 0024 8243     		bic	r2, r0
 2208 0026 5A61     		str	r2, [r3, #20]
2890:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER0] != (void *) 0)
 2209              		.loc 1 2890 0
 2210 0028 9B68     		ldr	r3, [r3, #8]
 2211 002a 002B     		cmp	r3, #0
 2212 002c 00D0     		beq	.L208
2891:Generated_Source\PSoC4/CyLFClk.c ****                 {
2892:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER0])();
 2213              		.loc 1 2892 0
 2214 002e 9847     		blx	r3
 2215              	.LVL187:
 2216              	.L208:
2893:Generated_Source\PSoC4/CyLFClk.c ****                 }
2894:Generated_Source\PSoC4/CyLFClk.c ****             }
2895:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER0_INT);
 2217              		.loc 1 2895 0
 2218 0030 0420     		mov	r0, #4
 2219 0032 FFF7FEFF 		bl	CySysTimerClearInterrupt
 2220              	.LVL188:
 2221              	.L207:
2896:Generated_Source\PSoC4/CyLFClk.c ****         }
2897:Generated_Source\PSoC4/CyLFClk.c **** 
2898:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER1_INT & CY_SYS_WCO_WDT_CONTROL_REG))
 2222              		.loc 1 2898 0
 2223 0036 174B     		ldr	r3, .L213
 2224 0038 1B68     		ldr	r3, [r3]
 2225 003a 5B05     		lsl	r3, r3, #21
 2226 003c 18D5     		bpl	.L209
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 105


2899:Generated_Source\PSoC4/CyLFClk.c ****         {
2900:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER1_INT & timerIsrMask))
 2227              		.loc 1 2900 0
 2228 003e 164B     		ldr	r3, .L213+4
 2229 0040 1B68     		ldr	r3, [r3]
 2230 0042 5B05     		lsl	r3, r3, #21
 2231 0044 10D5     		bpl	.L210
2901:Generated_Source\PSoC4/CyLFClk.c ****             {
2902:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER1_INT);
 2232              		.loc 1 2902 0
 2233 0046 154B     		ldr	r3, .L213+8
 2234 0048 5969     		ldr	r1, [r3, #20]
 2235 004a 8022     		mov	r2, #128
 2236 004c D200     		lsl	r2, r2, #3
 2237 004e 1140     		and	r1, r2
 2238 0050 1148     		ldr	r0, .L213+4
 2239 0052 0268     		ldr	r2, [r0]
 2240 0054 8A43     		bic	r2, r1
 2241 0056 0260     		str	r2, [r0]
2903:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER1_INT;
 2242              		.loc 1 2903 0
 2243 0058 5969     		ldr	r1, [r3, #20]
 2244 005a 114A     		ldr	r2, .L213+12
 2245 005c 0A40     		and	r2, r1
 2246 005e 5A61     		str	r2, [r3, #20]
2904:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER1] != (void *) 0)
 2247              		.loc 1 2904 0
 2248 0060 DB68     		ldr	r3, [r3, #12]
 2249 0062 002B     		cmp	r3, #0
 2250 0064 00D0     		beq	.L210
2905:Generated_Source\PSoC4/CyLFClk.c ****                 {
2906:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER1])();
 2251              		.loc 1 2906 0
 2252 0066 9847     		blx	r3
 2253              	.LVL189:
 2254              	.L210:
2907:Generated_Source\PSoC4/CyLFClk.c ****                 }
2908:Generated_Source\PSoC4/CyLFClk.c ****             }
2909:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER1_INT);
 2255              		.loc 1 2909 0
 2256 0068 8020     		mov	r0, #128
 2257 006a C000     		lsl	r0, r0, #3
 2258 006c FFF7FEFF 		bl	CySysTimerClearInterrupt
 2259              	.LVL190:
 2260              	.L209:
2910:Generated_Source\PSoC4/CyLFClk.c ****         }
2911:Generated_Source\PSoC4/CyLFClk.c **** 
2912:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER2_INT & CY_SYS_WCO_WDT_CONTROL_REG))
 2261              		.loc 1 2912 0
 2262 0070 084B     		ldr	r3, .L213
 2263 0072 1B68     		ldr	r3, [r3]
 2264 0074 5B03     		lsl	r3, r3, #13
 2265 0076 0CD5     		bpl	.L206
2913:Generated_Source\PSoC4/CyLFClk.c ****         {
2914:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER2_INT & timerIsrMask))
 2266              		.loc 1 2914 0
 2267 0078 074B     		ldr	r3, .L213+4
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 106


 2268 007a 1B68     		ldr	r3, [r3]
 2269 007c 5B03     		lsl	r3, r3, #13
 2270 007e 04D5     		bpl	.L212
2915:Generated_Source\PSoC4/CyLFClk.c ****             {
2916:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER2] != (void *) 0)
 2271              		.loc 1 2916 0
 2272 0080 064B     		ldr	r3, .L213+8
 2273 0082 1B69     		ldr	r3, [r3, #16]
 2274 0084 002B     		cmp	r3, #0
 2275 0086 00D0     		beq	.L212
2917:Generated_Source\PSoC4/CyLFClk.c ****                 {
2918:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER2])();
 2276              		.loc 1 2918 0
 2277 0088 9847     		blx	r3
 2278              	.LVL191:
 2279              	.L212:
2919:Generated_Source\PSoC4/CyLFClk.c ****                 }
2920:Generated_Source\PSoC4/CyLFClk.c ****             }
2921:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER2_INT);
 2280              		.loc 1 2921 0
 2281 008a 8020     		mov	r0, #128
 2282 008c C002     		lsl	r0, r0, #11
 2283 008e FFF7FEFF 		bl	CySysTimerClearInterrupt
 2284              	.LVL192:
 2285              	.L206:
2922:Generated_Source\PSoC4/CyLFClk.c ****         }
2923:Generated_Source\PSoC4/CyLFClk.c ****     }
 2286              		.loc 1 2923 0
 2287              		@ sp needed
 2288 0092 10BD     		pop	{r4, pc}
 2289              	.L214:
 2290              		.align	2
 2291              	.L213:
 2292 0094 10020640 		.word	1074135568
 2293 0098 00000000 		.word	.LANCHOR2
 2294 009c 00000000 		.word	.LANCHOR0
 2295 00a0 FFFBFFFF 		.word	-1025
 2296              		.cfi_endproc
 2297              	.LFE47:
 2298              		.size	CySysTimerIsr, .-CySysTimerIsr
 2299              		.section	.text.CySysTimerResetCounters,"ax",%progbits
 2300              		.align	2
 2301              		.global	CySysTimerResetCounters
 2302              		.code	16
 2303              		.thumb_func
 2304              		.type	CySysTimerResetCounters, %function
 2305              	CySysTimerResetCounters:
 2306              	.LFB48:
2924:Generated_Source\PSoC4/CyLFClk.c **** 
2925:Generated_Source\PSoC4/CyLFClk.c **** 
2926:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2927:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerResetCounters
2928:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2929:Generated_Source\PSoC4/CyLFClk.c ****     *
2930:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Resets all the Timer counters set in the mask.
2931:Generated_Source\PSoC4/CyLFClk.c ****     *
2932:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 107


2933:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER0_RESET - Reset the Counter 0<br>
2934:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_RESET - Reset the Counter 1<br>
2935:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_RESET - Reset the Counter 2
2936:Generated_Source\PSoC4/CyLFClk.c ****     *
2937:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2938:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
2939:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 DeepSleep Timer source-cycles. DeepSleep Timer source must be 
2940:Generated_Source\PSoC4/CyLFClk.c ****     * enabled. Otherwise, the function will never exit.
2941:Generated_Source\PSoC4/CyLFClk.c ****     *
2942:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2943:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerResetCounters(uint32 countersMask)
2944:Generated_Source\PSoC4/CyLFClk.c ****     {
 2307              		.loc 1 2944 0
 2308              		.cfi_startproc
 2309              	.LVL193:
2945:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new Timer reset value */
2946:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= (countersMask & CY_SYS_TIMER_RESET);
 2310              		.loc 1 2946 0
 2311 0000 054A     		ldr	r2, .L217
 2312 0002 1168     		ldr	r1, [r2]
 2313 0004 054B     		ldr	r3, .L217+4
 2314 0006 1840     		and	r0, r3
 2315              	.LVL194:
 2316 0008 0843     		orr	r0, r1
 2317 000a 1060     		str	r0, [r2]
 2318              	.L216:
2947:Generated_Source\PSoC4/CyLFClk.c **** 
2948:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WCO_WDT_CONTROL_REG & CY_SYS_TIMER_RESET))
 2319              		.loc 1 2948 0 discriminator 1
 2320 000c 024B     		ldr	r3, .L217
 2321 000e 1A68     		ldr	r2, [r3]
 2322 0010 024B     		ldr	r3, .L217+4
 2323 0012 1A42     		tst	r2, r3
 2324 0014 FAD1     		bne	.L216
2949:Generated_Source\PSoC4/CyLFClk.c ****         {
2950:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
2951:Generated_Source\PSoC4/CyLFClk.c ****         }
2952:Generated_Source\PSoC4/CyLFClk.c ****     }
 2325              		.loc 1 2952 0
 2326              		@ sp needed
 2327 0016 7047     		bx	lr
 2328              	.L218:
 2329              		.align	2
 2330              	.L217:
 2331 0018 10020640 		.word	1074135568
 2332 001c 08080800 		.word	526344
 2333              		.cfi_endproc
 2334              	.LFE48:
 2335              		.size	CySysTimerResetCounters, .-CySysTimerResetCounters
 2336              		.section	.text.CySysTimerDelayUntilMatch,"ax",%progbits
 2337              		.align	2
 2338              		.global	CySysTimerDelayUntilMatch
 2339              		.code	16
 2340              		.thumb_func
 2341              		.type	CySysTimerDelayUntilMatch, %function
 2342              	CySysTimerDelayUntilMatch:
 2343              	.LFB50:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 108


2953:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
2954:Generated_Source\PSoC4/CyLFClk.c **** 
2955:Generated_Source\PSoC4/CyLFClk.c **** 
2956:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 || (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT))
2957:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2958:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelay
2959:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2960:Generated_Source\PSoC4/CyLFClk.c ****     *
2961:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2962:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified in the LFCLK clock ticks.
2963:Generated_Source\PSoC4/CyLFClk.c ****     *
2964:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / 
2965:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PRoC BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to 
2966:Generated_Source\PSoC4/CyLFClk.c ****     * use WDT. Also this API is available to use for PSoC4100S and / PSoC Analog 
2967:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices to use DeepSleep Timers.
2968:Generated_Source\PSoC4/CyLFClk.c ****     *
2969:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
2970:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
2971:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
2972:Generated_Source\PSoC4/CyLFClk.c ****     *
2973:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
2974:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
2975:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
2976:Generated_Source\PSoC4/CyLFClk.c ****     *
2977:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
2978:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
2979:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
2980:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
2981:Generated_Source\PSoC4/CyLFClk.c ****     *
2982:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
2983:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
2984:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
2985:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
2986:Generated_Source\PSoC4/CyLFClk.c ****     * counter or DeepSleep Timer counter.
2987:Generated_Source\PSoC4/CyLFClk.c ****     *
2988:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
2989:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
2990:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
2991:Generated_Source\PSoC4/CyLFClk.c ****     *
2992:Generated_Source\PSoC4/CyLFClk.c ****     * Or the corresponding DeepSleep Timer counter should be configured to match the
2993:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
2994:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
2995:Generated_Source\PSoC4/CyLFClk.c ****     *
2996:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
2997:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
2998:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
2999:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3000:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3001:Generated_Source\PSoC4/CyLFClk.c ****     *
3002:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3003:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3004:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3005:Generated_Source\PSoC4/CyLFClk.c ****     *
3006:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3007:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3008:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3009:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 109


3010:Generated_Source\PSoC4/CyLFClk.c ****     *
3011:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3012:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() for DeepSleep Timer function to register 
3013:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3014:Generated_Source\PSoC4/CyLFClk.c ****     *
3015:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3016:Generated_Source\PSoC4/CyLFClk.c ****     *
3017:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the counter 
3018:Generated_Source\PSoC4/CyLFClk.c ****     * (Timer0 or Timer1).
3019:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType
3020:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_WAIT - "WAIT" mode. <br>
3021:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3022:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks 
3023:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3024:Generated_Source\PSoC4/CyLFClk.c ****     *
3025:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3026:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3027:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT or DeepSleep Timer counter. Servicing of this ISR 
3028:Generated_Source\PSoC4/CyLFClk.c ****     * callback will be disabled after the expiration of the delay time.
3029:Generated_Source\PSoC4/CyLFClk.c ****     *
3030:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3031:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay)
3032:Generated_Source\PSoC4/CyLFClk.c ****     {
3033:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
3034:Generated_Source\PSoC4/CyLFClk.c ****         uint32 matchValue;
3035:Generated_Source\PSoC4/CyLFClk.c **** 
3036:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3037:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
3038:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (delay <= CY_SYS_UINT16_MAX_VAL))
3039:Generated_Source\PSoC4/CyLFClk.c ****             {
3040:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysWdtGetCount(counterNum);
3041:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
3042:Generated_Source\PSoC4/CyLFClk.c **** 
3043:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
3044:Generated_Source\PSoC4/CyLFClk.c ****             }
3045:Generated_Source\PSoC4/CyLFClk.c ****             else
3046:Generated_Source\PSoC4/CyLFClk.c ****             {
3047:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3048:Generated_Source\PSoC4/CyLFClk.c ****             }
3049:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
3050:Generated_Source\PSoC4/CyLFClk.c **** 
3051:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3052:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) && 
3053:Generated_Source\PSoC4/CyLFClk.c ****                                                             (delay <= CY_SYS_UINT16_MAX_VAL))
3054:Generated_Source\PSoC4/CyLFClk.c ****             {
3055:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysTimerGetCount(counterNum);
3056:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
3057:Generated_Source\PSoC4/CyLFClk.c **** 
3058:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
3059:Generated_Source\PSoC4/CyLFClk.c ****             }
3060:Generated_Source\PSoC4/CyLFClk.c ****             else
3061:Generated_Source\PSoC4/CyLFClk.c ****             {
3062:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3063:Generated_Source\PSoC4/CyLFClk.c ****             }
3064:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN) */
3065:Generated_Source\PSoC4/CyLFClk.c ****     }
3066:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 110


3067:Generated_Source\PSoC4/CyLFClk.c **** 
3068:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
3069:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelayUntilMatch
3070:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
3071:Generated_Source\PSoC4/CyLFClk.c ****     *
3072:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
3073:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of WDT or DeepSleep
3074:Generated_Source\PSoC4/CyLFClk.c ****     * Timer clock source ticks between WDT or DeepSleep Timer current value and 
3075:Generated_Source\PSoC4/CyLFClk.c ****     * match" value.
3076:Generated_Source\PSoC4/CyLFClk.c ****     *
3077:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PRoC BLE / PSoC 4100 BLE /
3078:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to use WDT.
3079:Generated_Source\PSoC4/CyLFClk.c ****     * Also this API is available to use for PSoC4100S / Analog Coprocessor devices
3080:Generated_Source\PSoC4/CyLFClk.c ****     * to use DeepSleep Timers.
3081:Generated_Source\PSoC4/CyLFClk.c ****     * 
3082:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3083:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3084:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of LFCLK ticks
3085:Generated_Source\PSoC4/CyLFClk.c ****     * between the specified WDT counter's current value and the "match"
3086:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current WDT counter value can 
3087:Generated_Source\PSoC4/CyLFClk.c ****     * be obtained using the CySysWdtGetCount() function.
3088:Generated_Source\PSoC4/CyLFClk.c ****     *
3089:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC4100 S and Analog Coprocessor devices:
3090:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of DeepSleep Timer 
3091:Generated_Source\PSoC4/CyLFClk.c ****     * input clock ticks for Timer0/Timer1 counter's current value and the "match" 
3092:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current DeepSleep Timer counter
3093:Generated_Source\PSoC4/CyLFClk.c ****     * value can be obtained using the CySysWdtGetCount() function.
3094:Generated_Source\PSoC4/CyLFClk.c ****     *
3095:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3096:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3097:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
3098:Generated_Source\PSoC4/CyLFClk.c ****     *
3099:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC PSoC 4100S / PSoC Analog Coprocessor devices:
3100:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
3101:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
3102:Generated_Source\PSoC4/CyLFClk.c ****     *
3103:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
3104:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
3105:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
3106:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
3107:Generated_Source\PSoC4/CyLFClk.c ****     *
3108:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
3109:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
3110:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
3111:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
3112:Generated_Source\PSoC4/CyLFClk.c ****     * or DeepSleep Timer counter.
3113:Generated_Source\PSoC4/CyLFClk.c ****     *
3114:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3115:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M/PSoC 4200M devices:
3116:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
3117:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
3118:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
3119:Generated_Source\PSoC4/CyLFClk.c ****     *
3120:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
3121:Generated_Source\PSoC4/CyLFClk.c ****     * Corresponding DeepSleep Timer counter should be configured to match the 
3122:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
3123:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 111


3124:Generated_Source\PSoC4/CyLFClk.c ****     *
3125:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
3126:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
3127:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
3128:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3129:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3130:Generated_Source\PSoC4/CyLFClk.c ****     *
3131:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3132:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3133:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3134:Generated_Source\PSoC4/CyLFClk.c ****     *
3135:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3136:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3137:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3138:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3139:Generated_Source\PSoC4/CyLFClk.c ****     *
3140:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3141:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetInterruptCallback() for DeepSleep Timer function to register 
3142:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3143:Generated_Source\PSoC4/CyLFClk.c ****     *
3144:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3145:Generated_Source\PSoC4/CyLFClk.c ****     *
3146:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the WDT or DeepSleep 
3147:Generated_Source\PSoC4/CyLFClk.c ****     * Timer.
3148:Generated_Source\PSoC4/CyLFClk.c ****     * counter (Timer0 or Timer1).
3149:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType  CY_SYS_TIMER_WAIT - "WAIT" mode.<br>
3150:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3151:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks
3152:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3153:Generated_Source\PSoC4/CyLFClk.c ****     *
3154:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3155:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3156:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT counter. Servicing of this ISR callback will be
3157:Generated_Source\PSoC4/CyLFClk.c ****     * disabled after the expiration of the delay time.
3158:Generated_Source\PSoC4/CyLFClk.c ****     *
3159:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3160:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32
3161:Generated_Source\PSoC4/CyLFClk.c ****     {
 2344              		.loc 1 3161 0
 2345              		.cfi_startproc
 2346              	.LVL195:
 2347 0000 70B5     		push	{r4, r5, r6, lr}
 2348              		.cfi_def_cfa_offset 16
 2349              		.cfi_offset 4, -16
 2350              		.cfi_offset 5, -12
 2351              		.cfi_offset 6, -8
 2352              		.cfi_offset 14, -4
 2353 0002 041C     		mov	r4, r0
 2354 0004 0E1C     		mov	r6, r1
 2355 0006 151C     		mov	r5, r2
3162:Generated_Source\PSoC4/CyLFClk.c ****         uint32 tmpValue;
3163:Generated_Source\PSoC4/CyLFClk.c **** 
3164:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3165:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
3166:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (match <= CY_SYS_UINT16_MAX_VAL))
3167:Generated_Source\PSoC4/CyLFClk.c ****             {
3168:Generated_Source\PSoC4/CyLFClk.c ****                 if(delayType == CY_SYS_TIMER_WAIT)
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 112


3169:Generated_Source\PSoC4/CyLFClk.c ****                 {
3170:Generated_Source\PSoC4/CyLFClk.c ****                     do
3171:Generated_Source\PSoC4/CyLFClk.c ****                     {
3172:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
3173:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue > match);
3174:Generated_Source\PSoC4/CyLFClk.c **** 
3175:Generated_Source\PSoC4/CyLFClk.c ****                     do
3176:Generated_Source\PSoC4/CyLFClk.c ****                     {
3177:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
3178:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue < match);
3179:Generated_Source\PSoC4/CyLFClk.c ****                 }
3180:Generated_Source\PSoC4/CyLFClk.c ****                 else
3181:Generated_Source\PSoC4/CyLFClk.c ****                 {
3182:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = counterIntMaskTbl[counterNum];
3183:Generated_Source\PSoC4/CyLFClk.c ****                     CySysWdtSetMatch(counterNum, match);
3184:Generated_Source\PSoC4/CyLFClk.c **** 
3185:Generated_Source\PSoC4/CyLFClk.c ****                     disableServicedIsr  |= tmpValue;
3186:Generated_Source\PSoC4/CyLFClk.c ****                     wdtIsrMask |= tmpValue;
3187:Generated_Source\PSoC4/CyLFClk.c ****                 }
3188:Generated_Source\PSoC4/CyLFClk.c ****             }
3189:Generated_Source\PSoC4/CyLFClk.c ****             else
3190:Generated_Source\PSoC4/CyLFClk.c ****             {
3191:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3192:Generated_Source\PSoC4/CyLFClk.c ****             }
3193:Generated_Source\PSoC4/CyLFClk.c **** 
3194:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */  
3195:Generated_Source\PSoC4/CyLFClk.c **** 
3196:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3197:Generated_Source\PSoC4/CyLFClk.c ****         if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) &&
 2356              		.loc 1 3197 0
 2357 0008 0128     		cmp	r0, #1
 2358 000a 23D8     		bhi	.L220
 2359              		.loc 1 3197 0 is_stmt 0 discriminator 1
 2360 000c FFF7FEFF 		bl	CySysTimerGetClearOnMatch
 2361              	.LVL196:
 2362 0010 0028     		cmp	r0, #0
 2363 0012 1FD1     		bne	.L220
 2364              		.loc 1 3197 0 discriminator 2
 2365 0014 114B     		ldr	r3, .L225
 2366 0016 9D42     		cmp	r5, r3
 2367 0018 1CD8     		bhi	.L220
3198:Generated_Source\PSoC4/CyLFClk.c ****                                                         (match <= CY_SYS_UINT16_MAX_VAL))
3199:Generated_Source\PSoC4/CyLFClk.c ****         {
3200:Generated_Source\PSoC4/CyLFClk.c ****             if(delayType == CY_SYS_TIMER_WAIT)
 2368              		.loc 1 3200 0 is_stmt 1
 2369 001a 002E     		cmp	r6, #0
 2370 001c 0AD1     		bne	.L221
 2371              	.L222:
3201:Generated_Source\PSoC4/CyLFClk.c ****             {
3202:Generated_Source\PSoC4/CyLFClk.c ****                 do
3203:Generated_Source\PSoC4/CyLFClk.c ****                 {
3204:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
 2372              		.loc 1 3204 0 discriminator 1
 2373 001e 201C     		mov	r0, r4
 2374 0020 FFF7FEFF 		bl	CySysTimerGetCount
 2375              	.LVL197:
3205:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue > match);
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 113


 2376              		.loc 1 3205 0 discriminator 1
 2377 0024 A842     		cmp	r0, r5
 2378 0026 FAD8     		bhi	.L222
 2379              	.L223:
3206:Generated_Source\PSoC4/CyLFClk.c **** 
3207:Generated_Source\PSoC4/CyLFClk.c ****                 do
3208:Generated_Source\PSoC4/CyLFClk.c ****                 {
3209:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
 2380              		.loc 1 3209 0 discriminator 1
 2381 0028 201C     		mov	r0, r4
 2382              	.LVL198:
 2383 002a FFF7FEFF 		bl	CySysTimerGetCount
 2384              	.LVL199:
3210:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue < match);
 2385              		.loc 1 3210 0 discriminator 1
 2386 002e A842     		cmp	r0, r5
 2387 0030 FAD3     		bcc	.L223
 2388 0032 12E0     		b	.L219
 2389              	.LVL200:
 2390              	.L221:
3211:Generated_Source\PSoC4/CyLFClk.c ****             }
3212:Generated_Source\PSoC4/CyLFClk.c ****             else
3213:Generated_Source\PSoC4/CyLFClk.c ****             {
3214:Generated_Source\PSoC4/CyLFClk.c ****                 tmpValue = counterTimerIntMaskTbl[counterNum];
 2391              		.loc 1 3214 0
 2392 0034 A200     		lsl	r2, r4, #2
 2393 0036 0A4B     		ldr	r3, .L225+4
 2394 0038 D658     		ldr	r6, [r2, r3]
 2395              	.LVL201:
3215:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerSetMatch(counterNum, match);
 2396              		.loc 1 3215 0
 2397 003a 201C     		mov	r0, r4
 2398 003c 291C     		mov	r1, r5
 2399 003e FFF7FEFF 		bl	CySysTimerSetMatch
 2400              	.LVL202:
3216:Generated_Source\PSoC4/CyLFClk.c **** 
3217:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  |= tmpValue;
 2401              		.loc 1 3217 0
 2402 0042 084A     		ldr	r2, .L225+8
 2403 0044 5369     		ldr	r3, [r2, #20]
 2404 0046 3343     		orr	r3, r6
 2405 0048 5361     		str	r3, [r2, #20]
3218:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask |= tmpValue;
 2406              		.loc 1 3218 0
 2407 004a 074B     		ldr	r3, .L225+12
 2408 004c 1A68     		ldr	r2, [r3]
 2409 004e 1643     		orr	r6, r2
 2410              	.LVL203:
 2411 0050 1E60     		str	r6, [r3]
 2412 0052 02E0     		b	.L219
 2413              	.LVL204:
 2414              	.L220:
3219:Generated_Source\PSoC4/CyLFClk.c ****             }
3220:Generated_Source\PSoC4/CyLFClk.c ****         }
3221:Generated_Source\PSoC4/CyLFClk.c ****         else
3222:Generated_Source\PSoC4/CyLFClk.c ****         {
3223:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 114


 2415              		.loc 1 3223 0 discriminator 1
 2416 0054 0020     		mov	r0, #0
 2417 0056 FFF7FEFF 		bl	CyHalt
 2418              	.LVL205:
 2419              	.L219:
3224:Generated_Source\PSoC4/CyLFClk.c ****         }
3225:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT) */
3226:Generated_Source\PSoC4/CyLFClk.c ****     }
 2420              		.loc 1 3226 0
 2421              		@ sp needed
 2422              	.LVL206:
 2423              	.LVL207:
 2424 005a 70BD     		pop	{r4, r5, r6, pc}
 2425              	.L226:
 2426              		.align	2
 2427              	.L225:
 2428 005c FFFF0000 		.word	65535
 2429 0060 00000000 		.word	.LANCHOR1
 2430 0064 00000000 		.word	.LANCHOR0
 2431 0068 00000000 		.word	.LANCHOR2
 2432              		.cfi_endproc
 2433              	.LFE50:
 2434              		.size	CySysTimerDelayUntilMatch, .-CySysTimerDelayUntilMatch
 2435              		.section	.text.CySysTimerDelay,"ax",%progbits
 2436              		.align	2
 2437              		.global	CySysTimerDelay
 2438              		.code	16
 2439              		.thumb_func
 2440              		.type	CySysTimerDelay, %function
 2441              	CySysTimerDelay:
 2442              	.LFB49:
3032:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
 2443              		.loc 1 3032 0
 2444              		.cfi_startproc
 2445              	.LVL208:
 2446 0000 70B5     		push	{r4, r5, r6, lr}
 2447              		.cfi_def_cfa_offset 16
 2448              		.cfi_offset 4, -16
 2449              		.cfi_offset 5, -12
 2450              		.cfi_offset 6, -8
 2451              		.cfi_offset 14, -4
 2452 0002 041C     		mov	r4, r0
 2453 0004 0E1C     		mov	r6, r1
 2454 0006 151C     		mov	r5, r2
3052:Generated_Source\PSoC4/CyLFClk.c ****                                                             (delay <= CY_SYS_UINT16_MAX_VAL))
 2455              		.loc 1 3052 0
 2456 0008 0128     		cmp	r0, #1
 2457 000a 11D8     		bhi	.L228
3052:Generated_Source\PSoC4/CyLFClk.c ****                                                             (delay <= CY_SYS_UINT16_MAX_VAL))
 2458              		.loc 1 3052 0 is_stmt 0 discriminator 1
 2459 000c FFF7FEFF 		bl	CySysTimerGetClearOnMatch
 2460              	.LVL209:
 2461 0010 0028     		cmp	r0, #0
 2462 0012 0DD1     		bne	.L228
3052:Generated_Source\PSoC4/CyLFClk.c ****                                                             (delay <= CY_SYS_UINT16_MAX_VAL))
 2463              		.loc 1 3052 0 discriminator 2
 2464 0014 084B     		ldr	r3, .L230
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 115


 2465 0016 9D42     		cmp	r5, r3
 2466 0018 0AD8     		bhi	.L228
3055:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
 2467              		.loc 1 3055 0 is_stmt 1
 2468 001a 201C     		mov	r0, r4
 2469 001c FFF7FEFF 		bl	CySysTimerGetCount
 2470              	.LVL210:
3056:Generated_Source\PSoC4/CyLFClk.c **** 
 2471              		.loc 1 3056 0
 2472 0020 4219     		add	r2, r0, r5
 2473 0022 1204     		lsl	r2, r2, #16
 2474 0024 120C     		lsr	r2, r2, #16
 2475              	.LVL211:
3058:Generated_Source\PSoC4/CyLFClk.c ****             }
 2476              		.loc 1 3058 0
 2477 0026 201C     		mov	r0, r4
 2478              	.LVL212:
 2479 0028 311C     		mov	r1, r6
 2480 002a FFF7FEFF 		bl	CySysTimerDelayUntilMatch
 2481              	.LVL213:
 2482 002e 02E0     		b	.L227
 2483              	.L228:
3062:Generated_Source\PSoC4/CyLFClk.c ****             }
 2484              		.loc 1 3062 0 discriminator 1
 2485 0030 0020     		mov	r0, #0
 2486 0032 FFF7FEFF 		bl	CyHalt
 2487              	.LVL214:
 2488              	.L227:
3065:Generated_Source\PSoC4/CyLFClk.c **** 
 2489              		.loc 1 3065 0
 2490              		@ sp needed
 2491              	.LVL215:
 2492              	.LVL216:
 2493 0036 70BD     		pop	{r4, r5, r6, pc}
 2494              	.L231:
 2495              		.align	2
 2496              	.L230:
 2497 0038 FFFF0000 		.word	65535
 2498              		.cfi_endproc
 2499              	.LFE49:
 2500              		.size	CySysTimerDelay, .-CySysTimerDelay
 2501              		.section	.rodata
 2502              		.align	2
 2503              		.set	.LANCHOR1,. + 0
 2504              		.type	counterTimerIntMaskTbl, %object
 2505              		.size	counterTimerIntMaskTbl, 12
 2506              	counterTimerIntMaskTbl:
 2507 0000 04000000 		.word	4
 2508 0004 00040000 		.word	1024
 2509 0008 00000400 		.word	262144
 2510              		.data
 2511              		.align	2
 2512              		.set	.LANCHOR2,. + 0
 2513              		.type	timerIsrMask, %object
 2514              		.size	timerIsrMask, 4
 2515              	timerIsrMask:
 2516 0000 04040400 		.word	263172
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 116


 2517              		.bss
 2518              		.align	2
 2519              		.set	.LANCHOR0,. + 0
 2520              		.type	compensateRunningStatus.4775, %object
 2521              		.size	compensateRunningStatus.4775, 4
 2522              	compensateRunningStatus.4775:
 2523 0000 00000000 		.space	4
 2524              		.type	cySysWdtCallback, %object
 2525              		.size	cySysWdtCallback, 4
 2526              	cySysWdtCallback:
 2527 0004 00000000 		.space	4
 2528              		.type	cySysTimerCallback, %object
 2529              		.size	cySysTimerCallback, 12
 2530              	cySysTimerCallback:
 2531 0008 00000000 		.space	12
 2531      00000000 
 2531      00000000 
 2532              		.type	disableTimerServicedIsr, %object
 2533              		.size	disableTimerServicedIsr, 4
 2534              	disableTimerServicedIsr:
 2535 0014 00000000 		.space	4
 2536              		.text
 2537              	.Letext0:
 2538              		.file 3 "Generated_Source\\PSoC4\\cytypes.h"
 2539              		.file 4 "Generated_Source\\PSoC4\\CyLib.h"
 2540              		.section	.debug_info,"",%progbits
 2541              	.Ldebug_info0:
 2542 0000 000D0000 		.4byte	0xd00
 2543 0004 0400     		.2byte	0x4
 2544 0006 00000000 		.4byte	.Ldebug_abbrev0
 2545 000a 04       		.byte	0x4
 2546 000b 01       		.uleb128 0x1
 2547 000c 26080000 		.4byte	.LASF110
 2548 0010 01       		.byte	0x1
 2549 0011 7B060000 		.4byte	.LASF111
 2550 0015 F5000000 		.4byte	.LASF112
 2551 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2552 001d 00000000 		.4byte	0
 2553 0021 00000000 		.4byte	.Ldebug_line0
 2554 0025 02       		.uleb128 0x2
 2555 0026 01       		.byte	0x1
 2556 0027 06       		.byte	0x6
 2557 0028 2E000000 		.4byte	.LASF0
 2558 002c 02       		.uleb128 0x2
 2559 002d 01       		.byte	0x1
 2560 002e 08       		.byte	0x8
 2561 002f C0050000 		.4byte	.LASF1
 2562 0033 02       		.uleb128 0x2
 2563 0034 02       		.byte	0x2
 2564 0035 05       		.byte	0x5
 2565 0036 EC050000 		.4byte	.LASF2
 2566 003a 02       		.uleb128 0x2
 2567 003b 02       		.byte	0x2
 2568 003c 07       		.byte	0x7
 2569 003d BC030000 		.4byte	.LASF3
 2570 0041 02       		.uleb128 0x2
 2571 0042 04       		.byte	0x4
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 117


 2572 0043 05       		.byte	0x5
 2573 0044 D3010000 		.4byte	.LASF4
 2574 0048 02       		.uleb128 0x2
 2575 0049 04       		.byte	0x4
 2576 004a 07       		.byte	0x7
 2577 004b 72030000 		.4byte	.LASF5
 2578 004f 02       		.uleb128 0x2
 2579 0050 08       		.byte	0x8
 2580 0051 05       		.byte	0x5
 2581 0052 E7000000 		.4byte	.LASF6
 2582 0056 02       		.uleb128 0x2
 2583 0057 08       		.byte	0x8
 2584 0058 07       		.byte	0x7
 2585 0059 7B000000 		.4byte	.LASF7
 2586 005d 03       		.uleb128 0x3
 2587 005e 04       		.byte	0x4
 2588 005f 05       		.byte	0x5
 2589 0060 696E7400 		.ascii	"int\000"
 2590 0064 02       		.uleb128 0x2
 2591 0065 04       		.byte	0x4
 2592 0066 07       		.byte	0x7
 2593 0067 19030000 		.4byte	.LASF8
 2594 006b 04       		.uleb128 0x4
 2595 006c EE010000 		.4byte	.LASF9
 2596 0070 03       		.byte	0x3
 2597 0071 B901     		.2byte	0x1b9
 2598 0073 2C000000 		.4byte	0x2c
 2599 0077 04       		.uleb128 0x4
 2600 0078 00000000 		.4byte	.LASF10
 2601 007c 03       		.byte	0x3
 2602 007d BA01     		.2byte	0x1ba
 2603 007f 3A000000 		.4byte	0x3a
 2604 0083 04       		.uleb128 0x4
 2605 0084 60020000 		.4byte	.LASF11
 2606 0088 03       		.byte	0x3
 2607 0089 BB01     		.2byte	0x1bb
 2608 008b 48000000 		.4byte	0x48
 2609 008f 02       		.uleb128 0x2
 2610 0090 04       		.byte	0x4
 2611 0091 04       		.byte	0x4
 2612 0092 54050000 		.4byte	.LASF12
 2613 0096 02       		.uleb128 0x2
 2614 0097 08       		.byte	0x8
 2615 0098 04       		.byte	0x4
 2616 0099 FB010000 		.4byte	.LASF13
 2617 009d 02       		.uleb128 0x2
 2618 009e 01       		.byte	0x1
 2619 009f 08       		.byte	0x8
 2620 00a0 EE060000 		.4byte	.LASF14
 2621 00a4 04       		.uleb128 0x4
 2622 00a5 BF070000 		.4byte	.LASF15
 2623 00a9 03       		.byte	0x3
 2624 00aa 5B02     		.2byte	0x25b
 2625 00ac 48000000 		.4byte	0x48
 2626 00b0 04       		.uleb128 0x4
 2627 00b1 55040000 		.4byte	.LASF16
 2628 00b5 03       		.byte	0x3
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 118


 2629 00b6 6502     		.2byte	0x265
 2630 00b8 BC000000 		.4byte	0xbc
 2631 00bc 05       		.uleb128 0x5
 2632 00bd 83000000 		.4byte	0x83
 2633 00c1 06       		.uleb128 0x6
 2634 00c2 04       		.byte	0x4
 2635 00c3 C7000000 		.4byte	0xc7
 2636 00c7 07       		.uleb128 0x7
 2637 00c8 08       		.uleb128 0x8
 2638 00c9 01       		.byte	0x1
 2639 00ca 02       		.byte	0x2
 2640 00cb 1B       		.byte	0x1b
 2641 00cc DD000000 		.4byte	0xdd
 2642 00d0 09       		.uleb128 0x9
 2643 00d1 FF040000 		.4byte	.LASF17
 2644 00d5 00       		.sleb128 0
 2645 00d6 09       		.uleb128 0x9
 2646 00d7 0F080000 		.4byte	.LASF18
 2647 00db 01       		.sleb128 1
 2648 00dc 00       		.byte	0
 2649 00dd 0A       		.uleb128 0xa
 2650 00de B2010000 		.4byte	.LASF19
 2651 00e2 02       		.byte	0x2
 2652 00e3 1E       		.byte	0x1e
 2653 00e4 C8000000 		.4byte	0xc8
 2654 00e8 0A       		.uleb128 0xa
 2655 00e9 9A010000 		.4byte	.LASF20
 2656 00ed 02       		.byte	0x2
 2657 00ee 58       		.byte	0x58
 2658 00ef C1000000 		.4byte	0xc1
 2659 00f3 0A       		.uleb128 0xa
 2660 00f4 58000000 		.4byte	.LASF21
 2661 00f8 02       		.byte	0x2
 2662 00f9 5C       		.byte	0x5c
 2663 00fa C1000000 		.4byte	0xc1
 2664 00fe 02       		.uleb128 0x2
 2665 00ff 04       		.byte	0x4
 2666 0100 07       		.byte	0x7
 2667 0101 B7040000 		.4byte	.LASF22
 2668 0105 0B       		.uleb128 0xb
 2669 0106 72040000 		.4byte	.LASF113
 2670 010a 01       		.byte	0x1
 2671 010b 8008     		.2byte	0x880
 2672 010d 83000000 		.4byte	0x83
 2673 0111 00000000 		.4byte	.LFB25
 2674 0115 10000000 		.4byte	.LFE25-.LFB25
 2675 0119 01       		.uleb128 0x1
 2676 011a 9C       		.byte	0x9c
 2677 011b 2E010000 		.4byte	0x12e
 2678 011f 0C       		.uleb128 0xc
 2679 0120 39040000 		.4byte	.LASF29
 2680 0124 01       		.byte	0x1
 2681 0125 8208     		.2byte	0x882
 2682 0127 83000000 		.4byte	0x83
 2683 012b 01       		.uleb128 0x1
 2684 012c 50       		.byte	0x50
 2685 012d 00       		.byte	0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 119


 2686 012e 0D       		.uleb128 0xd
 2687 012f 28040000 		.4byte	.LASF23
 2688 0133 01       		.byte	0x1
 2689 0134 53       		.byte	0x53
 2690 0135 00000000 		.4byte	.LFB1
 2691 0139 14000000 		.4byte	.LFE1-.LFB1
 2692 013d 01       		.uleb128 0x1
 2693 013e 9C       		.byte	0x9c
 2694 013f 0D       		.uleb128 0xd
 2695 0140 14020000 		.4byte	.LASF24
 2696 0144 01       		.byte	0x1
 2697 0145 6C       		.byte	0x6c
 2698 0146 00000000 		.4byte	.LFB2
 2699 014a 10000000 		.4byte	.LFE2-.LFB2
 2700 014e 01       		.uleb128 0x1
 2701 014f 9C       		.byte	0x9c
 2702 0150 0D       		.uleb128 0xd
 2703 0151 4A060000 		.4byte	.LASF25
 2704 0155 01       		.byte	0x1
 2705 0156 A8       		.byte	0xa8
 2706 0157 00000000 		.4byte	.LFB3
 2707 015b 34000000 		.4byte	.LFE3-.LFB3
 2708 015f 01       		.uleb128 0x1
 2709 0160 9C       		.byte	0x9c
 2710 0161 0D       		.uleb128 0xd
 2711 0162 67020000 		.4byte	.LASF26
 2712 0166 01       		.byte	0x1
 2713 0167 C9       		.byte	0xc9
 2714 0168 00000000 		.4byte	.LFB4
 2715 016c 28000000 		.4byte	.LFE4-.LFB4
 2716 0170 01       		.uleb128 0x1
 2717 0171 9C       		.byte	0x9c
 2718 0172 0E       		.uleb128 0xe
 2719 0173 F9070000 		.4byte	.LASF37
 2720 0177 01       		.byte	0x1
 2721 0178 0B01     		.2byte	0x10b
 2722 017a A4000000 		.4byte	0xa4
 2723 017e 00000000 		.4byte	.LFB5
 2724 0182 08010000 		.4byte	.LFE5-.LFB5
 2725 0186 01       		.uleb128 0x1
 2726 0187 9C       		.byte	0x9c
 2727 0188 FF010000 		.4byte	0x1ff
 2728 018c 0F       		.uleb128 0xf
 2729 018d 65030000 		.4byte	.LASF27
 2730 0191 01       		.byte	0x1
 2731 0192 0B01     		.2byte	0x10b
 2732 0194 83000000 		.4byte	0x83
 2733 0198 00000000 		.4byte	.LLST0
 2734 019c 0F       		.uleb128 0xf
 2735 019d 02020000 		.4byte	.LASF28
 2736 01a1 01       		.byte	0x1
 2737 01a2 0B01     		.2byte	0x10b
 2738 01a4 FF010000 		.4byte	0x1ff
 2739 01a8 E9000000 		.4byte	.LLST1
 2740 01ac 10       		.uleb128 0x10
 2741 01ad 24020000 		.4byte	.LASF30
 2742 01b1 01       		.byte	0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 120


 2743 01b2 0D01     		.2byte	0x10d
 2744 01b4 83000000 		.4byte	0x83
 2745 01b8 20010000 		.4byte	.LLST2
 2746 01bc 10       		.uleb128 0x10
 2747 01bd 4B070000 		.4byte	.LASF31
 2748 01c1 01       		.byte	0x1
 2749 01c2 0E01     		.2byte	0x10e
 2750 01c4 83000000 		.4byte	0x83
 2751 01c8 4A010000 		.4byte	.LLST3
 2752 01cc 0C       		.uleb128 0xc
 2753 01cd CE050000 		.4byte	.LASF32
 2754 01d1 01       		.byte	0x1
 2755 01d2 0F01     		.2byte	0x10f
 2756 01d4 83000000 		.4byte	0x83
 2757 01d8 05       		.uleb128 0x5
 2758 01d9 03       		.byte	0x3
 2759 01da 00000000 		.4byte	compensateRunningStatus.4775
 2760 01de 10       		.uleb128 0x10
 2761 01df 11050000 		.4byte	.LASF33
 2762 01e3 01       		.byte	0x1
 2763 01e4 1001     		.2byte	0x110
 2764 01e6 83000000 		.4byte	0x83
 2765 01ea 7E010000 		.4byte	.LLST4
 2766 01ee 10       		.uleb128 0x10
 2767 01ef 89040000 		.4byte	.LASF34
 2768 01f3 01       		.byte	0x1
 2769 01f4 1101     		.2byte	0x111
 2770 01f6 A4000000 		.4byte	0xa4
 2771 01fa 9C010000 		.4byte	.LLST5
 2772 01fe 00       		.byte	0
 2773 01ff 06       		.uleb128 0x6
 2774 0200 04       		.byte	0x4
 2775 0201 83000000 		.4byte	0x83
 2776 0205 11       		.uleb128 0x11
 2777 0206 CB000000 		.4byte	.LASF114
 2778 020a 02       		.byte	0x2
 2779 020b 9002     		.2byte	0x290
 2780 020d 03       		.byte	0x3
 2781 020e 12       		.uleb128 0x12
 2782 020f 60070000 		.4byte	.LASF35
 2783 0213 01       		.byte	0x1
 2784 0214 0303     		.2byte	0x303
 2785 0216 00000000 		.4byte	.LFB6
 2786 021a 40000000 		.4byte	.LFE6-.LFB6
 2787 021e 01       		.uleb128 0x1
 2788 021f 9C       		.byte	0x9c
 2789 0220 35020000 		.4byte	0x235
 2790 0224 13       		.uleb128 0x13
 2791 0225 05020000 		.4byte	0x205
 2792 0229 02000000 		.4byte	.LBB4
 2793 022d 2A000000 		.4byte	.LBE4-.LBB4
 2794 0231 01       		.byte	0x1
 2795 0232 0503     		.2byte	0x305
 2796 0234 00       		.byte	0
 2797 0235 14       		.uleb128 0x14
 2798 0236 A4000000 		.4byte	.LASF43
 2799 023a 01       		.byte	0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 121


 2800 023b 3803     		.2byte	0x338
 2801 023d 83000000 		.4byte	0x83
 2802 0241 00000000 		.4byte	.LFB8
 2803 0245 14000000 		.4byte	.LFE8-.LFB8
 2804 0249 01       		.uleb128 0x1
 2805 024a 9C       		.byte	0x9c
 2806 024b 12       		.uleb128 0x12
 2807 024c C6060000 		.4byte	.LASF36
 2808 0250 01       		.byte	0x1
 2809 0251 1503     		.2byte	0x315
 2810 0253 00000000 		.4byte	.LFB7
 2811 0257 1C000000 		.4byte	.LFE7-.LFB7
 2812 025b 01       		.uleb128 0x1
 2813 025c 9C       		.byte	0x9c
 2814 025d 6B020000 		.4byte	0x26b
 2815 0261 15       		.uleb128 0x15
 2816 0262 06000000 		.4byte	.LVL36
 2817 0266 35020000 		.4byte	0x235
 2818 026a 00       		.byte	0
 2819 026b 16       		.uleb128 0x16
 2820 026c D6060000 		.4byte	.LASF38
 2821 0270 01       		.byte	0x1
 2822 0271 5303     		.2byte	0x353
 2823 0273 83000000 		.4byte	0x83
 2824 0277 00000000 		.4byte	.LFB9
 2825 027b 4C000000 		.4byte	.LFE9-.LFB9
 2826 027f 01       		.uleb128 0x1
 2827 0280 9C       		.byte	0x9c
 2828 0281 C5020000 		.4byte	0x2c5
 2829 0285 0F       		.uleb128 0xf
 2830 0286 F3060000 		.4byte	.LASF39
 2831 028a 01       		.byte	0x1
 2832 028b 5303     		.2byte	0x353
 2833 028d 83000000 		.4byte	0x83
 2834 0291 C7010000 		.4byte	.LLST6
 2835 0295 10       		.uleb128 0x10
 2836 0296 45040000 		.4byte	.LASF40
 2837 029a 01       		.byte	0x1
 2838 029b 5503     		.2byte	0x355
 2839 029d 83000000 		.4byte	0x83
 2840 02a1 27020000 		.4byte	.LLST7
 2841 02a5 13       		.uleb128 0x13
 2842 02a6 05020000 		.4byte	0x205
 2843 02aa 0E000000 		.4byte	.LBB8
 2844 02ae 2C000000 		.4byte	.LBE8-.LBB8
 2845 02b2 01       		.byte	0x1
 2846 02b3 5C03     		.2byte	0x35c
 2847 02b5 17       		.uleb128 0x17
 2848 02b6 40000000 		.4byte	.LVL45
 2849 02ba C90C0000 		.4byte	0xcc9
 2850 02be 18       		.uleb128 0x18
 2851 02bf 01       		.uleb128 0x1
 2852 02c0 50       		.byte	0x50
 2853 02c1 01       		.uleb128 0x1
 2854 02c2 30       		.byte	0x30
 2855 02c3 00       		.byte	0
 2856 02c4 00       		.byte	0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 122


 2857 02c5 12       		.uleb128 0x12
 2858 02c6 9D040000 		.4byte	.LASF41
 2859 02ca 01       		.byte	0x1
 2860 02cb 9603     		.2byte	0x396
 2861 02cd 00000000 		.4byte	.LFB10
 2862 02d1 2C000000 		.4byte	.LFE10-.LFB10
 2863 02d5 01       		.uleb128 0x1
 2864 02d6 9C       		.byte	0x9c
 2865 02d7 04030000 		.4byte	0x304
 2866 02db 0F       		.uleb128 0xf
 2867 02dc E5010000 		.4byte	.LASF42
 2868 02e0 01       		.byte	0x1
 2869 02e1 9603     		.2byte	0x396
 2870 02e3 83000000 		.4byte	0x83
 2871 02e7 45020000 		.4byte	.LLST8
 2872 02eb 15       		.uleb128 0x15
 2873 02ec 08000000 		.4byte	.LVL48
 2874 02f0 35020000 		.4byte	0x235
 2875 02f4 17       		.uleb128 0x17
 2876 02f5 26000000 		.4byte	.LVL51
 2877 02f9 C90C0000 		.4byte	0xcc9
 2878 02fd 18       		.uleb128 0x18
 2879 02fe 01       		.uleb128 0x1
 2880 02ff 50       		.byte	0x50
 2881 0300 01       		.uleb128 0x1
 2882 0301 30       		.byte	0x30
 2883 0302 00       		.byte	0
 2884 0303 00       		.byte	0
 2885 0304 14       		.uleb128 0x14
 2886 0305 CF030000 		.4byte	.LASF44
 2887 0309 01       		.byte	0x1
 2888 030a 7E07     		.2byte	0x77e
 2889 030c 83000000 		.4byte	0x83
 2890 0310 00000000 		.4byte	.LFB11
 2891 0314 1C000000 		.4byte	.LFE11-.LFB11
 2892 0318 01       		.uleb128 0x1
 2893 0319 9C       		.byte	0x9c
 2894 031a 19       		.uleb128 0x19
 2895 031b C2020000 		.4byte	.LASF45
 2896 031f 01       		.byte	0x1
 2897 0320 9107     		.2byte	0x791
 2898 0322 00000000 		.4byte	.LFB12
 2899 0326 0C000000 		.4byte	.LFE12-.LFB12
 2900 032a 01       		.uleb128 0x1
 2901 032b 9C       		.byte	0x9c
 2902 032c 19       		.uleb128 0x19
 2903 032d 0E060000 		.4byte	.LASF46
 2904 0331 01       		.byte	0x1
 2905 0332 A107     		.2byte	0x7a1
 2906 0334 00000000 		.4byte	.LFB13
 2907 0338 10000000 		.4byte	.LFE13-.LFB13
 2908 033c 01       		.uleb128 0x1
 2909 033d 9C       		.byte	0x9c
 2910 033e 12       		.uleb128 0x12
 2911 033f 9C020000 		.4byte	.LASF47
 2912 0343 01       		.byte	0x1
 2913 0344 B107     		.2byte	0x7b1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 123


 2914 0346 00000000 		.4byte	.LFB14
 2915 034a 18000000 		.4byte	.LFE14-.LFB14
 2916 034e 01       		.uleb128 0x1
 2917 034f 9C       		.byte	0x9c
 2918 0350 65030000 		.4byte	0x365
 2919 0354 0F       		.uleb128 0xf
 2920 0355 E4040000 		.4byte	.LASF48
 2921 0359 01       		.byte	0x1
 2922 035a B107     		.2byte	0x7b1
 2923 035c 83000000 		.4byte	0x83
 2924 0360 8A020000 		.4byte	.LLST9
 2925 0364 00       		.byte	0
 2926 0365 14       		.uleb128 0x14
 2927 0366 C0040000 		.4byte	.LASF49
 2928 036a 01       		.byte	0x1
 2929 036b C107     		.2byte	0x7c1
 2930 036d 83000000 		.4byte	0x83
 2931 0371 00000000 		.4byte	.LFB15
 2932 0375 10000000 		.4byte	.LFE15-.LFB15
 2933 0379 01       		.uleb128 0x1
 2934 037a 9C       		.byte	0x9c
 2935 037b 14       		.uleb128 0x14
 2936 037c F8060000 		.4byte	.LASF50
 2937 0380 01       		.byte	0x1
 2938 0381 D007     		.2byte	0x7d0
 2939 0383 83000000 		.4byte	0x83
 2940 0387 00000000 		.4byte	.LFB16
 2941 038b 0C000000 		.4byte	.LFE16-.LFB16
 2942 038f 01       		.uleb128 0x1
 2943 0390 9C       		.byte	0x9c
 2944 0391 12       		.uleb128 0x12
 2945 0392 43030000 		.4byte	.LASF51
 2946 0396 01       		.byte	0x1
 2947 0397 E407     		.2byte	0x7e4
 2948 0399 00000000 		.4byte	.LFB17
 2949 039d 20000000 		.4byte	.LFE17-.LFB17
 2950 03a1 01       		.uleb128 0x1
 2951 03a2 9C       		.byte	0x9c
 2952 03a3 B8030000 		.4byte	0x3b8
 2953 03a7 0F       		.uleb128 0xf
 2954 03a8 8C050000 		.4byte	.LASF52
 2955 03ac 01       		.byte	0x1
 2956 03ad E407     		.2byte	0x7e4
 2957 03af 83000000 		.4byte	0x83
 2958 03b3 B6020000 		.4byte	.LLST10
 2959 03b7 00       		.byte	0
 2960 03b8 14       		.uleb128 0x14
 2961 03b9 84010000 		.4byte	.LASF53
 2962 03bd 01       		.byte	0x1
 2963 03be F607     		.2byte	0x7f6
 2964 03c0 83000000 		.4byte	0x83
 2965 03c4 00000000 		.4byte	.LFB18
 2966 03c8 10000000 		.4byte	.LFE18-.LFB18
 2967 03cc 01       		.uleb128 0x1
 2968 03cd 9C       		.byte	0x9c
 2969 03ce 19       		.uleb128 0x19
 2970 03cf 3D050000 		.4byte	.LASF54
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 124


 2971 03d3 01       		.byte	0x1
 2972 03d4 0708     		.2byte	0x807
 2973 03d6 00000000 		.4byte	.LFB19
 2974 03da 10000000 		.4byte	.LFE19-.LFB19
 2975 03de 01       		.uleb128 0x1
 2976 03df 9C       		.byte	0x9c
 2977 03e0 19       		.uleb128 0x19
 2978 03e1 A6030000 		.4byte	.LASF55
 2979 03e5 01       		.byte	0x1
 2980 03e6 1608     		.2byte	0x816
 2981 03e8 00000000 		.4byte	.LFB20
 2982 03ec 10000000 		.4byte	.LFE20-.LFB20
 2983 03f0 01       		.uleb128 0x1
 2984 03f1 9C       		.byte	0x9c
 2985 03f2 19       		.uleb128 0x19
 2986 03f3 74050000 		.4byte	.LASF56
 2987 03f7 01       		.byte	0x1
 2988 03f8 2508     		.2byte	0x825
 2989 03fa 00000000 		.4byte	.LFB21
 2990 03fe 10000000 		.4byte	.LFE21-.LFB21
 2991 0402 01       		.uleb128 0x1
 2992 0403 9C       		.byte	0x9c
 2993 0404 16       		.uleb128 0x16
 2994 0405 D1020000 		.4byte	.LASF57
 2995 0409 01       		.byte	0x1
 2996 040a 3708     		.2byte	0x837
 2997 040c E8000000 		.4byte	0xe8
 2998 0410 00000000 		.4byte	.LFB22
 2999 0414 10000000 		.4byte	.LFE22-.LFB22
 3000 0418 01       		.uleb128 0x1
 3001 0419 9C       		.byte	0x9c
 3002 041a 3F040000 		.4byte	0x43f
 3003 041e 0F       		.uleb128 0xf
 3004 041f 6C010000 		.4byte	.LASF58
 3005 0423 01       		.byte	0x1
 3006 0424 3708     		.2byte	0x837
 3007 0426 E8000000 		.4byte	0xe8
 3008 042a E2020000 		.4byte	.LLST11
 3009 042e 10       		.uleb128 0x10
 3010 042f 8F020000 		.4byte	.LASF59
 3011 0433 01       		.byte	0x1
 3012 0434 3908     		.2byte	0x839
 3013 0436 E8000000 		.4byte	0xe8
 3014 043a 04030000 		.4byte	.LLST12
 3015 043e 00       		.byte	0
 3016 043f 14       		.uleb128 0x14
 3017 0440 E8030000 		.4byte	.LASF60
 3018 0444 01       		.byte	0x1
 3019 0445 4C08     		.2byte	0x84c
 3020 0447 E8000000 		.4byte	0xe8
 3021 044b 00000000 		.4byte	.LFB23
 3022 044f 0C000000 		.4byte	.LFE23-.LFB23
 3023 0453 01       		.uleb128 0x1
 3024 0454 9C       		.byte	0x9c
 3025 0455 1A       		.uleb128 0x1a
 3026 0456 1C040000 		.4byte	.LASF61
 3027 045a 01       		.byte	0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 125


 3028 045b 6408     		.2byte	0x864
 3029 045d 00000000 		.4byte	.LFB24
 3030 0461 18000000 		.4byte	.LFE24-.LFB24
 3031 0465 01       		.uleb128 0x1
 3032 0466 9C       		.byte	0x9c
 3033 0467 75040000 		.4byte	0x475
 3034 046b 15       		.uleb128 0x15
 3035 046c 10000000 		.4byte	.LVL62
 3036 0470 CE030000 		.4byte	0x3ce
 3037 0474 00       		.byte	0
 3038 0475 12       		.uleb128 0x12
 3039 0476 AF060000 		.4byte	.LASF62
 3040 047a 01       		.byte	0x1
 3041 047b A108     		.2byte	0x8a1
 3042 047d 00000000 		.4byte	.LFB26
 3043 0481 68000000 		.4byte	.LFE26-.LFB26
 3044 0485 01       		.uleb128 0x1
 3045 0486 9C       		.byte	0x9c
 3046 0487 D0040000 		.4byte	0x4d0
 3047 048b 0F       		.uleb128 0xf
 3048 048c 96040000 		.4byte	.LASF63
 3049 0490 01       		.byte	0x1
 3050 0491 A108     		.2byte	0x8a1
 3051 0493 83000000 		.4byte	0x83
 3052 0497 23030000 		.4byte	.LLST13
 3053 049b 10       		.uleb128 0x10
 3054 049c 75010000 		.4byte	.LASF64
 3055 04a0 01       		.byte	0x1
 3056 04a1 A308     		.2byte	0x8a3
 3057 04a3 6B000000 		.4byte	0x6b
 3058 04a7 4F030000 		.4byte	.LLST14
 3059 04ab 15       		.uleb128 0x15
 3060 04ac 08000000 		.4byte	.LVL64
 3061 04b0 05010000 		.4byte	0x105
 3062 04b4 15       		.uleb128 0x15
 3063 04b5 2A000000 		.4byte	.LVL65
 3064 04b9 DA0C0000 		.4byte	0xcda
 3065 04bd 15       		.uleb128 0x15
 3066 04be 2E000000 		.4byte	.LVL66
 3067 04c2 EB0C0000 		.4byte	0xceb
 3068 04c6 15       		.uleb128 0x15
 3069 04c7 42000000 		.4byte	.LVL68
 3070 04cb F60C0000 		.4byte	0xcf6
 3071 04cf 00       		.byte	0
 3072 04d0 16       		.uleb128 0x16
 3073 04d1 2F060000 		.4byte	.LASF65
 3074 04d5 01       		.byte	0x1
 3075 04d6 CD08     		.2byte	0x8cd
 3076 04d8 83000000 		.4byte	0x83
 3077 04dc 00000000 		.4byte	.LFB27
 3078 04e0 24000000 		.4byte	.LFE27-.LFB27
 3079 04e4 01       		.uleb128 0x1
 3080 04e5 9C       		.byte	0x9c
 3081 04e6 0A050000 		.4byte	0x50a
 3082 04ea 0F       		.uleb128 0xf
 3083 04eb 3A000000 		.4byte	.LASF66
 3084 04ef 01       		.byte	0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 126


 3085 04f0 CD08     		.2byte	0x8cd
 3086 04f2 83000000 		.4byte	0x83
 3087 04f6 62030000 		.4byte	.LLST15
 3088 04fa 17       		.uleb128 0x17
 3089 04fb 0E000000 		.4byte	.LVL71
 3090 04ff C90C0000 		.4byte	0xcc9
 3091 0503 18       		.uleb128 0x18
 3092 0504 01       		.uleb128 0x1
 3093 0505 50       		.byte	0x50
 3094 0506 01       		.uleb128 0x1
 3095 0507 30       		.byte	0x30
 3096 0508 00       		.byte	0
 3097 0509 00       		.byte	0
 3098 050a 12       		.uleb128 0x12
 3099 050b 2B050000 		.4byte	.LASF67
 3100 050f 01       		.byte	0x1
 3101 0510 EA08     		.2byte	0x8ea
 3102 0512 00000000 		.4byte	.LFB28
 3103 0516 44000000 		.4byte	.LFE28-.LFB28
 3104 051a 01       		.uleb128 0x1
 3105 051b 9C       		.byte	0x9c
 3106 051c 87050000 		.4byte	0x587
 3107 0520 0F       		.uleb128 0xf
 3108 0521 3A000000 		.4byte	.LASF66
 3109 0525 01       		.byte	0x1
 3110 0526 EA08     		.2byte	0x8ea
 3111 0528 83000000 		.4byte	0x83
 3112 052c 8E030000 		.4byte	.LLST16
 3113 0530 0F       		.uleb128 0xf
 3114 0531 F3060000 		.4byte	.LASF39
 3115 0535 01       		.byte	0x1
 3116 0536 EA08     		.2byte	0x8ea
 3117 0538 83000000 		.4byte	0x83
 3118 053c BA030000 		.4byte	.LLST17
 3119 0540 10       		.uleb128 0x10
 3120 0541 7B070000 		.4byte	.LASF68
 3121 0545 01       		.byte	0x1
 3122 0546 EC08     		.2byte	0x8ec
 3123 0548 83000000 		.4byte	0x83
 3124 054c E6030000 		.4byte	.LLST18
 3125 0550 1B       		.uleb128 0x1b
 3126 0551 10000000 		.4byte	.LVL75
 3127 0555 C90C0000 		.4byte	0xcc9
 3128 0559 63050000 		.4byte	0x563
 3129 055d 18       		.uleb128 0x18
 3130 055e 01       		.uleb128 0x1
 3131 055f 50       		.byte	0x50
 3132 0560 01       		.uleb128 0x1
 3133 0561 30       		.byte	0x30
 3134 0562 00       		.byte	0
 3135 0563 1B       		.uleb128 0x1b
 3136 0564 1A000000 		.4byte	.LVL76
 3137 0568 C90C0000 		.4byte	0xcc9
 3138 056c 76050000 		.4byte	0x576
 3139 0570 18       		.uleb128 0x18
 3140 0571 01       		.uleb128 0x1
 3141 0572 50       		.byte	0x50
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 127


 3142 0573 01       		.uleb128 0x1
 3143 0574 30       		.byte	0x30
 3144 0575 00       		.byte	0
 3145 0576 17       		.uleb128 0x17
 3146 0577 20000000 		.4byte	.LVL77
 3147 057b D0040000 		.4byte	0x4d0
 3148 057f 18       		.uleb128 0x18
 3149 0580 01       		.uleb128 0x1
 3150 0581 50       		.byte	0x50
 3151 0582 02       		.uleb128 0x2
 3152 0583 74       		.byte	0x74
 3153 0584 00       		.sleb128 0
 3154 0585 00       		.byte	0
 3155 0586 00       		.byte	0
 3156 0587 16       		.uleb128 0x16
 3157 0588 92000000 		.4byte	.LASF69
 3158 058c 01       		.byte	0x1
 3159 058d 0809     		.2byte	0x908
 3160 058f 83000000 		.4byte	0x83
 3161 0593 00000000 		.4byte	.LFB29
 3162 0597 14000000 		.4byte	.LFE29-.LFB29
 3163 059b 01       		.uleb128 0x1
 3164 059c 9C       		.byte	0x9c
 3165 059d B2050000 		.4byte	0x5b2
 3166 05a1 0F       		.uleb128 0xf
 3167 05a2 3A000000 		.4byte	.LASF66
 3168 05a6 01       		.byte	0x1
 3169 05a7 0809     		.2byte	0x908
 3170 05a9 83000000 		.4byte	0x83
 3171 05ad 04040000 		.4byte	.LLST19
 3172 05b1 00       		.byte	0
 3173 05b2 12       		.uleb128 0x12
 3174 05b3 46020000 		.4byte	.LASF70
 3175 05b7 01       		.byte	0x1
 3176 05b8 2409     		.2byte	0x924
 3177 05ba 00000000 		.4byte	.LFB30
 3178 05be 38000000 		.4byte	.LFE30-.LFB30
 3179 05c2 01       		.uleb128 0x1
 3180 05c3 9C       		.byte	0x9c
 3181 05c4 1C060000 		.4byte	0x61c
 3182 05c8 0F       		.uleb128 0xf
 3183 05c9 3A000000 		.4byte	.LASF66
 3184 05cd 01       		.byte	0x1
 3185 05ce 2409     		.2byte	0x924
 3186 05d0 83000000 		.4byte	0x83
 3187 05d4 25040000 		.4byte	.LLST20
 3188 05d8 0F       		.uleb128 0xf
 3189 05d9 F4010000 		.4byte	.LASF71
 3190 05dd 01       		.byte	0x1
 3191 05de 2409     		.2byte	0x924
 3192 05e0 83000000 		.4byte	0x83
 3193 05e4 51040000 		.4byte	.LLST21
 3194 05e8 10       		.uleb128 0x10
 3195 05e9 7B070000 		.4byte	.LASF68
 3196 05ed 01       		.byte	0x1
 3197 05ee 2609     		.2byte	0x926
 3198 05f0 83000000 		.4byte	0x83
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 128


 3199 05f4 7D040000 		.4byte	.LLST22
 3200 05f8 1B       		.uleb128 0x1b
 3201 05f9 10000000 		.4byte	.LVL87
 3202 05fd C90C0000 		.4byte	0xcc9
 3203 0601 0B060000 		.4byte	0x60b
 3204 0605 18       		.uleb128 0x18
 3205 0606 01       		.uleb128 0x1
 3206 0607 50       		.byte	0x50
 3207 0608 01       		.uleb128 0x1
 3208 0609 30       		.byte	0x30
 3209 060a 00       		.byte	0
 3210 060b 17       		.uleb128 0x17
 3211 060c 16000000 		.4byte	.LVL88
 3212 0610 D0040000 		.4byte	0x4d0
 3213 0614 18       		.uleb128 0x18
 3214 0615 01       		.uleb128 0x1
 3215 0616 50       		.byte	0x50
 3216 0617 02       		.uleb128 0x2
 3217 0618 74       		.byte	0x74
 3218 0619 00       		.sleb128 0
 3219 061a 00       		.byte	0
 3220 061b 00       		.byte	0
 3221 061c 16       		.uleb128 0x16
 3222 061d 09070000 		.4byte	.LASF72
 3223 0621 01       		.byte	0x1
 3224 0622 4509     		.2byte	0x945
 3225 0624 83000000 		.4byte	0x83
 3226 0628 00000000 		.4byte	.LFB31
 3227 062c 24000000 		.4byte	.LFE31-.LFB31
 3228 0630 01       		.uleb128 0x1
 3229 0631 9C       		.byte	0x9c
 3230 0632 56060000 		.4byte	0x656
 3231 0636 0F       		.uleb128 0xf
 3232 0637 3A000000 		.4byte	.LASF66
 3233 063b 01       		.byte	0x1
 3234 063c 4509     		.2byte	0x945
 3235 063e 83000000 		.4byte	0x83
 3236 0642 9B040000 		.4byte	.LLST23
 3237 0646 17       		.uleb128 0x17
 3238 0647 0E000000 		.4byte	.LVL96
 3239 064b C90C0000 		.4byte	0xcc9
 3240 064f 18       		.uleb128 0x18
 3241 0650 01       		.uleb128 0x1
 3242 0651 50       		.byte	0x50
 3243 0652 01       		.uleb128 0x1
 3244 0653 30       		.byte	0x30
 3245 0654 00       		.byte	0
 3246 0655 00       		.byte	0
 3247 0656 12       		.uleb128 0x12
 3248 0657 1E060000 		.4byte	.LASF73
 3249 065b 01       		.byte	0x1
 3250 065c 6809     		.2byte	0x968
 3251 065e 00000000 		.4byte	.LFB32
 3252 0662 3C000000 		.4byte	.LFE32-.LFB32
 3253 0666 01       		.uleb128 0x1
 3254 0667 9C       		.byte	0x9c
 3255 0668 B2060000 		.4byte	0x6b2
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 129


 3256 066c 0F       		.uleb128 0xf
 3257 066d EE020000 		.4byte	.LASF74
 3258 0671 01       		.byte	0x1
 3259 0672 6809     		.2byte	0x968
 3260 0674 83000000 		.4byte	0x83
 3261 0678 C7040000 		.4byte	.LLST24
 3262 067c 1B       		.uleb128 0x1b
 3263 067d 16000000 		.4byte	.LVL100
 3264 0681 D0040000 		.4byte	0x4d0
 3265 0685 8F060000 		.4byte	0x68f
 3266 0689 18       		.uleb128 0x18
 3267 068a 01       		.uleb128 0x1
 3268 068b 50       		.byte	0x50
 3269 068c 01       		.uleb128 0x1
 3270 068d 30       		.byte	0x30
 3271 068e 00       		.byte	0
 3272 068f 1B       		.uleb128 0x1b
 3273 0690 24000000 		.4byte	.LVL101
 3274 0694 D0040000 		.4byte	0x4d0
 3275 0698 A2060000 		.4byte	0x6a2
 3276 069c 18       		.uleb128 0x18
 3277 069d 01       		.uleb128 0x1
 3278 069e 50       		.byte	0x50
 3279 069f 01       		.uleb128 0x1
 3280 06a0 31       		.byte	0x31
 3281 06a1 00       		.byte	0
 3282 06a2 17       		.uleb128 0x17
 3283 06a3 32000000 		.4byte	.LVL102
 3284 06a7 D0040000 		.4byte	0x4d0
 3285 06ab 18       		.uleb128 0x18
 3286 06ac 01       		.uleb128 0x1
 3287 06ad 50       		.byte	0x50
 3288 06ae 01       		.uleb128 0x1
 3289 06af 32       		.byte	0x32
 3290 06b0 00       		.byte	0
 3291 06b1 00       		.byte	0
 3292 06b2 12       		.uleb128 0x12
 3293 06b3 AD070000 		.4byte	.LASF75
 3294 06b7 01       		.byte	0x1
 3295 06b8 9509     		.2byte	0x995
 3296 06ba 00000000 		.4byte	.LFB33
 3297 06be 3C000000 		.4byte	.LFE33-.LFB33
 3298 06c2 01       		.uleb128 0x1
 3299 06c3 9C       		.byte	0x9c
 3300 06c4 0E070000 		.4byte	0x70e
 3301 06c8 0F       		.uleb128 0xf
 3302 06c9 EE020000 		.4byte	.LASF74
 3303 06cd 01       		.byte	0x1
 3304 06ce 9509     		.2byte	0x995
 3305 06d0 83000000 		.4byte	0x83
 3306 06d4 F3040000 		.4byte	.LLST25
 3307 06d8 1B       		.uleb128 0x1b
 3308 06d9 16000000 		.4byte	.LVL106
 3309 06dd D0040000 		.4byte	0x4d0
 3310 06e1 EB060000 		.4byte	0x6eb
 3311 06e5 18       		.uleb128 0x18
 3312 06e6 01       		.uleb128 0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 130


 3313 06e7 50       		.byte	0x50
 3314 06e8 01       		.uleb128 0x1
 3315 06e9 30       		.byte	0x30
 3316 06ea 00       		.byte	0
 3317 06eb 1B       		.uleb128 0x1b
 3318 06ec 24000000 		.4byte	.LVL107
 3319 06f0 D0040000 		.4byte	0x4d0
 3320 06f4 FE060000 		.4byte	0x6fe
 3321 06f8 18       		.uleb128 0x18
 3322 06f9 01       		.uleb128 0x1
 3323 06fa 50       		.byte	0x50
 3324 06fb 01       		.uleb128 0x1
 3325 06fc 31       		.byte	0x31
 3326 06fd 00       		.byte	0
 3327 06fe 17       		.uleb128 0x17
 3328 06ff 32000000 		.4byte	.LVL108
 3329 0703 D0040000 		.4byte	0x4d0
 3330 0707 18       		.uleb128 0x18
 3331 0708 01       		.uleb128 0x1
 3332 0709 50       		.byte	0x50
 3333 070a 01       		.uleb128 0x1
 3334 070b 32       		.byte	0x32
 3335 070c 00       		.byte	0
 3336 070d 00       		.byte	0
 3337 070e 12       		.uleb128 0x12
 3338 070f AD020000 		.4byte	.LASF76
 3339 0713 01       		.byte	0x1
 3340 0714 D009     		.2byte	0x9d0
 3341 0716 00000000 		.4byte	.LFB34
 3342 071a 34000000 		.4byte	.LFE34-.LFB34
 3343 071e 01       		.uleb128 0x1
 3344 071f 9C       		.byte	0x9c
 3345 0720 88070000 		.4byte	0x788
 3346 0724 0F       		.uleb128 0xf
 3347 0725 A1070000 		.4byte	.LASF77
 3348 0729 01       		.byte	0x1
 3349 072a D009     		.2byte	0x9d0
 3350 072c 83000000 		.4byte	0x83
 3351 0730 1F050000 		.4byte	.LLST26
 3352 0734 10       		.uleb128 0x10
 3353 0735 7B070000 		.4byte	.LASF68
 3354 0739 01       		.byte	0x1
 3355 073a D209     		.2byte	0x9d2
 3356 073c 83000000 		.4byte	0x83
 3357 0740 4B050000 		.4byte	.LLST27
 3358 0744 0C       		.uleb128 0xc
 3359 0745 66060000 		.4byte	.LASF78
 3360 0749 01       		.byte	0x1
 3361 074a D309     		.2byte	0x9d3
 3362 074c 83000000 		.4byte	0x83
 3363 0750 01       		.uleb128 0x1
 3364 0751 50       		.byte	0x50
 3365 0752 1B       		.uleb128 0x1b
 3366 0753 0A000000 		.4byte	.LVL112
 3367 0757 D0040000 		.4byte	0x4d0
 3368 075b 65070000 		.4byte	0x765
 3369 075f 18       		.uleb128 0x18
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 131


 3370 0760 01       		.uleb128 0x1
 3371 0761 50       		.byte	0x50
 3372 0762 01       		.uleb128 0x1
 3373 0763 30       		.byte	0x30
 3374 0764 00       		.byte	0
 3375 0765 1B       		.uleb128 0x1b
 3376 0766 12000000 		.4byte	.LVL113
 3377 076a D0040000 		.4byte	0x4d0
 3378 076e 78070000 		.4byte	0x778
 3379 0772 18       		.uleb128 0x18
 3380 0773 01       		.uleb128 0x1
 3381 0774 50       		.byte	0x50
 3382 0775 01       		.uleb128 0x1
 3383 0776 31       		.byte	0x31
 3384 0777 00       		.byte	0
 3385 0778 17       		.uleb128 0x17
 3386 0779 1A000000 		.4byte	.LVL114
 3387 077d D0040000 		.4byte	0x4d0
 3388 0781 18       		.uleb128 0x18
 3389 0782 01       		.uleb128 0x1
 3390 0783 50       		.byte	0x50
 3391 0784 01       		.uleb128 0x1
 3392 0785 32       		.byte	0x32
 3393 0786 00       		.byte	0
 3394 0787 00       		.byte	0
 3395 0788 14       		.uleb128 0x14
 3396 0789 EA040000 		.4byte	.LASF79
 3397 078d 01       		.byte	0x1
 3398 078e F009     		.2byte	0x9f0
 3399 0790 83000000 		.4byte	0x83
 3400 0794 00000000 		.4byte	.LFB35
 3401 0798 14000000 		.4byte	.LFE35-.LFB35
 3402 079c 01       		.uleb128 0x1
 3403 079d 9C       		.byte	0x9c
 3404 079e 12       		.uleb128 0x12
 3405 079f 9C060000 		.4byte	.LASF80
 3406 07a3 01       		.byte	0x1
 3407 07a4 030A     		.2byte	0xa03
 3408 07a6 00000000 		.4byte	.LFB36
 3409 07aa 58000000 		.4byte	.LFE36-.LFB36
 3410 07ae 01       		.uleb128 0x1
 3411 07af 9C       		.byte	0x9c
 3412 07b0 0A080000 		.4byte	0x80a
 3413 07b4 0F       		.uleb128 0xf
 3414 07b5 3A000000 		.4byte	.LASF66
 3415 07b9 01       		.byte	0x1
 3416 07ba 030A     		.2byte	0xa03
 3417 07bc 83000000 		.4byte	0x83
 3418 07c0 74050000 		.4byte	.LLST28
 3419 07c4 0F       		.uleb128 0xf
 3420 07c5 E4040000 		.4byte	.LASF48
 3421 07c9 01       		.byte	0x1
 3422 07ca 030A     		.2byte	0xa03
 3423 07cc 83000000 		.4byte	0x83
 3424 07d0 A0050000 		.4byte	.LLST29
 3425 07d4 10       		.uleb128 0x10
 3426 07d5 DC010000 		.4byte	.LASF81
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 132


 3427 07d9 01       		.byte	0x1
 3428 07da 050A     		.2byte	0xa05
 3429 07dc 83000000 		.4byte	0x83
 3430 07e0 CC050000 		.4byte	.LLST30
 3431 07e4 1B       		.uleb128 0x1b
 3432 07e5 10000000 		.4byte	.LVL122
 3433 07e9 C90C0000 		.4byte	0xcc9
 3434 07ed F7070000 		.4byte	0x7f7
 3435 07f1 18       		.uleb128 0x18
 3436 07f2 01       		.uleb128 0x1
 3437 07f3 50       		.byte	0x50
 3438 07f4 01       		.uleb128 0x1
 3439 07f5 30       		.byte	0x30
 3440 07f6 00       		.byte	0
 3441 07f7 15       		.uleb128 0x15
 3442 07f8 22000000 		.4byte	.LVL123
 3443 07fc DA0C0000 		.4byte	0xcda
 3444 0800 15       		.uleb128 0x15
 3445 0801 4A000000 		.4byte	.LVL130
 3446 0805 DA0C0000 		.4byte	0xcda
 3447 0809 00       		.byte	0
 3448 080a 12       		.uleb128 0x12
 3449 080b 8A070000 		.4byte	.LASF82
 3450 080f 01       		.byte	0x1
 3451 0810 290A     		.2byte	0xa29
 3452 0812 00000000 		.4byte	.LFB37
 3453 0816 2C000000 		.4byte	.LFE37-.LFB37
 3454 081a 01       		.uleb128 0x1
 3455 081b 9C       		.byte	0x9c
 3456 081c 50080000 		.4byte	0x850
 3457 0820 0F       		.uleb128 0xf
 3458 0821 CE010000 		.4byte	.LASF83
 3459 0825 01       		.byte	0x1
 3460 0826 290A     		.2byte	0xa29
 3461 0828 83000000 		.4byte	0x83
 3462 082c F5050000 		.4byte	.LLST31
 3463 0830 10       		.uleb128 0x10
 3464 0831 7B070000 		.4byte	.LASF68
 3465 0835 01       		.byte	0x1
 3466 0836 2B0A     		.2byte	0xa2b
 3467 0838 83000000 		.4byte	0x83
 3468 083c 21060000 		.4byte	.LLST32
 3469 0840 17       		.uleb128 0x17
 3470 0841 0A000000 		.4byte	.LVL134
 3471 0845 D0040000 		.4byte	0x4d0
 3472 0849 18       		.uleb128 0x18
 3473 084a 01       		.uleb128 0x1
 3474 084b 50       		.byte	0x50
 3475 084c 01       		.uleb128 0x1
 3476 084d 32       		.byte	0x32
 3477 084e 00       		.byte	0
 3478 084f 00       		.byte	0
 3479 0850 14       		.uleb128 0x14
 3480 0851 05040000 		.4byte	.LASF84
 3481 0855 01       		.byte	0x1
 3482 0856 400A     		.2byte	0xa40
 3483 0858 83000000 		.4byte	0x83
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 133


 3484 085c 00000000 		.4byte	.LFB38
 3485 0860 10000000 		.4byte	.LFE38-.LFB38
 3486 0864 01       		.uleb128 0x1
 3487 0865 9C       		.byte	0x9c
 3488 0866 16       		.uleb128 0x16
 3489 0867 45000000 		.4byte	.LASF85
 3490 086b 01       		.byte	0x1
 3491 086c 520A     		.2byte	0xa52
 3492 086e 83000000 		.4byte	0x83
 3493 0872 00000000 		.4byte	.LFB39
 3494 0876 20000000 		.4byte	.LFE39-.LFB39
 3495 087a 01       		.uleb128 0x1
 3496 087b 9C       		.byte	0x9c
 3497 087c A0080000 		.4byte	0x8a0
 3498 0880 0F       		.uleb128 0xf
 3499 0881 3A000000 		.4byte	.LASF66
 3500 0885 01       		.byte	0x1
 3501 0886 520A     		.2byte	0xa52
 3502 0888 83000000 		.4byte	0x83
 3503 088c 4A060000 		.4byte	.LLST33
 3504 0890 17       		.uleb128 0x17
 3505 0891 0E000000 		.4byte	.LVL142
 3506 0895 C90C0000 		.4byte	0xcc9
 3507 0899 18       		.uleb128 0x18
 3508 089a 01       		.uleb128 0x1
 3509 089b 50       		.byte	0x50
 3510 089c 01       		.uleb128 0x1
 3511 089d 30       		.byte	0x30
 3512 089e 00       		.byte	0
 3513 089f 00       		.byte	0
 3514 08a0 16       		.uleb128 0x16
 3515 08a1 D1040000 		.4byte	.LASF86
 3516 08a5 01       		.byte	0x1
 3517 08a6 680A     		.2byte	0xa68
 3518 08a8 83000000 		.4byte	0x83
 3519 08ac 00000000 		.4byte	.LFB40
 3520 08b0 3C000000 		.4byte	.LFE40-.LFB40
 3521 08b4 01       		.uleb128 0x1
 3522 08b5 9C       		.byte	0x9c
 3523 08b6 EA080000 		.4byte	0x8ea
 3524 08ba 0F       		.uleb128 0xf
 3525 08bb 3A000000 		.4byte	.LASF66
 3526 08bf 01       		.byte	0x1
 3527 08c0 680A     		.2byte	0xa68
 3528 08c2 83000000 		.4byte	0x83
 3529 08c6 76060000 		.4byte	.LLST34
 3530 08ca 10       		.uleb128 0x10
 3531 08cb DC010000 		.4byte	.LASF81
 3532 08cf 01       		.byte	0x1
 3533 08d0 6A0A     		.2byte	0xa6a
 3534 08d2 83000000 		.4byte	0x83
 3535 08d6 E2060000 		.4byte	.LLST35
 3536 08da 17       		.uleb128 0x17
 3537 08db 2E000000 		.4byte	.LVL155
 3538 08df C90C0000 		.4byte	0xcc9
 3539 08e3 18       		.uleb128 0x18
 3540 08e4 01       		.uleb128 0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 134


 3541 08e5 50       		.byte	0x50
 3542 08e6 01       		.uleb128 0x1
 3543 08e7 30       		.byte	0x30
 3544 08e8 00       		.byte	0
 3545 08e9 00       		.byte	0
 3546 08ea 14       		.uleb128 0x14
 3547 08eb 26030000 		.4byte	.LASF87
 3548 08ef 01       		.byte	0x1
 3549 08f0 940A     		.2byte	0xa94
 3550 08f2 83000000 		.4byte	0x83
 3551 08f6 00000000 		.4byte	.LFB41
 3552 08fa 14000000 		.4byte	.LFE41-.LFB41
 3553 08fe 01       		.uleb128 0x1
 3554 08ff 9C       		.byte	0x9c
 3555 0900 12       		.uleb128 0x12
 3556 0901 C8070000 		.4byte	.LASF88
 3557 0905 01       		.byte	0x1
 3558 0906 A90A     		.2byte	0xaa9
 3559 0908 00000000 		.4byte	.LFB42
 3560 090c 30000000 		.4byte	.LFE42-.LFB42
 3561 0910 01       		.uleb128 0x1
 3562 0911 9C       		.byte	0x9c
 3563 0912 49090000 		.4byte	0x949
 3564 0916 0F       		.uleb128 0xf
 3565 0917 EE020000 		.4byte	.LASF74
 3566 091b 01       		.byte	0x1
 3567 091c A90A     		.2byte	0xaa9
 3568 091e 83000000 		.4byte	0x83
 3569 0922 46070000 		.4byte	.LLST36
 3570 0926 10       		.uleb128 0x10
 3571 0927 75010000 		.4byte	.LASF64
 3572 092b 01       		.byte	0x1
 3573 092c AB0A     		.2byte	0xaab
 3574 092e 6B000000 		.4byte	0x6b
 3575 0932 83070000 		.4byte	.LLST37
 3576 0936 15       		.uleb128 0x15
 3577 0937 08000000 		.4byte	.LVL158
 3578 093b EB0C0000 		.4byte	0xceb
 3579 093f 15       		.uleb128 0x15
 3580 0940 20000000 		.4byte	.LVL160
 3581 0944 F60C0000 		.4byte	0xcf6
 3582 0948 00       		.byte	0
 3583 0949 16       		.uleb128 0x16
 3584 094a 2C070000 		.4byte	.LASF89
 3585 094e 01       		.byte	0x1
 3586 094f D00A     		.2byte	0xad0
 3587 0951 F3000000 		.4byte	0xf3
 3588 0955 00000000 		.4byte	.LFB43
 3589 0959 20000000 		.4byte	.LFE43-.LFB43
 3590 095d 01       		.uleb128 0x1
 3591 095e 9C       		.byte	0x9c
 3592 095f A3090000 		.4byte	0x9a3
 3593 0963 0F       		.uleb128 0xf
 3594 0964 3A000000 		.4byte	.LASF66
 3595 0968 01       		.byte	0x1
 3596 0969 D00A     		.2byte	0xad0
 3597 096b 83000000 		.4byte	0x83
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 135


 3598 096f 96070000 		.4byte	.LLST38
 3599 0973 0F       		.uleb128 0xf
 3600 0974 6C010000 		.4byte	.LASF58
 3601 0978 01       		.byte	0x1
 3602 0979 D00A     		.2byte	0xad0
 3603 097b F3000000 		.4byte	0xf3
 3604 097f D0070000 		.4byte	.LLST39
 3605 0983 10       		.uleb128 0x10
 3606 0984 8F020000 		.4byte	.LASF59
 3607 0988 01       		.byte	0x1
 3608 0989 D20A     		.2byte	0xad2
 3609 098b F3000000 		.4byte	0xf3
 3610 098f F1070000 		.4byte	.LLST40
 3611 0993 17       		.uleb128 0x17
 3612 0994 18000000 		.4byte	.LVL167
 3613 0998 C90C0000 		.4byte	0xcc9
 3614 099c 18       		.uleb128 0x18
 3615 099d 01       		.uleb128 0x1
 3616 099e 50       		.byte	0x50
 3617 099f 01       		.uleb128 0x1
 3618 09a0 30       		.byte	0x30
 3619 09a1 00       		.byte	0
 3620 09a2 00       		.byte	0
 3621 09a3 16       		.uleb128 0x16
 3622 09a4 FA020000 		.4byte	.LASF90
 3623 09a8 01       		.byte	0x1
 3624 09a9 F00A     		.2byte	0xaf0
 3625 09ab F3000000 		.4byte	0xf3
 3626 09af 00000000 		.4byte	.LFB44
 3627 09b3 20000000 		.4byte	.LFE44-.LFB44
 3628 09b7 01       		.uleb128 0x1
 3629 09b8 9C       		.byte	0x9c
 3630 09b9 ED090000 		.4byte	0x9ed
 3631 09bd 0F       		.uleb128 0xf
 3632 09be 3A000000 		.4byte	.LASF66
 3633 09c2 01       		.byte	0x1
 3634 09c3 F00A     		.2byte	0xaf0
 3635 09c5 83000000 		.4byte	0x83
 3636 09c9 27080000 		.4byte	.LLST41
 3637 09cd 10       		.uleb128 0x10
 3638 09ce 59030000 		.4byte	.LASF91
 3639 09d2 01       		.byte	0x1
 3640 09d3 F20A     		.2byte	0xaf2
 3641 09d5 F3000000 		.4byte	0xf3
 3642 09d9 61080000 		.4byte	.LLST42
 3643 09dd 17       		.uleb128 0x17
 3644 09de 16000000 		.4byte	.LVL175
 3645 09e2 C90C0000 		.4byte	0xcc9
 3646 09e6 18       		.uleb128 0x18
 3647 09e7 01       		.uleb128 0x1
 3648 09e8 50       		.byte	0x50
 3649 09e9 01       		.uleb128 0x1
 3650 09ea 30       		.byte	0x30
 3651 09eb 00       		.byte	0
 3652 09ec 00       		.byte	0
 3653 09ed 12       		.uleb128 0x12
 3654 09ee B7000000 		.4byte	.LASF92
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 136


 3655 09f2 01       		.byte	0x1
 3656 09f3 0D0B     		.2byte	0xb0d
 3657 09f5 00000000 		.4byte	.LFB45
 3658 09f9 34000000 		.4byte	.LFE45-.LFB45
 3659 09fd 01       		.uleb128 0x1
 3660 09fe 9C       		.byte	0x9c
 3661 09ff 230A0000 		.4byte	0xa23
 3662 0a03 0F       		.uleb128 0xf
 3663 0a04 3A000000 		.4byte	.LASF66
 3664 0a08 01       		.byte	0x1
 3665 0a09 0D0B     		.2byte	0xb0d
 3666 0a0b 83000000 		.4byte	0x83
 3667 0a0f 97080000 		.4byte	.LLST43
 3668 0a13 17       		.uleb128 0x17
 3669 0a14 24000000 		.4byte	.LVL181
 3670 0a18 C90C0000 		.4byte	0xcc9
 3671 0a1c 18       		.uleb128 0x18
 3672 0a1d 01       		.uleb128 0x1
 3673 0a1e 50       		.byte	0x50
 3674 0a1f 01       		.uleb128 0x1
 3675 0a20 30       		.byte	0x30
 3676 0a21 00       		.byte	0
 3677 0a22 00       		.byte	0
 3678 0a23 12       		.uleb128 0x12
 3679 0a24 A4050000 		.4byte	.LASF93
 3680 0a28 01       		.byte	0x1
 3681 0a29 240B     		.2byte	0xb24
 3682 0a2b 00000000 		.4byte	.LFB46
 3683 0a2f 28000000 		.4byte	.LFE46-.LFB46
 3684 0a33 01       		.uleb128 0x1
 3685 0a34 9C       		.byte	0x9c
 3686 0a35 590A0000 		.4byte	0xa59
 3687 0a39 0F       		.uleb128 0xf
 3688 0a3a 3A000000 		.4byte	.LASF66
 3689 0a3e 01       		.byte	0x1
 3690 0a3f 240B     		.2byte	0xb24
 3691 0a41 83000000 		.4byte	0x83
 3692 0a45 D1080000 		.4byte	.LLST44
 3693 0a49 17       		.uleb128 0x17
 3694 0a4a 1C000000 		.4byte	.LVL186
 3695 0a4e C90C0000 		.4byte	0xcc9
 3696 0a52 18       		.uleb128 0x18
 3697 0a53 01       		.uleb128 0x1
 3698 0a54 50       		.byte	0x50
 3699 0a55 01       		.uleb128 0x1
 3700 0a56 30       		.byte	0x30
 3701 0a57 00       		.byte	0
 3702 0a58 00       		.byte	0
 3703 0a59 1A       		.uleb128 0x1a
 3704 0a5a 5E010000 		.4byte	.LASF94
 3705 0a5e 01       		.byte	0x1
 3706 0a5f 420B     		.2byte	0xb42
 3707 0a61 00000000 		.4byte	.LFB47
 3708 0a65 A4000000 		.4byte	.LFE47-.LFB47
 3709 0a69 01       		.uleb128 0x1
 3710 0a6a 9C       		.byte	0x9c
 3711 0a6b A90A0000 		.4byte	0xaa9
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 137


 3712 0a6f 1B       		.uleb128 0x1b
 3713 0a70 36000000 		.4byte	.LVL188
 3714 0a74 00090000 		.4byte	0x900
 3715 0a78 820A0000 		.4byte	0xa82
 3716 0a7c 18       		.uleb128 0x18
 3717 0a7d 01       		.uleb128 0x1
 3718 0a7e 50       		.byte	0x50
 3719 0a7f 01       		.uleb128 0x1
 3720 0a80 34       		.byte	0x34
 3721 0a81 00       		.byte	0
 3722 0a82 1B       		.uleb128 0x1b
 3723 0a83 70000000 		.4byte	.LVL190
 3724 0a87 00090000 		.4byte	0x900
 3725 0a8b 970A0000 		.4byte	0xa97
 3726 0a8f 18       		.uleb128 0x18
 3727 0a90 01       		.uleb128 0x1
 3728 0a91 50       		.byte	0x50
 3729 0a92 03       		.uleb128 0x3
 3730 0a93 0A       		.byte	0xa
 3731 0a94 0004     		.2byte	0x400
 3732 0a96 00       		.byte	0
 3733 0a97 17       		.uleb128 0x17
 3734 0a98 92000000 		.4byte	.LVL192
 3735 0a9c 00090000 		.4byte	0x900
 3736 0aa0 18       		.uleb128 0x18
 3737 0aa1 01       		.uleb128 0x1
 3738 0aa2 50       		.byte	0x50
 3739 0aa3 03       		.uleb128 0x3
 3740 0aa4 40       		.byte	0x40
 3741 0aa5 3E       		.byte	0x3e
 3742 0aa6 24       		.byte	0x24
 3743 0aa7 00       		.byte	0
 3744 0aa8 00       		.byte	0
 3745 0aa9 12       		.uleb128 0x12
 3746 0aaa F6050000 		.4byte	.LASF95
 3747 0aae 01       		.byte	0x1
 3748 0aaf 7F0B     		.2byte	0xb7f
 3749 0ab1 00000000 		.4byte	.LFB48
 3750 0ab5 20000000 		.4byte	.LFE48-.LFB48
 3751 0ab9 01       		.uleb128 0x1
 3752 0aba 9C       		.byte	0x9c
 3753 0abb D00A0000 		.4byte	0xad0
 3754 0abf 0F       		.uleb128 0xf
 3755 0ac0 39020000 		.4byte	.LASF96
 3756 0ac4 01       		.byte	0x1
 3757 0ac5 7F0B     		.2byte	0xb7f
 3758 0ac7 83000000 		.4byte	0x83
 3759 0acb 0B090000 		.4byte	.LLST45
 3760 0acf 00       		.byte	0
 3761 0ad0 12       		.uleb128 0x12
 3762 0ad1 5A050000 		.4byte	.LASF97
 3763 0ad5 01       		.byte	0x1
 3764 0ad6 580C     		.2byte	0xc58
 3765 0ad8 00000000 		.4byte	.LFB50
 3766 0adc 6C000000 		.4byte	.LFE50-.LFB50
 3767 0ae0 01       		.uleb128 0x1
 3768 0ae1 9C       		.byte	0x9c
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 138


 3769 0ae2 8C0B0000 		.4byte	0xb8c
 3770 0ae6 0F       		.uleb128 0xf
 3771 0ae7 3A000000 		.4byte	.LASF66
 3772 0aeb 01       		.byte	0x1
 3773 0aec 580C     		.2byte	0xc58
 3774 0aee 83000000 		.4byte	0x83
 3775 0af2 2C090000 		.4byte	.LLST46
 3776 0af6 0F       		.uleb128 0xf
 3777 0af7 71070000 		.4byte	.LASF98
 3778 0afb 01       		.byte	0x1
 3779 0afc 580C     		.2byte	0xc58
 3780 0afe DD000000 		.4byte	0xdd
 3781 0b02 58090000 		.4byte	.LLST47
 3782 0b06 0F       		.uleb128 0xf
 3783 0b07 E4040000 		.4byte	.LASF48
 3784 0b0b 01       		.byte	0x1
 3785 0b0c 580C     		.2byte	0xc58
 3786 0b0e 83000000 		.4byte	0x83
 3787 0b12 79090000 		.4byte	.LLST48
 3788 0b16 10       		.uleb128 0x10
 3789 0b17 23070000 		.4byte	.LASF99
 3790 0b1b 01       		.byte	0x1
 3791 0b1c 5A0C     		.2byte	0xc5a
 3792 0b1e 83000000 		.4byte	0x83
 3793 0b22 A5090000 		.4byte	.LLST49
 3794 0b26 1B       		.uleb128 0x1b
 3795 0b27 10000000 		.4byte	.LVL196
 3796 0b2b 1C060000 		.4byte	0x61c
 3797 0b2f 3A0B0000 		.4byte	0xb3a
 3798 0b33 18       		.uleb128 0x18
 3799 0b34 01       		.uleb128 0x1
 3800 0b35 50       		.byte	0x50
 3801 0b36 02       		.uleb128 0x2
 3802 0b37 74       		.byte	0x74
 3803 0b38 00       		.sleb128 0
 3804 0b39 00       		.byte	0
 3805 0b3a 1B       		.uleb128 0x1b
 3806 0b3b 24000000 		.4byte	.LVL197
 3807 0b3f A0080000 		.4byte	0x8a0
 3808 0b43 4E0B0000 		.4byte	0xb4e
 3809 0b47 18       		.uleb128 0x18
 3810 0b48 01       		.uleb128 0x1
 3811 0b49 50       		.byte	0x50
 3812 0b4a 02       		.uleb128 0x2
 3813 0b4b 74       		.byte	0x74
 3814 0b4c 00       		.sleb128 0
 3815 0b4d 00       		.byte	0
 3816 0b4e 1B       		.uleb128 0x1b
 3817 0b4f 2E000000 		.4byte	.LVL199
 3818 0b53 A0080000 		.4byte	0x8a0
 3819 0b57 620B0000 		.4byte	0xb62
 3820 0b5b 18       		.uleb128 0x18
 3821 0b5c 01       		.uleb128 0x1
 3822 0b5d 50       		.byte	0x50
 3823 0b5e 02       		.uleb128 0x2
 3824 0b5f 74       		.byte	0x74
 3825 0b60 00       		.sleb128 0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 139


 3826 0b61 00       		.byte	0
 3827 0b62 1B       		.uleb128 0x1b
 3828 0b63 42000000 		.4byte	.LVL202
 3829 0b67 9E070000 		.4byte	0x79e
 3830 0b6b 7C0B0000 		.4byte	0xb7c
 3831 0b6f 18       		.uleb128 0x18
 3832 0b70 01       		.uleb128 0x1
 3833 0b71 51       		.byte	0x51
 3834 0b72 02       		.uleb128 0x2
 3835 0b73 75       		.byte	0x75
 3836 0b74 00       		.sleb128 0
 3837 0b75 18       		.uleb128 0x18
 3838 0b76 01       		.uleb128 0x1
 3839 0b77 50       		.byte	0x50
 3840 0b78 02       		.uleb128 0x2
 3841 0b79 74       		.byte	0x74
 3842 0b7a 00       		.sleb128 0
 3843 0b7b 00       		.byte	0
 3844 0b7c 17       		.uleb128 0x17
 3845 0b7d 5A000000 		.4byte	.LVL205
 3846 0b81 C90C0000 		.4byte	0xcc9
 3847 0b85 18       		.uleb128 0x18
 3848 0b86 01       		.uleb128 0x1
 3849 0b87 50       		.byte	0x50
 3850 0b88 01       		.uleb128 0x1
 3851 0b89 30       		.byte	0x30
 3852 0b8a 00       		.byte	0
 3853 0b8b 00       		.byte	0
 3854 0b8c 12       		.uleb128 0x12
 3855 0b8d 94050000 		.4byte	.LASF100
 3856 0b91 01       		.byte	0x1
 3857 0b92 D70B     		.2byte	0xbd7
 3858 0b94 00000000 		.4byte	.LFB49
 3859 0b98 3C000000 		.4byte	.LFE49-.LFB49
 3860 0b9c 01       		.uleb128 0x1
 3861 0b9d 9C       		.byte	0x9c
 3862 0b9e 440C0000 		.4byte	0xc44
 3863 0ba2 0F       		.uleb128 0xf
 3864 0ba3 3A000000 		.4byte	.LASF66
 3865 0ba7 01       		.byte	0x1
 3866 0ba8 D70B     		.2byte	0xbd7
 3867 0baa 83000000 		.4byte	0x83
 3868 0bae E2090000 		.4byte	.LLST50
 3869 0bb2 0F       		.uleb128 0xf
 3870 0bb3 71070000 		.4byte	.LASF98
 3871 0bb7 01       		.byte	0x1
 3872 0bb8 D70B     		.2byte	0xbd7
 3873 0bba DD000000 		.4byte	0xdd
 3874 0bbe 0E0A0000 		.4byte	.LLST51
 3875 0bc2 0F       		.uleb128 0xf
 3876 0bc3 E6050000 		.4byte	.LASF101
 3877 0bc7 01       		.byte	0x1
 3878 0bc8 D70B     		.2byte	0xbd7
 3879 0bca 83000000 		.4byte	0x83
 3880 0bce 2F0A0000 		.4byte	.LLST52
 3881 0bd2 10       		.uleb128 0x10
 3882 0bd3 DC010000 		.4byte	.LASF81
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 140


 3883 0bd7 01       		.byte	0x1
 3884 0bd8 D90B     		.2byte	0xbd9
 3885 0bda 83000000 		.4byte	0x83
 3886 0bde 5B0A0000 		.4byte	.LLST53
 3887 0be2 10       		.uleb128 0x10
 3888 0be3 9B030000 		.4byte	.LASF102
 3889 0be7 01       		.byte	0x1
 3890 0be8 DA0B     		.2byte	0xbda
 3891 0bea 83000000 		.4byte	0x83
 3892 0bee 6E0A0000 		.4byte	.LLST54
 3893 0bf2 1B       		.uleb128 0x1b
 3894 0bf3 10000000 		.4byte	.LVL209
 3895 0bf7 1C060000 		.4byte	0x61c
 3896 0bfb 060C0000 		.4byte	0xc06
 3897 0bff 18       		.uleb128 0x18
 3898 0c00 01       		.uleb128 0x1
 3899 0c01 50       		.byte	0x50
 3900 0c02 02       		.uleb128 0x2
 3901 0c03 74       		.byte	0x74
 3902 0c04 00       		.sleb128 0
 3903 0c05 00       		.byte	0
 3904 0c06 1B       		.uleb128 0x1b
 3905 0c07 20000000 		.4byte	.LVL210
 3906 0c0b A0080000 		.4byte	0x8a0
 3907 0c0f 1A0C0000 		.4byte	0xc1a
 3908 0c13 18       		.uleb128 0x18
 3909 0c14 01       		.uleb128 0x1
 3910 0c15 50       		.byte	0x50
 3911 0c16 02       		.uleb128 0x2
 3912 0c17 74       		.byte	0x74
 3913 0c18 00       		.sleb128 0
 3914 0c19 00       		.byte	0
 3915 0c1a 1B       		.uleb128 0x1b
 3916 0c1b 2E000000 		.4byte	.LVL213
 3917 0c1f D00A0000 		.4byte	0xad0
 3918 0c23 340C0000 		.4byte	0xc34
 3919 0c27 18       		.uleb128 0x18
 3920 0c28 01       		.uleb128 0x1
 3921 0c29 51       		.byte	0x51
 3922 0c2a 02       		.uleb128 0x2
 3923 0c2b 76       		.byte	0x76
 3924 0c2c 00       		.sleb128 0
 3925 0c2d 18       		.uleb128 0x18
 3926 0c2e 01       		.uleb128 0x1
 3927 0c2f 50       		.byte	0x50
 3928 0c30 02       		.uleb128 0x2
 3929 0c31 74       		.byte	0x74
 3930 0c32 00       		.sleb128 0
 3931 0c33 00       		.byte	0
 3932 0c34 17       		.uleb128 0x17
 3933 0c35 36000000 		.4byte	.LVL214
 3934 0c39 C90C0000 		.4byte	0xcc9
 3935 0c3d 18       		.uleb128 0x18
 3936 0c3e 01       		.uleb128 0x1
 3937 0c3f 50       		.byte	0x50
 3938 0c40 01       		.uleb128 0x1
 3939 0c41 30       		.byte	0x30
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 141


 3940 0c42 00       		.byte	0
 3941 0c43 00       		.byte	0
 3942 0c44 1C       		.uleb128 0x1c
 3943 0c45 E1070000 		.4byte	.LASF103
 3944 0c49 01       		.byte	0x1
 3945 0c4a 37       		.byte	0x37
 3946 0c4b BC000000 		.4byte	0xbc
 3947 0c4f 05       		.uleb128 0x5
 3948 0c50 03       		.byte	0x3
 3949 0c51 14000000 		.4byte	disableTimerServicedIsr
 3950 0c55 1C       		.uleb128 0x1c
 3951 0c56 82020000 		.4byte	.LASF104
 3952 0c5a 01       		.byte	0x1
 3953 0c5b 38       		.byte	0x38
 3954 0c5c BC000000 		.4byte	0xbc
 3955 0c60 05       		.uleb128 0x5
 3956 0c61 03       		.byte	0x3
 3957 0c62 00000000 		.4byte	timerIsrMask
 3958 0c66 1D       		.uleb128 0x1d
 3959 0c67 83000000 		.4byte	0x83
 3960 0c6b 760C0000 		.4byte	0xc76
 3961 0c6f 1E       		.uleb128 0x1e
 3962 0c70 FE000000 		.4byte	0xfe
 3963 0c74 02       		.byte	0x2
 3964 0c75 00       		.byte	0
 3965 0c76 1C       		.uleb128 0x1c
 3966 0c77 84030000 		.4byte	.LASF105
 3967 0c7b 01       		.byte	0x1
 3968 0c7c 3C       		.byte	0x3c
 3969 0c7d 870C0000 		.4byte	0xc87
 3970 0c81 05       		.uleb128 0x5
 3971 0c82 03       		.byte	0x3
 3972 0c83 00000000 		.4byte	counterTimerIntMaskTbl
 3973 0c87 1F       		.uleb128 0x1f
 3974 0c88 660C0000 		.4byte	0xc66
 3975 0c8c 1D       		.uleb128 0x1d
 3976 0c8d F3000000 		.4byte	0xf3
 3977 0c91 9C0C0000 		.4byte	0xc9c
 3978 0c95 1E       		.uleb128 0x1e
 3979 0c96 FE000000 		.4byte	0xfe
 3980 0c9a 02       		.byte	0x2
 3981 0c9b 00       		.byte	0
 3982 0c9c 1C       		.uleb128 0x1c
 3983 0c9d 68000000 		.4byte	.LASF106
 3984 0ca1 01       		.byte	0x1
 3985 0ca2 40       		.byte	0x40
 3986 0ca3 8C0C0000 		.4byte	0xc8c
 3987 0ca7 05       		.uleb128 0x5
 3988 0ca8 03       		.byte	0x3
 3989 0ca9 08000000 		.4byte	cySysTimerCallback
 3990 0cad 1C       		.uleb128 0x1c
 3991 0cae 1D000000 		.4byte	.LASF107
 3992 0cb2 01       		.byte	0x1
 3993 0cb3 46       		.byte	0x46
 3994 0cb4 E8000000 		.4byte	0xe8
 3995 0cb8 05       		.uleb128 0x5
 3996 0cb9 03       		.byte	0x3
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 142


 3997 0cba 04000000 		.4byte	cySysWdtCallback
 3998 0cbe 20       		.uleb128 0x20
 3999 0cbf 1D050000 		.4byte	.LASF115
 4000 0cc3 04       		.byte	0x4
 4001 0cc4 D4       		.byte	0xd4
 4002 0cc5 83000000 		.4byte	0x83
 4003 0cc9 21       		.uleb128 0x21
 4004 0cca B9050000 		.4byte	.LASF108
 4005 0cce 04       		.byte	0x4
 4006 0ccf E7       		.byte	0xe7
 4007 0cd0 DA0C0000 		.4byte	0xcda
 4008 0cd4 22       		.uleb128 0x22
 4009 0cd5 6B000000 		.4byte	0x6b
 4010 0cd9 00       		.byte	0
 4011 0cda 21       		.uleb128 0x21
 4012 0cdb A8010000 		.4byte	.LASF109
 4013 0cdf 04       		.byte	0x4
 4014 0ce0 DA       		.byte	0xda
 4015 0ce1 EB0C0000 		.4byte	0xceb
 4016 0ce5 22       		.uleb128 0x22
 4017 0ce6 77000000 		.4byte	0x77
 4018 0cea 00       		.byte	0
 4019 0ceb 23       		.uleb128 0x23
 4020 0cec 5B040000 		.4byte	.LASF116
 4021 0cf0 04       		.byte	0x4
 4022 0cf1 E5       		.byte	0xe5
 4023 0cf2 6B000000 		.4byte	0x6b
 4024 0cf6 24       		.uleb128 0x24
 4025 0cf7 07000000 		.4byte	.LASF117
 4026 0cfb 04       		.byte	0x4
 4027 0cfc E6       		.byte	0xe6
 4028 0cfd 22       		.uleb128 0x22
 4029 0cfe 6B000000 		.4byte	0x6b
 4030 0d02 00       		.byte	0
 4031 0d03 00       		.byte	0
 4032              		.section	.debug_abbrev,"",%progbits
 4033              	.Ldebug_abbrev0:
 4034 0000 01       		.uleb128 0x1
 4035 0001 11       		.uleb128 0x11
 4036 0002 01       		.byte	0x1
 4037 0003 25       		.uleb128 0x25
 4038 0004 0E       		.uleb128 0xe
 4039 0005 13       		.uleb128 0x13
 4040 0006 0B       		.uleb128 0xb
 4041 0007 03       		.uleb128 0x3
 4042 0008 0E       		.uleb128 0xe
 4043 0009 1B       		.uleb128 0x1b
 4044 000a 0E       		.uleb128 0xe
 4045 000b 55       		.uleb128 0x55
 4046 000c 17       		.uleb128 0x17
 4047 000d 11       		.uleb128 0x11
 4048 000e 01       		.uleb128 0x1
 4049 000f 10       		.uleb128 0x10
 4050 0010 17       		.uleb128 0x17
 4051 0011 00       		.byte	0
 4052 0012 00       		.byte	0
 4053 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 143


 4054 0014 24       		.uleb128 0x24
 4055 0015 00       		.byte	0
 4056 0016 0B       		.uleb128 0xb
 4057 0017 0B       		.uleb128 0xb
 4058 0018 3E       		.uleb128 0x3e
 4059 0019 0B       		.uleb128 0xb
 4060 001a 03       		.uleb128 0x3
 4061 001b 0E       		.uleb128 0xe
 4062 001c 00       		.byte	0
 4063 001d 00       		.byte	0
 4064 001e 03       		.uleb128 0x3
 4065 001f 24       		.uleb128 0x24
 4066 0020 00       		.byte	0
 4067 0021 0B       		.uleb128 0xb
 4068 0022 0B       		.uleb128 0xb
 4069 0023 3E       		.uleb128 0x3e
 4070 0024 0B       		.uleb128 0xb
 4071 0025 03       		.uleb128 0x3
 4072 0026 08       		.uleb128 0x8
 4073 0027 00       		.byte	0
 4074 0028 00       		.byte	0
 4075 0029 04       		.uleb128 0x4
 4076 002a 16       		.uleb128 0x16
 4077 002b 00       		.byte	0
 4078 002c 03       		.uleb128 0x3
 4079 002d 0E       		.uleb128 0xe
 4080 002e 3A       		.uleb128 0x3a
 4081 002f 0B       		.uleb128 0xb
 4082 0030 3B       		.uleb128 0x3b
 4083 0031 05       		.uleb128 0x5
 4084 0032 49       		.uleb128 0x49
 4085 0033 13       		.uleb128 0x13
 4086 0034 00       		.byte	0
 4087 0035 00       		.byte	0
 4088 0036 05       		.uleb128 0x5
 4089 0037 35       		.uleb128 0x35
 4090 0038 00       		.byte	0
 4091 0039 49       		.uleb128 0x49
 4092 003a 13       		.uleb128 0x13
 4093 003b 00       		.byte	0
 4094 003c 00       		.byte	0
 4095 003d 06       		.uleb128 0x6
 4096 003e 0F       		.uleb128 0xf
 4097 003f 00       		.byte	0
 4098 0040 0B       		.uleb128 0xb
 4099 0041 0B       		.uleb128 0xb
 4100 0042 49       		.uleb128 0x49
 4101 0043 13       		.uleb128 0x13
 4102 0044 00       		.byte	0
 4103 0045 00       		.byte	0
 4104 0046 07       		.uleb128 0x7
 4105 0047 15       		.uleb128 0x15
 4106 0048 00       		.byte	0
 4107 0049 27       		.uleb128 0x27
 4108 004a 19       		.uleb128 0x19
 4109 004b 00       		.byte	0
 4110 004c 00       		.byte	0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 144


 4111 004d 08       		.uleb128 0x8
 4112 004e 04       		.uleb128 0x4
 4113 004f 01       		.byte	0x1
 4114 0050 0B       		.uleb128 0xb
 4115 0051 0B       		.uleb128 0xb
 4116 0052 3A       		.uleb128 0x3a
 4117 0053 0B       		.uleb128 0xb
 4118 0054 3B       		.uleb128 0x3b
 4119 0055 0B       		.uleb128 0xb
 4120 0056 01       		.uleb128 0x1
 4121 0057 13       		.uleb128 0x13
 4122 0058 00       		.byte	0
 4123 0059 00       		.byte	0
 4124 005a 09       		.uleb128 0x9
 4125 005b 28       		.uleb128 0x28
 4126 005c 00       		.byte	0
 4127 005d 03       		.uleb128 0x3
 4128 005e 0E       		.uleb128 0xe
 4129 005f 1C       		.uleb128 0x1c
 4130 0060 0D       		.uleb128 0xd
 4131 0061 00       		.byte	0
 4132 0062 00       		.byte	0
 4133 0063 0A       		.uleb128 0xa
 4134 0064 16       		.uleb128 0x16
 4135 0065 00       		.byte	0
 4136 0066 03       		.uleb128 0x3
 4137 0067 0E       		.uleb128 0xe
 4138 0068 3A       		.uleb128 0x3a
 4139 0069 0B       		.uleb128 0xb
 4140 006a 3B       		.uleb128 0x3b
 4141 006b 0B       		.uleb128 0xb
 4142 006c 49       		.uleb128 0x49
 4143 006d 13       		.uleb128 0x13
 4144 006e 00       		.byte	0
 4145 006f 00       		.byte	0
 4146 0070 0B       		.uleb128 0xb
 4147 0071 2E       		.uleb128 0x2e
 4148 0072 01       		.byte	0x1
 4149 0073 03       		.uleb128 0x3
 4150 0074 0E       		.uleb128 0xe
 4151 0075 3A       		.uleb128 0x3a
 4152 0076 0B       		.uleb128 0xb
 4153 0077 3B       		.uleb128 0x3b
 4154 0078 05       		.uleb128 0x5
 4155 0079 27       		.uleb128 0x27
 4156 007a 19       		.uleb128 0x19
 4157 007b 49       		.uleb128 0x49
 4158 007c 13       		.uleb128 0x13
 4159 007d 11       		.uleb128 0x11
 4160 007e 01       		.uleb128 0x1
 4161 007f 12       		.uleb128 0x12
 4162 0080 06       		.uleb128 0x6
 4163 0081 40       		.uleb128 0x40
 4164 0082 18       		.uleb128 0x18
 4165 0083 9742     		.uleb128 0x2117
 4166 0085 19       		.uleb128 0x19
 4167 0086 01       		.uleb128 0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 145


 4168 0087 13       		.uleb128 0x13
 4169 0088 00       		.byte	0
 4170 0089 00       		.byte	0
 4171 008a 0C       		.uleb128 0xc
 4172 008b 34       		.uleb128 0x34
 4173 008c 00       		.byte	0
 4174 008d 03       		.uleb128 0x3
 4175 008e 0E       		.uleb128 0xe
 4176 008f 3A       		.uleb128 0x3a
 4177 0090 0B       		.uleb128 0xb
 4178 0091 3B       		.uleb128 0x3b
 4179 0092 05       		.uleb128 0x5
 4180 0093 49       		.uleb128 0x49
 4181 0094 13       		.uleb128 0x13
 4182 0095 02       		.uleb128 0x2
 4183 0096 18       		.uleb128 0x18
 4184 0097 00       		.byte	0
 4185 0098 00       		.byte	0
 4186 0099 0D       		.uleb128 0xd
 4187 009a 2E       		.uleb128 0x2e
 4188 009b 00       		.byte	0
 4189 009c 3F       		.uleb128 0x3f
 4190 009d 19       		.uleb128 0x19
 4191 009e 03       		.uleb128 0x3
 4192 009f 0E       		.uleb128 0xe
 4193 00a0 3A       		.uleb128 0x3a
 4194 00a1 0B       		.uleb128 0xb
 4195 00a2 3B       		.uleb128 0x3b
 4196 00a3 0B       		.uleb128 0xb
 4197 00a4 27       		.uleb128 0x27
 4198 00a5 19       		.uleb128 0x19
 4199 00a6 11       		.uleb128 0x11
 4200 00a7 01       		.uleb128 0x1
 4201 00a8 12       		.uleb128 0x12
 4202 00a9 06       		.uleb128 0x6
 4203 00aa 40       		.uleb128 0x40
 4204 00ab 18       		.uleb128 0x18
 4205 00ac 9742     		.uleb128 0x2117
 4206 00ae 19       		.uleb128 0x19
 4207 00af 00       		.byte	0
 4208 00b0 00       		.byte	0
 4209 00b1 0E       		.uleb128 0xe
 4210 00b2 2E       		.uleb128 0x2e
 4211 00b3 01       		.byte	0x1
 4212 00b4 3F       		.uleb128 0x3f
 4213 00b5 19       		.uleb128 0x19
 4214 00b6 03       		.uleb128 0x3
 4215 00b7 0E       		.uleb128 0xe
 4216 00b8 3A       		.uleb128 0x3a
 4217 00b9 0B       		.uleb128 0xb
 4218 00ba 3B       		.uleb128 0x3b
 4219 00bb 05       		.uleb128 0x5
 4220 00bc 27       		.uleb128 0x27
 4221 00bd 19       		.uleb128 0x19
 4222 00be 49       		.uleb128 0x49
 4223 00bf 13       		.uleb128 0x13
 4224 00c0 11       		.uleb128 0x11
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 146


 4225 00c1 01       		.uleb128 0x1
 4226 00c2 12       		.uleb128 0x12
 4227 00c3 06       		.uleb128 0x6
 4228 00c4 40       		.uleb128 0x40
 4229 00c5 18       		.uleb128 0x18
 4230 00c6 9642     		.uleb128 0x2116
 4231 00c8 19       		.uleb128 0x19
 4232 00c9 01       		.uleb128 0x1
 4233 00ca 13       		.uleb128 0x13
 4234 00cb 00       		.byte	0
 4235 00cc 00       		.byte	0
 4236 00cd 0F       		.uleb128 0xf
 4237 00ce 05       		.uleb128 0x5
 4238 00cf 00       		.byte	0
 4239 00d0 03       		.uleb128 0x3
 4240 00d1 0E       		.uleb128 0xe
 4241 00d2 3A       		.uleb128 0x3a
 4242 00d3 0B       		.uleb128 0xb
 4243 00d4 3B       		.uleb128 0x3b
 4244 00d5 05       		.uleb128 0x5
 4245 00d6 49       		.uleb128 0x49
 4246 00d7 13       		.uleb128 0x13
 4247 00d8 02       		.uleb128 0x2
 4248 00d9 17       		.uleb128 0x17
 4249 00da 00       		.byte	0
 4250 00db 00       		.byte	0
 4251 00dc 10       		.uleb128 0x10
 4252 00dd 34       		.uleb128 0x34
 4253 00de 00       		.byte	0
 4254 00df 03       		.uleb128 0x3
 4255 00e0 0E       		.uleb128 0xe
 4256 00e1 3A       		.uleb128 0x3a
 4257 00e2 0B       		.uleb128 0xb
 4258 00e3 3B       		.uleb128 0x3b
 4259 00e4 05       		.uleb128 0x5
 4260 00e5 49       		.uleb128 0x49
 4261 00e6 13       		.uleb128 0x13
 4262 00e7 02       		.uleb128 0x2
 4263 00e8 17       		.uleb128 0x17
 4264 00e9 00       		.byte	0
 4265 00ea 00       		.byte	0
 4266 00eb 11       		.uleb128 0x11
 4267 00ec 2E       		.uleb128 0x2e
 4268 00ed 00       		.byte	0
 4269 00ee 03       		.uleb128 0x3
 4270 00ef 0E       		.uleb128 0xe
 4271 00f0 3A       		.uleb128 0x3a
 4272 00f1 0B       		.uleb128 0xb
 4273 00f2 3B       		.uleb128 0x3b
 4274 00f3 05       		.uleb128 0x5
 4275 00f4 27       		.uleb128 0x27
 4276 00f5 19       		.uleb128 0x19
 4277 00f6 20       		.uleb128 0x20
 4278 00f7 0B       		.uleb128 0xb
 4279 00f8 00       		.byte	0
 4280 00f9 00       		.byte	0
 4281 00fa 12       		.uleb128 0x12
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 147


 4282 00fb 2E       		.uleb128 0x2e
 4283 00fc 01       		.byte	0x1
 4284 00fd 3F       		.uleb128 0x3f
 4285 00fe 19       		.uleb128 0x19
 4286 00ff 03       		.uleb128 0x3
 4287 0100 0E       		.uleb128 0xe
 4288 0101 3A       		.uleb128 0x3a
 4289 0102 0B       		.uleb128 0xb
 4290 0103 3B       		.uleb128 0x3b
 4291 0104 05       		.uleb128 0x5
 4292 0105 27       		.uleb128 0x27
 4293 0106 19       		.uleb128 0x19
 4294 0107 11       		.uleb128 0x11
 4295 0108 01       		.uleb128 0x1
 4296 0109 12       		.uleb128 0x12
 4297 010a 06       		.uleb128 0x6
 4298 010b 40       		.uleb128 0x40
 4299 010c 18       		.uleb128 0x18
 4300 010d 9742     		.uleb128 0x2117
 4301 010f 19       		.uleb128 0x19
 4302 0110 01       		.uleb128 0x1
 4303 0111 13       		.uleb128 0x13
 4304 0112 00       		.byte	0
 4305 0113 00       		.byte	0
 4306 0114 13       		.uleb128 0x13
 4307 0115 1D       		.uleb128 0x1d
 4308 0116 00       		.byte	0
 4309 0117 31       		.uleb128 0x31
 4310 0118 13       		.uleb128 0x13
 4311 0119 11       		.uleb128 0x11
 4312 011a 01       		.uleb128 0x1
 4313 011b 12       		.uleb128 0x12
 4314 011c 06       		.uleb128 0x6
 4315 011d 58       		.uleb128 0x58
 4316 011e 0B       		.uleb128 0xb
 4317 011f 59       		.uleb128 0x59
 4318 0120 05       		.uleb128 0x5
 4319 0121 00       		.byte	0
 4320 0122 00       		.byte	0
 4321 0123 14       		.uleb128 0x14
 4322 0124 2E       		.uleb128 0x2e
 4323 0125 00       		.byte	0
 4324 0126 3F       		.uleb128 0x3f
 4325 0127 19       		.uleb128 0x19
 4326 0128 03       		.uleb128 0x3
 4327 0129 0E       		.uleb128 0xe
 4328 012a 3A       		.uleb128 0x3a
 4329 012b 0B       		.uleb128 0xb
 4330 012c 3B       		.uleb128 0x3b
 4331 012d 05       		.uleb128 0x5
 4332 012e 27       		.uleb128 0x27
 4333 012f 19       		.uleb128 0x19
 4334 0130 49       		.uleb128 0x49
 4335 0131 13       		.uleb128 0x13
 4336 0132 11       		.uleb128 0x11
 4337 0133 01       		.uleb128 0x1
 4338 0134 12       		.uleb128 0x12
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 148


 4339 0135 06       		.uleb128 0x6
 4340 0136 40       		.uleb128 0x40
 4341 0137 18       		.uleb128 0x18
 4342 0138 9742     		.uleb128 0x2117
 4343 013a 19       		.uleb128 0x19
 4344 013b 00       		.byte	0
 4345 013c 00       		.byte	0
 4346 013d 15       		.uleb128 0x15
 4347 013e 898201   		.uleb128 0x4109
 4348 0141 00       		.byte	0
 4349 0142 11       		.uleb128 0x11
 4350 0143 01       		.uleb128 0x1
 4351 0144 31       		.uleb128 0x31
 4352 0145 13       		.uleb128 0x13
 4353 0146 00       		.byte	0
 4354 0147 00       		.byte	0
 4355 0148 16       		.uleb128 0x16
 4356 0149 2E       		.uleb128 0x2e
 4357 014a 01       		.byte	0x1
 4358 014b 3F       		.uleb128 0x3f
 4359 014c 19       		.uleb128 0x19
 4360 014d 03       		.uleb128 0x3
 4361 014e 0E       		.uleb128 0xe
 4362 014f 3A       		.uleb128 0x3a
 4363 0150 0B       		.uleb128 0xb
 4364 0151 3B       		.uleb128 0x3b
 4365 0152 05       		.uleb128 0x5
 4366 0153 27       		.uleb128 0x27
 4367 0154 19       		.uleb128 0x19
 4368 0155 49       		.uleb128 0x49
 4369 0156 13       		.uleb128 0x13
 4370 0157 11       		.uleb128 0x11
 4371 0158 01       		.uleb128 0x1
 4372 0159 12       		.uleb128 0x12
 4373 015a 06       		.uleb128 0x6
 4374 015b 40       		.uleb128 0x40
 4375 015c 18       		.uleb128 0x18
 4376 015d 9742     		.uleb128 0x2117
 4377 015f 19       		.uleb128 0x19
 4378 0160 01       		.uleb128 0x1
 4379 0161 13       		.uleb128 0x13
 4380 0162 00       		.byte	0
 4381 0163 00       		.byte	0
 4382 0164 17       		.uleb128 0x17
 4383 0165 898201   		.uleb128 0x4109
 4384 0168 01       		.byte	0x1
 4385 0169 11       		.uleb128 0x11
 4386 016a 01       		.uleb128 0x1
 4387 016b 31       		.uleb128 0x31
 4388 016c 13       		.uleb128 0x13
 4389 016d 00       		.byte	0
 4390 016e 00       		.byte	0
 4391 016f 18       		.uleb128 0x18
 4392 0170 8A8201   		.uleb128 0x410a
 4393 0173 00       		.byte	0
 4394 0174 02       		.uleb128 0x2
 4395 0175 18       		.uleb128 0x18
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 149


 4396 0176 9142     		.uleb128 0x2111
 4397 0178 18       		.uleb128 0x18
 4398 0179 00       		.byte	0
 4399 017a 00       		.byte	0
 4400 017b 19       		.uleb128 0x19
 4401 017c 2E       		.uleb128 0x2e
 4402 017d 00       		.byte	0
 4403 017e 3F       		.uleb128 0x3f
 4404 017f 19       		.uleb128 0x19
 4405 0180 03       		.uleb128 0x3
 4406 0181 0E       		.uleb128 0xe
 4407 0182 3A       		.uleb128 0x3a
 4408 0183 0B       		.uleb128 0xb
 4409 0184 3B       		.uleb128 0x3b
 4410 0185 05       		.uleb128 0x5
 4411 0186 27       		.uleb128 0x27
 4412 0187 19       		.uleb128 0x19
 4413 0188 11       		.uleb128 0x11
 4414 0189 01       		.uleb128 0x1
 4415 018a 12       		.uleb128 0x12
 4416 018b 06       		.uleb128 0x6
 4417 018c 40       		.uleb128 0x40
 4418 018d 18       		.uleb128 0x18
 4419 018e 9742     		.uleb128 0x2117
 4420 0190 19       		.uleb128 0x19
 4421 0191 00       		.byte	0
 4422 0192 00       		.byte	0
 4423 0193 1A       		.uleb128 0x1a
 4424 0194 2E       		.uleb128 0x2e
 4425 0195 01       		.byte	0x1
 4426 0196 3F       		.uleb128 0x3f
 4427 0197 19       		.uleb128 0x19
 4428 0198 03       		.uleb128 0x3
 4429 0199 0E       		.uleb128 0xe
 4430 019a 3A       		.uleb128 0x3a
 4431 019b 0B       		.uleb128 0xb
 4432 019c 3B       		.uleb128 0x3b
 4433 019d 05       		.uleb128 0x5
 4434 019e 27       		.uleb128 0x27
 4435 019f 19       		.uleb128 0x19
 4436 01a0 11       		.uleb128 0x11
 4437 01a1 01       		.uleb128 0x1
 4438 01a2 12       		.uleb128 0x12
 4439 01a3 06       		.uleb128 0x6
 4440 01a4 40       		.uleb128 0x40
 4441 01a5 18       		.uleb128 0x18
 4442 01a6 9642     		.uleb128 0x2116
 4443 01a8 19       		.uleb128 0x19
 4444 01a9 01       		.uleb128 0x1
 4445 01aa 13       		.uleb128 0x13
 4446 01ab 00       		.byte	0
 4447 01ac 00       		.byte	0
 4448 01ad 1B       		.uleb128 0x1b
 4449 01ae 898201   		.uleb128 0x4109
 4450 01b1 01       		.byte	0x1
 4451 01b2 11       		.uleb128 0x11
 4452 01b3 01       		.uleb128 0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 150


 4453 01b4 31       		.uleb128 0x31
 4454 01b5 13       		.uleb128 0x13
 4455 01b6 01       		.uleb128 0x1
 4456 01b7 13       		.uleb128 0x13
 4457 01b8 00       		.byte	0
 4458 01b9 00       		.byte	0
 4459 01ba 1C       		.uleb128 0x1c
 4460 01bb 34       		.uleb128 0x34
 4461 01bc 00       		.byte	0
 4462 01bd 03       		.uleb128 0x3
 4463 01be 0E       		.uleb128 0xe
 4464 01bf 3A       		.uleb128 0x3a
 4465 01c0 0B       		.uleb128 0xb
 4466 01c1 3B       		.uleb128 0x3b
 4467 01c2 0B       		.uleb128 0xb
 4468 01c3 49       		.uleb128 0x49
 4469 01c4 13       		.uleb128 0x13
 4470 01c5 02       		.uleb128 0x2
 4471 01c6 18       		.uleb128 0x18
 4472 01c7 00       		.byte	0
 4473 01c8 00       		.byte	0
 4474 01c9 1D       		.uleb128 0x1d
 4475 01ca 01       		.uleb128 0x1
 4476 01cb 01       		.byte	0x1
 4477 01cc 49       		.uleb128 0x49
 4478 01cd 13       		.uleb128 0x13
 4479 01ce 01       		.uleb128 0x1
 4480 01cf 13       		.uleb128 0x13
 4481 01d0 00       		.byte	0
 4482 01d1 00       		.byte	0
 4483 01d2 1E       		.uleb128 0x1e
 4484 01d3 21       		.uleb128 0x21
 4485 01d4 00       		.byte	0
 4486 01d5 49       		.uleb128 0x49
 4487 01d6 13       		.uleb128 0x13
 4488 01d7 2F       		.uleb128 0x2f
 4489 01d8 0B       		.uleb128 0xb
 4490 01d9 00       		.byte	0
 4491 01da 00       		.byte	0
 4492 01db 1F       		.uleb128 0x1f
 4493 01dc 26       		.uleb128 0x26
 4494 01dd 00       		.byte	0
 4495 01de 49       		.uleb128 0x49
 4496 01df 13       		.uleb128 0x13
 4497 01e0 00       		.byte	0
 4498 01e1 00       		.byte	0
 4499 01e2 20       		.uleb128 0x20
 4500 01e3 34       		.uleb128 0x34
 4501 01e4 00       		.byte	0
 4502 01e5 03       		.uleb128 0x3
 4503 01e6 0E       		.uleb128 0xe
 4504 01e7 3A       		.uleb128 0x3a
 4505 01e8 0B       		.uleb128 0xb
 4506 01e9 3B       		.uleb128 0x3b
 4507 01ea 0B       		.uleb128 0xb
 4508 01eb 49       		.uleb128 0x49
 4509 01ec 13       		.uleb128 0x13
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 151


 4510 01ed 3F       		.uleb128 0x3f
 4511 01ee 19       		.uleb128 0x19
 4512 01ef 3C       		.uleb128 0x3c
 4513 01f0 19       		.uleb128 0x19
 4514 01f1 00       		.byte	0
 4515 01f2 00       		.byte	0
 4516 01f3 21       		.uleb128 0x21
 4517 01f4 2E       		.uleb128 0x2e
 4518 01f5 01       		.byte	0x1
 4519 01f6 3F       		.uleb128 0x3f
 4520 01f7 19       		.uleb128 0x19
 4521 01f8 03       		.uleb128 0x3
 4522 01f9 0E       		.uleb128 0xe
 4523 01fa 3A       		.uleb128 0x3a
 4524 01fb 0B       		.uleb128 0xb
 4525 01fc 3B       		.uleb128 0x3b
 4526 01fd 0B       		.uleb128 0xb
 4527 01fe 27       		.uleb128 0x27
 4528 01ff 19       		.uleb128 0x19
 4529 0200 3C       		.uleb128 0x3c
 4530 0201 19       		.uleb128 0x19
 4531 0202 01       		.uleb128 0x1
 4532 0203 13       		.uleb128 0x13
 4533 0204 00       		.byte	0
 4534 0205 00       		.byte	0
 4535 0206 22       		.uleb128 0x22
 4536 0207 05       		.uleb128 0x5
 4537 0208 00       		.byte	0
 4538 0209 49       		.uleb128 0x49
 4539 020a 13       		.uleb128 0x13
 4540 020b 00       		.byte	0
 4541 020c 00       		.byte	0
 4542 020d 23       		.uleb128 0x23
 4543 020e 2E       		.uleb128 0x2e
 4544 020f 00       		.byte	0
 4545 0210 3F       		.uleb128 0x3f
 4546 0211 19       		.uleb128 0x19
 4547 0212 03       		.uleb128 0x3
 4548 0213 0E       		.uleb128 0xe
 4549 0214 3A       		.uleb128 0x3a
 4550 0215 0B       		.uleb128 0xb
 4551 0216 3B       		.uleb128 0x3b
 4552 0217 0B       		.uleb128 0xb
 4553 0218 27       		.uleb128 0x27
 4554 0219 19       		.uleb128 0x19
 4555 021a 49       		.uleb128 0x49
 4556 021b 13       		.uleb128 0x13
 4557 021c 3C       		.uleb128 0x3c
 4558 021d 19       		.uleb128 0x19
 4559 021e 00       		.byte	0
 4560 021f 00       		.byte	0
 4561 0220 24       		.uleb128 0x24
 4562 0221 2E       		.uleb128 0x2e
 4563 0222 01       		.byte	0x1
 4564 0223 3F       		.uleb128 0x3f
 4565 0224 19       		.uleb128 0x19
 4566 0225 03       		.uleb128 0x3
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 152


 4567 0226 0E       		.uleb128 0xe
 4568 0227 3A       		.uleb128 0x3a
 4569 0228 0B       		.uleb128 0xb
 4570 0229 3B       		.uleb128 0x3b
 4571 022a 0B       		.uleb128 0xb
 4572 022b 27       		.uleb128 0x27
 4573 022c 19       		.uleb128 0x19
 4574 022d 3C       		.uleb128 0x3c
 4575 022e 19       		.uleb128 0x19
 4576 022f 00       		.byte	0
 4577 0230 00       		.byte	0
 4578 0231 00       		.byte	0
 4579              		.section	.debug_loc,"",%progbits
 4580              	.Ldebug_loc0:
 4581              	.LLST0:
 4582 0000 00000000 		.4byte	.LVL1
 4583 0004 48000000 		.4byte	.LVL4
 4584 0008 0100     		.2byte	0x1
 4585 000a 50       		.byte	0x50
 4586 000b 48000000 		.4byte	.LVL4
 4587 000f A4000000 		.4byte	.LVL19
 4588 0013 0400     		.2byte	0x4
 4589 0015 F3       		.byte	0xf3
 4590 0016 01       		.uleb128 0x1
 4591 0017 50       		.byte	0x50
 4592 0018 9F       		.byte	0x9f
 4593 0019 A4000000 		.4byte	.LVL19
 4594 001d B6000000 		.4byte	.LVL21
 4595 0021 0100     		.2byte	0x1
 4596 0023 50       		.byte	0x50
 4597 0024 B6000000 		.4byte	.LVL21
 4598 0028 B8000000 		.4byte	.LVL22
 4599 002c 0400     		.2byte	0x4
 4600 002e F3       		.byte	0xf3
 4601 002f 01       		.uleb128 0x1
 4602 0030 50       		.byte	0x50
 4603 0031 9F       		.byte	0x9f
 4604 0032 B8000000 		.4byte	.LVL22
 4605 0036 BA000000 		.4byte	.LVL23
 4606 003a 0100     		.2byte	0x1
 4607 003c 50       		.byte	0x50
 4608 003d BA000000 		.4byte	.LVL23
 4609 0041 BC000000 		.4byte	.LVL24
 4610 0045 0400     		.2byte	0x4
 4611 0047 F3       		.byte	0xf3
 4612 0048 01       		.uleb128 0x1
 4613 0049 50       		.byte	0x50
 4614 004a 9F       		.byte	0x9f
 4615 004b BC000000 		.4byte	.LVL24
 4616 004f BE000000 		.4byte	.LVL25
 4617 0053 0100     		.2byte	0x1
 4618 0055 50       		.byte	0x50
 4619 0056 BE000000 		.4byte	.LVL25
 4620 005a C0000000 		.4byte	.LVL26
 4621 005e 0400     		.2byte	0x4
 4622 0060 F3       		.byte	0xf3
 4623 0061 01       		.uleb128 0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 153


 4624 0062 50       		.byte	0x50
 4625 0063 9F       		.byte	0x9f
 4626 0064 C0000000 		.4byte	.LVL26
 4627 0068 C2000000 		.4byte	.LVL27
 4628 006c 0100     		.2byte	0x1
 4629 006e 50       		.byte	0x50
 4630 006f C2000000 		.4byte	.LVL27
 4631 0073 C4000000 		.4byte	.LVL28
 4632 0077 0400     		.2byte	0x4
 4633 0079 F3       		.byte	0xf3
 4634 007a 01       		.uleb128 0x1
 4635 007b 50       		.byte	0x50
 4636 007c 9F       		.byte	0x9f
 4637 007d C4000000 		.4byte	.LVL28
 4638 0081 C6000000 		.4byte	.LVL29
 4639 0085 0100     		.2byte	0x1
 4640 0087 50       		.byte	0x50
 4641 0088 C6000000 		.4byte	.LVL29
 4642 008c C8000000 		.4byte	.LVL30
 4643 0090 0400     		.2byte	0x4
 4644 0092 F3       		.byte	0xf3
 4645 0093 01       		.uleb128 0x1
 4646 0094 50       		.byte	0x50
 4647 0095 9F       		.byte	0x9f
 4648 0096 C8000000 		.4byte	.LVL30
 4649 009a CA000000 		.4byte	.LVL31
 4650 009e 0100     		.2byte	0x1
 4651 00a0 50       		.byte	0x50
 4652 00a1 CA000000 		.4byte	.LVL31
 4653 00a5 CC000000 		.4byte	.LVL32
 4654 00a9 0400     		.2byte	0x4
 4655 00ab F3       		.byte	0xf3
 4656 00ac 01       		.uleb128 0x1
 4657 00ad 50       		.byte	0x50
 4658 00ae 9F       		.byte	0x9f
 4659 00af CC000000 		.4byte	.LVL32
 4660 00b3 CE000000 		.4byte	.LVL33
 4661 00b7 0100     		.2byte	0x1
 4662 00b9 50       		.byte	0x50
 4663 00ba CE000000 		.4byte	.LVL33
 4664 00be D0000000 		.4byte	.LVL34
 4665 00c2 0400     		.2byte	0x4
 4666 00c4 F3       		.byte	0xf3
 4667 00c5 01       		.uleb128 0x1
 4668 00c6 50       		.byte	0x50
 4669 00c7 9F       		.byte	0x9f
 4670 00c8 D0000000 		.4byte	.LVL34
 4671 00cc D2000000 		.4byte	.LVL35
 4672 00d0 0100     		.2byte	0x1
 4673 00d2 50       		.byte	0x50
 4674 00d3 D2000000 		.4byte	.LVL35
 4675 00d7 08010000 		.4byte	.LFE5
 4676 00db 0400     		.2byte	0x4
 4677 00dd F3       		.byte	0xf3
 4678 00de 01       		.uleb128 0x1
 4679 00df 50       		.byte	0x50
 4680 00e0 9F       		.byte	0x9f
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 154


 4681 00e1 00000000 		.4byte	0
 4682 00e5 00000000 		.4byte	0
 4683              	.LLST1:
 4684 00e9 00000000 		.4byte	.LVL1
 4685 00ed 50000000 		.4byte	.LVL5
 4686 00f1 0100     		.2byte	0x1
 4687 00f3 51       		.byte	0x51
 4688 00f4 50000000 		.4byte	.LVL5
 4689 00f8 A4000000 		.4byte	.LVL19
 4690 00fc 0100     		.2byte	0x1
 4691 00fe 55       		.byte	0x55
 4692 00ff A4000000 		.4byte	.LVL19
 4693 0103 D2000000 		.4byte	.LVL35
 4694 0107 0100     		.2byte	0x1
 4695 0109 51       		.byte	0x51
 4696 010a D2000000 		.4byte	.LVL35
 4697 010e 08010000 		.4byte	.LFE5
 4698 0112 0400     		.2byte	0x4
 4699 0114 F3       		.byte	0xf3
 4700 0115 01       		.uleb128 0x1
 4701 0116 51       		.byte	0x51
 4702 0117 9F       		.byte	0x9f
 4703 0118 00000000 		.4byte	0
 4704 011c 00000000 		.4byte	0
 4705              	.LLST2:
 4706 0120 80000000 		.4byte	.LVL12
 4707 0124 82000000 		.4byte	.LVL13
 4708 0128 0100     		.2byte	0x1
 4709 012a 50       		.byte	0x50
 4710 012b 9A000000 		.4byte	.LVL16
 4711 012f 9E000000 		.4byte	.LVL17
 4712 0133 0100     		.2byte	0x1
 4713 0135 50       		.byte	0x50
 4714 0136 9E000000 		.4byte	.LVL17
 4715 013a A4000000 		.4byte	.LVL19
 4716 013e 0200     		.2byte	0x2
 4717 0140 75       		.byte	0x75
 4718 0141 00       		.sleb128 0
 4719 0142 00000000 		.4byte	0
 4720 0146 00000000 		.4byte	0
 4721              	.LLST3:
 4722 014a 56000000 		.4byte	.LVL7
 4723 014e 60000000 		.4byte	.LVL8
 4724 0152 0100     		.2byte	0x1
 4725 0154 50       		.byte	0x50
 4726 0155 60000000 		.4byte	.LVL8
 4727 0159 82000000 		.4byte	.LVL13
 4728 015d 0100     		.2byte	0x1
 4729 015f 54       		.byte	0x54
 4730 0160 82000000 		.4byte	.LVL13
 4731 0164 86000000 		.4byte	.LVL14
 4732 0168 0100     		.2byte	0x1
 4733 016a 50       		.byte	0x50
 4734 016b 86000000 		.4byte	.LVL14
 4735 016f A4000000 		.4byte	.LVL19
 4736 0173 0100     		.2byte	0x1
 4737 0175 54       		.byte	0x54
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 155


 4738 0176 00000000 		.4byte	0
 4739 017a 00000000 		.4byte	0
 4740              	.LLST4:
 4741 017e 0A000000 		.4byte	.LVL2
 4742 0182 14000000 		.4byte	.LVL3
 4743 0186 0100     		.2byte	0x1
 4744 0188 53       		.byte	0x53
 4745 0189 B8000000 		.4byte	.LVL22
 4746 018d BC000000 		.4byte	.LVL24
 4747 0191 0100     		.2byte	0x1
 4748 0193 53       		.byte	0x53
 4749 0194 00000000 		.4byte	0
 4750 0198 00000000 		.4byte	0
 4751              	.LLST5:
 4752 019c A2000000 		.4byte	.LVL18
 4753 01a0 A4000000 		.4byte	.LVL19
 4754 01a4 0200     		.2byte	0x2
 4755 01a6 30       		.byte	0x30
 4756 01a7 9F       		.byte	0x9f
 4757 01a8 B4000000 		.4byte	.LVL20
 4758 01ac B8000000 		.4byte	.LVL22
 4759 01b0 0200     		.2byte	0x2
 4760 01b2 37       		.byte	0x37
 4761 01b3 9F       		.byte	0x9f
 4762 01b4 D2000000 		.4byte	.LVL35
 4763 01b8 08010000 		.4byte	.LFE5
 4764 01bc 0100     		.2byte	0x1
 4765 01be 50       		.byte	0x50
 4766 01bf 00000000 		.4byte	0
 4767 01c3 00000000 		.4byte	0
 4768              	.LLST6:
 4769 01c7 00000000 		.4byte	.LVL37
 4770 01cb 1C000000 		.4byte	.LVL39
 4771 01cf 0100     		.2byte	0x1
 4772 01d1 50       		.byte	0x50
 4773 01d2 1C000000 		.4byte	.LVL39
 4774 01d6 26000000 		.4byte	.LVL40
 4775 01da 0300     		.2byte	0x3
 4776 01dc 70       		.byte	0x70
 4777 01dd 7E       		.sleb128 -2
 4778 01de 9F       		.byte	0x9f
 4779 01df 26000000 		.4byte	.LVL40
 4780 01e3 2A000000 		.4byte	.LVL41
 4781 01e7 0300     		.2byte	0x3
 4782 01e9 70       		.byte	0x70
 4783 01ea 50       		.sleb128 -48
 4784 01eb 9F       		.byte	0x9f
 4785 01ec 2A000000 		.4byte	.LVL41
 4786 01f0 32000000 		.4byte	.LVL42
 4787 01f4 0300     		.2byte	0x3
 4788 01f6 70       		.byte	0x70
 4789 01f7 70       		.sleb128 -16
 4790 01f8 9F       		.byte	0x9f
 4791 01f9 32000000 		.4byte	.LVL42
 4792 01fd 3A000000 		.4byte	.LVL43
 4793 0201 0300     		.2byte	0x3
 4794 0203 70       		.byte	0x70
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 156


 4795 0204 79       		.sleb128 -7
 4796 0205 9F       		.byte	0x9f
 4797 0206 3A000000 		.4byte	.LVL43
 4798 020a 3C000000 		.4byte	.LVL44
 4799 020e 0100     		.2byte	0x1
 4800 0210 50       		.byte	0x50
 4801 0211 3C000000 		.4byte	.LVL44
 4802 0215 4C000000 		.4byte	.LFE9
 4803 0219 0400     		.2byte	0x4
 4804 021b F3       		.byte	0xf3
 4805 021c 01       		.uleb128 0x1
 4806 021d 50       		.byte	0x50
 4807 021e 9F       		.byte	0x9f
 4808 021f 00000000 		.4byte	0
 4809 0223 00000000 		.4byte	0
 4810              	.LLST7:
 4811 0227 0A000000 		.4byte	.LVL38
 4812 022b 42000000 		.4byte	.LVL46
 4813 022f 0100     		.2byte	0x1
 4814 0231 54       		.byte	0x54
 4815 0232 42000000 		.4byte	.LVL46
 4816 0236 4C000000 		.4byte	.LFE9
 4817 023a 0100     		.2byte	0x1
 4818 023c 50       		.byte	0x50
 4819 023d 00000000 		.4byte	0
 4820 0241 00000000 		.4byte	0
 4821              	.LLST8:
 4822 0245 00000000 		.4byte	.LVL47
 4823 0249 07000000 		.4byte	.LVL48-1
 4824 024d 0100     		.2byte	0x1
 4825 024f 50       		.byte	0x50
 4826 0250 07000000 		.4byte	.LVL48-1
 4827 0254 1A000000 		.4byte	.LVL49
 4828 0258 0100     		.2byte	0x1
 4829 025a 54       		.byte	0x54
 4830 025b 1A000000 		.4byte	.LVL49
 4831 025f 20000000 		.4byte	.LVL50
 4832 0263 0400     		.2byte	0x4
 4833 0265 F3       		.byte	0xf3
 4834 0266 01       		.uleb128 0x1
 4835 0267 50       		.byte	0x50
 4836 0268 9F       		.byte	0x9f
 4837 0269 20000000 		.4byte	.LVL50
 4838 026d 26000000 		.4byte	.LVL51
 4839 0271 0100     		.2byte	0x1
 4840 0273 54       		.byte	0x54
 4841 0274 26000000 		.4byte	.LVL51
 4842 0278 2C000000 		.4byte	.LFE10
 4843 027c 0400     		.2byte	0x4
 4844 027e F3       		.byte	0xf3
 4845 027f 01       		.uleb128 0x1
 4846 0280 50       		.byte	0x50
 4847 0281 9F       		.byte	0x9f
 4848 0282 00000000 		.4byte	0
 4849 0286 00000000 		.4byte	0
 4850              	.LLST9:
 4851 028a 00000000 		.4byte	.LVL52
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 157


 4852 028e 02000000 		.4byte	.LVL53
 4853 0292 0100     		.2byte	0x1
 4854 0294 50       		.byte	0x50
 4855 0295 02000000 		.4byte	.LVL53
 4856 0299 04000000 		.4byte	.LVL54
 4857 029d 0400     		.2byte	0x4
 4858 029f F3       		.byte	0xf3
 4859 02a0 01       		.uleb128 0x1
 4860 02a1 50       		.byte	0x50
 4861 02a2 9F       		.byte	0x9f
 4862 02a3 04000000 		.4byte	.LVL54
 4863 02a7 18000000 		.4byte	.LFE14
 4864 02ab 0100     		.2byte	0x1
 4865 02ad 53       		.byte	0x53
 4866 02ae 00000000 		.4byte	0
 4867 02b2 00000000 		.4byte	0
 4868              	.LLST10:
 4869 02b6 00000000 		.4byte	.LVL55
 4870 02ba 02000000 		.4byte	.LVL56
 4871 02be 0100     		.2byte	0x1
 4872 02c0 50       		.byte	0x50
 4873 02c1 02000000 		.4byte	.LVL56
 4874 02c5 0A000000 		.4byte	.LVL57
 4875 02c9 0400     		.2byte	0x4
 4876 02cb F3       		.byte	0xf3
 4877 02cc 01       		.uleb128 0x1
 4878 02cd 50       		.byte	0x50
 4879 02ce 9F       		.byte	0x9f
 4880 02cf 0A000000 		.4byte	.LVL57
 4881 02d3 20000000 		.4byte	.LFE17
 4882 02d7 0100     		.2byte	0x1
 4883 02d9 53       		.byte	0x53
 4884 02da 00000000 		.4byte	0
 4885 02de 00000000 		.4byte	0
 4886              	.LLST11:
 4887 02e2 00000000 		.4byte	.LVL58
 4888 02e6 08000000 		.4byte	.LVL60
 4889 02ea 0100     		.2byte	0x1
 4890 02ec 50       		.byte	0x50
 4891 02ed 08000000 		.4byte	.LVL60
 4892 02f1 10000000 		.4byte	.LFE22
 4893 02f5 0500     		.2byte	0x5
 4894 02f7 03       		.byte	0x3
 4895 02f8 04000000 		.4byte	cySysWdtCallback
 4896 02fc 00000000 		.4byte	0
 4897 0300 00000000 		.4byte	0
 4898              	.LLST12:
 4899 0304 00000000 		.4byte	.LVL58
 4900 0308 04000000 		.4byte	.LVL59
 4901 030c 0200     		.2byte	0x2
 4902 030e 30       		.byte	0x30
 4903 030f 9F       		.byte	0x9f
 4904 0310 04000000 		.4byte	.LVL59
 4905 0314 10000000 		.4byte	.LFE22
 4906 0318 0100     		.2byte	0x1
 4907 031a 52       		.byte	0x52
 4908 031b 00000000 		.4byte	0
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 158


 4909 031f 00000000 		.4byte	0
 4910              	.LLST13:
 4911 0323 00000000 		.4byte	.LVL63
 4912 0327 07000000 		.4byte	.LVL64-1
 4913 032b 0100     		.2byte	0x1
 4914 032d 50       		.byte	0x50
 4915 032e 07000000 		.4byte	.LVL64-1
 4916 0332 38000000 		.4byte	.LVL67
 4917 0336 0100     		.2byte	0x1
 4918 0338 54       		.byte	0x54
 4919 0339 38000000 		.4byte	.LVL67
 4920 033d 68000000 		.4byte	.LFE26
 4921 0341 0400     		.2byte	0x4
 4922 0343 F3       		.byte	0xf3
 4923 0344 01       		.uleb128 0x1
 4924 0345 50       		.byte	0x50
 4925 0346 9F       		.byte	0x9f
 4926 0347 00000000 		.4byte	0
 4927 034b 00000000 		.4byte	0
 4928              	.LLST14:
 4929 034f 2E000000 		.4byte	.LVL66
 4930 0353 41000000 		.4byte	.LVL68-1
 4931 0357 0100     		.2byte	0x1
 4932 0359 50       		.byte	0x50
 4933 035a 00000000 		.4byte	0
 4934 035e 00000000 		.4byte	0
 4935              	.LLST15:
 4936 0362 00000000 		.4byte	.LVL69
 4937 0366 0A000000 		.4byte	.LVL70
 4938 036a 0100     		.2byte	0x1
 4939 036c 50       		.byte	0x50
 4940 036d 0A000000 		.4byte	.LVL70
 4941 0371 14000000 		.4byte	.LVL72
 4942 0375 0100     		.2byte	0x1
 4943 0377 54       		.byte	0x54
 4944 0378 14000000 		.4byte	.LVL72
 4945 037c 24000000 		.4byte	.LFE27
 4946 0380 0400     		.2byte	0x4
 4947 0382 F3       		.byte	0xf3
 4948 0383 01       		.uleb128 0x1
 4949 0384 50       		.byte	0x50
 4950 0385 9F       		.byte	0x9f
 4951 0386 00000000 		.4byte	0
 4952 038a 00000000 		.4byte	0
 4953              	.LLST16:
 4954 038e 00000000 		.4byte	.LVL73
 4955 0392 0C000000 		.4byte	.LVL74
 4956 0396 0100     		.2byte	0x1
 4957 0398 50       		.byte	0x50
 4958 0399 0C000000 		.4byte	.LVL74
 4959 039d 2A000000 		.4byte	.LVL78
 4960 03a1 0100     		.2byte	0x1
 4961 03a3 54       		.byte	0x54
 4962 03a4 2A000000 		.4byte	.LVL78
 4963 03a8 44000000 		.4byte	.LFE28
 4964 03ac 0400     		.2byte	0x4
 4965 03ae F3       		.byte	0xf3
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 159


 4966 03af 01       		.uleb128 0x1
 4967 03b0 50       		.byte	0x50
 4968 03b1 9F       		.byte	0x9f
 4969 03b2 00000000 		.4byte	0
 4970 03b6 00000000 		.4byte	0
 4971              	.LLST17:
 4972 03ba 00000000 		.4byte	.LVL73
 4973 03be 0F000000 		.4byte	.LVL75-1
 4974 03c2 0100     		.2byte	0x1
 4975 03c4 51       		.byte	0x51
 4976 03c5 0F000000 		.4byte	.LVL75-1
 4977 03c9 34000000 		.4byte	.LVL80
 4978 03cd 0100     		.2byte	0x1
 4979 03cf 55       		.byte	0x55
 4980 03d0 34000000 		.4byte	.LVL80
 4981 03d4 44000000 		.4byte	.LFE28
 4982 03d8 0400     		.2byte	0x4
 4983 03da F3       		.byte	0xf3
 4984 03db 01       		.uleb128 0x1
 4985 03dc 51       		.byte	0x51
 4986 03dd 9F       		.byte	0x9f
 4987 03de 00000000 		.4byte	0
 4988 03e2 00000000 		.4byte	0
 4989              	.LLST18:
 4990 03e6 32000000 		.4byte	.LVL79
 4991 03ea 3A000000 		.4byte	.LVL81
 4992 03ee 0100     		.2byte	0x1
 4993 03f0 53       		.byte	0x53
 4994 03f1 3A000000 		.4byte	.LVL81
 4995 03f5 3C000000 		.4byte	.LVL82
 4996 03f9 0100     		.2byte	0x1
 4997 03fb 54       		.byte	0x54
 4998 03fc 00000000 		.4byte	0
 4999 0400 00000000 		.4byte	0
 5000              	.LLST19:
 5001 0404 00000000 		.4byte	.LVL83
 5002 0408 06000000 		.4byte	.LVL84
 5003 040c 0100     		.2byte	0x1
 5004 040e 50       		.byte	0x50
 5005 040f 06000000 		.4byte	.LVL84
 5006 0413 14000000 		.4byte	.LFE29
 5007 0417 0400     		.2byte	0x4
 5008 0419 F3       		.byte	0xf3
 5009 041a 01       		.uleb128 0x1
 5010 041b 50       		.byte	0x50
 5011 041c 9F       		.byte	0x9f
 5012 041d 00000000 		.4byte	0
 5013 0421 00000000 		.4byte	0
 5014              	.LLST20:
 5015 0425 00000000 		.4byte	.LVL85
 5016 0429 0C000000 		.4byte	.LVL86
 5017 042d 0100     		.2byte	0x1
 5018 042f 50       		.byte	0x50
 5019 0430 0C000000 		.4byte	.LVL86
 5020 0434 20000000 		.4byte	.LVL89
 5021 0438 0100     		.2byte	0x1
 5022 043a 54       		.byte	0x54
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 160


 5023 043b 20000000 		.4byte	.LVL89
 5024 043f 38000000 		.4byte	.LFE30
 5025 0443 0400     		.2byte	0x4
 5026 0445 F3       		.byte	0xf3
 5027 0446 01       		.uleb128 0x1
 5028 0447 50       		.byte	0x50
 5029 0448 9F       		.byte	0x9f
 5030 0449 00000000 		.4byte	0
 5031 044d 00000000 		.4byte	0
 5032              	.LLST21:
 5033 0451 00000000 		.4byte	.LVL85
 5034 0455 0F000000 		.4byte	.LVL87-1
 5035 0459 0100     		.2byte	0x1
 5036 045b 51       		.byte	0x51
 5037 045c 0F000000 		.4byte	.LVL87-1
 5038 0460 2A000000 		.4byte	.LVL91
 5039 0464 0100     		.2byte	0x1
 5040 0466 55       		.byte	0x55
 5041 0467 2A000000 		.4byte	.LVL91
 5042 046b 38000000 		.4byte	.LFE30
 5043 046f 0400     		.2byte	0x4
 5044 0471 F3       		.byte	0xf3
 5045 0472 01       		.uleb128 0x1
 5046 0473 51       		.byte	0x51
 5047 0474 9F       		.byte	0x9f
 5048 0475 00000000 		.4byte	0
 5049 0479 00000000 		.4byte	0
 5050              	.LLST22:
 5051 047d 28000000 		.4byte	.LVL90
 5052 0481 2E000000 		.4byte	.LVL92
 5053 0485 0100     		.2byte	0x1
 5054 0487 53       		.byte	0x53
 5055 0488 2E000000 		.4byte	.LVL92
 5056 048c 30000000 		.4byte	.LVL93
 5057 0490 0100     		.2byte	0x1
 5058 0492 54       		.byte	0x54
 5059 0493 00000000 		.4byte	0
 5060 0497 00000000 		.4byte	0
 5061              	.LLST23:
 5062 049b 00000000 		.4byte	.LVL94
 5063 049f 0A000000 		.4byte	.LVL95
 5064 04a3 0100     		.2byte	0x1
 5065 04a5 50       		.byte	0x50
 5066 04a6 0A000000 		.4byte	.LVL95
 5067 04aa 14000000 		.4byte	.LVL97
 5068 04ae 0100     		.2byte	0x1
 5069 04b0 54       		.byte	0x54
 5070 04b1 14000000 		.4byte	.LVL97
 5071 04b5 24000000 		.4byte	.LFE31
 5072 04b9 0400     		.2byte	0x4
 5073 04bb F3       		.byte	0xf3
 5074 04bc 01       		.uleb128 0x1
 5075 04bd 50       		.byte	0x50
 5076 04be 9F       		.byte	0x9f
 5077 04bf 00000000 		.4byte	0
 5078 04c3 00000000 		.4byte	0
 5079              	.LLST24:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 161


 5080 04c7 00000000 		.4byte	.LVL98
 5081 04cb 10000000 		.4byte	.LVL99
 5082 04cf 0100     		.2byte	0x1
 5083 04d1 50       		.byte	0x50
 5084 04d2 10000000 		.4byte	.LVL99
 5085 04d6 36000000 		.4byte	.LVL103
 5086 04da 0100     		.2byte	0x1
 5087 04dc 54       		.byte	0x54
 5088 04dd 36000000 		.4byte	.LVL103
 5089 04e1 3C000000 		.4byte	.LFE32
 5090 04e5 0400     		.2byte	0x4
 5091 04e7 F3       		.byte	0xf3
 5092 04e8 01       		.uleb128 0x1
 5093 04e9 50       		.byte	0x50
 5094 04ea 9F       		.byte	0x9f
 5095 04eb 00000000 		.4byte	0
 5096 04ef 00000000 		.4byte	0
 5097              	.LLST25:
 5098 04f3 00000000 		.4byte	.LVL104
 5099 04f7 10000000 		.4byte	.LVL105
 5100 04fb 0100     		.2byte	0x1
 5101 04fd 50       		.byte	0x50
 5102 04fe 10000000 		.4byte	.LVL105
 5103 0502 36000000 		.4byte	.LVL109
 5104 0506 0100     		.2byte	0x1
 5105 0508 54       		.byte	0x54
 5106 0509 36000000 		.4byte	.LVL109
 5107 050d 3C000000 		.4byte	.LFE33
 5108 0511 0400     		.2byte	0x4
 5109 0513 F3       		.byte	0xf3
 5110 0514 01       		.uleb128 0x1
 5111 0515 50       		.byte	0x50
 5112 0516 9F       		.byte	0x9f
 5113 0517 00000000 		.4byte	0
 5114 051b 00000000 		.4byte	0
 5115              	.LLST26:
 5116 051f 00000000 		.4byte	.LVL110
 5117 0523 06000000 		.4byte	.LVL111
 5118 0527 0100     		.2byte	0x1
 5119 0529 50       		.byte	0x50
 5120 052a 06000000 		.4byte	.LVL111
 5121 052e 28000000 		.4byte	.LVL118
 5122 0532 0100     		.2byte	0x1
 5123 0534 55       		.byte	0x55
 5124 0535 28000000 		.4byte	.LVL118
 5125 0539 34000000 		.4byte	.LFE34
 5126 053d 0400     		.2byte	0x4
 5127 053f F3       		.byte	0xf3
 5128 0540 01       		.uleb128 0x1
 5129 0541 50       		.byte	0x50
 5130 0542 9F       		.byte	0x9f
 5131 0543 00000000 		.4byte	0
 5132 0547 00000000 		.4byte	0
 5133              	.LLST27:
 5134 054b 22000000 		.4byte	.LVL116
 5135 054f 26000000 		.4byte	.LVL117
 5136 0553 0100     		.2byte	0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 162


 5137 0555 51       		.byte	0x51
 5138 0556 26000000 		.4byte	.LVL117
 5139 055a 28000000 		.4byte	.LVL118
 5140 055e 0100     		.2byte	0x1
 5141 0560 53       		.byte	0x53
 5142 0561 28000000 		.4byte	.LVL118
 5143 0565 2A000000 		.4byte	.LVL119
 5144 0569 0100     		.2byte	0x1
 5145 056b 55       		.byte	0x55
 5146 056c 00000000 		.4byte	0
 5147 0570 00000000 		.4byte	0
 5148              	.LLST28:
 5149 0574 00000000 		.4byte	.LVL120
 5150 0578 0C000000 		.4byte	.LVL121
 5151 057c 0100     		.2byte	0x1
 5152 057e 50       		.byte	0x50
 5153 057f 0C000000 		.4byte	.LVL121
 5154 0583 28000000 		.4byte	.LVL125
 5155 0587 0100     		.2byte	0x1
 5156 0589 54       		.byte	0x54
 5157 058a 28000000 		.4byte	.LVL125
 5158 058e 58000000 		.4byte	.LFE36
 5159 0592 0400     		.2byte	0x4
 5160 0594 F3       		.byte	0xf3
 5161 0595 01       		.uleb128 0x1
 5162 0596 50       		.byte	0x50
 5163 0597 9F       		.byte	0x9f
 5164 0598 00000000 		.4byte	0
 5165 059c 00000000 		.4byte	0
 5166              	.LLST29:
 5167 05a0 00000000 		.4byte	.LVL120
 5168 05a4 0F000000 		.4byte	.LVL122-1
 5169 05a8 0100     		.2byte	0x1
 5170 05aa 51       		.byte	0x51
 5171 05ab 0F000000 		.4byte	.LVL122-1
 5172 05af 4A000000 		.4byte	.LVL131
 5173 05b3 0100     		.2byte	0x1
 5174 05b5 55       		.byte	0x55
 5175 05b6 4A000000 		.4byte	.LVL131
 5176 05ba 58000000 		.4byte	.LFE36
 5177 05be 0400     		.2byte	0x4
 5178 05c0 F3       		.byte	0xf3
 5179 05c1 01       		.uleb128 0x1
 5180 05c2 51       		.byte	0x51
 5181 05c3 9F       		.byte	0x9f
 5182 05c4 00000000 		.4byte	0
 5183 05c8 00000000 		.4byte	0
 5184              	.LLST30:
 5185 05cc 26000000 		.4byte	.LVL124
 5186 05d0 2E000000 		.4byte	.LVL126
 5187 05d4 0100     		.2byte	0x1
 5188 05d6 50       		.byte	0x50
 5189 05d7 30000000 		.4byte	.LVL127
 5190 05db 32000000 		.4byte	.LVL128
 5191 05df 0100     		.2byte	0x1
 5192 05e1 50       		.byte	0x50
 5193 05e2 32000000 		.4byte	.LVL128
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 163


 5194 05e6 3A000000 		.4byte	.LVL129
 5195 05ea 0100     		.2byte	0x1
 5196 05ec 53       		.byte	0x53
 5197 05ed 00000000 		.4byte	0
 5198 05f1 00000000 		.4byte	0
 5199              	.LLST31:
 5200 05f5 00000000 		.4byte	.LVL132
 5201 05f9 06000000 		.4byte	.LVL133
 5202 05fd 0100     		.2byte	0x1
 5203 05ff 50       		.byte	0x50
 5204 0600 06000000 		.4byte	.LVL133
 5205 0604 1A000000 		.4byte	.LVL137
 5206 0608 0100     		.2byte	0x1
 5207 060a 54       		.byte	0x54
 5208 060b 1A000000 		.4byte	.LVL137
 5209 060f 2C000000 		.4byte	.LFE37
 5210 0613 0400     		.2byte	0x4
 5211 0615 F3       		.byte	0xf3
 5212 0616 01       		.uleb128 0x1
 5213 0617 50       		.byte	0x50
 5214 0618 9F       		.byte	0x9f
 5215 0619 00000000 		.4byte	0
 5216 061d 00000000 		.4byte	0
 5217              	.LLST32:
 5218 0621 12000000 		.4byte	.LVL135
 5219 0625 16000000 		.4byte	.LVL136
 5220 0629 0100     		.2byte	0x1
 5221 062b 51       		.byte	0x51
 5222 062c 16000000 		.4byte	.LVL136
 5223 0630 1E000000 		.4byte	.LVL138
 5224 0634 0100     		.2byte	0x1
 5225 0636 53       		.byte	0x53
 5226 0637 1E000000 		.4byte	.LVL138
 5227 063b 20000000 		.4byte	.LVL139
 5228 063f 0100     		.2byte	0x1
 5229 0641 54       		.byte	0x54
 5230 0642 00000000 		.4byte	0
 5231 0646 00000000 		.4byte	0
 5232              	.LLST33:
 5233 064a 00000000 		.4byte	.LVL140
 5234 064e 0A000000 		.4byte	.LVL141
 5235 0652 0100     		.2byte	0x1
 5236 0654 50       		.byte	0x50
 5237 0655 0A000000 		.4byte	.LVL141
 5238 0659 14000000 		.4byte	.LVL143
 5239 065d 0100     		.2byte	0x1
 5240 065f 54       		.byte	0x54
 5241 0660 14000000 		.4byte	.LVL143
 5242 0664 20000000 		.4byte	.LFE39
 5243 0668 0400     		.2byte	0x4
 5244 066a F3       		.byte	0xf3
 5245 066b 01       		.uleb128 0x1
 5246 066c 50       		.byte	0x50
 5247 066d 9F       		.byte	0x9f
 5248 066e 00000000 		.4byte	0
 5249 0672 00000000 		.4byte	0
 5250              	.LLST34:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 164


 5251 0676 00000000 		.4byte	.LVL144
 5252 067a 14000000 		.4byte	.LVL146
 5253 067e 0100     		.2byte	0x1
 5254 0680 50       		.byte	0x50
 5255 0681 14000000 		.4byte	.LVL146
 5256 0685 1A000000 		.4byte	.LVL148
 5257 0689 0400     		.2byte	0x4
 5258 068b F3       		.byte	0xf3
 5259 068c 01       		.uleb128 0x1
 5260 068d 50       		.byte	0x50
 5261 068e 9F       		.byte	0x9f
 5262 068f 1A000000 		.4byte	.LVL148
 5263 0693 1E000000 		.4byte	.LVL149
 5264 0697 0100     		.2byte	0x1
 5265 0699 50       		.byte	0x50
 5266 069a 1E000000 		.4byte	.LVL149
 5267 069e 22000000 		.4byte	.LVL151
 5268 06a2 0400     		.2byte	0x4
 5269 06a4 F3       		.byte	0xf3
 5270 06a5 01       		.uleb128 0x1
 5271 06a6 50       		.byte	0x50
 5272 06a7 9F       		.byte	0x9f
 5273 06a8 22000000 		.4byte	.LVL151
 5274 06ac 26000000 		.4byte	.LVL152
 5275 06b0 0100     		.2byte	0x1
 5276 06b2 50       		.byte	0x50
 5277 06b3 26000000 		.4byte	.LVL152
 5278 06b7 28000000 		.4byte	.LVL153
 5279 06bb 0400     		.2byte	0x4
 5280 06bd F3       		.byte	0xf3
 5281 06be 01       		.uleb128 0x1
 5282 06bf 50       		.byte	0x50
 5283 06c0 9F       		.byte	0x9f
 5284 06c1 28000000 		.4byte	.LVL153
 5285 06c5 2A000000 		.4byte	.LVL154
 5286 06c9 0100     		.2byte	0x1
 5287 06cb 50       		.byte	0x50
 5288 06cc 2A000000 		.4byte	.LVL154
 5289 06d0 3C000000 		.4byte	.LFE40
 5290 06d4 0400     		.2byte	0x4
 5291 06d6 F3       		.byte	0xf3
 5292 06d7 01       		.uleb128 0x1
 5293 06d8 50       		.byte	0x50
 5294 06d9 9F       		.byte	0x9f
 5295 06da 00000000 		.4byte	0
 5296 06de 00000000 		.4byte	0
 5297              	.LLST35:
 5298 06e2 02000000 		.4byte	.LVL145
 5299 06e6 18000000 		.4byte	.LVL147
 5300 06ea 0200     		.2byte	0x2
 5301 06ec 30       		.byte	0x30
 5302 06ed 9F       		.byte	0x9f
 5303 06ee 18000000 		.4byte	.LVL147
 5304 06f2 1A000000 		.4byte	.LVL148
 5305 06f6 0100     		.2byte	0x1
 5306 06f8 50       		.byte	0x50
 5307 06f9 1A000000 		.4byte	.LVL148
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 165


 5308 06fd 20000000 		.4byte	.LVL150
 5309 0701 0200     		.2byte	0x2
 5310 0703 30       		.byte	0x30
 5311 0704 9F       		.byte	0x9f
 5312 0705 20000000 		.4byte	.LVL150
 5313 0709 22000000 		.4byte	.LVL151
 5314 070d 0100     		.2byte	0x1
 5315 070f 50       		.byte	0x50
 5316 0710 22000000 		.4byte	.LVL151
 5317 0714 26000000 		.4byte	.LVL152
 5318 0718 0200     		.2byte	0x2
 5319 071a 30       		.byte	0x30
 5320 071b 9F       		.byte	0x9f
 5321 071c 26000000 		.4byte	.LVL152
 5322 0720 28000000 		.4byte	.LVL153
 5323 0724 0100     		.2byte	0x1
 5324 0726 50       		.byte	0x50
 5325 0727 28000000 		.4byte	.LVL153
 5326 072b 30000000 		.4byte	.LVL156
 5327 072f 0200     		.2byte	0x2
 5328 0731 30       		.byte	0x30
 5329 0732 9F       		.byte	0x9f
 5330 0733 30000000 		.4byte	.LVL156
 5331 0737 3C000000 		.4byte	.LFE40
 5332 073b 0100     		.2byte	0x1
 5333 073d 50       		.byte	0x50
 5334 073e 00000000 		.4byte	0
 5335 0742 00000000 		.4byte	0
 5336              	.LLST36:
 5337 0746 00000000 		.4byte	.LVL157
 5338 074a 07000000 		.4byte	.LVL158-1
 5339 074e 0100     		.2byte	0x1
 5340 0750 50       		.byte	0x50
 5341 0751 07000000 		.4byte	.LVL158-1
 5342 0755 0E000000 		.4byte	.LVL159
 5343 0759 0100     		.2byte	0x1
 5344 075b 54       		.byte	0x54
 5345 075c 0E000000 		.4byte	.LVL159
 5346 0760 1F000000 		.4byte	.LVL160-1
 5347 0764 0100     		.2byte	0x1
 5348 0766 52       		.byte	0x52
 5349 0767 1F000000 		.4byte	.LVL160-1
 5350 076b 30000000 		.4byte	.LFE42
 5351 076f 0A00     		.2byte	0xa
 5352 0771 F3       		.byte	0xf3
 5353 0772 01       		.uleb128 0x1
 5354 0773 50       		.byte	0x50
 5355 0774 0C       		.byte	0xc
 5356 0775 04040400 		.4byte	0x40404
 5357 0779 1A       		.byte	0x1a
 5358 077a 9F       		.byte	0x9f
 5359 077b 00000000 		.4byte	0
 5360 077f 00000000 		.4byte	0
 5361              	.LLST37:
 5362 0783 08000000 		.4byte	.LVL158
 5363 0787 1F000000 		.4byte	.LVL160-1
 5364 078b 0100     		.2byte	0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 166


 5365 078d 50       		.byte	0x50
 5366 078e 00000000 		.4byte	0
 5367 0792 00000000 		.4byte	0
 5368              	.LLST38:
 5369 0796 00000000 		.4byte	.LVL161
 5370 079a 08000000 		.4byte	.LVL163
 5371 079e 0100     		.2byte	0x1
 5372 07a0 50       		.byte	0x50
 5373 07a1 08000000 		.4byte	.LVL163
 5374 07a5 12000000 		.4byte	.LVL165
 5375 07a9 0400     		.2byte	0x4
 5376 07ab F3       		.byte	0xf3
 5377 07ac 01       		.uleb128 0x1
 5378 07ad 50       		.byte	0x50
 5379 07ae 9F       		.byte	0x9f
 5380 07af 12000000 		.4byte	.LVL165
 5381 07b3 14000000 		.4byte	.LVL166
 5382 07b7 0100     		.2byte	0x1
 5383 07b9 50       		.byte	0x50
 5384 07ba 14000000 		.4byte	.LVL166
 5385 07be 20000000 		.4byte	.LFE43
 5386 07c2 0400     		.2byte	0x4
 5387 07c4 F3       		.byte	0xf3
 5388 07c5 01       		.uleb128 0x1
 5389 07c6 50       		.byte	0x50
 5390 07c7 9F       		.byte	0x9f
 5391 07c8 00000000 		.4byte	0
 5392 07cc 00000000 		.4byte	0
 5393              	.LLST39:
 5394 07d0 00000000 		.4byte	.LVL161
 5395 07d4 17000000 		.4byte	.LVL167-1
 5396 07d8 0100     		.2byte	0x1
 5397 07da 51       		.byte	0x51
 5398 07db 17000000 		.4byte	.LVL167-1
 5399 07df 20000000 		.4byte	.LFE43
 5400 07e3 0400     		.2byte	0x4
 5401 07e5 F3       		.byte	0xf3
 5402 07e6 01       		.uleb128 0x1
 5403 07e7 51       		.byte	0x51
 5404 07e8 9F       		.byte	0x9f
 5405 07e9 00000000 		.4byte	0
 5406 07ed 00000000 		.4byte	0
 5407              	.LLST40:
 5408 07f1 02000000 		.4byte	.LVL162
 5409 07f5 0E000000 		.4byte	.LVL164
 5410 07f9 0200     		.2byte	0x2
 5411 07fb 30       		.byte	0x30
 5412 07fc 9F       		.byte	0x9f
 5413 07fd 0E000000 		.4byte	.LVL164
 5414 0801 12000000 		.4byte	.LVL165
 5415 0805 0100     		.2byte	0x1
 5416 0807 50       		.byte	0x50
 5417 0808 12000000 		.4byte	.LVL165
 5418 080c 1A000000 		.4byte	.LVL168
 5419 0810 0200     		.2byte	0x2
 5420 0812 30       		.byte	0x30
 5421 0813 9F       		.byte	0x9f
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 167


 5422 0814 1A000000 		.4byte	.LVL168
 5423 0818 20000000 		.4byte	.LFE43
 5424 081c 0100     		.2byte	0x1
 5425 081e 50       		.byte	0x50
 5426 081f 00000000 		.4byte	0
 5427 0823 00000000 		.4byte	0
 5428              	.LLST41:
 5429 0827 00000000 		.4byte	.LVL169
 5430 082b 08000000 		.4byte	.LVL171
 5431 082f 0100     		.2byte	0x1
 5432 0831 50       		.byte	0x50
 5433 0832 08000000 		.4byte	.LVL171
 5434 0836 10000000 		.4byte	.LVL173
 5435 083a 0400     		.2byte	0x4
 5436 083c F3       		.byte	0xf3
 5437 083d 01       		.uleb128 0x1
 5438 083e 50       		.byte	0x50
 5439 083f 9F       		.byte	0x9f
 5440 0840 10000000 		.4byte	.LVL173
 5441 0844 12000000 		.4byte	.LVL174
 5442 0848 0100     		.2byte	0x1
 5443 084a 50       		.byte	0x50
 5444 084b 12000000 		.4byte	.LVL174
 5445 084f 20000000 		.4byte	.LFE44
 5446 0853 0400     		.2byte	0x4
 5447 0855 F3       		.byte	0xf3
 5448 0856 01       		.uleb128 0x1
 5449 0857 50       		.byte	0x50
 5450 0858 9F       		.byte	0x9f
 5451 0859 00000000 		.4byte	0
 5452 085d 00000000 		.4byte	0
 5453              	.LLST42:
 5454 0861 02000000 		.4byte	.LVL170
 5455 0865 0E000000 		.4byte	.LVL172
 5456 0869 0200     		.2byte	0x2
 5457 086b 30       		.byte	0x30
 5458 086c 9F       		.byte	0x9f
 5459 086d 0E000000 		.4byte	.LVL172
 5460 0871 10000000 		.4byte	.LVL173
 5461 0875 0100     		.2byte	0x1
 5462 0877 50       		.byte	0x50
 5463 0878 10000000 		.4byte	.LVL173
 5464 087c 18000000 		.4byte	.LVL176
 5465 0880 0200     		.2byte	0x2
 5466 0882 30       		.byte	0x30
 5467 0883 9F       		.byte	0x9f
 5468 0884 18000000 		.4byte	.LVL176
 5469 0888 20000000 		.4byte	.LFE44
 5470 088c 0100     		.2byte	0x1
 5471 088e 50       		.byte	0x50
 5472 088f 00000000 		.4byte	0
 5473 0893 00000000 		.4byte	0
 5474              	.LLST43:
 5475 0897 00000000 		.4byte	.LVL177
 5476 089b 08000000 		.4byte	.LVL178
 5477 089f 0100     		.2byte	0x1
 5478 08a1 50       		.byte	0x50
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 168


 5479 08a2 08000000 		.4byte	.LVL178
 5480 08a6 1E000000 		.4byte	.LVL179
 5481 08aa 0400     		.2byte	0x4
 5482 08ac F3       		.byte	0xf3
 5483 08ad 01       		.uleb128 0x1
 5484 08ae 50       		.byte	0x50
 5485 08af 9F       		.byte	0x9f
 5486 08b0 1E000000 		.4byte	.LVL179
 5487 08b4 20000000 		.4byte	.LVL180
 5488 08b8 0100     		.2byte	0x1
 5489 08ba 50       		.byte	0x50
 5490 08bb 20000000 		.4byte	.LVL180
 5491 08bf 34000000 		.4byte	.LFE45
 5492 08c3 0400     		.2byte	0x4
 5493 08c5 F3       		.byte	0xf3
 5494 08c6 01       		.uleb128 0x1
 5495 08c7 50       		.byte	0x50
 5496 08c8 9F       		.byte	0x9f
 5497 08c9 00000000 		.4byte	0
 5498 08cd 00000000 		.4byte	0
 5499              	.LLST44:
 5500 08d1 00000000 		.4byte	.LVL182
 5501 08d5 08000000 		.4byte	.LVL183
 5502 08d9 0100     		.2byte	0x1
 5503 08db 50       		.byte	0x50
 5504 08dc 08000000 		.4byte	.LVL183
 5505 08e0 16000000 		.4byte	.LVL184
 5506 08e4 0400     		.2byte	0x4
 5507 08e6 F3       		.byte	0xf3
 5508 08e7 01       		.uleb128 0x1
 5509 08e8 50       		.byte	0x50
 5510 08e9 9F       		.byte	0x9f
 5511 08ea 16000000 		.4byte	.LVL184
 5512 08ee 18000000 		.4byte	.LVL185
 5513 08f2 0100     		.2byte	0x1
 5514 08f4 50       		.byte	0x50
 5515 08f5 18000000 		.4byte	.LVL185
 5516 08f9 28000000 		.4byte	.LFE46
 5517 08fd 0400     		.2byte	0x4
 5518 08ff F3       		.byte	0xf3
 5519 0900 01       		.uleb128 0x1
 5520 0901 50       		.byte	0x50
 5521 0902 9F       		.byte	0x9f
 5522 0903 00000000 		.4byte	0
 5523 0907 00000000 		.4byte	0
 5524              	.LLST45:
 5525 090b 00000000 		.4byte	.LVL193
 5526 090f 08000000 		.4byte	.LVL194
 5527 0913 0100     		.2byte	0x1
 5528 0915 50       		.byte	0x50
 5529 0916 08000000 		.4byte	.LVL194
 5530 091a 20000000 		.4byte	.LFE48
 5531 091e 0400     		.2byte	0x4
 5532 0920 F3       		.byte	0xf3
 5533 0921 01       		.uleb128 0x1
 5534 0922 50       		.byte	0x50
 5535 0923 9F       		.byte	0x9f
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 169


 5536 0924 00000000 		.4byte	0
 5537 0928 00000000 		.4byte	0
 5538              	.LLST46:
 5539 092c 00000000 		.4byte	.LVL195
 5540 0930 0F000000 		.4byte	.LVL196-1
 5541 0934 0100     		.2byte	0x1
 5542 0936 50       		.byte	0x50
 5543 0937 0F000000 		.4byte	.LVL196-1
 5544 093b 5A000000 		.4byte	.LVL206
 5545 093f 0100     		.2byte	0x1
 5546 0941 54       		.byte	0x54
 5547 0942 5A000000 		.4byte	.LVL206
 5548 0946 6C000000 		.4byte	.LFE50
 5549 094a 0400     		.2byte	0x4
 5550 094c F3       		.byte	0xf3
 5551 094d 01       		.uleb128 0x1
 5552 094e 50       		.byte	0x50
 5553 094f 9F       		.byte	0x9f
 5554 0950 00000000 		.4byte	0
 5555 0954 00000000 		.4byte	0
 5556              	.LLST47:
 5557 0958 00000000 		.4byte	.LVL195
 5558 095c 0F000000 		.4byte	.LVL196-1
 5559 0960 0100     		.2byte	0x1
 5560 0962 51       		.byte	0x51
 5561 0963 0F000000 		.4byte	.LVL196-1
 5562 0967 6C000000 		.4byte	.LFE50
 5563 096b 0400     		.2byte	0x4
 5564 096d F3       		.byte	0xf3
 5565 096e 01       		.uleb128 0x1
 5566 096f 51       		.byte	0x51
 5567 0970 9F       		.byte	0x9f
 5568 0971 00000000 		.4byte	0
 5569 0975 00000000 		.4byte	0
 5570              	.LLST48:
 5571 0979 00000000 		.4byte	.LVL195
 5572 097d 0F000000 		.4byte	.LVL196-1
 5573 0981 0100     		.2byte	0x1
 5574 0983 52       		.byte	0x52
 5575 0984 0F000000 		.4byte	.LVL196-1
 5576 0988 5A000000 		.4byte	.LVL207
 5577 098c 0100     		.2byte	0x1
 5578 098e 55       		.byte	0x55
 5579 098f 5A000000 		.4byte	.LVL207
 5580 0993 6C000000 		.4byte	.LFE50
 5581 0997 0400     		.2byte	0x4
 5582 0999 F3       		.byte	0xf3
 5583 099a 01       		.uleb128 0x1
 5584 099b 52       		.byte	0x52
 5585 099c 9F       		.byte	0x9f
 5586 099d 00000000 		.4byte	0
 5587 09a1 00000000 		.4byte	0
 5588              	.LLST49:
 5589 09a5 24000000 		.4byte	.LVL197
 5590 09a9 2A000000 		.4byte	.LVL198
 5591 09ad 0100     		.2byte	0x1
 5592 09af 50       		.byte	0x50
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 170


 5593 09b0 2E000000 		.4byte	.LVL199
 5594 09b4 34000000 		.4byte	.LVL200
 5595 09b8 0100     		.2byte	0x1
 5596 09ba 50       		.byte	0x50
 5597 09bb 3A000000 		.4byte	.LVL201
 5598 09bf 50000000 		.4byte	.LVL203
 5599 09c3 0100     		.2byte	0x1
 5600 09c5 56       		.byte	0x56
 5601 09c6 50000000 		.4byte	.LVL203
 5602 09ca 54000000 		.4byte	.LVL204
 5603 09ce 0A00     		.2byte	0xa
 5604 09d0 74       		.byte	0x74
 5605 09d1 00       		.sleb128 0
 5606 09d2 32       		.byte	0x32
 5607 09d3 24       		.byte	0x24
 5608 09d4 03       		.byte	0x3
 5609 09d5 00000000 		.4byte	.LANCHOR1
 5610 09d9 22       		.byte	0x22
 5611 09da 00000000 		.4byte	0
 5612 09de 00000000 		.4byte	0
 5613              	.LLST50:
 5614 09e2 00000000 		.4byte	.LVL208
 5615 09e6 0F000000 		.4byte	.LVL209-1
 5616 09ea 0100     		.2byte	0x1
 5617 09ec 50       		.byte	0x50
 5618 09ed 0F000000 		.4byte	.LVL209-1
 5619 09f1 36000000 		.4byte	.LVL215
 5620 09f5 0100     		.2byte	0x1
 5621 09f7 54       		.byte	0x54
 5622 09f8 36000000 		.4byte	.LVL215
 5623 09fc 3C000000 		.4byte	.LFE49
 5624 0a00 0400     		.2byte	0x4
 5625 0a02 F3       		.byte	0xf3
 5626 0a03 01       		.uleb128 0x1
 5627 0a04 50       		.byte	0x50
 5628 0a05 9F       		.byte	0x9f
 5629 0a06 00000000 		.4byte	0
 5630 0a0a 00000000 		.4byte	0
 5631              	.LLST51:
 5632 0a0e 00000000 		.4byte	.LVL208
 5633 0a12 0F000000 		.4byte	.LVL209-1
 5634 0a16 0100     		.2byte	0x1
 5635 0a18 51       		.byte	0x51
 5636 0a19 0F000000 		.4byte	.LVL209-1
 5637 0a1d 3C000000 		.4byte	.LFE49
 5638 0a21 0400     		.2byte	0x4
 5639 0a23 F3       		.byte	0xf3
 5640 0a24 01       		.uleb128 0x1
 5641 0a25 51       		.byte	0x51
 5642 0a26 9F       		.byte	0x9f
 5643 0a27 00000000 		.4byte	0
 5644 0a2b 00000000 		.4byte	0
 5645              	.LLST52:
 5646 0a2f 00000000 		.4byte	.LVL208
 5647 0a33 0F000000 		.4byte	.LVL209-1
 5648 0a37 0100     		.2byte	0x1
 5649 0a39 52       		.byte	0x52
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 171


 5650 0a3a 0F000000 		.4byte	.LVL209-1
 5651 0a3e 36000000 		.4byte	.LVL216
 5652 0a42 0100     		.2byte	0x1
 5653 0a44 55       		.byte	0x55
 5654 0a45 36000000 		.4byte	.LVL216
 5655 0a49 3C000000 		.4byte	.LFE49
 5656 0a4d 0400     		.2byte	0x4
 5657 0a4f F3       		.byte	0xf3
 5658 0a50 01       		.uleb128 0x1
 5659 0a51 52       		.byte	0x52
 5660 0a52 9F       		.byte	0x9f
 5661 0a53 00000000 		.4byte	0
 5662 0a57 00000000 		.4byte	0
 5663              	.LLST53:
 5664 0a5b 20000000 		.4byte	.LVL210
 5665 0a5f 28000000 		.4byte	.LVL212
 5666 0a63 0100     		.2byte	0x1
 5667 0a65 50       		.byte	0x50
 5668 0a66 00000000 		.4byte	0
 5669 0a6a 00000000 		.4byte	0
 5670              	.LLST54:
 5671 0a6e 26000000 		.4byte	.LVL211
 5672 0a72 2D000000 		.4byte	.LVL213-1
 5673 0a76 0100     		.2byte	0x1
 5674 0a78 52       		.byte	0x52
 5675 0a79 00000000 		.4byte	0
 5676 0a7d 00000000 		.4byte	0
 5677              		.section	.debug_aranges,"",%progbits
 5678 0000 A4010000 		.4byte	0x1a4
 5679 0004 0200     		.2byte	0x2
 5680 0006 00000000 		.4byte	.Ldebug_info0
 5681 000a 04       		.byte	0x4
 5682 000b 00       		.byte	0
 5683 000c 0000     		.2byte	0
 5684 000e 0000     		.2byte	0
 5685 0010 00000000 		.4byte	.LFB25
 5686 0014 10000000 		.4byte	.LFE25-.LFB25
 5687 0018 00000000 		.4byte	.LFB1
 5688 001c 14000000 		.4byte	.LFE1-.LFB1
 5689 0020 00000000 		.4byte	.LFB2
 5690 0024 10000000 		.4byte	.LFE2-.LFB2
 5691 0028 00000000 		.4byte	.LFB3
 5692 002c 34000000 		.4byte	.LFE3-.LFB3
 5693 0030 00000000 		.4byte	.LFB4
 5694 0034 28000000 		.4byte	.LFE4-.LFB4
 5695 0038 00000000 		.4byte	.LFB5
 5696 003c 08010000 		.4byte	.LFE5-.LFB5
 5697 0040 00000000 		.4byte	.LFB6
 5698 0044 40000000 		.4byte	.LFE6-.LFB6
 5699 0048 00000000 		.4byte	.LFB8
 5700 004c 14000000 		.4byte	.LFE8-.LFB8
 5701 0050 00000000 		.4byte	.LFB7
 5702 0054 1C000000 		.4byte	.LFE7-.LFB7
 5703 0058 00000000 		.4byte	.LFB9
 5704 005c 4C000000 		.4byte	.LFE9-.LFB9
 5705 0060 00000000 		.4byte	.LFB10
 5706 0064 2C000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 172


 5707 0068 00000000 		.4byte	.LFB11
 5708 006c 1C000000 		.4byte	.LFE11-.LFB11
 5709 0070 00000000 		.4byte	.LFB12
 5710 0074 0C000000 		.4byte	.LFE12-.LFB12
 5711 0078 00000000 		.4byte	.LFB13
 5712 007c 10000000 		.4byte	.LFE13-.LFB13
 5713 0080 00000000 		.4byte	.LFB14
 5714 0084 18000000 		.4byte	.LFE14-.LFB14
 5715 0088 00000000 		.4byte	.LFB15
 5716 008c 10000000 		.4byte	.LFE15-.LFB15
 5717 0090 00000000 		.4byte	.LFB16
 5718 0094 0C000000 		.4byte	.LFE16-.LFB16
 5719 0098 00000000 		.4byte	.LFB17
 5720 009c 20000000 		.4byte	.LFE17-.LFB17
 5721 00a0 00000000 		.4byte	.LFB18
 5722 00a4 10000000 		.4byte	.LFE18-.LFB18
 5723 00a8 00000000 		.4byte	.LFB19
 5724 00ac 10000000 		.4byte	.LFE19-.LFB19
 5725 00b0 00000000 		.4byte	.LFB20
 5726 00b4 10000000 		.4byte	.LFE20-.LFB20
 5727 00b8 00000000 		.4byte	.LFB21
 5728 00bc 10000000 		.4byte	.LFE21-.LFB21
 5729 00c0 00000000 		.4byte	.LFB22
 5730 00c4 10000000 		.4byte	.LFE22-.LFB22
 5731 00c8 00000000 		.4byte	.LFB23
 5732 00cc 0C000000 		.4byte	.LFE23-.LFB23
 5733 00d0 00000000 		.4byte	.LFB24
 5734 00d4 18000000 		.4byte	.LFE24-.LFB24
 5735 00d8 00000000 		.4byte	.LFB26
 5736 00dc 68000000 		.4byte	.LFE26-.LFB26
 5737 00e0 00000000 		.4byte	.LFB27
 5738 00e4 24000000 		.4byte	.LFE27-.LFB27
 5739 00e8 00000000 		.4byte	.LFB28
 5740 00ec 44000000 		.4byte	.LFE28-.LFB28
 5741 00f0 00000000 		.4byte	.LFB29
 5742 00f4 14000000 		.4byte	.LFE29-.LFB29
 5743 00f8 00000000 		.4byte	.LFB30
 5744 00fc 38000000 		.4byte	.LFE30-.LFB30
 5745 0100 00000000 		.4byte	.LFB31
 5746 0104 24000000 		.4byte	.LFE31-.LFB31
 5747 0108 00000000 		.4byte	.LFB32
 5748 010c 3C000000 		.4byte	.LFE32-.LFB32
 5749 0110 00000000 		.4byte	.LFB33
 5750 0114 3C000000 		.4byte	.LFE33-.LFB33
 5751 0118 00000000 		.4byte	.LFB34
 5752 011c 34000000 		.4byte	.LFE34-.LFB34
 5753 0120 00000000 		.4byte	.LFB35
 5754 0124 14000000 		.4byte	.LFE35-.LFB35
 5755 0128 00000000 		.4byte	.LFB36
 5756 012c 58000000 		.4byte	.LFE36-.LFB36
 5757 0130 00000000 		.4byte	.LFB37
 5758 0134 2C000000 		.4byte	.LFE37-.LFB37
 5759 0138 00000000 		.4byte	.LFB38
 5760 013c 10000000 		.4byte	.LFE38-.LFB38
 5761 0140 00000000 		.4byte	.LFB39
 5762 0144 20000000 		.4byte	.LFE39-.LFB39
 5763 0148 00000000 		.4byte	.LFB40
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 173


 5764 014c 3C000000 		.4byte	.LFE40-.LFB40
 5765 0150 00000000 		.4byte	.LFB41
 5766 0154 14000000 		.4byte	.LFE41-.LFB41
 5767 0158 00000000 		.4byte	.LFB42
 5768 015c 30000000 		.4byte	.LFE42-.LFB42
 5769 0160 00000000 		.4byte	.LFB43
 5770 0164 20000000 		.4byte	.LFE43-.LFB43
 5771 0168 00000000 		.4byte	.LFB44
 5772 016c 20000000 		.4byte	.LFE44-.LFB44
 5773 0170 00000000 		.4byte	.LFB45
 5774 0174 34000000 		.4byte	.LFE45-.LFB45
 5775 0178 00000000 		.4byte	.LFB46
 5776 017c 28000000 		.4byte	.LFE46-.LFB46
 5777 0180 00000000 		.4byte	.LFB47
 5778 0184 A4000000 		.4byte	.LFE47-.LFB47
 5779 0188 00000000 		.4byte	.LFB48
 5780 018c 20000000 		.4byte	.LFE48-.LFB48
 5781 0190 00000000 		.4byte	.LFB50
 5782 0194 6C000000 		.4byte	.LFE50-.LFB50
 5783 0198 00000000 		.4byte	.LFB49
 5784 019c 3C000000 		.4byte	.LFE49-.LFB49
 5785 01a0 00000000 		.4byte	0
 5786 01a4 00000000 		.4byte	0
 5787              		.section	.debug_ranges,"",%progbits
 5788              	.Ldebug_ranges0:
 5789 0000 00000000 		.4byte	.LFB25
 5790 0004 10000000 		.4byte	.LFE25
 5791 0008 00000000 		.4byte	.LFB1
 5792 000c 14000000 		.4byte	.LFE1
 5793 0010 00000000 		.4byte	.LFB2
 5794 0014 10000000 		.4byte	.LFE2
 5795 0018 00000000 		.4byte	.LFB3
 5796 001c 34000000 		.4byte	.LFE3
 5797 0020 00000000 		.4byte	.LFB4
 5798 0024 28000000 		.4byte	.LFE4
 5799 0028 00000000 		.4byte	.LFB5
 5800 002c 08010000 		.4byte	.LFE5
 5801 0030 00000000 		.4byte	.LFB6
 5802 0034 40000000 		.4byte	.LFE6
 5803 0038 00000000 		.4byte	.LFB8
 5804 003c 14000000 		.4byte	.LFE8
 5805 0040 00000000 		.4byte	.LFB7
 5806 0044 1C000000 		.4byte	.LFE7
 5807 0048 00000000 		.4byte	.LFB9
 5808 004c 4C000000 		.4byte	.LFE9
 5809 0050 00000000 		.4byte	.LFB10
 5810 0054 2C000000 		.4byte	.LFE10
 5811 0058 00000000 		.4byte	.LFB11
 5812 005c 1C000000 		.4byte	.LFE11
 5813 0060 00000000 		.4byte	.LFB12
 5814 0064 0C000000 		.4byte	.LFE12
 5815 0068 00000000 		.4byte	.LFB13
 5816 006c 10000000 		.4byte	.LFE13
 5817 0070 00000000 		.4byte	.LFB14
 5818 0074 18000000 		.4byte	.LFE14
 5819 0078 00000000 		.4byte	.LFB15
 5820 007c 10000000 		.4byte	.LFE15
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 174


 5821 0080 00000000 		.4byte	.LFB16
 5822 0084 0C000000 		.4byte	.LFE16
 5823 0088 00000000 		.4byte	.LFB17
 5824 008c 20000000 		.4byte	.LFE17
 5825 0090 00000000 		.4byte	.LFB18
 5826 0094 10000000 		.4byte	.LFE18
 5827 0098 00000000 		.4byte	.LFB19
 5828 009c 10000000 		.4byte	.LFE19
 5829 00a0 00000000 		.4byte	.LFB20
 5830 00a4 10000000 		.4byte	.LFE20
 5831 00a8 00000000 		.4byte	.LFB21
 5832 00ac 10000000 		.4byte	.LFE21
 5833 00b0 00000000 		.4byte	.LFB22
 5834 00b4 10000000 		.4byte	.LFE22
 5835 00b8 00000000 		.4byte	.LFB23
 5836 00bc 0C000000 		.4byte	.LFE23
 5837 00c0 00000000 		.4byte	.LFB24
 5838 00c4 18000000 		.4byte	.LFE24
 5839 00c8 00000000 		.4byte	.LFB26
 5840 00cc 68000000 		.4byte	.LFE26
 5841 00d0 00000000 		.4byte	.LFB27
 5842 00d4 24000000 		.4byte	.LFE27
 5843 00d8 00000000 		.4byte	.LFB28
 5844 00dc 44000000 		.4byte	.LFE28
 5845 00e0 00000000 		.4byte	.LFB29
 5846 00e4 14000000 		.4byte	.LFE29
 5847 00e8 00000000 		.4byte	.LFB30
 5848 00ec 38000000 		.4byte	.LFE30
 5849 00f0 00000000 		.4byte	.LFB31
 5850 00f4 24000000 		.4byte	.LFE31
 5851 00f8 00000000 		.4byte	.LFB32
 5852 00fc 3C000000 		.4byte	.LFE32
 5853 0100 00000000 		.4byte	.LFB33
 5854 0104 3C000000 		.4byte	.LFE33
 5855 0108 00000000 		.4byte	.LFB34
 5856 010c 34000000 		.4byte	.LFE34
 5857 0110 00000000 		.4byte	.LFB35
 5858 0114 14000000 		.4byte	.LFE35
 5859 0118 00000000 		.4byte	.LFB36
 5860 011c 58000000 		.4byte	.LFE36
 5861 0120 00000000 		.4byte	.LFB37
 5862 0124 2C000000 		.4byte	.LFE37
 5863 0128 00000000 		.4byte	.LFB38
 5864 012c 10000000 		.4byte	.LFE38
 5865 0130 00000000 		.4byte	.LFB39
 5866 0134 20000000 		.4byte	.LFE39
 5867 0138 00000000 		.4byte	.LFB40
 5868 013c 3C000000 		.4byte	.LFE40
 5869 0140 00000000 		.4byte	.LFB41
 5870 0144 14000000 		.4byte	.LFE41
 5871 0148 00000000 		.4byte	.LFB42
 5872 014c 30000000 		.4byte	.LFE42
 5873 0150 00000000 		.4byte	.LFB43
 5874 0154 20000000 		.4byte	.LFE43
 5875 0158 00000000 		.4byte	.LFB44
 5876 015c 20000000 		.4byte	.LFE44
 5877 0160 00000000 		.4byte	.LFB45
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 175


 5878 0164 34000000 		.4byte	.LFE45
 5879 0168 00000000 		.4byte	.LFB46
 5880 016c 28000000 		.4byte	.LFE46
 5881 0170 00000000 		.4byte	.LFB47
 5882 0174 A4000000 		.4byte	.LFE47
 5883 0178 00000000 		.4byte	.LFB48
 5884 017c 20000000 		.4byte	.LFE48
 5885 0180 00000000 		.4byte	.LFB50
 5886 0184 6C000000 		.4byte	.LFE50
 5887 0188 00000000 		.4byte	.LFB49
 5888 018c 3C000000 		.4byte	.LFE49
 5889 0190 00000000 		.4byte	0
 5890 0194 00000000 		.4byte	0
 5891              		.section	.debug_line,"",%progbits
 5892              	.Ldebug_line0:
 5893 0000 BD050000 		.section	.debug_str,"MS",%progbits,1
 5893      02005C00 
 5893      00000201 
 5893      FB0E0D00 
 5893      01010101 
 5894              	.LASF10:
 5895 0000 75696E74 		.ascii	"uint16\000"
 5895      313600
 5896              	.LASF117:
 5897 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 5897      69744372 
 5897      69746963 
 5897      616C5365 
 5897      6374696F 
 5898              	.LASF107:
 5899 001d 63795379 		.ascii	"cySysWdtCallback\000"
 5899      73576474 
 5899      43616C6C 
 5899      6261636B 
 5899      00
 5900              	.LASF0:
 5901 002e 7369676E 		.ascii	"signed char\000"
 5901      65642063 
 5901      68617200 
 5902              	.LASF66:
 5903 003a 636F756E 		.ascii	"counterNum\000"
 5903      7465724E 
 5903      756D00
 5904              	.LASF85:
 5905 0045 43795379 		.ascii	"CySysTimerGetMatch\000"
 5905      7354696D 
 5905      65724765 
 5905      744D6174 
 5905      636800
 5906              	.LASF21:
 5907 0058 63795469 		.ascii	"cyTimerCallback\000"
 5907      6D657243 
 5907      616C6C62 
 5907      61636B00 
 5908              	.LASF106:
 5909 0068 63795379 		.ascii	"cySysTimerCallback\000"
 5909      7354696D 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 176


 5909      65724361 
 5909      6C6C6261 
 5909      636B00
 5910              	.LASF7:
 5911 007b 6C6F6E67 		.ascii	"long long unsigned int\000"
 5911      206C6F6E 
 5911      6720756E 
 5911      7369676E 
 5911      65642069 
 5912              	.LASF69:
 5913 0092 43795379 		.ascii	"CySysTimerGetMode\000"
 5913      7354696D 
 5913      65724765 
 5913      744D6F64 
 5913      6500
 5914              	.LASF43:
 5915 00a4 43795379 		.ascii	"CySysClkWcoEnabled\000"
 5915      73436C6B 
 5915      57636F45 
 5915      6E61626C 
 5915      656400
 5916              	.LASF92:
 5917 00b7 43795379 		.ascii	"CySysTimerEnableIsr\000"
 5917      7354696D 
 5917      6572456E 
 5917      61626C65 
 5917      49737200 
 5918              	.LASF114:
 5919 00cb 43795379 		.ascii	"CySysClkWcoSetHighPowerMode\000"
 5919      73436C6B 
 5919      57636F53 
 5919      65744869 
 5919      6768506F 
 5920              	.LASF6:
 5921 00e7 6C6F6E67 		.ascii	"long long int\000"
 5921      206C6F6E 
 5921      6720696E 
 5921      7400
 5922              	.LASF112:
 5923 00f5 433A5C55 		.ascii	"C:\\Users\\Zeus\\Documents\\PSoC Creator\\CE211252_"
 5923      73657273 
 5923      5C5A6575 
 5923      735C446F 
 5923      63756D65 
 5924 0123 416D6269 		.ascii	"Ambient_Light_Sensing\\CE211252_Ambient_Light_Sensi"
 5924      656E745F 
 5924      4C696768 
 5924      745F5365 
 5924      6E73696E 
 5925 0155 6E672E63 		.ascii	"ng.cydsn\000"
 5925      7964736E 
 5925      00
 5926              	.LASF94:
 5927 015e 43795379 		.ascii	"CySysTimerIsr\000"
 5927      7354696D 
 5927      65724973 
 5927      7200
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 177


 5928              	.LASF58:
 5929 016c 66756E63 		.ascii	"function\000"
 5929      74696F6E 
 5929      00
 5930              	.LASF64:
 5931 0175 696E7465 		.ascii	"interruptState\000"
 5931      72727570 
 5931      74537461 
 5931      746500
 5932              	.LASF53:
 5933 0184 43795379 		.ascii	"CySysWdtGetIgnoreBits\000"
 5933      73576474 
 5933      47657449 
 5933      676E6F72 
 5933      65426974 
 5934              	.LASF20:
 5935 019a 63795764 		.ascii	"cyWdtCallback\000"
 5935      7443616C 
 5935      6C626163 
 5935      6B00
 5936              	.LASF109:
 5937 01a8 43794465 		.ascii	"CyDelayUs\000"
 5937      6C617955 
 5937      7300
 5938              	.LASF19:
 5939 01b2 63795F73 		.ascii	"cy_sys_timer_delaytype_enum\000"
 5939      79735F74 
 5939      696D6572 
 5939      5F64656C 
 5939      61797479 
 5940              	.LASF83:
 5941 01ce 62697473 		.ascii	"bits\000"
 5941      00
 5942              	.LASF4:
 5943 01d3 6C6F6E67 		.ascii	"long int\000"
 5943      20696E74 
 5943      00
 5944              	.LASF81:
 5945 01dc 72656756 		.ascii	"regValue\000"
 5945      616C7565 
 5945      00
 5946              	.LASF42:
 5947 01e5 636C6F63 		.ascii	"clockSel\000"
 5947      6B53656C 
 5947      00
 5948              	.LASF9:
 5949 01ee 75696E74 		.ascii	"uint8\000"
 5949      3800
 5950              	.LASF71:
 5951 01f4 656E6162 		.ascii	"enable\000"
 5951      6C6500
 5952              	.LASF13:
 5953 01fb 646F7562 		.ascii	"double\000"
 5953      6C6500
 5954              	.LASF28:
 5955 0202 636F6D70 		.ascii	"compensatedCycles\000"
 5955      656E7361 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 178


 5955      74656443 
 5955      79636C65 
 5955      7300
 5956              	.LASF24:
 5957 0214 43795379 		.ascii	"CySysClkIloStop\000"
 5957      73436C6B 
 5957      496C6F53 
 5957      746F7000 
 5958              	.LASF30:
 5959 0224 696C6F43 		.ascii	"iloCompensatedCycles\000"
 5959      6F6D7065 
 5959      6E736174 
 5959      65644379 
 5959      636C6573 
 5960              	.LASF96:
 5961 0239 636F756E 		.ascii	"countersMask\000"
 5961      74657273 
 5961      4D61736B 
 5961      00
 5962              	.LASF70:
 5963 0246 43795379 		.ascii	"CySysTimerSetClearOnMatch\000"
 5963      7354696D 
 5963      65725365 
 5963      74436C65 
 5963      61724F6E 
 5964              	.LASF11:
 5965 0260 75696E74 		.ascii	"uint32\000"
 5965      333200
 5966              	.LASF26:
 5967 0267 43795379 		.ascii	"CySysClkIloStopMeasurement\000"
 5967      73436C6B 
 5967      496C6F53 
 5967      746F704D 
 5967      65617375 
 5968              	.LASF104:
 5969 0282 74696D65 		.ascii	"timerIsrMask\000"
 5969      72497372 
 5969      4D61736B 
 5969      00
 5970              	.LASF59:
 5971 028f 70726576 		.ascii	"prevCallback\000"
 5971      43616C6C 
 5971      6261636B 
 5971      00
 5972              	.LASF47:
 5973 029c 43795379 		.ascii	"CySysWdtSetMatch\000"
 5973      73576474 
 5973      5365744D 
 5973      61746368 
 5973      00
 5974              	.LASF76:
 5975 02ad 43795379 		.ascii	"CySysTimerSetCascade\000"
 5975      7354696D 
 5975      65725365 
 5975      74436173 
 5975      63616465 
 5976              	.LASF45:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 179


 5977 02c2 43795379 		.ascii	"CySysWdtEnable\000"
 5977      73576474 
 5977      456E6162 
 5977      6C6500
 5978              	.LASF57:
 5979 02d1 43795379 		.ascii	"CySysWdtSetInterruptCallback\000"
 5979      73576474 
 5979      53657449 
 5979      6E746572 
 5979      72757074 
 5980              	.LASF74:
 5981 02ee 636F756E 		.ascii	"counterMask\000"
 5981      7465724D 
 5981      61736B00 
 5982              	.LASF90:
 5983 02fa 43795379 		.ascii	"CySysTimerGetInterruptCallback\000"
 5983      7354696D 
 5983      65724765 
 5983      74496E74 
 5983      65727275 
 5984              	.LASF8:
 5985 0319 756E7369 		.ascii	"unsigned int\000"
 5985      676E6564 
 5985      20696E74 
 5985      00
 5986              	.LASF87:
 5987 0326 43795379 		.ascii	"CySysTimerGetInterruptSource\000"
 5987      7354696D 
 5987      65724765 
 5987      74496E74 
 5987      65727275 
 5988              	.LASF51:
 5989 0343 43795379 		.ascii	"CySysWdtSetIgnoreBits\000"
 5989      73576474 
 5989      53657449 
 5989      676E6F72 
 5989      65426974 
 5990              	.LASF91:
 5991 0359 72657443 		.ascii	"retCallback\000"
 5991      616C6C62 
 5991      61636B00 
 5992              	.LASF27:
 5993 0365 64657369 		.ascii	"desiredDelay\000"
 5993      72656444 
 5993      656C6179 
 5993      00
 5994              	.LASF5:
 5995 0372 6C6F6E67 		.ascii	"long unsigned int\000"
 5995      20756E73 
 5995      69676E65 
 5995      6420696E 
 5995      7400
 5996              	.LASF105:
 5997 0384 636F756E 		.ascii	"counterTimerIntMaskTbl\000"
 5997      74657254 
 5997      696D6572 
 5997      496E744D 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 180


 5997      61736B54 
 5998              	.LASF102:
 5999 039b 6D617463 		.ascii	"matchValue\000"
 5999      6856616C 
 5999      756500
 6000              	.LASF55:
 6001 03a6 43795379 		.ascii	"CySysWdtMaskInterrupt\000"
 6001      73576474 
 6001      4D61736B 
 6001      496E7465 
 6001      72727570 
 6002              	.LASF3:
 6003 03bc 73686F72 		.ascii	"short unsigned int\000"
 6003      7420756E 
 6003      7369676E 
 6003      65642069 
 6003      6E7400
 6004              	.LASF44:
 6005 03cf 43795379 		.ascii	"CySysWdtGetEnabledStatus\000"
 6005      73576474 
 6005      47657445 
 6005      6E61626C 
 6005      65645374 
 6006              	.LASF60:
 6007 03e8 43795379 		.ascii	"CySysWdtGetInterruptCallback\000"
 6007      73576474 
 6007      47657449 
 6007      6E746572 
 6007      72757074 
 6008              	.LASF84:
 6009 0405 43795379 		.ascii	"CySysTimerGetToggleBit\000"
 6009      7354696D 
 6009      65724765 
 6009      74546F67 
 6009      676C6542 
 6010              	.LASF61:
 6011 041c 43795379 		.ascii	"CySysWdtIsr\000"
 6011      73576474 
 6011      49737200 
 6012              	.LASF23:
 6013 0428 43795379 		.ascii	"CySysClkIloStart\000"
 6013      73436C6B 
 6013      496C6F53 
 6013      74617274 
 6013      00
 6014              	.LASF29:
 6015 0439 74696D65 		.ascii	"timerSource\000"
 6015      72536F75 
 6015      72636500 
 6016              	.LASF40:
 6017 0445 706F7765 		.ascii	"powerModeStatus\000"
 6017      724D6F64 
 6017      65537461 
 6017      74757300 
 6018              	.LASF16:
 6019 0455 72656733 		.ascii	"reg32\000"
 6019      3200
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 181


 6020              	.LASF116:
 6021 045b 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6021      74657243 
 6021      72697469 
 6021      63616C53 
 6021      65637469 
 6022              	.LASF113:
 6023 0472 43795379 		.ascii	"CySysClkGetTimerSource\000"
 6023      73436C6B 
 6023      47657454 
 6023      696D6572 
 6023      536F7572 
 6024              	.LASF34:
 6025 0489 72657475 		.ascii	"returnStatus\000"
 6025      726E5374 
 6025      61747573 
 6025      00
 6026              	.LASF63:
 6027 0496 736F7572 		.ascii	"source\000"
 6027      636500
 6028              	.LASF41:
 6029 049d 43795379 		.ascii	"CySysClkWcoClockOutSelect\000"
 6029      73436C6B 
 6029      57636F43 
 6029      6C6F636B 
 6029      4F757453 
 6030              	.LASF22:
 6031 04b7 73697A65 		.ascii	"sizetype\000"
 6031      74797065 
 6031      00
 6032              	.LASF49:
 6033 04c0 43795379 		.ascii	"CySysWdtGetMatch\000"
 6033      73576474 
 6033      4765744D 
 6033      61746368 
 6033      00
 6034              	.LASF86:
 6035 04d1 43795379 		.ascii	"CySysTimerGetCount\000"
 6035      7354696D 
 6035      65724765 
 6035      74436F75 
 6035      6E7400
 6036              	.LASF48:
 6037 04e4 6D617463 		.ascii	"match\000"
 6037      6800
 6038              	.LASF79:
 6039 04ea 43795379 		.ascii	"CySysTimerGetCascade\000"
 6039      7354696D 
 6039      65724765 
 6039      74436173 
 6039      63616465 
 6040              	.LASF17:
 6041 04ff 43595F53 		.ascii	"CY_SYS_TIMER_WAIT\000"
 6041      59535F54 
 6041      494D4552 
 6041      5F574149 
 6041      5400
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 182


 6042              	.LASF33:
 6043 0511 63686563 		.ascii	"checkStatus\000"
 6043      6B537461 
 6043      74757300 
 6044              	.LASF115:
 6045 051d 63796465 		.ascii	"cydelayFreqHz\000"
 6045      6C617946 
 6045      72657148 
 6045      7A00
 6046              	.LASF67:
 6047 052b 43795379 		.ascii	"CySysTimerSetMode\000"
 6047      7354696D 
 6047      65725365 
 6047      744D6F64 
 6047      6500
 6048              	.LASF54:
 6049 053d 43795379 		.ascii	"CySysWdtClearInterrupt\000"
 6049      73576474 
 6049      436C6561 
 6049      72496E74 
 6049      65727275 
 6050              	.LASF12:
 6051 0554 666C6F61 		.ascii	"float\000"
 6051      7400
 6052              	.LASF97:
 6053 055a 43795379 		.ascii	"CySysTimerDelayUntilMatch\000"
 6053      7354696D 
 6053      65724465 
 6053      6C617955 
 6053      6E74696C 
 6054              	.LASF56:
 6055 0574 43795379 		.ascii	"CySysWdtUnmaskInterrupt\000"
 6055      73576474 
 6055      556E6D61 
 6055      736B496E 
 6055      74657272 
 6056              	.LASF52:
 6057 058c 62697473 		.ascii	"bitsNum\000"
 6057      4E756D00 
 6058              	.LASF100:
 6059 0594 43795379 		.ascii	"CySysTimerDelay\000"
 6059      7354696D 
 6059      65724465 
 6059      6C617900 
 6060              	.LASF93:
 6061 05a4 43795379 		.ascii	"CySysTimerDisableIsr\000"
 6061      7354696D 
 6061      65724469 
 6061      7361626C 
 6061      65497372 
 6062              	.LASF108:
 6063 05b9 43794861 		.ascii	"CyHalt\000"
 6063      6C7400
 6064              	.LASF1:
 6065 05c0 756E7369 		.ascii	"unsigned char\000"
 6065      676E6564 
 6065      20636861 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 183


 6065      7200
 6066              	.LASF32:
 6067 05ce 636F6D70 		.ascii	"compensateRunningStatus\000"
 6067      656E7361 
 6067      74655275 
 6067      6E6E696E 
 6067      67537461 
 6068              	.LASF101:
 6069 05e6 64656C61 		.ascii	"delay\000"
 6069      7900
 6070              	.LASF2:
 6071 05ec 73686F72 		.ascii	"short int\000"
 6071      7420696E 
 6071      7400
 6072              	.LASF95:
 6073 05f6 43795379 		.ascii	"CySysTimerResetCounters\000"
 6073      7354696D 
 6073      65725265 
 6073      73657443 
 6073      6F756E74 
 6074              	.LASF46:
 6075 060e 43795379 		.ascii	"CySysWdtDisable\000"
 6075      73576474 
 6075      44697361 
 6075      626C6500 
 6076              	.LASF73:
 6077 061e 43795379 		.ascii	"CySysTimerEnable\000"
 6077      7354696D 
 6077      6572456E 
 6077      61626C65 
 6077      00
 6078              	.LASF65:
 6079 062f 43795379 		.ascii	"CySysTimerGetEnabledStatus\000"
 6079      7354696D 
 6079      65724765 
 6079      74456E61 
 6079      626C6564 
 6080              	.LASF25:
 6081 064a 43795379 		.ascii	"CySysClkIloStartMeasurement\000"
 6081      73436C6B 
 6081      496C6F53 
 6081      74617274 
 6081      4D656173 
 6082              	.LASF78:
 6083 0666 636F756E 		.ascii	"countersEnableStatus\000"
 6083      74657273 
 6083      456E6162 
 6083      6C655374 
 6083      61747573 
 6084              	.LASF111:
 6085 067b 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLFClk.c\000"
 6085      72617465 
 6085      645F536F 
 6085      75726365 
 6085      5C50536F 
 6086              	.LASF80:
 6087 069c 43795379 		.ascii	"CySysTimerSetMatch\000"
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 184


 6087      7354696D 
 6087      65725365 
 6087      744D6174 
 6087      636800
 6088              	.LASF62:
 6089 06af 43795379 		.ascii	"CySysClkSetTimerSource\000"
 6089      73436C6B 
 6089      53657454 
 6089      696D6572 
 6089      536F7572 
 6090              	.LASF36:
 6091 06c6 43795379 		.ascii	"CySysClkWcoStop\000"
 6091      73436C6B 
 6091      57636F53 
 6091      746F7000 
 6092              	.LASF38:
 6093 06d6 43795379 		.ascii	"CySysClkWcoSetPowerMode\000"
 6093      73436C6B 
 6093      57636F53 
 6093      6574506F 
 6093      7765724D 
 6094              	.LASF14:
 6095 06ee 63686172 		.ascii	"char\000"
 6095      00
 6096              	.LASF39:
 6097 06f3 6D6F6465 		.ascii	"mode\000"
 6097      00
 6098              	.LASF50:
 6099 06f8 43795379 		.ascii	"CySysWdtGetCount\000"
 6099      73576474 
 6099      47657443 
 6099      6F756E74 
 6099      00
 6100              	.LASF72:
 6101 0709 43795379 		.ascii	"CySysTimerGetClearOnMatch\000"
 6101      7354696D 
 6101      65724765 
 6101      74436C65 
 6101      61724F6E 
 6102              	.LASF99:
 6103 0723 746D7056 		.ascii	"tmpValue\000"
 6103      616C7565 
 6103      00
 6104              	.LASF89:
 6105 072c 43795379 		.ascii	"CySysTimerSetInterruptCallback\000"
 6105      7354696D 
 6105      65725365 
 6105      74496E74 
 6105      65727275 
 6106              	.LASF31:
 6107 074b 64657369 		.ascii	"desiredDelayInCounts\000"
 6107      72656444 
 6107      656C6179 
 6107      496E436F 
 6107      756E7473 
 6108              	.LASF35:
 6109 0760 43795379 		.ascii	"CySysClkWcoStart\000"
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 185


 6109      73436C6B 
 6109      57636F53 
 6109      74617274 
 6109      00
 6110              	.LASF98:
 6111 0771 64656C61 		.ascii	"delayType\000"
 6111      79547970 
 6111      6500
 6112              	.LASF68:
 6113 077b 636F6E66 		.ascii	"configRegValue\000"
 6113      69675265 
 6113      6756616C 
 6113      756500
 6114              	.LASF82:
 6115 078a 43795379 		.ascii	"CySysTimerSetToggleBit\000"
 6115      7354696D 
 6115      65725365 
 6115      74546F67 
 6115      676C6542 
 6116              	.LASF77:
 6117 07a1 63617363 		.ascii	"cascadeMask\000"
 6117      6164654D 
 6117      61736B00 
 6118              	.LASF75:
 6119 07ad 43795379 		.ascii	"CySysTimerDisable\000"
 6119      7354696D 
 6119      65724469 
 6119      7361626C 
 6119      6500
 6120              	.LASF15:
 6121 07bf 63797374 		.ascii	"cystatus\000"
 6121      61747573 
 6121      00
 6122              	.LASF88:
 6123 07c8 43795379 		.ascii	"CySysTimerClearInterrupt\000"
 6123      7354696D 
 6123      6572436C 
 6123      65617249 
 6123      6E746572 
 6124              	.LASF103:
 6125 07e1 64697361 		.ascii	"disableTimerServicedIsr\000"
 6125      626C6554 
 6125      696D6572 
 6125      53657276 
 6125      69636564 
 6126              	.LASF37:
 6127 07f9 43795379 		.ascii	"CySysClkIloCompensate\000"
 6127      73436C6B 
 6127      496C6F43 
 6127      6F6D7065 
 6127      6E736174 
 6128              	.LASF18:
 6129 080f 43595F53 		.ascii	"CY_SYS_TIMER_INTERRUPT\000"
 6129      59535F54 
 6129      494D4552 
 6129      5F494E54 
 6129      45525255 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccZRgs3L.s 			page 186


 6130              	.LASF110:
 6131 0826 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 6131      4320342E 
 6131      392E3320 
 6131      32303135 
 6131      30333033 
 6132 0859 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 6132      20726576 
 6132      6973696F 
 6132      6E203232 
 6132      31323230 
 6133 088c 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 6133      67202D66 
 6133      66756E63 
 6133      74696F6E 
 6133      2D736563 
 6134              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
