ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccLwUvdd.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"cyPm.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysPmSleep,"ax",%progbits
  18              		.align	2
  19              		.global	CySysPmSleep
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysPmSleep, %function
  23              	CySysPmSleep:
  24              	.LFB1:
  25              		.file 1 "Generated_Source\\PSoC4\\cyPm.c"
   1:Generated_Source\PSoC4/cyPm.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/cyPm.c **** * \file cyPm.c
   3:Generated_Source\PSoC4/cyPm.c **** * \version 5.50
   4:Generated_Source\PSoC4/cyPm.c **** *
   5:Generated_Source\PSoC4/cyPm.c **** * \brief Provides an API for the power management.
   6:Generated_Source\PSoC4/cyPm.c **** *
   7:Generated_Source\PSoC4/cyPm.c **** * \note Documentation of the API's in this file is located in the System
   8:Generated_Source\PSoC4/cyPm.c **** * Reference Guide provided with PSoC Creator.
   9:Generated_Source\PSoC4/cyPm.c **** *
  10:Generated_Source\PSoC4/cyPm.c **** ********************************************************************************
  11:Generated_Source\PSoC4/cyPm.c **** * \copyright
  12:Generated_Source\PSoC4/cyPm.c **** * Copyright 2011-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/cyPm.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/cyPm.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/cyPm.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/cyPm.c **** 
  18:Generated_Source\PSoC4/cyPm.c **** #include "cyPm.h"
  19:Generated_Source\PSoC4/cyPm.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/cyPm.c **** 
  21:Generated_Source\PSoC4/cyPm.c **** 
  22:Generated_Source\PSoC4/cyPm.c **** /*******************************************************************************
  23:Generated_Source\PSoC4/cyPm.c **** * Function Name: CySysPmSleep
  24:Generated_Source\PSoC4/cyPm.c **** ****************************************************************************//**
  25:Generated_Source\PSoC4/cyPm.c **** *
  26:Generated_Source\PSoC4/cyPm.c **** * Puts the part into the Sleep state. This is a CPU-centric power mode.
  27:Generated_Source\PSoC4/cyPm.c **** * It means that the CPU has indicated that it is in the sleep mode and
  28:Generated_Source\PSoC4/cyPm.c **** * its main clock can be removed. It is identical to Active from a peripheral
  29:Generated_Source\PSoC4/cyPm.c **** * point of view. Any enabled interrupts can cause wakeup from the Sleep mode.
  30:Generated_Source\PSoC4/cyPm.c **** *
  31:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  32:Generated_Source\PSoC4/cyPm.c **** void CySysPmSleep(void)
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccLwUvdd.s 			page 2


  33:Generated_Source\PSoC4/cyPm.c **** {
  26              		.loc 1 33 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
  34:Generated_Source\PSoC4/cyPm.c ****     uint8 interruptState;
  35:Generated_Source\PSoC4/cyPm.c **** 
  36:Generated_Source\PSoC4/cyPm.c ****     interruptState = CyEnterCriticalSection();
  32              		.loc 1 36 0
  33 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  34              	.LVL0:
  37:Generated_Source\PSoC4/cyPm.c **** 
  38:Generated_Source\PSoC4/cyPm.c ****     /* CPU enters Sleep mode upon execution of WFI */
  39:Generated_Source\PSoC4/cyPm.c ****     CY_PM_CPU_SCR_REG &= (uint32) (~CY_PM_CPU_SCR_SLEEPDEEP);
  35              		.loc 1 39 0
  36 0006 044A     		ldr	r2, .L2
  37 0008 1368     		ldr	r3, [r2]
  38 000a 0421     		mov	r1, #4
  39 000c 8B43     		bic	r3, r1
  40 000e 1360     		str	r3, [r2]
  40:Generated_Source\PSoC4/cyPm.c **** 
  41:Generated_Source\PSoC4/cyPm.c ****     /* Sleep and wait for interrupt */
  42:Generated_Source\PSoC4/cyPm.c ****     CY_PM_WFI;
  41              		.loc 1 42 0
  42              	@ 42 "Generated_Source\PSoC4\cyPm.c" 1
  43 0010 30BF     		WFI 
  44              	
  45              	@ 0 "" 2
  43:Generated_Source\PSoC4/cyPm.c **** 
  44:Generated_Source\PSoC4/cyPm.c ****     CyExitCriticalSection(interruptState);
  46              		.loc 1 44 0
  47              		.code	16
  48 0012 FFF7FEFF 		bl	CyExitCriticalSection
  49              	.LVL1:
  45:Generated_Source\PSoC4/cyPm.c **** }
  50              		.loc 1 45 0
  51              		@ sp needed
  52 0016 08BD     		pop	{r3, pc}
  53              	.L3:
  54              		.align	2
  55              	.L2:
  56 0018 10ED00E0 		.word	-536810224
  57              		.cfi_endproc
  58              	.LFE1:
  59              		.size	CySysPmSleep, .-CySysPmSleep
  60              		.section	.text.CySysPmDeepSleep,"ax",%progbits
  61              		.align	2
  62              		.global	CySysPmDeepSleep
  63              		.code	16
  64              		.thumb_func
  65              		.type	CySysPmDeepSleep, %function
  66              	CySysPmDeepSleep:
  67              	.LFB2:
  46:Generated_Source\PSoC4/cyPm.c **** 
  47:Generated_Source\PSoC4/cyPm.c **** 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccLwUvdd.s 			page 3


  48:Generated_Source\PSoC4/cyPm.c **** /*******************************************************************************
  49:Generated_Source\PSoC4/cyPm.c **** * Function Name: CySysPmDeepSleep
  50:Generated_Source\PSoC4/cyPm.c **** ****************************************************************************//**
  51:Generated_Source\PSoC4/cyPm.c **** *
  52:Generated_Source\PSoC4/cyPm.c **** * Puts the part into the Deep Sleep state. If the firmware attempts to enter
  53:Generated_Source\PSoC4/cyPm.c **** * this mode before the system is ready (that is, when
  54:Generated_Source\PSoC4/cyPm.c **** * PWR_CONTROL.LPM_READY = 0), then the device will go into the Sleep mode
  55:Generated_Source\PSoC4/cyPm.c **** * instead and automatically enter the originally intended mode when the
  56:Generated_Source\PSoC4/cyPm.c **** * holdoff expires.
  57:Generated_Source\PSoC4/cyPm.c **** *
  58:Generated_Source\PSoC4/cyPm.c **** * The wakeup occurs when an interrupt is received from a DeepSleep or
  59:Generated_Source\PSoC4/cyPm.c **** * Hibernate peripheral. For more details, see a corresponding
  60:Generated_Source\PSoC4/cyPm.c **** * peripheral's datasheet.
  61:Generated_Source\PSoC4/cyPm.c **** *
  62:Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/cyPm.c **** void CySysPmDeepSleep(void)
  64:Generated_Source\PSoC4/cyPm.c **** {
  68              		.loc 1 64 0
  69              		.cfi_startproc
  70 0000 08B5     		push	{r3, lr}
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 3, -8
  73              		.cfi_offset 14, -4
  65:Generated_Source\PSoC4/cyPm.c ****     uint8 interruptState;
  66:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  67:Generated_Source\PSoC4/cyPm.c ****         volatile uint32 clkSelectReg;
  68:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  69:Generated_Source\PSoC4/cyPm.c **** 
  70:Generated_Source\PSoC4/cyPm.c ****     interruptState = CyEnterCriticalSection();
  74              		.loc 1 70 0
  75 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  76              	.LVL2:
  71:Generated_Source\PSoC4/cyPm.c **** 
  72:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  73:Generated_Source\PSoC4/cyPm.c ****         /* Device enters DeepSleep mode when CPU asserts SLEEPDEEP signal */
  74:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_CONTROL_REG &= (uint32) (~CY_PM_PWR_CONTROL_HIBERNATE);
  75:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  76:Generated_Source\PSoC4/cyPm.c **** 
  77:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_CPUSS && CY_IP_SRSSV2)
  78:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPUSS_CONFIG_REG |= CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS;
  79:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_CPUSS && CY_IP_SRSSV2) */
  80:Generated_Source\PSoC4/cyPm.c **** 
  81:Generated_Source\PSoC4/cyPm.c ****     /* Adjust delay to wait for references to settle on wakeup from Deep Sleep */
  82:Generated_Source\PSoC4/cyPm.c ****     CY_PM_PWR_KEY_DELAY_REG = CY_SFLASH_DPSLP_KEY_DELAY_REG;
  77              		.loc 1 82 0
  78 0006 074B     		ldr	r3, .L5
  79 0008 1B88     		ldrh	r3, [r3]
  80 000a 9BB2     		uxth	r3, r3
  81 000c 064A     		ldr	r2, .L5+4
  82 000e 1360     		str	r3, [r2]
  83:Generated_Source\PSoC4/cyPm.c **** 
  84:Generated_Source\PSoC4/cyPm.c ****     /* CPU enters DeepSleep/Hibernate mode upon execution of WFI */
  85:Generated_Source\PSoC4/cyPm.c ****     CY_PM_CPU_SCR_REG |= CY_PM_CPU_SCR_SLEEPDEEP;
  83              		.loc 1 85 0
  84 0010 064A     		ldr	r2, .L5+8
  85 0012 1168     		ldr	r1, [r2]
  86 0014 0423     		mov	r3, #4
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccLwUvdd.s 			page 4


  87 0016 0B43     		orr	r3, r1
  88 0018 1360     		str	r3, [r2]
  86:Generated_Source\PSoC4/cyPm.c **** 
  87:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  88:Generated_Source\PSoC4/cyPm.c ****         /* Preserve system clock configuration and
  89:Generated_Source\PSoC4/cyPm.c ****         * reduce sysclk to <=12 MHz (Cypress ID #158710, #179888).
  90:Generated_Source\PSoC4/cyPm.c ****         */
  91:Generated_Source\PSoC4/cyPm.c ****         clkSelectReg = CY_SYS_CLK_SELECT_REG;
  92:Generated_Source\PSoC4/cyPm.c ****         CySysClkWriteSysclkDiv(CY_SYS_CLK_SYSCLK_DIV4);
  93:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  94:Generated_Source\PSoC4/cyPm.c **** 
  95:Generated_Source\PSoC4/cyPm.c ****     /* Sleep and wait for interrupt */
  96:Generated_Source\PSoC4/cyPm.c ****     CY_PM_WFI;
  89              		.loc 1 96 0
  90              	@ 96 "Generated_Source\PSoC4\cyPm.c" 1
  91 001a 30BF     		WFI 
  92              	
  93              	@ 0 "" 2
  97:Generated_Source\PSoC4/cyPm.c **** 
  98:Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  99:Generated_Source\PSoC4/cyPm.c ****         /* Restore system clock configuration */
 100:Generated_Source\PSoC4/cyPm.c ****         CY_SYS_CLK_SELECT_REG = clkSelectReg;
 101:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
 102:Generated_Source\PSoC4/cyPm.c **** 
 103:Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_CPUSS && CY_IP_SRSSV2)
 104:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPUSS_CONFIG_REG &= (uint32) (~CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS);
 105:Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_CPUSS && CY_IP_SRSSV2) */
 106:Generated_Source\PSoC4/cyPm.c **** 
 107:Generated_Source\PSoC4/cyPm.c ****     CyExitCriticalSection(interruptState);
  94              		.loc 1 107 0
  95              		.code	16
  96 001c FFF7FEFF 		bl	CyExitCriticalSection
  97              	.LVL3:
 108:Generated_Source\PSoC4/cyPm.c **** }
  98              		.loc 1 108 0
  99              		@ sp needed
 100 0020 08BD     		pop	{r3, pc}
 101              	.L6:
 102 0022 C046     		.align	2
 103              	.L5:
 104 0024 52F1FF0F 		.word	268431698
 105 0028 04000340 		.word	1073938436
 106 002c 10ED00E0 		.word	-536810224
 107              		.cfi_endproc
 108              	.LFE2:
 109              		.size	CySysPmDeepSleep, .-CySysPmDeepSleep
 110              		.section	.text.CySysPmSetWakeupHoldoff,"ax",%progbits
 111              		.align	2
 112              		.global	CySysPmSetWakeupHoldoff
 113              		.code	16
 114              		.thumb_func
 115              		.type	CySysPmSetWakeupHoldoff, %function
 116              	CySysPmSetWakeupHoldoff:
 117              	.LFB3:
 109:Generated_Source\PSoC4/cyPm.c **** 
 110:Generated_Source\PSoC4/cyPm.c **** 
 111:Generated_Source\PSoC4/cyPm.c **** #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccLwUvdd.s 			page 5


 112:Generated_Source\PSoC4/cyPm.c **** 
 113:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 114:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmHibernate
 115:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC4/cyPm.c ****     *
 117:Generated_Source\PSoC4/cyPm.c ****     * Puts the part into the Hibernate state. Only SRAM and UDBs are retained;
 118:Generated_Source\PSoC4/cyPm.c ****     * most internal supplies are off. Wakeup is possible from a pin or a hibernate
 119:Generated_Source\PSoC4/cyPm.c ****     * comparator only.
 120:Generated_Source\PSoC4/cyPm.c ****     *
 121:Generated_Source\PSoC4/cyPm.c ****     * It is expected that the firmware has already frozen the IO-Cells using
 122:Generated_Source\PSoC4/cyPm.c ****     * CySysPmFreezeIo() function before the call to this function. If this is
 123:Generated_Source\PSoC4/cyPm.c ****     * omitted, the IO-cells will be frozen in the same way as they are
 124:Generated_Source\PSoC4/cyPm.c ****     * in the Active to Deep Sleep transition, but will lose their state on wake up
 125:Generated_Source\PSoC4/cyPm.c ****     * (because of the reset occurring at that time).
 126:Generated_Source\PSoC4/cyPm.c ****     *
 127:Generated_Source\PSoC4/cyPm.c ****     * Because all the CPU state is lost, the CPU will start up at the reset vector.
 128:Generated_Source\PSoC4/cyPm.c ****     * To save the firmware state through the Hibernate low power mode, a
 129:Generated_Source\PSoC4/cyPm.c ****     * corresponding variable should be defined with CY_NOINIT attribute. It
 130:Generated_Source\PSoC4/cyPm.c ****     * prevents data from being initialized to zero on startup. The interrupt
 131:Generated_Source\PSoC4/cyPm.c ****     * cause of the hibernate peripheral is retained, such that it can be either
 132:Generated_Source\PSoC4/cyPm.c ****     * read by the firmware or cause an interrupt after the firmware has booted and
 133:Generated_Source\PSoC4/cyPm.c ****     * enabled the corresponding interrupt. To distinguish the wakeup from
 134:Generated_Source\PSoC4/cyPm.c ****     * the Hibernate mode and the general Reset event, the
 135:Generated_Source\PSoC4/cyPm.c ****     * \ref CySysPmGetResetReason() function could be used.
 136:Generated_Source\PSoC4/cyPm.c ****     *
 137:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 138:Generated_Source\PSoC4/cyPm.c ****     void CySysPmHibernate(void)
 139:Generated_Source\PSoC4/cyPm.c ****     {
 140:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 141:Generated_Source\PSoC4/cyPm.c **** 
 142:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 143:Generated_Source\PSoC4/cyPm.c **** 
 144:Generated_Source\PSoC4/cyPm.c ****         #if (CY_IP_HOBTO_DEVICE)
 145:Generated_Source\PSoC4/cyPm.c ****             /* Disable input buffers for all ports */
 146:Generated_Source\PSoC4/cyPm.c ****             CySysPmHibPinsDisableInputBuf();
 147:Generated_Source\PSoC4/cyPm.c ****         #endif /* (CY_IP_HOBTO_DEVICE) */
 148:Generated_Source\PSoC4/cyPm.c **** 
 149:Generated_Source\PSoC4/cyPm.c ****         /* Device enters Hibernate mode when CPU asserts SLEEPDEEP signal */
 150:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_CONTROL_REG |= CY_PM_PWR_CONTROL_HIBERNATE;
 151:Generated_Source\PSoC4/cyPm.c **** 
 152:Generated_Source\PSoC4/cyPm.c ****         /* Adjust delay to wait for references to settle on wakeup from hibernate */
 153:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_KEY_DELAY_REG = CY_SFLASH_HIB_KEY_DELAY_REG;
 154:Generated_Source\PSoC4/cyPm.c **** 
 155:Generated_Source\PSoC4/cyPm.c ****         /* CPU enters DeepSleep/Hibernate mode upon execution of WFI */
 156:Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPU_SCR_REG |= CY_PM_CPU_SCR_SLEEPDEEP;
 157:Generated_Source\PSoC4/cyPm.c **** 
 158:Generated_Source\PSoC4/cyPm.c ****         /* Save token that will retain through a STOP/WAKEUP sequence
 159:Generated_Source\PSoC4/cyPm.c ****          * thus could be used by CySysPmGetResetReason() to differentiate
 160:Generated_Source\PSoC4/cyPm.c ****          * WAKEUP from a general RESET event.
 161:Generated_Source\PSoC4/cyPm.c ****          */
 162:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_PWR_STOP_REG & (uint32)(~CY_PM_PWR_STOP_TOKEN_MASK)) | CY_PM_PW
 163:Generated_Source\PSoC4/cyPm.c **** 
 164:Generated_Source\PSoC4/cyPm.c ****         /* Sleep and wait for interrupt. Wakeup from Hibernate is performed
 165:Generated_Source\PSoC4/cyPm.c ****          * through RESET state, causing a normal Boot procedure to occur.
 166:Generated_Source\PSoC4/cyPm.c ****          * The WFI instruction doesn't put the core to sleep if its wake condition
 167:Generated_Source\PSoC4/cyPm.c ****          * is true when the instruction is executed.
 168:Generated_Source\PSoC4/cyPm.c ****          */
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccLwUvdd.s 			page 6


 169:Generated_Source\PSoC4/cyPm.c ****         CY_PM_WFI;
 170:Generated_Source\PSoC4/cyPm.c **** 
 171:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 172:Generated_Source\PSoC4/cyPm.c ****     }
 173:Generated_Source\PSoC4/cyPm.c **** 
 174:Generated_Source\PSoC4/cyPm.c **** 
 175:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 176:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmStop
 177:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 178:Generated_Source\PSoC4/cyPm.c ****     *
 179:Generated_Source\PSoC4/cyPm.c ****     * Puts the part into the Stop state. All internal supplies are off;
 180:Generated_Source\PSoC4/cyPm.c ****     * no state is retained.
 181:Generated_Source\PSoC4/cyPm.c ****     *
 182:Generated_Source\PSoC4/cyPm.c ****     * Wakeup from Stop is performed by toggling the wakeup pin, causing
 183:Generated_Source\PSoC4/cyPm.c ****     * a normal boot procedure to occur. To configure the wakeup pin,
 184:Generated_Source\PSoC4/cyPm.c ****     * the Digital Input Pin component should be placed on the schematic,
 185:Generated_Source\PSoC4/cyPm.c ****     * assigned to the wakeup pin, and resistively pulled up or down to the inverse
 186:Generated_Source\PSoC4/cyPm.c ****     * state of the wakeup polarity. To distinguish the wakeup from the Stop mode
 187:Generated_Source\PSoC4/cyPm.c ****     * and the general Reset event, \ref CySysPmGetResetReason() function could be
 188:Generated_Source\PSoC4/cyPm.c ****     * used.  The wakeup pin is active low by default. The wakeup pin polarity
 189:Generated_Source\PSoC4/cyPm.c ****     * could be changed with the \ref CySysPmSetWakeupPolarity() function.
 190:Generated_Source\PSoC4/cyPm.c ****     *
 191:Generated_Source\PSoC4/cyPm.c ****     * This function freezes IO cells implicitly. It is not possible to enter
 192:Generated_Source\PSoC4/cyPm.c ****     * the STOP mode before freezing the IO cells. The IO cells remain frozen after
 193:Generated_Source\PSoC4/cyPm.c ****     * awake from the Stop mode until the firmware unfreezes them after booting
 194:Generated_Source\PSoC4/cyPm.c ****     * explicitly with \ref CySysPmUnfreezeIo() function call.
 195:Generated_Source\PSoC4/cyPm.c ****     *
 196:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 197:Generated_Source\PSoC4/cyPm.c ****     void CySysPmStop(void)
 198:Generated_Source\PSoC4/cyPm.c ****     {
 199:Generated_Source\PSoC4/cyPm.c ****         (void) CyEnterCriticalSection();
 200:Generated_Source\PSoC4/cyPm.c **** 
 201:Generated_Source\PSoC4/cyPm.c ****         /* Update token to indicate Stop mode transition. Preserve only polarity. */
 202:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_POLARITY) | CY_PM_PWR_STOP_TOKEN_
 203:Generated_Source\PSoC4/cyPm.c **** 
 204:Generated_Source\PSoC4/cyPm.c ****         /* Freeze IO-Cells to save IO-Cell state */
 205:Generated_Source\PSoC4/cyPm.c ****         CySysPmFreezeIo();
 206:Generated_Source\PSoC4/cyPm.c **** 
 207:Generated_Source\PSoC4/cyPm.c ****         /* Initiates transition to Stop state */
 208:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_STOP;
 209:Generated_Source\PSoC4/cyPm.c **** 
 210:Generated_Source\PSoC4/cyPm.c ****         /* Depending on the clock frequency and internal timing delays,
 211:Generated_Source\PSoC4/cyPm.c ****          * the final AHB transaction may or may not complete. To guard against
 212:Generated_Source\PSoC4/cyPm.c ****          * accidentally executing an unintended instruction, it is recommended
 213:Generated_Source\PSoC4/cyPm.c ****          * to add 2 NOP cycles after the final write to the STOP register.
 214:Generated_Source\PSoC4/cyPm.c ****          */
 215:Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 216:Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 217:Generated_Source\PSoC4/cyPm.c **** 
 218:Generated_Source\PSoC4/cyPm.c ****         /* Should never get to this WFI instruction */
 219:Generated_Source\PSoC4/cyPm.c ****         CY_PM_WFI;
 220:Generated_Source\PSoC4/cyPm.c **** 
 221:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Stop is performed by toggling of Wakeup pin,
 222:Generated_Source\PSoC4/cyPm.c ****          * causing a normal Boot procedure to occur. No need to exit
 223:Generated_Source\PSoC4/cyPm.c ****          * from the critical section.
 224:Generated_Source\PSoC4/cyPm.c ****          */
 225:Generated_Source\PSoC4/cyPm.c ****     }
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccLwUvdd.s 			page 7


 226:Generated_Source\PSoC4/cyPm.c **** 
 227:Generated_Source\PSoC4/cyPm.c **** 
 228:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 229:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmSetWakeupPolarity
 230:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 231:Generated_Source\PSoC4/cyPm.c ****     *
 232:Generated_Source\PSoC4/cyPm.c ****     * Wake up from the stop mode is performed by toggling the wakeup pin,
 233:Generated_Source\PSoC4/cyPm.c ****     * causing a normal boot procedure to occur. This function assigns
 234:Generated_Source\PSoC4/cyPm.c ****     * the wakeup pin active level. Setting the wakeup pin to this level will cause
 235:Generated_Source\PSoC4/cyPm.c ****     * the wakeup from stop mode. The wakeup pin is active low by default.
 236:Generated_Source\PSoC4/cyPm.c ****     *
 237:Generated_Source\PSoC4/cyPm.c ****     * \param polarity
 238:Generated_Source\PSoC4/cyPm.c ****     * - \ref CY_PM_STOP_WAKEUP_ACTIVE_LOW Logical zero will wakeup the chip
 239:Generated_Source\PSoC4/cyPm.c ****     * - \ref CY_PM_STOP_WAKEUP_ACTIVE_HIGH Logical one will wakeup the chip
 240:Generated_Source\PSoC4/cyPm.c ****     *
 241:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 242:Generated_Source\PSoC4/cyPm.c ****     void CySysPmSetWakeupPolarity(uint32 polarity)
 243:Generated_Source\PSoC4/cyPm.c ****     {
 244:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 245:Generated_Source\PSoC4/cyPm.c **** 
 246:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 247:Generated_Source\PSoC4/cyPm.c **** 
 248:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_STOP_WAKEUP_ACTIVE_LOW != polarity) ?
 249:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_POLARITY) :
 250:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (uint32) (~CY_PM_PWR_STOP_POLARITY));
 251:Generated_Source\PSoC4/cyPm.c **** 
 252:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 253:Generated_Source\PSoC4/cyPm.c ****     }
 254:Generated_Source\PSoC4/cyPm.c **** 
 255:Generated_Source\PSoC4/cyPm.c **** 
 256:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 257:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmGetResetReason
 258:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 259:Generated_Source\PSoC4/cyPm.c ****     *
 260:Generated_Source\PSoC4/cyPm.c ****     * Retrieves the last reset reason - transition from OFF/XRES/STOP/HIBERNATE to
 261:Generated_Source\PSoC4/cyPm.c ****     * the RESET state. Note that waking up from STOP using XRES will be perceived
 262:Generated_Source\PSoC4/cyPm.c ****     * as a general RESET.
 263:Generated_Source\PSoC4/cyPm.c ****     *
 264:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_UNKN          Unknown reset reason.
 265:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_XRES          Transition from OFF/XRES to RESET
 266:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_WAKEUP_HIB    Transition/wakeup from HIBERNATE to RESET
 267:Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_WAKEUP_STOP   Transition/wakeup from STOP to RESET
 268:Generated_Source\PSoC4/cyPm.c ****     *
 269:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 270:Generated_Source\PSoC4/cyPm.c ****     uint32 CySysPmGetResetReason(void)
 271:Generated_Source\PSoC4/cyPm.c ****     {
 272:Generated_Source\PSoC4/cyPm.c ****         uint32 reason = CY_PM_RESET_REASON_UNKN;
 273:Generated_Source\PSoC4/cyPm.c **** 
 274:Generated_Source\PSoC4/cyPm.c ****         switch(CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_TOKEN_MASK)
 275:Generated_Source\PSoC4/cyPm.c ****         {
 276:Generated_Source\PSoC4/cyPm.c ****         /* Power up, XRES */
 277:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_XRES:
 278:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_XRES;
 279:Generated_Source\PSoC4/cyPm.c ****             break;
 280:Generated_Source\PSoC4/cyPm.c **** 
 281:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Hibernate */
 282:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_HIB:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccLwUvdd.s 			page 8


 283:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_WAKEUP_HIB;
 284:Generated_Source\PSoC4/cyPm.c ****             break;
 285:Generated_Source\PSoC4/cyPm.c **** 
 286:Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Stop (through WAKEUP pin assert) */
 287:Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_STOP:
 288:Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_WAKEUP_STOP;
 289:Generated_Source\PSoC4/cyPm.c ****             break;
 290:Generated_Source\PSoC4/cyPm.c **** 
 291:Generated_Source\PSoC4/cyPm.c ****         /* Unknown reason */
 292:Generated_Source\PSoC4/cyPm.c ****         default:
 293:Generated_Source\PSoC4/cyPm.c ****             break;
 294:Generated_Source\PSoC4/cyPm.c ****         }
 295:Generated_Source\PSoC4/cyPm.c **** 
 296:Generated_Source\PSoC4/cyPm.c ****         return (reason);
 297:Generated_Source\PSoC4/cyPm.c ****     }
 298:Generated_Source\PSoC4/cyPm.c **** 
 299:Generated_Source\PSoC4/cyPm.c **** 
 300:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 301:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmFreezeIo
 302:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 303:Generated_Source\PSoC4/cyPm.c ****     *
 304:Generated_Source\PSoC4/cyPm.c ****     * Freezes IO-Cells directly to save the IO-Cell state on wake up from the
 305:Generated_Source\PSoC4/cyPm.c ****     * Hibernate or Stop state. It is not required to call this function before
 306:Generated_Source\PSoC4/cyPm.c ****     * entering the Stop mode, since \ref CySysPmStop() function freezes IO-Cells
 307:Generated_Source\PSoC4/cyPm.c ****     * implicitly.
 308:Generated_Source\PSoC4/cyPm.c ****     *
 309:Generated_Source\PSoC4/cyPm.c ****     * This API is not available for PSoC 4000 family of devices.
 310:Generated_Source\PSoC4/cyPm.c ****     *
 311:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 312:Generated_Source\PSoC4/cyPm.c ****     void CySysPmFreezeIo(void)
 313:Generated_Source\PSoC4/cyPm.c ****     {
 314:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 315:Generated_Source\PSoC4/cyPm.c **** 
 316:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 317:Generated_Source\PSoC4/cyPm.c **** 
 318:Generated_Source\PSoC4/cyPm.c ****         /* Check FREEZE state to avoid recurrent IO-Cells freeze attempt,
 319:Generated_Source\PSoC4/cyPm.c ****          * since the second call to this function will cause accidental switch
 320:Generated_Source\PSoC4/cyPm.c ****          * to the STOP mode (the system will enter STOP mode immediately after
 321:Generated_Source\PSoC4/cyPm.c ****          * writing to STOP bit since both UNLOCK and FREEZE have been set correctly
 322:Generated_Source\PSoC4/cyPm.c ****          * in a previous call to this function).
 323:Generated_Source\PSoC4/cyPm.c ****          */
 324:Generated_Source\PSoC4/cyPm.c ****         if (0u == (CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_FREEZE))
 325:Generated_Source\PSoC4/cyPm.c ****         {
 326:Generated_Source\PSoC4/cyPm.c ****             /* Preserve last reset reason and disable overrides the next freeze command by peripher
 327:Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_STOP | CY_PM_PWR_STOP_FREEZE | CY_PM_PWR_STOP_UNLOC
 328:Generated_Source\PSoC4/cyPm.c ****                                 (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_P
 329:Generated_Source\PSoC4/cyPm.c **** 
 330:Generated_Source\PSoC4/cyPm.c ****             /* If reading after writing, read this register three times to delay
 331:Generated_Source\PSoC4/cyPm.c ****             *  enough time for internal settling.
 332:Generated_Source\PSoC4/cyPm.c ****             */
 333:Generated_Source\PSoC4/cyPm.c ****             (void) CY_PM_PWR_STOP_REG;
 334:Generated_Source\PSoC4/cyPm.c ****             (void) CY_PM_PWR_STOP_REG;
 335:Generated_Source\PSoC4/cyPm.c **** 
 336:Generated_Source\PSoC4/cyPm.c ****             /* Second write causes the freeze of IO-Cells to save IO-Cell state */
 337:Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_REG;
 338:Generated_Source\PSoC4/cyPm.c ****         }
 339:Generated_Source\PSoC4/cyPm.c **** 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccLwUvdd.s 			page 9


 340:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 341:Generated_Source\PSoC4/cyPm.c ****     }
 342:Generated_Source\PSoC4/cyPm.c **** 
 343:Generated_Source\PSoC4/cyPm.c **** 
 344:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 345:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmUnfreezeIo
 346:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 347:Generated_Source\PSoC4/cyPm.c ****     *
 348:Generated_Source\PSoC4/cyPm.c ****     * The IO-Cells remain frozen after awake from Hibernate or Stop mode until
 349:Generated_Source\PSoC4/cyPm.c ****     * the firmware unfreezes them after booting. The call of this function
 350:Generated_Source\PSoC4/cyPm.c ****     * unfreezes IO-Cells explicitly.
 351:Generated_Source\PSoC4/cyPm.c ****     *
 352:Generated_Source\PSoC4/cyPm.c ****     * If the firmware intent is to retain the data value on the port, then the
 353:Generated_Source\PSoC4/cyPm.c ****     * value must be read and re-written to the data register before calling this
 354:Generated_Source\PSoC4/cyPm.c ****     * API. Furthermore, the drive mode must be re-programmed.  If this is not done,
 355:Generated_Source\PSoC4/cyPm.c ****     * the pin state will change to default state the moment the freeze is removed.
 356:Generated_Source\PSoC4/cyPm.c ****     *
 357:Generated_Source\PSoC4/cyPm.c ****     * This API is not available for PSoC 4000 family of devices.
 358:Generated_Source\PSoC4/cyPm.c ****     *
 359:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/cyPm.c ****     void CySysPmUnfreezeIo(void)
 361:Generated_Source\PSoC4/cyPm.c ****     {
 362:Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 363:Generated_Source\PSoC4/cyPm.c **** 
 364:Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 365:Generated_Source\PSoC4/cyPm.c **** 
 366:Generated_Source\PSoC4/cyPm.c ****         /* Preserve last reset reason and wakeup polarity. Then, unfreeze I/O:
 367:Generated_Source\PSoC4/cyPm.c ****          * write PWR_STOP.FREEZE=0, .UNLOCK=0x3A, .STOP=0, .TOKEN
 368:Generated_Source\PSoC4/cyPm.c ****          */
 369:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_UNLOCK |
 370:Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLAR
 371:Generated_Source\PSoC4/cyPm.c **** 
 372:Generated_Source\PSoC4/cyPm.c ****         /* If reading after writing, read this register three times to delay
 373:Generated_Source\PSoC4/cyPm.c ****         *  enough time for internal settling.
 374:Generated_Source\PSoC4/cyPm.c ****         */
 375:Generated_Source\PSoC4/cyPm.c ****         (void) CY_PM_PWR_STOP_REG;
 376:Generated_Source\PSoC4/cyPm.c ****         (void) CY_PM_PWR_STOP_REG;
 377:Generated_Source\PSoC4/cyPm.c **** 
 378:Generated_Source\PSoC4/cyPm.c ****         /* Lock STOP mode: write PWR_STOP.FREEZE=0, UNLOCK=0x00, STOP=0, .TOKEN */
 379:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG &= (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLARITY);
 380:Generated_Source\PSoC4/cyPm.c **** 
 381:Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 382:Generated_Source\PSoC4/cyPm.c ****     }
 383:Generated_Source\PSoC4/cyPm.c **** 
 384:Generated_Source\PSoC4/cyPm.c **** #else
 385:Generated_Source\PSoC4/cyPm.c **** 
 386:Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 387:Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmSetWakeupHoldoff
 388:Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 389:Generated_Source\PSoC4/cyPm.c ****     *
 390:Generated_Source\PSoC4/cyPm.c ****     * Sets the Deep Sleep wakeup time by scaling the hold-off to the HFCLK
 391:Generated_Source\PSoC4/cyPm.c ****     * frequency.
 392:Generated_Source\PSoC4/cyPm.c ****     *
 393:Generated_Source\PSoC4/cyPm.c ****     * This function must be called before increasing HFCLK clock frequency. It can
 394:Generated_Source\PSoC4/cyPm.c ****     * optionally be called after lowering HFCLK clock frequency in order to improve
 395:Generated_Source\PSoC4/cyPm.c ****     * Deep Sleep wakeup time.
 396:Generated_Source\PSoC4/cyPm.c ****     *
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccLwUvdd.s 			page 10


 397:Generated_Source\PSoC4/cyPm.c ****     * It is functionally acceptable to leave the default hold-off setting, but
 398:Generated_Source\PSoC4/cyPm.c ****     * Deep Sleep wakeup time may exceed the specification.
 399:Generated_Source\PSoC4/cyPm.c ****     *
 400:Generated_Source\PSoC4/cyPm.c ****     * This function is applicable only for the 4000 device family.
 401:Generated_Source\PSoC4/cyPm.c ****     *
 402:Generated_Source\PSoC4/cyPm.c ****     * \param hfclkFrequencyMhz The HFCLK frequency in MHz.
 403:Generated_Source\PSoC4/cyPm.c ****     *
 404:Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 405:Generated_Source\PSoC4/cyPm.c ****     void CySysPmSetWakeupHoldoff(uint32 hfclkFrequencyMhz)
 406:Generated_Source\PSoC4/cyPm.c ****     {
 118              		.loc 1 406 0
 119              		.cfi_startproc
 120              	.LVL4:
 407:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_KEY_DELAY_REG = ((((uint32)(CY_PM_PWR_KEY_DELAY_REG_DEFAULT << 16u) /
 408:Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_KEY_DELAY_FREQ_DEFAULT) * hfclkFrequencyMhz) >> 16u) + 1u;
 121              		.loc 1 408 0
 122 0000 034B     		ldr	r3, .L8
 123 0002 5843     		mul	r0, r3
 124              	.LVL5:
 125 0004 000C     		lsr	r0, r0, #16
 126 0006 0130     		add	r0, r0, #1
 407:Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_KEY_DELAY_REG = ((((uint32)(CY_PM_PWR_KEY_DELAY_REG_DEFAULT << 16u) /
 127              		.loc 1 407 0
 128 0008 024B     		ldr	r3, .L8+4
 129 000a 1860     		str	r0, [r3]
 409:Generated_Source\PSoC4/cyPm.c ****     }
 130              		.loc 1 409 0
 131              		@ sp needed
 132 000c 7047     		bx	lr
 133              	.L9:
 134 000e C046     		.align	2
 135              	.L8:
 136 0010 AA2A0500 		.word	338602
 137 0014 04000340 		.word	1073938436
 138              		.cfi_endproc
 139              	.LFE3:
 140              		.size	CySysPmSetWakeupHoldoff, .-CySysPmSetWakeupHoldoff
 141              		.text
 142              	.Letext0:
 143              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 144              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 145              		.section	.debug_info,"",%progbits
 146              	.Ldebug_info0:
 147 0000 77010000 		.4byte	0x177
 148 0004 0400     		.2byte	0x4
 149 0006 00000000 		.4byte	.Ldebug_abbrev0
 150 000a 04       		.byte	0x4
 151 000b 01       		.uleb128 0x1
 152 000c 68000000 		.4byte	.LASF22
 153 0010 01       		.byte	0x1
 154 0011 33000000 		.4byte	.LASF23
 155 0015 2A010000 		.4byte	.LASF24
 156 0019 00000000 		.4byte	.Ldebug_ranges0+0
 157 001d 00000000 		.4byte	0
 158 0021 00000000 		.4byte	.Ldebug_line0
 159 0025 02       		.uleb128 0x2
 160 0026 01       		.byte	0x1
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccLwUvdd.s 			page 11


 161 0027 06       		.byte	0x6
 162 0028 FE010000 		.4byte	.LASF0
 163 002c 02       		.uleb128 0x2
 164 002d 01       		.byte	0x1
 165 002e 08       		.byte	0x8
 166 002f AA010000 		.4byte	.LASF1
 167 0033 02       		.uleb128 0x2
 168 0034 02       		.byte	0x2
 169 0035 05       		.byte	0x5
 170 0036 33020000 		.4byte	.LASF2
 171 003a 02       		.uleb128 0x2
 172 003b 02       		.byte	0x2
 173 003c 07       		.byte	0x7
 174 003d EB010000 		.4byte	.LASF3
 175 0041 02       		.uleb128 0x2
 176 0042 04       		.byte	0x4
 177 0043 05       		.byte	0x5
 178 0044 BD010000 		.4byte	.LASF4
 179 0048 02       		.uleb128 0x2
 180 0049 04       		.byte	0x4
 181 004a 07       		.byte	0x7
 182 004b 18010000 		.4byte	.LASF5
 183 004f 02       		.uleb128 0x2
 184 0050 08       		.byte	0x8
 185 0051 05       		.byte	0x5
 186 0052 00000000 		.4byte	.LASF6
 187 0056 02       		.uleb128 0x2
 188 0057 08       		.byte	0x8
 189 0058 07       		.byte	0x7
 190 0059 93010000 		.4byte	.LASF7
 191 005d 03       		.uleb128 0x3
 192 005e 04       		.byte	0x4
 193 005f 05       		.byte	0x5
 194 0060 696E7400 		.ascii	"int\000"
 195 0064 02       		.uleb128 0x2
 196 0065 04       		.byte	0x4
 197 0066 07       		.byte	0x7
 198 0067 15000000 		.4byte	.LASF8
 199 006b 04       		.uleb128 0x4
 200 006c 12010000 		.4byte	.LASF9
 201 0070 02       		.byte	0x2
 202 0071 B901     		.2byte	0x1b9
 203 0073 2C000000 		.4byte	0x2c
 204 0077 04       		.uleb128 0x4
 205 0078 3D020000 		.4byte	.LASF10
 206 007c 02       		.byte	0x2
 207 007d BA01     		.2byte	0x1ba
 208 007f 3A000000 		.4byte	0x3a
 209 0083 04       		.uleb128 0x4
 210 0084 0E000000 		.4byte	.LASF11
 211 0088 02       		.byte	0x2
 212 0089 BB01     		.2byte	0x1bb
 213 008b 48000000 		.4byte	0x48
 214 008f 02       		.uleb128 0x2
 215 0090 04       		.byte	0x4
 216 0091 04       		.byte	0x4
 217 0092 2D020000 		.4byte	.LASF12
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccLwUvdd.s 			page 12


 218 0096 02       		.uleb128 0x2
 219 0097 08       		.byte	0x8
 220 0098 04       		.byte	0x4
 221 0099 CC010000 		.4byte	.LASF13
 222 009d 02       		.uleb128 0x2
 223 009e 01       		.byte	0x1
 224 009f 08       		.byte	0x8
 225 00a0 B8010000 		.4byte	.LASF14
 226 00a4 04       		.uleb128 0x4
 227 00a5 C6010000 		.4byte	.LASF15
 228 00a9 02       		.byte	0x2
 229 00aa 6402     		.2byte	0x264
 230 00ac B0000000 		.4byte	0xb0
 231 00b0 05       		.uleb128 0x5
 232 00b1 77000000 		.4byte	0x77
 233 00b5 04       		.uleb128 0x4
 234 00b6 E5010000 		.4byte	.LASF16
 235 00ba 02       		.byte	0x2
 236 00bb 6502     		.2byte	0x265
 237 00bd C1000000 		.4byte	0xc1
 238 00c1 05       		.uleb128 0x5
 239 00c2 83000000 		.4byte	0x83
 240 00c6 02       		.uleb128 0x2
 241 00c7 04       		.byte	0x4
 242 00c8 07       		.byte	0x7
 243 00c9 44020000 		.4byte	.LASF17
 244 00cd 06       		.uleb128 0x6
 245 00ce 0A020000 		.4byte	.LASF18
 246 00d2 01       		.byte	0x1
 247 00d3 20       		.byte	0x20
 248 00d4 00000000 		.4byte	.LFB1
 249 00d8 1C000000 		.4byte	.LFE1-.LFB1
 250 00dc 01       		.uleb128 0x1
 251 00dd 9C       		.byte	0x9c
 252 00de 04010000 		.4byte	0x104
 253 00e2 07       		.uleb128 0x7
 254 00e3 4D020000 		.4byte	.LASF20
 255 00e7 01       		.byte	0x1
 256 00e8 22       		.byte	0x22
 257 00e9 6B000000 		.4byte	0x6b
 258 00ed 00000000 		.4byte	.LLST0
 259 00f1 08       		.uleb128 0x8
 260 00f2 06000000 		.4byte	.LVL0
 261 00f6 62010000 		.4byte	0x162
 262 00fa 08       		.uleb128 0x8
 263 00fb 16000000 		.4byte	.LVL1
 264 00ff 6D010000 		.4byte	0x16d
 265 0103 00       		.byte	0
 266 0104 06       		.uleb128 0x6
 267 0105 22000000 		.4byte	.LASF19
 268 0109 01       		.byte	0x1
 269 010a 3F       		.byte	0x3f
 270 010b 00000000 		.4byte	.LFB2
 271 010f 30000000 		.4byte	.LFE2-.LFB2
 272 0113 01       		.uleb128 0x1
 273 0114 9C       		.byte	0x9c
 274 0115 3B010000 		.4byte	0x13b
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccLwUvdd.s 			page 13


 275 0119 07       		.uleb128 0x7
 276 011a 4D020000 		.4byte	.LASF20
 277 011e 01       		.byte	0x1
 278 011f 41       		.byte	0x41
 279 0120 6B000000 		.4byte	0x6b
 280 0124 13000000 		.4byte	.LLST1
 281 0128 08       		.uleb128 0x8
 282 0129 06000000 		.4byte	.LVL2
 283 012d 62010000 		.4byte	0x162
 284 0131 08       		.uleb128 0x8
 285 0132 20000000 		.4byte	.LVL3
 286 0136 6D010000 		.4byte	0x16d
 287 013a 00       		.byte	0
 288 013b 09       		.uleb128 0x9
 289 013c FA000000 		.4byte	.LASF21
 290 0140 01       		.byte	0x1
 291 0141 9501     		.2byte	0x195
 292 0143 00000000 		.4byte	.LFB3
 293 0147 18000000 		.4byte	.LFE3-.LFB3
 294 014b 01       		.uleb128 0x1
 295 014c 9C       		.byte	0x9c
 296 014d 62010000 		.4byte	0x162
 297 0151 0A       		.uleb128 0xa
 298 0152 D3010000 		.4byte	.LASF25
 299 0156 01       		.byte	0x1
 300 0157 9501     		.2byte	0x195
 301 0159 83000000 		.4byte	0x83
 302 015d 26000000 		.4byte	.LLST2
 303 0161 00       		.byte	0
 304 0162 0B       		.uleb128 0xb
 305 0163 51000000 		.4byte	.LASF26
 306 0167 03       		.byte	0x3
 307 0168 E5       		.byte	0xe5
 308 0169 6B000000 		.4byte	0x6b
 309 016d 0C       		.uleb128 0xc
 310 016e 17020000 		.4byte	.LASF27
 311 0172 03       		.byte	0x3
 312 0173 E6       		.byte	0xe6
 313 0174 0D       		.uleb128 0xd
 314 0175 6B000000 		.4byte	0x6b
 315 0179 00       		.byte	0
 316 017a 00       		.byte	0
 317              		.section	.debug_abbrev,"",%progbits
 318              	.Ldebug_abbrev0:
 319 0000 01       		.uleb128 0x1
 320 0001 11       		.uleb128 0x11
 321 0002 01       		.byte	0x1
 322 0003 25       		.uleb128 0x25
 323 0004 0E       		.uleb128 0xe
 324 0005 13       		.uleb128 0x13
 325 0006 0B       		.uleb128 0xb
 326 0007 03       		.uleb128 0x3
 327 0008 0E       		.uleb128 0xe
 328 0009 1B       		.uleb128 0x1b
 329 000a 0E       		.uleb128 0xe
 330 000b 55       		.uleb128 0x55
 331 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccLwUvdd.s 			page 14


 332 000d 11       		.uleb128 0x11
 333 000e 01       		.uleb128 0x1
 334 000f 10       		.uleb128 0x10
 335 0010 17       		.uleb128 0x17
 336 0011 00       		.byte	0
 337 0012 00       		.byte	0
 338 0013 02       		.uleb128 0x2
 339 0014 24       		.uleb128 0x24
 340 0015 00       		.byte	0
 341 0016 0B       		.uleb128 0xb
 342 0017 0B       		.uleb128 0xb
 343 0018 3E       		.uleb128 0x3e
 344 0019 0B       		.uleb128 0xb
 345 001a 03       		.uleb128 0x3
 346 001b 0E       		.uleb128 0xe
 347 001c 00       		.byte	0
 348 001d 00       		.byte	0
 349 001e 03       		.uleb128 0x3
 350 001f 24       		.uleb128 0x24
 351 0020 00       		.byte	0
 352 0021 0B       		.uleb128 0xb
 353 0022 0B       		.uleb128 0xb
 354 0023 3E       		.uleb128 0x3e
 355 0024 0B       		.uleb128 0xb
 356 0025 03       		.uleb128 0x3
 357 0026 08       		.uleb128 0x8
 358 0027 00       		.byte	0
 359 0028 00       		.byte	0
 360 0029 04       		.uleb128 0x4
 361 002a 16       		.uleb128 0x16
 362 002b 00       		.byte	0
 363 002c 03       		.uleb128 0x3
 364 002d 0E       		.uleb128 0xe
 365 002e 3A       		.uleb128 0x3a
 366 002f 0B       		.uleb128 0xb
 367 0030 3B       		.uleb128 0x3b
 368 0031 05       		.uleb128 0x5
 369 0032 49       		.uleb128 0x49
 370 0033 13       		.uleb128 0x13
 371 0034 00       		.byte	0
 372 0035 00       		.byte	0
 373 0036 05       		.uleb128 0x5
 374 0037 35       		.uleb128 0x35
 375 0038 00       		.byte	0
 376 0039 49       		.uleb128 0x49
 377 003a 13       		.uleb128 0x13
 378 003b 00       		.byte	0
 379 003c 00       		.byte	0
 380 003d 06       		.uleb128 0x6
 381 003e 2E       		.uleb128 0x2e
 382 003f 01       		.byte	0x1
 383 0040 3F       		.uleb128 0x3f
 384 0041 19       		.uleb128 0x19
 385 0042 03       		.uleb128 0x3
 386 0043 0E       		.uleb128 0xe
 387 0044 3A       		.uleb128 0x3a
 388 0045 0B       		.uleb128 0xb
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccLwUvdd.s 			page 15


 389 0046 3B       		.uleb128 0x3b
 390 0047 0B       		.uleb128 0xb
 391 0048 27       		.uleb128 0x27
 392 0049 19       		.uleb128 0x19
 393 004a 11       		.uleb128 0x11
 394 004b 01       		.uleb128 0x1
 395 004c 12       		.uleb128 0x12
 396 004d 06       		.uleb128 0x6
 397 004e 40       		.uleb128 0x40
 398 004f 18       		.uleb128 0x18
 399 0050 9742     		.uleb128 0x2117
 400 0052 19       		.uleb128 0x19
 401 0053 01       		.uleb128 0x1
 402 0054 13       		.uleb128 0x13
 403 0055 00       		.byte	0
 404 0056 00       		.byte	0
 405 0057 07       		.uleb128 0x7
 406 0058 34       		.uleb128 0x34
 407 0059 00       		.byte	0
 408 005a 03       		.uleb128 0x3
 409 005b 0E       		.uleb128 0xe
 410 005c 3A       		.uleb128 0x3a
 411 005d 0B       		.uleb128 0xb
 412 005e 3B       		.uleb128 0x3b
 413 005f 0B       		.uleb128 0xb
 414 0060 49       		.uleb128 0x49
 415 0061 13       		.uleb128 0x13
 416 0062 02       		.uleb128 0x2
 417 0063 17       		.uleb128 0x17
 418 0064 00       		.byte	0
 419 0065 00       		.byte	0
 420 0066 08       		.uleb128 0x8
 421 0067 898201   		.uleb128 0x4109
 422 006a 00       		.byte	0
 423 006b 11       		.uleb128 0x11
 424 006c 01       		.uleb128 0x1
 425 006d 31       		.uleb128 0x31
 426 006e 13       		.uleb128 0x13
 427 006f 00       		.byte	0
 428 0070 00       		.byte	0
 429 0071 09       		.uleb128 0x9
 430 0072 2E       		.uleb128 0x2e
 431 0073 01       		.byte	0x1
 432 0074 3F       		.uleb128 0x3f
 433 0075 19       		.uleb128 0x19
 434 0076 03       		.uleb128 0x3
 435 0077 0E       		.uleb128 0xe
 436 0078 3A       		.uleb128 0x3a
 437 0079 0B       		.uleb128 0xb
 438 007a 3B       		.uleb128 0x3b
 439 007b 05       		.uleb128 0x5
 440 007c 27       		.uleb128 0x27
 441 007d 19       		.uleb128 0x19
 442 007e 11       		.uleb128 0x11
 443 007f 01       		.uleb128 0x1
 444 0080 12       		.uleb128 0x12
 445 0081 06       		.uleb128 0x6
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccLwUvdd.s 			page 16


 446 0082 40       		.uleb128 0x40
 447 0083 18       		.uleb128 0x18
 448 0084 9742     		.uleb128 0x2117
 449 0086 19       		.uleb128 0x19
 450 0087 01       		.uleb128 0x1
 451 0088 13       		.uleb128 0x13
 452 0089 00       		.byte	0
 453 008a 00       		.byte	0
 454 008b 0A       		.uleb128 0xa
 455 008c 05       		.uleb128 0x5
 456 008d 00       		.byte	0
 457 008e 03       		.uleb128 0x3
 458 008f 0E       		.uleb128 0xe
 459 0090 3A       		.uleb128 0x3a
 460 0091 0B       		.uleb128 0xb
 461 0092 3B       		.uleb128 0x3b
 462 0093 05       		.uleb128 0x5
 463 0094 49       		.uleb128 0x49
 464 0095 13       		.uleb128 0x13
 465 0096 02       		.uleb128 0x2
 466 0097 17       		.uleb128 0x17
 467 0098 00       		.byte	0
 468 0099 00       		.byte	0
 469 009a 0B       		.uleb128 0xb
 470 009b 2E       		.uleb128 0x2e
 471 009c 00       		.byte	0
 472 009d 3F       		.uleb128 0x3f
 473 009e 19       		.uleb128 0x19
 474 009f 03       		.uleb128 0x3
 475 00a0 0E       		.uleb128 0xe
 476 00a1 3A       		.uleb128 0x3a
 477 00a2 0B       		.uleb128 0xb
 478 00a3 3B       		.uleb128 0x3b
 479 00a4 0B       		.uleb128 0xb
 480 00a5 27       		.uleb128 0x27
 481 00a6 19       		.uleb128 0x19
 482 00a7 49       		.uleb128 0x49
 483 00a8 13       		.uleb128 0x13
 484 00a9 3C       		.uleb128 0x3c
 485 00aa 19       		.uleb128 0x19
 486 00ab 00       		.byte	0
 487 00ac 00       		.byte	0
 488 00ad 0C       		.uleb128 0xc
 489 00ae 2E       		.uleb128 0x2e
 490 00af 01       		.byte	0x1
 491 00b0 3F       		.uleb128 0x3f
 492 00b1 19       		.uleb128 0x19
 493 00b2 03       		.uleb128 0x3
 494 00b3 0E       		.uleb128 0xe
 495 00b4 3A       		.uleb128 0x3a
 496 00b5 0B       		.uleb128 0xb
 497 00b6 3B       		.uleb128 0x3b
 498 00b7 0B       		.uleb128 0xb
 499 00b8 27       		.uleb128 0x27
 500 00b9 19       		.uleb128 0x19
 501 00ba 3C       		.uleb128 0x3c
 502 00bb 19       		.uleb128 0x19
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccLwUvdd.s 			page 17


 503 00bc 00       		.byte	0
 504 00bd 00       		.byte	0
 505 00be 0D       		.uleb128 0xd
 506 00bf 05       		.uleb128 0x5
 507 00c0 00       		.byte	0
 508 00c1 49       		.uleb128 0x49
 509 00c2 13       		.uleb128 0x13
 510 00c3 00       		.byte	0
 511 00c4 00       		.byte	0
 512 00c5 00       		.byte	0
 513              		.section	.debug_loc,"",%progbits
 514              	.Ldebug_loc0:
 515              	.LLST0:
 516 0000 06000000 		.4byte	.LVL0
 517 0004 15000000 		.4byte	.LVL1-1
 518 0008 0100     		.2byte	0x1
 519 000a 50       		.byte	0x50
 520 000b 00000000 		.4byte	0
 521 000f 00000000 		.4byte	0
 522              	.LLST1:
 523 0013 06000000 		.4byte	.LVL2
 524 0017 1F000000 		.4byte	.LVL3-1
 525 001b 0100     		.2byte	0x1
 526 001d 50       		.byte	0x50
 527 001e 00000000 		.4byte	0
 528 0022 00000000 		.4byte	0
 529              	.LLST2:
 530 0026 00000000 		.4byte	.LVL4
 531 002a 04000000 		.4byte	.LVL5
 532 002e 0100     		.2byte	0x1
 533 0030 50       		.byte	0x50
 534 0031 04000000 		.4byte	.LVL5
 535 0035 18000000 		.4byte	.LFE3
 536 0039 0400     		.2byte	0x4
 537 003b F3       		.byte	0xf3
 538 003c 01       		.uleb128 0x1
 539 003d 50       		.byte	0x50
 540 003e 9F       		.byte	0x9f
 541 003f 00000000 		.4byte	0
 542 0043 00000000 		.4byte	0
 543              		.section	.debug_aranges,"",%progbits
 544 0000 2C000000 		.4byte	0x2c
 545 0004 0200     		.2byte	0x2
 546 0006 00000000 		.4byte	.Ldebug_info0
 547 000a 04       		.byte	0x4
 548 000b 00       		.byte	0
 549 000c 0000     		.2byte	0
 550 000e 0000     		.2byte	0
 551 0010 00000000 		.4byte	.LFB1
 552 0014 1C000000 		.4byte	.LFE1-.LFB1
 553 0018 00000000 		.4byte	.LFB2
 554 001c 30000000 		.4byte	.LFE2-.LFB2
 555 0020 00000000 		.4byte	.LFB3
 556 0024 18000000 		.4byte	.LFE3-.LFB3
 557 0028 00000000 		.4byte	0
 558 002c 00000000 		.4byte	0
 559              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccLwUvdd.s 			page 18


 560              	.Ldebug_ranges0:
 561 0000 00000000 		.4byte	.LFB1
 562 0004 1C000000 		.4byte	.LFE1
 563 0008 00000000 		.4byte	.LFB2
 564 000c 30000000 		.4byte	.LFE2
 565 0010 00000000 		.4byte	.LFB3
 566 0014 18000000 		.4byte	.LFE3
 567 0018 00000000 		.4byte	0
 568 001c 00000000 		.4byte	0
 569              		.section	.debug_line,"",%progbits
 570              	.Ldebug_line0:
 571 0000 94000000 		.section	.debug_str,"MS",%progbits,1
 571      02004C00 
 571      00000201 
 571      FB0E0D00 
 571      01010101 
 572              	.LASF6:
 573 0000 6C6F6E67 		.ascii	"long long int\000"
 573      206C6F6E 
 573      6720696E 
 573      7400
 574              	.LASF11:
 575 000e 75696E74 		.ascii	"uint32\000"
 575      333200
 576              	.LASF8:
 577 0015 756E7369 		.ascii	"unsigned int\000"
 577      676E6564 
 577      20696E74 
 577      00
 578              	.LASF19:
 579 0022 43795379 		.ascii	"CySysPmDeepSleep\000"
 579      73506D44 
 579      65657053 
 579      6C656570 
 579      00
 580              	.LASF23:
 581 0033 47656E65 		.ascii	"Generated_Source\\PSoC4\\cyPm.c\000"
 581      72617465 
 581      645F536F 
 581      75726365 
 581      5C50536F 
 582              	.LASF26:
 583 0051 4379456E 		.ascii	"CyEnterCriticalSection\000"
 583      74657243 
 583      72697469 
 583      63616C53 
 583      65637469 
 584              	.LASF22:
 585 0068 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 585      4320342E 
 585      392E3320 
 585      32303135 
 585      30333033 
 586 009b 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 586      20726576 
 586      6973696F 
 586      6E203232 
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccLwUvdd.s 			page 19


 586      31323230 
 587 00ce 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 587      67202D66 
 587      66756E63 
 587      74696F6E 
 587      2D736563 
 588              	.LASF21:
 589 00fa 43795379 		.ascii	"CySysPmSetWakeupHoldoff\000"
 589      73506D53 
 589      65745761 
 589      6B657570 
 589      486F6C64 
 590              	.LASF9:
 591 0112 75696E74 		.ascii	"uint8\000"
 591      3800
 592              	.LASF5:
 593 0118 6C6F6E67 		.ascii	"long unsigned int\000"
 593      20756E73 
 593      69676E65 
 593      6420696E 
 593      7400
 594              	.LASF24:
 595 012a 433A5C55 		.ascii	"C:\\Users\\Zeus\\Documents\\PSoC Creator\\CE211252_"
 595      73657273 
 595      5C5A6575 
 595      735C446F 
 595      63756D65 
 596 0158 416D6269 		.ascii	"Ambient_Light_Sensing\\CE211252_Ambient_Light_Sensi"
 596      656E745F 
 596      4C696768 
 596      745F5365 
 596      6E73696E 
 597 018a 6E672E63 		.ascii	"ng.cydsn\000"
 597      7964736E 
 597      00
 598              	.LASF7:
 599 0193 6C6F6E67 		.ascii	"long long unsigned int\000"
 599      206C6F6E 
 599      6720756E 
 599      7369676E 
 599      65642069 
 600              	.LASF1:
 601 01aa 756E7369 		.ascii	"unsigned char\000"
 601      676E6564 
 601      20636861 
 601      7200
 602              	.LASF14:
 603 01b8 63686172 		.ascii	"char\000"
 603      00
 604              	.LASF4:
 605 01bd 6C6F6E67 		.ascii	"long int\000"
 605      20696E74 
 605      00
 606              	.LASF15:
 607 01c6 72656731 		.ascii	"reg16\000"
 607      3600
 608              	.LASF13:
ARM GAS  C:\Users\Zeus\AppData\Local\Temp\ccLwUvdd.s 			page 20


 609 01cc 646F7562 		.ascii	"double\000"
 609      6C6500
 610              	.LASF25:
 611 01d3 6866636C 		.ascii	"hfclkFrequencyMhz\000"
 611      6B467265 
 611      7175656E 
 611      63794D68 
 611      7A00
 612              	.LASF16:
 613 01e5 72656733 		.ascii	"reg32\000"
 613      3200
 614              	.LASF3:
 615 01eb 73686F72 		.ascii	"short unsigned int\000"
 615      7420756E 
 615      7369676E 
 615      65642069 
 615      6E7400
 616              	.LASF0:
 617 01fe 7369676E 		.ascii	"signed char\000"
 617      65642063 
 617      68617200 
 618              	.LASF18:
 619 020a 43795379 		.ascii	"CySysPmSleep\000"
 619      73506D53 
 619      6C656570 
 619      00
 620              	.LASF27:
 621 0217 43794578 		.ascii	"CyExitCriticalSection\000"
 621      69744372 
 621      69746963 
 621      616C5365 
 621      6374696F 
 622              	.LASF12:
 623 022d 666C6F61 		.ascii	"float\000"
 623      7400
 624              	.LASF2:
 625 0233 73686F72 		.ascii	"short int\000"
 625      7420696E 
 625      7400
 626              	.LASF10:
 627 023d 75696E74 		.ascii	"uint16\000"
 627      313600
 628              	.LASF17:
 629 0244 73697A65 		.ascii	"sizetype\000"
 629      74797065 
 629      00
 630              	.LASF20:
 631 024d 696E7465 		.ascii	"interruptState\000"
 631      72727570 
 631      74537461 
 631      746500
 632              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
